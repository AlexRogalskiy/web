{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/src/abstractions/i18n.service.ts","webpack:///./jslib/src/abstractions/platformUtils.service.ts","webpack:///./jslib/src/abstractions/api.service.ts","webpack:///./jslib/src/abstractions/user.service.ts","webpack:///./jslib/src/angular/pipes/i18n.pipe.ts","webpack:///./jslib/src/abstractions/messaging.service.ts","webpack:///./jslib/src/angular/directives/api-action.directive.ts","webpack:///./jslib/src/angular/directives/a11y-title.directive.ts","webpack:///./jslib/src/abstractions/cipher.service.ts","webpack:///./jslib/src/abstractions/crypto.service.ts","webpack:///./jslib/src/importers/baseImporter.ts","webpack:///./jslib/src/models/domain/importResult.ts","webpack:///./jslib/src/angular/components/callout.component.ts","webpack:///./jslib/src/angular/components/callout.component.html","webpack:///./jslib/src/models/response/baseResponse.ts","webpack:///./jslib/src/misc/utils.ts","webpack:///./jslib/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/src/angular/directives/stop-click.directive.ts","webpack:///./jslib/src/enums/cipherType.ts","webpack:///./jslib/src/abstractions/state.service.ts","webpack:///./jslib/src/abstractions/collection.service.ts","webpack:///./jslib/src/abstractions/storage.service.ts","webpack:///./jslib/src/angular/directives/input-verbatim.directive.ts","webpack:///./jslib/src/abstractions/folder.service.ts","webpack:///./jslib/src/angular/directives/stop-prop.directive.ts","webpack:///./jslib/src/abstractions/auth.service.ts","webpack:///./jslib/src/abstractions/sync.service.ts","webpack:///./jslib/src/angular/directives/autofocus.directive.ts","webpack:///./jslib/src/abstractions/environment.service.ts","webpack:///./jslib/src/services/constants.service.ts","webpack:///./jslib/src/models/request/passwordVerificationRequest.ts","webpack:///./jslib/src/abstractions/event.service.ts","webpack:///./jslib/src/models/domain/domainBase.ts","webpack:///./jslib/src/abstractions/policy.service.ts","webpack:///./jslib/src/abstractions/search.service.ts","webpack:///./jslib/src/models/view/cardView.ts","webpack:///./src/app/modal.component.ts","webpack:///./jslib/src/models/view/secureNoteView.ts","webpack:///./jslib/src/abstractions/token.service.ts","webpack:///./jslib/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/src/abstractions/audit.service.ts","webpack:///./jslib/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/src/enums/secureNoteType.ts","webpack:///./jslib/src/angular/components/icon.component.ts","webpack:///./jslib/src/angular/components/icon.component.html","webpack:///./jslib/src/enums/twoFactorProviderType.ts","webpack:///./jslib/src/angular/services/broadcaster.service.ts","webpack:///./src/app/settings/payment.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./jslib/src/models/view/folderView.ts","webpack:///./src/app/settings/tax-info.component.ts","webpack:///./src/app/settings/tax-info.component.html","webpack:///./jslib/src/models/view/cipherView.ts","webpack:///./jslib/src/models/view/identityView.ts","webpack:///./jslib/src/enums/fieldType.ts","webpack:///./src/app/components/avatar.component.ts","webpack:///./jslib/src/models/view/collectionView.ts","webpack:///./jslib/src/models/view/loginView.ts","webpack:///./jslib/src/enums/sendType.ts","webpack:///./jslib/src/models/data/collectionData.ts","webpack:///./jslib/src/models/domain/collection.ts","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./jslib/src/abstractions/export.service.ts","webpack:///./jslib/src/models/data/cipherData.ts","webpack:///./jslib/src/enums/policyType.ts","webpack:///./jslib/src/abstractions/totp.service.ts","webpack:///./jslib/src/models/view/fieldView.ts","webpack:///./jslib/src/models/request/cipherRequest.ts","webpack:///./src/app/services/router.service.ts","webpack:///./jslib/src/models/domain/cipherString.ts","webpack:///./jslib/src/enums/organizationUserStatusType.ts","webpack:///./jslib/src/enums/organizationUserType.ts","webpack:///./jslib/src/angular/pipes/search.pipe.ts","webpack:///./src/app/services/event.service.ts","webpack:///./jslib/src/enums/eventType.ts","webpack:///./jslib/src/enums/paymentMethodType.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/tools/cipher-report.component.ts","webpack:///./jslib/src/models/domain/cipher.ts","webpack:///./jslib/src/models/view/loginUriView.ts","webpack:///./jslib/src/abstractions/import.service.ts","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./jslib/src/abstractions/send.service.ts","webpack:///./jslib/src/enums/kdfType.ts","webpack:///./src/app/components/password-strength.component.ts","webpack:///./src/app/components/password-strength.component.html","webpack:///./jslib/src/services/auth.service.ts","webpack:///./jslib/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/src/enums/deviceType.ts","webpack:///./jslib/src/abstractions/settings.service.ts","webpack:///./src/app/settings/organization-plans.component.ts","webpack:///./src/app/settings/organization-plans.component.html","webpack:///./jslib/src/enums/uriMatchType.ts","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/groupings.component.html","webpack:///./jslib/src/models/domain/organization.ts","webpack:///./jslib/src/models/view/sendFileView.ts","webpack:///./jslib/src/models/view/sendTextView.ts","webpack:///./jslib/src/models/data/sendData.ts","webpack:///./src/app/settings/organizations.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./jslib/src/models/response/selectionReadOnlyResponse.ts","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/footer.component.html","webpack:///./jslib/src/angular/services/validation.service.ts","webpack:///./jslib/src/enums/encryptionType.ts","webpack:///./jslib/src/models/request/keysRequest.ts","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./src/app/settings/api-key.component.ts","webpack:///./src/app/settings/api-key.component.html","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/user-billing.component.html","webpack:///./src/app/settings/add-credit.component.ts","webpack:///./src/app/settings/add-credit.component.html","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./jslib/src/enums/planType.ts","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/update-license.component.html","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/export.component.html","webpack:///./src/app/tools/exposed-passwords-report.component.ts","webpack:///./src/app/tools/exposed-passwords-report.component.html","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./jslib/src/models/view/passwordHistoryView.ts","webpack:///./jslib/src/angular/directives/true-false-value.directive.ts","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/tools/inactive-two-factor-report.component.html","webpack:///./src/app/tools/reused-passwords-report.component.ts","webpack:///./src/app/tools/reused-passwords-report.component.html","webpack:///./src/app/tools/unsecured-websites-report.component.ts","webpack:///./src/app/tools/unsecured-websites-report.component.html","webpack:///./src/app/tools/weak-passwords-report.component.ts","webpack:///./src/app/tools/weak-passwords-report.component.html","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/attachments.component.html","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/vault/bulk-actions.component.ts","webpack:///./src/app/vault/bulk-actions.component.html","webpack:///./jslib/src/models/domain/sendFile.ts","webpack:///./jslib/src/models/domain/sendText.ts","webpack:///./jslib/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/src/models/request/folderRequest.ts","webpack:///./jslib/src/angular/directives/select-copy.directive.ts","webpack:///./jslib/src/angular/pipes/color-password.pipe.ts","webpack:///./jslib/src/models/response/profileResponse.ts","webpack:///./jslib/src/models/api/sendFileApi.ts","webpack:///./jslib/src/models/api/sendTextApi.ts","webpack:///./jslib/src/abstractions/notifications.service.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./src/app/accounts/lock.component.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/login.component.html","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./src/app/accounts/register.component.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./jslib/src/models/domain/policy.ts","webpack:///./jslib/src/models/data/policyData.ts","webpack:///./src/app/accounts/set-password.component.ts","webpack:///./src/app/accounts/set-password.component.html","webpack:///./jslib/src/angular/components/change-password.component.ts","webpack:///./src/app/accounts/sso.component.ts","webpack:///./src/app/accounts/sso.component.html","webpack:///./jslib/src/angular/components/sso.component.ts","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./jslib/src/models/request/twoFactorEmailRequest.ts","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./jslib/src/models/request/collectionRequest.ts","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./jslib/src/models/request/organizationUserConfirmRequest.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-confirm.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.html","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/organizations/manage/policies.component.ts","webpack:///./src/app/organizations/manage/policies.component.html","webpack:///./jslib/src/abstractions/index.ts","webpack:///./src/app/organizations/manage/policy-edit.component.ts","webpack:///./src/app/organizations/manage/policy-edit.component.html","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./jslib/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack:///./jslib/src/models/request/taxInfoUpdateRequest.ts","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/services/webConstants.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.html","webpack:///./src/app/organizations/settings/change-plan.component.ts","webpack:///./src/app/organizations/settings/change-plan.component.html","webpack:///./jslib/src/enums/productType.ts","webpack:///./src/app/organizations/settings/download-license.component.ts","webpack:///./src/app/organizations/settings/download-license.component.html","webpack:///./src/app/organizations/settings/adjust-seats.component.ts","webpack:///./src/app/organizations/settings/adjust-seats.component.html","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-u2f.component.ts","webpack:///./src/app/settings/two-factor-u2f.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack:///./jslib/src/models/data/attachmentData.ts","webpack:///./jslib/src/models/data/cardData.ts","webpack:///./jslib/src/models/data/fieldData.ts","webpack:///./jslib/src/models/data/identityData.ts","webpack:///./jslib/src/models/data/loginData.ts","webpack:///./jslib/src/models/data/loginUriData.ts","webpack:///./jslib/src/models/data/passwordHistoryData.ts","webpack:///./jslib/src/models/data/secureNoteData.ts","webpack:///./jslib/src/models/domain/attachment.ts","webpack:///./jslib/src/models/view/attachmentView.ts","webpack:///./jslib/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/src/models/domain/card.ts","webpack:///./jslib/src/models/domain/field.ts","webpack:///./jslib/src/models/domain/identity.ts","webpack:///./jslib/src/models/domain/login.ts","webpack:///./jslib/src/models/domain/loginUri.ts","webpack:///./jslib/src/models/domain/password.ts","webpack:///./jslib/src/models/domain/secureNote.ts","webpack:///./jslib/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/src/models/api/cardApi.ts","webpack:///./jslib/src/models/api/fieldApi.ts","webpack:///./jslib/src/models/api/identityApi.ts","webpack:///./jslib/src/models/api/loginApi.ts","webpack:///./jslib/src/models/api/loginUriApi.ts","webpack:///./jslib/src/models/api/secureNoteApi.ts","webpack:///./jslib/src/angular/directives/fallback-src.directive.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/organizations/tools/reused-passwords-report.component.ts","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack:///./src/app/organizations/tools/weak-passwords-report.component.ts","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./jslib/src/models/request/cipherCollectionsRequest.ts","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./jslib/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-restore.component.ts","webpack:///./src/app/vault/bulk-restore.component.html","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/send/access.component.ts","webpack:///./src/app/send/access.component.html","webpack:///./jslib/src/models/data/sendFileData.ts","webpack:///./jslib/src/models/data/sendTextData.ts","webpack:///./jslib/src/models/response/errorResponse.ts","webpack:///./src/app/send/send.component.ts","webpack:///./src/app/send/send.component.html","webpack:///./src/app/send/add-edit.component.ts","webpack:///./src/app/send/add-edit.component.html","webpack:///./jslib/src/models/view/sendView.ts","webpack:///./jslib/src/models/domain/send.ts","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/profile.component.html","webpack:///./src/app/settings/change-email.component.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./jslib/src/models/request/emailTokenRequest.ts","webpack:///./src/app/settings/change-password.component.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./jslib/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/src/models/request/passwordRequest.ts","webpack:///./jslib/src/models/request/updateKeyRequest.ts","webpack:///./src/app/settings/change-kdf.component.ts","webpack:///./src/app/settings/change-kdf.component.html","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/link-sso.component.ts","webpack:///./src/app/settings/link-sso.component.html","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/user-subscription.component.ts","webpack:///./src/app/settings/user-subscription.component.html","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/vault/vault.component.ts","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./src/app/services/unauth-guard.service.ts","webpack:///./jslib/src/angular/services/auth-guard.service.ts","webpack:///./jslib/src/services/api.service.ts","webpack:///./jslib/src/models/response/cipherResponse.ts","webpack:///./jslib/src/models/response/collectionResponse.ts","webpack:///./jslib/src/models/response/domainsResponse.ts","webpack:///./jslib/src/models/response/folderResponse.ts","webpack:///./jslib/src/models/response/organizationResponse.ts","webpack:///./jslib/src/models/response/planResponse.ts","webpack:///./jslib/src/models/response/subscriptionResponse.ts","webpack:///./jslib/src/models/response/policyResponse.ts","webpack:///./jslib/src/models/response/sendResponse.ts","webpack:///./jslib/src/services/appId.service.ts","webpack:///./jslib/src/services/audit.service.ts","webpack:///./jslib/src/services/cipher.service.ts","webpack:///./jslib/src/misc/sequentialize.ts","webpack:///./jslib/src/services/collection.service.ts","webpack:///./jslib/src/misc/serviceUtils.ts","webpack:///./jslib/src/services/container.service.ts","webpack:///./jslib/src/services/crypto.service.ts","webpack:///./jslib/src/misc/wordlist.ts","webpack:///./jslib/src/services/environment.service.ts","webpack:///./jslib/src/services/folder.service.ts","webpack:///./jslib/src/models/data/folderData.ts","webpack:///./jslib/src/services/i18n.service.ts","webpack:///./jslib/src/services/passwordGeneration.service.ts","webpack:///./jslib/src/services/settings.service.ts","webpack:///./jslib/src/services/state.service.ts","webpack:///./jslib/src/services/sync.service.ts","webpack:///./jslib/src/services/token.service.ts","webpack:///./jslib/src/services/totp.service.ts","webpack:///./jslib/src/services/user.service.ts","webpack:///./jslib/src/services/vaultTimeout.service.ts","webpack:///./jslib/src/models/export/cipherWithIds.ts","webpack:///./jslib/src/models/export/collectionWithId.ts","webpack:///./jslib/src/models/export/folderWithId.ts","webpack:///./jslib/src/enums/notificationType.ts","webpack:///./src/app/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./jslib/src/services/broadcaster.service.ts","webpack:///./jslib/src/misc/tldjs.noop.ts","webpack:///./jslib/src/models/request/organizationUserAcceptRequest.ts","webpack:///./jslib/src/angular/components/hint.component.ts","webpack:///./jslib/src/models/request/passwordHintRequest.ts","webpack:///./jslib/src/angular/components/lock.component.ts","webpack:///./jslib/src/angular/components/login.component.ts","webpack:///./jslib/src/models/request/deleteRecoverRequest.ts","webpack:///./jslib/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./jslib/src/angular/components/register.component.ts","webpack:///./jslib/src/models/request/registerRequest.ts","webpack:///./jslib/src/models/request/referenceEventRequest.ts","webpack:///./jslib/src/angular/components/set-password.component.ts","webpack:///./jslib/src/models/request/setPasswordRequest.ts","webpack:///./jslib/src/angular/components/two-factor-options.component.ts","webpack:///./jslib/src/angular/components/modal.component.ts","webpack:///./jslib/src/angular/components/two-factor.component.ts","webpack:///./jslib/src/models/domain/authResult.ts","webpack:///./jslib/src/models/request/deviceRequest.ts","webpack:///./jslib/src/models/request/preloginRequest.ts","webpack:///./jslib/src/models/request/tokenRequest.ts","webpack:///./jslib/src/misc/u2f.ts","webpack:///./jslib/src/models/request/verifyEmailRequest.ts","webpack:///./jslib/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./jslib/src/models/request/groupRequest.ts","webpack:///./jslib/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./jslib/src/abstractions/appId.service.ts","webpack:///./jslib/src/abstractions/log.service.ts","webpack:///./jslib/src/models/request/policyRequest.ts","webpack:///./jslib/src/models/request/organizationUpdateRequest.ts","webpack:///./jslib/src/enums/transactionType.ts","webpack:///./jslib/src/models/request/verifyBankRequest.ts","webpack:///./jslib/src/models/request/bitPayInvoiceRequest.ts","webpack:///./jslib/src/models/request/paymentRequest.ts","webpack:///./jslib/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/src/models/request/organizationUpgradeRequest.ts","webpack:///./jslib/src/models/request/seatRequest.ts","webpack:///./jslib/src/models/request/storageRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorU2fDeleteRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorU2fRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./jslib/src/angular/components/export.component.ts","webpack:///./jslib/src/models/request/attachmentRequest.ts","webpack:///./jslib/src/angular/components/add-edit.component.ts","webpack:///./jslib/src/angular/components/attachments.component.ts","webpack:///./jslib/src/angular/components/ciphers.component.ts","webpack:///./jslib/src/angular/components/collections.component.ts","webpack:///./jslib/src/angular/components/groupings.component.ts","webpack:///./jslib/src/models/domain/sendAccess.ts","webpack:///./jslib/src/models/view/sendAccessView.ts","webpack:///./jslib/src/models/request/sendAccessRequest.ts","webpack:///./jslib/src/models/request/updateProfileRequest.ts","webpack:///./jslib/src/models/request/emailRequest.ts","webpack:///./jslib/src/models/request/kdfRequest.ts","webpack:///./jslib/src/models/request/updateDomainsRequest.ts","webpack:///./jslib/src/angular/components/password-generator.component.ts","webpack:///./jslib/src/angular/components/password-generator-history.component.ts","webpack:///./jslib/src/angular/components/folder-add-edit.component.ts","webpack:///./jslib/src/angular/components/share.component.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./jslib/src/services/index.ts","webpack:///./jslib/src/models/response/apiKeyResponse.ts","webpack:///./jslib/src/models/response/billingResponse.ts","webpack:///./jslib/src/models/response/breachAccountResponse.ts","webpack:///./jslib/src/models/response/attachmentResponse.ts","webpack:///./jslib/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/src/models/response/globalDomainResponse.ts","webpack:///./jslib/src/models/response/eventResponse.ts","webpack:///./jslib/src/models/response/groupResponse.ts","webpack:///./jslib/src/models/response/identityTokenResponse.ts","webpack:///./jslib/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/src/models/response/listResponse.ts","webpack:///./jslib/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/src/models/response/organizationUserResponse.ts","webpack:///./jslib/src/models/response/paymentResponse.ts","webpack:///./jslib/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/src/models/response/preloginResponse.ts","webpack:///./jslib/src/models/response/sendAccessResponse.ts","webpack:///./jslib/src/models/response/syncResponse.ts","webpack:///./jslib/src/models/response/taxInfoResponse.ts","webpack:///./jslib/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/src/models/response/twoFactorU2fResponse.ts","webpack:///./jslib/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/src/models/response/userKeyResponse.ts","webpack:///./jslib/src/misc/throttle.ts","webpack:///./jslib/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/src/models/request/cipherShareRequest.ts","webpack:///./jslib/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/src/models/domain/treeNode.ts","webpack:///./jslib/src/models/domain/encryptedObject.ts","webpack:///./jslib/src/models/domain/environmentUrls.ts","webpack:///./jslib/src/models/domain/folder.ts","webpack:///./jslib/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/src/models/data/organizationData.ts","webpack:///./src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///./jslib/src/misc/analytics.ts","webpack:///./jslib/src/services/event.service.ts","webpack:///./jslib/src/models/data/eventData.ts","webpack:///./jslib/src/models/request/eventRequest.ts","webpack:///./jslib/src/services/export.service.ts","webpack:///./jslib/src/models/export/cipher.ts","webpack:///./jslib/src/models/export/card.ts","webpack:///./jslib/src/models/export/field.ts","webpack:///./jslib/src/models/export/identity.ts","webpack:///./jslib/src/models/export/login.ts","webpack:///./jslib/src/models/export/loginUri.ts","webpack:///./jslib/src/models/export/secureNote.ts","webpack:///./jslib/src/models/export/collection.ts","webpack:///./jslib/src/models/export/folder.ts","webpack:///./jslib/src/services/import.service.ts","webpack:///./jslib/src/models/request/importCiphersRequest.ts","webpack:///./jslib/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/src/models/request/kvpRequest.ts","webpack:///./jslib/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/src/importers/avastCsvImporter.ts","webpack:///./jslib/src/importers/avastJsonImporter.ts","webpack:///./jslib/src/importers/aviraCsvImporter.ts","webpack:///./jslib/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/src/importers/bitwardenJsonImporter.ts","webpack:///./jslib/src/importers/blackBerryCsvImporter.ts","webpack:///./jslib/src/importers/blurCsvImporter.ts","webpack:///./jslib/src/importers/buttercupCsvImporter.ts","webpack:///./jslib/src/importers/chromeCsvImporter.ts","webpack:///./jslib/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/src/importers/codebookCsvImporter.ts","webpack:///./jslib/src/importers/dashlaneJsonImporter.ts","webpack:///./jslib/src/importers/encryptrCsvImporter.ts","webpack:///./jslib/src/importers/enpassCsvImporter.ts","webpack:///./jslib/src/importers/enpassJsonImporter.ts","webpack:///./jslib/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/src/importers/fsecureFskImporter.ts","webpack:///./jslib/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/src/importers/kasperskyTxtImporter.ts","webpack:///./jslib/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/src/importers/keeperCsvImporter.ts","webpack:///./jslib/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/src/importers/logMeOnceCsvImporter.ts","webpack:///./jslib/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/src/importers/msecureCsvImporter.ts","webpack:///./jslib/src/importers/mykiCsvImporter.ts","webpack:///./jslib/src/importers/onepassword1PifImporter.ts","webpack:///./jslib/src/importers/onepasswordWinCsvImporter.ts","webpack:///./jslib/src/models/view/index.ts","webpack:///./jslib/src/models/view/view.ts","webpack:///./jslib/src/importers/padlockCsvImporter.ts","webpack:///./jslib/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/src/importers/passmanJsonImporter.ts","webpack:///./jslib/src/importers/passpackCsvImporter.ts","webpack:///./jslib/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/src/importers/passwordWalletTxtImporter.ts","webpack:///./jslib/src/importers/rememBearCsvImporter.ts","webpack:///./jslib/src/importers/roboformCsvImporter.ts","webpack:///./jslib/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/src/importers/saferpassCsvImport.ts","webpack:///./jslib/src/importers/secureSafeCsvImporter.ts","webpack:///./jslib/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/src/importers/upmCsvImporter.ts","webpack:///./jslib/src/importers/yotiCsvImporter.ts","webpack:///./jslib/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/src/services/notifications.service.ts","webpack:///./jslib/src/models/response/notificationResponse.ts","webpack:///./jslib/src/services/policy.service.ts","webpack:///./jslib/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/src/services/search.service.ts","webpack:///./jslib/src/services/send.service.ts","webpack:///./jslib/src/models/request/sendRequest.ts","webpack:///./jslib/src/services/webCryptoFunction.service.ts","webpack:///./jslib/src/models/domain/decryptParameters.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./jslib/src/angular/directives/blur-click.directive.ts","webpack:///./jslib/src/angular/directives/box-row.directive.ts","webpack:///./jslib/src/angular/pipes/search-ciphers.pipe.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","I18nService","PlatformUtilsService","ApiService","UserService","I18nPipe","i18nService","this","transform","id","p1","p2","p3","i0","ɵɵdirectiveInject","i1","pure","MessagingService","ApiActionDirective","el","validationService","ngOnChanges","changes","_this","appApiAction","then","nativeElement","loading","response","e","showError","ElementRef","ValidationService","selectors","inputs","features","ɵɵNgOnChangesFeature","A11yTitleDirective","renderer","title","ngOnInit","hasAttribute","setAttribute","Renderer2","appA11yTitle","CipherService","CryptoService","papa","cipherView_1","collectionView_1","loginUriView_1","utils_1","fieldView_1","folderView_1","loginView_1","secureNoteView_1","cipherType_1","fieldType_1","secureNoteType_1","BaseImporter","organization","newLineRegex","passwordFieldNames","usernameFieldNames","notesFieldNames","uriFieldNames","parseXml","doc","DOMParser","parseFromString","querySelector","parseCsv","header","splitNewLine","join","trim","parse","encoding","skipEmptyLines","errors","forEach","row","console","warn","message","parseSingleRowCsv","rowData","isNullOrWhitespace","parsedRow","makeUriArray","uri","loginUri","LoginUriView","fixUri","match","returnArr_1","u","indexOf","substring","nameFromUrl","url","hostname","Utils","getHostname","startsWith","replace","str","getValueOrDefault","defaultValue","split","getCardBrand","cardNum","re","RegExp","test","setCardExpiration","cipher","expiration","parts","month","year","substr","card","expMonth","expYear","moveFoldersToCollections","folderRelationships","collectionRelationships","collections","folders","map","f","collection","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","Array","from","querySelectorAll","filter","parentNode","initLoginCipher","CipherView","favorite","notes","fields","login","LoginView","type","CipherType","Login","cleanupCipher","processKvp","FieldType","Text","search","field","FieldView","processFolder","folderName","folderIndex","hasFolder","addFolder","FolderView","ciphers","convertToNoteIfNeeded","username","password","uris","SecureNote","secureNote","SecureNoteView","SecureNoteType","Generic","ImportResult","success","ɵɵelement","ɵɵclassMapInterpolate1","ctx_r1","icon","ɵɵelementStart","ɵɵtext","ɵɵtemplate","CalloutComponent_h3_2_i_2_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","ɵɵtextInterpolate1","CalloutComponent","calloutStyle","undefined","ngContentSelectors","_c0","decls","vars","consts","template","rf","ctx","CalloutComponent_h3_2_Template","ɵɵprojection","BaseResponse","getResponseProperty","propertyName","exactName","Error","otherCasePropertyName","charAt","toUpperCase","toLowerCase","tldjs","nodeURL","init","inited","isNode","process","release","isBrowser","isNativeScript","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","fromB64ToArray","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromUrlB64ToArray","fromUrlB64ToB64","fromHexToArray","parseInt","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUrlB64","fromB64toUrlB64","b64Str","fromBufferToUtf8","encodedString","decodeURIComponent","escape","fromBufferToByteString","fromBufferToHex","x","urlB64Str","output","fromUrlB64ToUtf8","fromB64ToUtf8","newGuid","Math","random","isGuid","uriString","getUrl","_a","getHost","host","getDomain","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","domain","getQueryParams","Map","pair","set","getSortFunction","prop","a","b","collator","compare","localeCompare","ipString","win","mobile","navigator","userAgent","vendor","opera","URL","hasProtocol","anchor","document","createElement","href","PasswordGenerationService","StopClickDirective","onClick","$event","preventDefault","hostBindings","StateService","CollectionService","StorageService","InputVerbatimDirective","condition","disableComplete","appInputVerbatim","FolderService","StopPropDirective","stopPropagation","AuthService","SyncService","AutofocusDirective","autofocus","focus","appAutofocus","EnvironmentService","ConstantsService","environmentUrlsKey","disableGaKey","disableAddLoginNotificationKey","disableContextMenuItemKey","disableFaviconKey","disableAutoTotpCopyKey","enableAutoFillOnPageLoadKey","vaultTimeoutKey","vaultTimeoutActionKey","lastActiveKey","neverDomainsKey","installedVersionKey","localeKey","themeKey","collapsedGroupingsKey","autoConfirmFingerprints","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","defaultUriMatch","pinProtectedKey","protectedPin","clearClipboardKey","eventCollectionKey","ssoCodeVerifierKey","ssoStateKey","biometricUnlockKey","biometricText","biometricAwaitingAcceptance","disableChangedPasswordNotificationKey","PasswordVerificationRequest","EventService","cipherString_1","Domain","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","CipherString","buildDataModel","notCipherStringList","encryptedString","decryptObj","viewModel","orgId","promises","self","theProp","Promise","resolve","mapProp","decrypt","val","all","sent","PolicyService","SearchService","CardView","cardholderName","code","_brand","_number","_subTitle","repeat","brand","number","count","exp","formatYear","jq","modal_component_1","ModalComponent","_super","componentFactoryResolver","messagingService","__extends","ngOnDestroy","show","parentContainer","fade","setComponentParameters","factory","resolveComponentFactory","componentRef","container","createComponent","instance","modals","modal","on","onShow","emit","send","onShown","find","onClose","onClosed","clear","close","ComponentFactoryResolver","ɵɵInheritDefinitionFeature","ModalComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","TokenService","CryptoFunctionService","AuditService","VaultTimeoutService","constants_service_1","ɵɵpropertyInterpolate","fallbackImage","image","ɵɵsanitizeUrl","IconMap","fa-globe","fa-sticky-note-o","fa-id-card-o","fa-credit-card","fa-android","fa-apple","IconComponent","environmentService","stateService","iconsUrl","baseUrl","imageEnabled","_b","load","setLoginIcon","Card","Identity","hostnameUri","isWebsite","i2","IconComponent_img_2_Template","IconComponent_i_4_Template","TwoFactorProviderType","broadcaster_service_1","BroadcasterService","ɵfac","paymentMethodType_1","webConstants_1","ɵɵlistener","ɵɵrestoreView","_r9","ɵɵnextContext","method","changeMethod","ctx_r5","paymentMethodType","BankAccount","ɵɵpipeBind1","_r12","ctx_r6","PayPal","_r15","ctx_r7","Credit","_r18","PaymentComponent_div_0_div_13_Template","PaymentComponent_div_0_div_15_Template","PaymentComponent_div_0_div_17_Template","hideBank","hidePaypal","hideCredit","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtextInterpolate","_r21","bank","routing_number","account_number","account_holder_name","account_holder_type","ɵɵtextInterpolate2","ctx_r2","StripeElementStyle","base","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","PaymentComponent","platformUtilsService","apiService","showMethods","showOptions","PaymentMethodType","currency","country","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","onload","Stripe","isDev","WebConstants","stripeTestKey","stripeLiveKey","elements","setStripeElement","btScript","head","appendChild","removeChild","setTimeout","body","btStylesheet","braintree","dropin","authorization","btSandboxKey","btProductionKey","paymentOptionPriority","paypal","flow","buttonStyle","label","size","shape","createErr","error","createPaymentToken","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","clientSecret","handleCardSetup","setupIntent","status","payment_method","createToken","token","handleStripeCardPayment","successCallback","__awaiter","paymentIntent","style","classes","placeholder","mount","PaymentComponent_div_0_Template","PaymentComponent_ng_container_2_Template","PaymentComponent_ng_container_4_Template","PaymentComponent_ng_container_6_Template","PaymentComponent_ng_container_8_Template","revisionDate","core_1","organizationTaxInfoUpdateRequest_1","taxInfoUpdateRequest_1","_r4","taxInfo","includeTaxId","_r6","taxId","_r8","line1","line2","city","state","TaxInfoComponent","route","onCountryChanged","EventEmitter","postalCode","pristine","parent","params","subscribe","organizationId","getOrganizationTaxInfo","getTaxInfo","assign","getTaxInfoRequest","request","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","submitTaxInfo","hasChanged","putOrganizationTaxInfo","putTaxInfo","changeCountry","ActivatedRoute","outputs","TaxInfoComponent_div_779_Template","TaxInfoComponent_div_782_Template","TaxInfoComponent_div_784_Template","cardView_1","identityView_1","folderId","organizationUseTotp","edit","viewPassword","identity","IdentityView","attachments","passwordHistory","collectionIds","deletedDate","localData","subTitle","hasAttachments","passwordRevisionDate","middleName","address1","address2","address3","company","email","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","name_1","address","addressPart2","AvatarComponent","sanitizer","cryptoFunctionService","charCount","textColor","fontWeight","dynamic","circle","generate","hash","hashBytes","chars","upperData","getFirstLetters","charObj","getCharText","stringToColor","svg","getSvg","html","outerHTML","svgHtml","text","svgTag","backgroundColor","width","height","character","textTag","textContent","DomSanitizer","i3","collection_1","externalId","readOnly","hidePasswords","Collection","totp","hasUris","some","canLaunch","launchUri","SendType","CollectionData","obj","default","twoFactorProviderType_1","passwordVerificationRequest_1","TwoFactorVerifyComponent","toasterService","cryptoService","onAuthed","submit","masterPassword","popAsync","hashPassword","masterPasswordHash","_d","formPromise","getTwoFactorRecover","Duo","OrganizationDuo","getTwoFactorOrganizationDuo","getTwoFactorDuo","Email","getTwoFactorEmail","U2f","getTwoFactorU2f","Authenticator","getTwoFactorAuthenticator","Yubikey","getTwoFactorYubiKey","ToasterService","i4","_r0","ExportService","attachmentData_1","cardData_1","fieldData_1","identityData_1","loginData_1","passwordHistoryData_1","secureNoteData_1","CipherData","userId","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","ph","PasswordHistoryData","PolicyType","TotpService","newField","showValue","cardApi_1","fieldApi_1","identityApi_1","loginApi_1","loginUriApi_1","secureNoteApi_1","attachmentRequest_1","CipherRequest","lastKnownRevisionDate","LoginApi","toISOString","LoginUriApi","SecureNoteApi","CardApi","IdentityApi","FieldApi","lastUsedDate","attachments2","attachment","fileName","attachmentRequest","AttachmentRequest","router_1","RouterService","router","activatedRoute","titleService","previousUrl","currentUrl","events","event","NavigationEnd","titleId","rawTitle","child","firstChild","snapshot","newTitle","setTitle","getPreviousUrl","setPreviousUrl","ɵɵinject","Router","Title","encryptionType_1","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","EncryptionType","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","containerService","bitwardenContainerService","getCryptoService","getOrgKey","decryptToUtf8","OrganizationUserStatusType","OrganizationUserType","SearchPipe","items","searchText","prop1","prop2","prop3","deviceType_1","eventType_1","getDefaultDateFilters","Date","end","getFullYear","getMonth","getDate","setDate","start","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","isNaN","getTime","getEventInfo","ev","options","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","appIcon","appName","msg","EventType","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_ClientExportedVault","Cipher_Created","formatCipherId","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientViewed","Cipher_ClientToggledPasswordVisible","Cipher_ClientToggledHiddenFieldVisible","Cipher_ClientToggledCardCodeVisible","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","formatCollectionId","Collection_Updated","Collection_Deleted","Group_Created","formatGroupId","Group_Updated","Group_Deleted","OrganizationUser_Invited","formatOrgUserId","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","Organization_Updated","Organization_PurgedVault","DeviceType","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","getShortId","cipherId","cipherInfo","makeAnchor","groupId","collectionId","organizationUserId","innerHTML","date","pad","getHours","getMinutes","num","norm","floor","abs","EventInfo","twoFactorProviderRequest_1","TwoFactorBaseComponent","analytics","onUpdated","twoFactorProviderType","enabled","authed","auth","authResponse","enable","enableFunction","eventTrack","next","action","disable","promise","showDialog","TwoFactorProviderRequest","putTwoFactorOrganizationDisable","putTwoFactorDisable","Angulartics2","i5","add_edit_component_1","add_edit_component_2","CipherReportComponent","userService","requiresPaid","hasLoaded","setCiphers","selectCipher","childComponent","cipherAddEditModalRef","AddEditComponent","onSavedCipher","onDeletedCipher","onRestoredCipher","checkAccess","useTotp","canAccessPremium","accessPremium","viewQuery","ViewContainerRef","cipherData_1","attachment_1","card_1","domainBase_1","field_1","identity_1","login_1","password_1","secureNote_1","Cipher","Attachment","Field","Password","model","_f","_c","_e","attachments_1","reduce","decAttachment","fields_1","decField","passwordHistory_1","decPh","toCipherData","toLoginData","toSecureNoteData","toCardData","toIdentityData","toFieldData","toAttachmentData","toPasswordHistoryData","uriMatchType_1","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","UriMatchType","RegularExpression","ImportService","ciphers_component_1","CiphersComponent_ng_container_0_table_2_tr_4_ng_container_20_ng_container_9_Template","showFixOldAttachments","c_r5","_r20","$implicit","copy","_r23","launch","_r26","CiphersComponent_ng_container_0_table_2_tr_4_ng_container_40_a_8_Template","CiphersComponent_ng_container_0_table_2_tr_4_ng_container_40_a_10_Template","_r30","clone","_r33","share","_r36","_r39","_r42","restore","_r44","checkCipher","checked","CiphersComponent_ng_container_0_table_2_tr_4_ng_container_18_Template","CiphersComponent_ng_container_0_table_2_tr_4_ng_container_20_Template","CiphersComponent_ng_container_0_table_2_tr_4_ng_container_40_Template","CiphersComponent_ng_container_0_table_2_tr_4_a_48_Template","CiphersComponent_ng_container_0_table_2_tr_4_a_50_Template","CiphersComponent_ng_container_0_table_2_tr_4_a_52_Template","CiphersComponent_ng_container_0_table_2_tr_4_a_54_Template","CiphersComponent_ng_container_0_table_2_tr_4_a_56_Template","delete","ctx_r4","cipherType","isDeleted","accessEvents","_r52","loadMore","CiphersComponent_ng_container_0_table_2_tr_4_Template","isPaging","filteredCiphers_r1","_r58","addCipher","CiphersComponent_ng_container_0_div_4_ng_container_4_button_6_Template","ctx_r55","showAddNew","CiphersComponent_ng_container_0_div_4_ng_container_2_Template","CiphersComponent_ng_container_0_div_4_ng_container_4_Template","ctx_r3","loaded","CiphersComponent_ng_container_0_table_2_Template","CiphersComponent_ng_container_0_div_4_Template","CiphersComponent","searchService","cipherService","eventService","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","pageSize","selectAll","actionPromise","permanent","deleteCipher","refresh","restoreWithServer","typeI18nKey","aType","copyToClipboard","collect","select","selectCount","getSelected","getSelectedIds","deleteWithServer","softDeleteWithServer","hasOldAttachments","i6","i7","CiphersComponent_ng_container_0_Template","pagedCiphers","SendService","KdfType","PasswordStrengthComponent","showText","scoreWidth","score","PasswordStrengthComponent_ng_container_4_Template","ɵɵpureFunction1","ɵɵattribute","authResult_1","deviceRequest_1","keysRequest_1","preloginRequest_1","tokenRequest_1","TwoFactorProviders","description","priority","sort","premium","tokenService","appIdService","vaultTimeoutService","setCryptoKeys","selectedTwoFactorProviderType","logIn","makePreloginKey","hashedPassword","logInHelper","logInSso","codeVerifier","redirectUrl","logInApiKey","clientId","logInTwoFactor","twoFactorProvider","twoFactorToken","remember","ssoRedirectUrl","logInComplete","logInSsoComplete","logInApiKeyComplete","logOut","callback","getSupportedTwoFactorProviders","providers","twoFactorProvidersData","has","supportsDuo","supportsU2f","getDefaultTwoFactorProvider","u2fSupported","providerType","providerPriority","provider","kdf","kdfIterations","postPrelogin","PreloginRequest","preloginResponse","e_1","statusCode","makeKey","authingWithApiKey","authingWithSso","authingWithPassword","getTwoFactorToken","storedTwoFactorToken","getAppId","appId","deviceRequest","DeviceRequest","emailPassword","codeCodeVerifier","clientIdClientSecret","TokenRequest","Remember","postIdentityToken","clearState","AuthResult","twoFactor","accessToken","twoFactorResponse","twoFactorProviders2","twoFactorProviders","tokenResponse","resetMasterPassword","setTwoFactorToken","setTokens","refreshToken","setInformation","getUserId","getEmail","setKey","setKeyHash","setEncKey","privateKey","makeKeyPair","keyPair","postAccountKeys","KeysRequest","e_2","setEncPrivateKey","biometricLocked","SelectionReadOnlyRequest","SettingsService","payment_component_1","tax_info_component_1","planType_1","policyType_1","productType_1","organizationCreateRequest_1","organizationUpgradeRequest_1","_r5","ɵɵpipeBind2","_r3","_r14","billingEmail","_r17","businessName","ctx_r8","OrganizationPlansComponent_form_4_div_24_ng_container_11_small_6_Template","OrganizationPlansComponent_form_4_div_24_ng_container_11_small_8_Template","OrganizationPlansComponent_form_4_div_24_ng_container_11_small_10_Template","selectableProduct_r18","hasSelfHost","hasSso","hasPolicies","maxUsers","maxCollections","maxAdditionalSeats","baseStorageGb","trialPeriodDays","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_1_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_3_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_5_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_7_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_9_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_11_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_13_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_15_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_17_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_19_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_21_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_23_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_25_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_small_27_Template","product","ctx_r21","productTypes","Free","hasGroups","hasApi","hasDirectory","usersGetPremium","ɵɵtextInterpolate3","seatPrice","OrganizationPlansComponent_form_4_div_24_span_16_ng_container_2_ng_container_5_Template","basePrice","baseSeats","hasAdditionalSeatsOption","OrganizationPlansComponent_form_4_div_24_span_16_ng_container_2_Template","_r57","changedProduct","OrganizationPlansComponent_form_4_div_24_ng_container_11_Template","OrganizationPlansComponent_form_4_div_24_ng_template_13_Template","OrganizationPlansComponent_form_4_div_24_span_16_Template","OrganizationPlansComponent_form_4_div_24_span_18_Template","OrganizationPlansComponent_form_4_div_24_span_20_Template","ɵɵpropertyInterpolate1","ctx_r9","nameLocalizationKey","descriptionLocalizationKey","Enterprise","_r67","additionalSeats","ctx_r59","_r69","ctx_r60","ɵɵpipeBind3","selectedPlan","seatPriceMonthly","_r71","premiumAccessAddon","ctx_r61","ɵɵtextInterpolate5","selectablePlan_r72","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_6_small_5_span_2_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_6_small_5_span_4_Template","ctx_r76","seatTotal","ɵɵtextInterpolate6","ctx_r77","additionalStorage","additionalStoragePricePerGb","additionalStorageTotal","premiumAccessOptionCost","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_6_small_3_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_6_small_5_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_6_small_7_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_6_small_9_Template","hasAdditionalStorageOption","hasPremiumAccessOption","ctx_r73","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_8_small_5_span_2_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_8_small_5_span_4_Template","ctx_r87","ctx_r88","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_8_small_3_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_8_small_5_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_8_small_7_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_8_small_9_Template","ctx_r74","_r98","plan","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_6_Template","OrganizationPlansComponent_form_4_div_26_div_38_ng_container_8_Template","ctx_r62","isAnnual","_r100","changedCountry","ctx_r63","selectedPlanInterval","ctx_r65","interval","OrganizationPlansComponent_form_4_div_26_ng_container_2_Template","OrganizationPlansComponent_form_4_div_26_div_8_Template","_r102","OrganizationPlansComponent_form_4_div_26_div_31_Template","OrganizationPlansComponent_form_4_div_26_div_38_Template","OrganizationPlansComponent_form_4_div_26_ng_container_51_Template","OrganizationPlansComponent_form_4_div_26_ng_container_53_Template","OrganizationPlansComponent_form_4_div_26_small_55_Template","ctx_r10","ɵɵpipeBind4","additionalStoragePriceMonthly","selectablePlans","subtotal","createOrganization","_r104","cancel","_r106","OrganizationPlansComponent_form_4_div_7_Template","ownedBusiness","changedOwnedBusiness","OrganizationPlansComponent_form_4_div_18_Template","OrganizationPlansComponent_form_4_div_24_Template","OrganizationPlansComponent_form_4_div_26_Template","OrganizationPlansComponent_form_4_div_28_Template","OrganizationPlansComponent_form_4_button_42_Template","selectableProducts","singleOrgPolicyBlock","showCancel","OrganizationPlansComponent","syncService","policyService","showFree","ProductType","PlanType","onSuccess","onCanceled","selfHosted","isSelfHost","getPlans","plans","validPlans","Custom","canBeUsedByBusiness","legacyYear","disabled","subTotal","premiumAccessOptionPrice","TeamsMonthly","paymentComponent","taxComponent","getAll","SingleOrg","policies","policy","files","fileEl","getElementById","doSubmit","tokenResult","makeShareKey","shareKey","encrypt","collectionCt","fd","FormData","append","postOrganizationLicense","OrganizationCreateRequest","collectionName","planType","paymentToken","additionalStorageGb","billingAddressPostalCode","billingAddressCountry","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","postOrganization","OrganizationUpgradeRequest","postOrganizationUpgrade","paymentIntentClientSecret","refreshIdentityToken","fullSync","navigate","i8","i9","OrganizationPlansComponent_ng_container_0_Template","OrganizationPlansComponent_ng_container_2_Template","OrganizationPlansComponent_form_4_Template","o_r15","AddEditComponent_div_20_div_2_option_10_Template","typeOptions","f_r19","AddEditComponent_div_20_div_15_option_8_Template","_r29","ctx_r28","generatePassword","AddEditComponent_div_20_ng_container_19_div_26_a_2_Template","_r35","checkPassword","ctx_r23","checkPasswordPromise","_r31","premiumRequired","_r41","upgradeOrganization","AddEditComponent_div_20_ng_container_19_div_64_a_5_Template","AddEditComponent_div_20_ng_container_19_div_64_a_7_Template","ctx_r24","ɵɵnamespaceSVG","ɵɵnamespaceHTML","_r43","ctx_r42","totpCode","ctx_r25","totpSec","totpDash","totpCodeFormatted","o_r49","u_r45","removeUri","_r54","loginUriMatchChanged","AddEditComponent_div_20_ng_container_19_ng_container_70_div_2_option_49_Template","AddEditComponent_div_20_ng_container_19_ng_container_70_div_2_button_52_Template","i_r46","ctx_r44","uriMatchOptions","AddEditComponent_div_20_ng_container_19_ng_container_70_div_2_Template","ctx_r26","trackByFunction","_r60","addUri","_r62","AddEditComponent_div_20_ng_container_19_div_14_Template","AddEditComponent_div_20_ng_container_19_div_26_Template","togglePassword","AddEditComponent_div_20_ng_container_19_div_64_Template","AddEditComponent_div_20_ng_container_19_div_66_Template","AddEditComponent_div_20_ng_container_19_ng_container_70_Template","AddEditComponent_div_20_ng_container_19_a_72_Template","showPassword","ɵɵpureFunction2","_c1","_c2","totpLow","o_r69","o_r70","_r72","AddEditComponent_div_20_ng_container_22_option_21_Template","ctx_r75","AddEditComponent_div_20_ng_container_22_option_57_Template","toggleCardCode","ctx_r80","cardBrandOptions","cardExpMonthOptions","showCardCode","o_r82","_r84","AddEditComponent_div_20_ng_container_25_option_12_Template","identityTitleOptions","_r112","f_r103","i_r104","ctx_r105","_r118","toggleFieldValue","ctx_r121","fieldType","Hidden","ctx_r106","_r126","ctx_r107","_r130","removeField","_r132","AddEditComponent_div_20_div_40_div_2_div_28_Template","AddEditComponent_div_20_div_40_div_2_div_30_Template","AddEditComponent_div_20_div_40_div_2_input_34_Template","AddEditComponent_div_20_div_40_div_2_button_37_Template","AddEditComponent_div_20_div_40_div_2_button_39_Template","ctx_r102","Boolean","_r134","drop","AddEditComponent_div_20_div_40_div_2_Template","_r136","addField","o_r138","_r140","addFieldType","AddEditComponent_div_20_div_44_option_10_Template","addFieldTypeOptions","o_r142","_r144","organizationChanged","AddEditComponent_div_20_ng_container_46_option_16_Template","ctx_r11","ownershipOptions","_r152","i_r150","c_r149","ctx_r148","AddEditComponent_div_20_ng_container_48_ng_container_8_div_2_Template","ctx_r147","AddEditComponent_div_20_ng_container_48_div_6_Template","AddEditComponent_div_20_ng_container_48_ng_container_8_Template","ctx_r12","ctx_r153","passwordRevisionDisplayDate","_r157","viewHistory","ctx_r154","ph_r159","AddEditComponent_div_20_ng_container_50_div_16_div_2_Template","ctx_r155","AddEditComponent_div_20_ng_container_50_div_12_Template","AddEditComponent_div_20_ng_container_50_div_14_Template","AddEditComponent_div_20_ng_container_50_div_16_Template","ctx_r13","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","AddEditComponent_div_20_div_2_Template","_r161","AddEditComponent_div_20_div_15_Template","AddEditComponent_div_20_ng_container_19_Template","AddEditComponent_div_20_ng_container_22_Template","AddEditComponent_div_20_ng_container_25_Template","AddEditComponent_div_20_div_40_Template","AddEditComponent_div_20_a_42_Template","AddEditComponent_div_20_div_44_Template","AddEditComponent_div_20_ng_container_46_Template","AddEditComponent_div_20_ng_container_48_Template","AddEditComponent_div_20_ng_container_50_Template","editMode","hasFields","allowOwnershipAssignment","cloneMode","_r166","toggleFavorite","ctx_r163","_c3","_r169","ctx_r164","_r167","deletePromise","AddEditComponent_div_38_button_2_Template","AddEditComponent_div_38_button_4_Template","folderService","auditService","collectionService","totpService","passwordGenerationService","cleanUp","totpUpdateCode","interval_1","getTimeInterval","totpTick","totpInterval","setInterval","showToast","confirmed","getOptions","clearInterval","getCode","half","intervalSeconds","epoch","round","mod","i10","i11","i12","AddEditComponent_div_20_Template","AddEditComponent_div_38_Template","groupings_component_1","selectFavorites","selectedFavorites","_r7","selectTrash","selectedTrash","f_r15","editFolder","node","GroupingsComponent_ng_container_78_ng_container_2_ng_template_14_li_1_ul_13_ng_container_2_Template","_r10","children","_r24","collapse","selectFolder","GroupingsComponent_ng_container_78_ng_container_2_ng_template_14_li_1_a_10_Template","GroupingsComponent_ng_container_78_ng_container_2_ng_template_14_li_1_ul_13_Template","ctx_r14","selectedFolder","selectedFolderId","isCollapsed","GroupingsComponent_ng_container_78_ng_container_2_ng_template_14_li_1_Template","folders_r13","_r27","GroupingsComponent_ng_container_78_ng_container_2_ng_template_14_Template","GroupingsComponent_ng_container_78_ng_container_2_ng_container_17_Template","nestedFolders","GroupingsComponent_ng_container_78_ng_container_4_ng_template_8_li_1_ul_8_ng_container_2_Template","_r28","c_r33","_r38","selectCollection","GroupingsComponent_ng_container_78_ng_container_4_ng_template_8_li_1_ul_8_Template","ctx_r32","selectedCollectionId","GroupingsComponent_ng_container_78_ng_container_4_ng_template_8_li_1_Template","collections_r31","GroupingsComponent_ng_container_78_ng_container_4_ng_template_8_Template","GroupingsComponent_ng_container_78_ng_container_4_ng_container_11_Template","nestedCollections","GroupingsComponent_ng_container_78_ng_container_2_Template","GroupingsComponent_ng_container_78_ng_container_4_Template","showFolders","showCollections","GroupingsComponent","storageService","onSearchTextChanged","searchPlaceholder","searchTextChanged","GroupingsComponent_li_28_Template","GroupingsComponent_li_30_Template","selectType","GroupingsComponent_p_76_Template","GroupingsComponent_ng_container_78_Template","selectedAll","showFavorites","showTrash","selectedType","organizationUserStatusType_1","organizationUserType_1","Organization","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useBusinessPortal","useSso","selfHost","seats","maxStorageGb","ssoBound","identifier","Owner","Confirmed","Manager","Admin","SendFileView","sizeName","SendTextView","hidden","sendType_1","sendFileData_1","sendTextData_1","SendData","accessId","maxAccessCount","accessCount","expirationDate","deletionDate","SendTextData","File","file","SendFileData","OrganizationsComponent_ng_container_0_ng_container_4_ul_2_li_2_ng_container_6_Template","o_r7","OrganizationsComponent_ng_container_0_ng_container_4_ul_2_li_2_Template","organizations","OrganizationsComponent_ng_container_0_ng_container_4_ul_2_Template","OrganizationsComponent_ng_container_0_ng_container_4_p_4_Template","OrganizationsComponent_ng_container_0_p_2_Template","OrganizationsComponent_ng_container_0_ng_container_4_Template","_r25","o_r17","unlinkSso","OrganizationsComponent_ng_container_2_ng_container_19_table_4_tr_4_ng_container_27_a_2_Template","OrganizationsComponent_ng_container_2_ng_container_19_table_4_tr_4_ng_container_27_ng_template_4_Template","OrganizationsComponent_ng_container_2_ng_container_19_table_4_tr_4_ng_container_12_Template","OrganizationsComponent_ng_container_2_ng_container_19_table_4_tr_4_ng_container_27_Template","leave","OrganizationsComponent_ng_container_2_ng_container_19_table_4_tr_4_Template","ctx_r15","OrganizationsComponent_ng_container_2_ng_container_19_ng_container_2_Template","OrganizationsComponent_ng_container_2_ng_container_19_table_4_Template","OrganizationsComponent_ng_container_2_ng_container_10_Template","OrganizationsComponent_ng_container_2_a_14_Template","OrganizationsComponent_ng_container_2_ng_container_17_Template","OrganizationsComponent_ng_container_2_ng_container_19_Template","OrganizationsComponent","vault","getAllOrganizations","orgs","org","deleteSsoUser","postLeaveOrganization","OrganizationsComponent_ng_container_0_Template","OrganizationsComponent_ng_container_2_Template","SelectionReadOnlyResponse","NavbarComponent","getName","lock","NavbarComponent_div_54_Template","FooterComponent","version","getApplicationVersion","defaultErrorMessage","validationErrors","concat","getAllMessages","timeout","publicKey","encryptedPrivateKey","selectionReadOnlyRequest_1","selectedCount","u_r11","EntityUsersComponent_div_26_ng_container_30_tr_32_td_21_ng_container_2_Template","accessAll","_r34","check","selectedChanged","EntityUsersComponent_div_26_ng_container_30_tr_32_span_14_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_span_16_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_small_18_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_td_21_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_span_25_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_span_27_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_span_29_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_span_31_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_td_34_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_td_36_Template","entity","organizationUserStatusType","Invited","Accepted","organizationUserType","User","EntityUsersComponent_div_26_ng_container_30_th_18_Template","EntityUsersComponent_div_26_ng_container_30_th_24_Template","EntityUsersComponent_div_26_ng_container_30_th_26_Template","EntityUsersComponent_div_26_ng_container_30_tr_32_Template","searchedUsers_r3","_r40","filterSelected","EntityUsersComponent_div_26_span_23_Template","EntityUsersComponent_div_26_ng_container_28_Template","EntityUsersComponent_div_26_ng_container_30_Template","showSelected","EntityUsersComponent","onEditedUsers","allUsers","loadUsers","getOrganizationUsers","users","getGroupUsers","entityId","user","getCollectionUsers","selections","putGroupUsers","putCollectionUsers","entityName","EntityUsersComponent_div_24_Template","EntityUsersComponent_div_26_Template","ɵɵpipeBindV","e_r9","userEmail","userName","EntityEventsComponent_div_24_table_36_tr_27_td_14_Template","ɵɵpropertyInterpolate2","ip","showUser","ɵɵsanitizeHtml","EntityEventsComponent_div_24_table_36_th_17_Template","EntityEventsComponent_div_24_table_36_tr_27_Template","loadEvents","morePromise","_r16","EntityEventsComponent_div_24_div_34_Template","EntityEventsComponent_div_24_table_36_Template","EntityEventsComponent_div_24_button_38_Template","refreshPromise","continuationToken","EntityEventsComponent","orgUsersUserIdMap","orgUsersIdMap","defaultDates","clearExisting","dates","getEventsOrganizationUser","getEventsCipher","actingUserId","eventInfo","ipAddress","EntityEventsComponent_small_11_Template","EntityEventsComponent_div_22_Template","EntityEventsComponent_div_24_Template","apiKeyWarning","scope","grantType","isRotation","ApiKeyComponent","postKey","apiKey","keyType","ApiKeyComponent_ng_container_27_Template","ApiKeyComponent_app_callout_29_Template","ApiKeyComponent_app_callout_31_Template","ApiKeyComponent_button_36_Template","apiKeyTitle","apiKeyDescription","PurgeVaultComponent","postPurgeCiphers","transactionType_1","verifyBankRequest_1","addCredit","closeAddCredit","verifyBank","verifyAmount1","verifyAmount2","ctx_r20","verifyBankPromise","_r22","UserBillingComponent_ng_container_11_ng_container_25_app_callout_2_Template","UserBillingComponent_ng_container_11_ng_container_25_span_8_Template","paymentSource","needsVerification","ɵɵpureFunction6","Check","AppleInApp","GoogleInApp","paymentSourceInApp","changePayment","closePayment","UserBillingComponent_ng_container_11_table_37_tr_4_span_25_Template","UserBillingComponent_ng_container_11_table_37_tr_4_span_27_Template","i_r33","pdfUrl","amount","paid","UserBillingComponent_ng_container_11_table_37_tr_4_Template","invoices","ɵɵpureFunction4","t_r37","ctx_r40","WireTransfer","BitPay","UserBillingComponent_ng_container_11_table_45_tr_4_span_8_Template","UserBillingComponent_ng_container_11_table_45_tr_4_span_10_Template","UserBillingComponent_ng_container_11_table_45_tr_4_i_15_Template","createdDate","ctx_r36","transactionType","Charge","Refund","details","refunded","UserBillingComponent_ng_container_11_table_45_tr_4_Template","transactions","UserBillingComponent_ng_container_11_button_15_Template","UserBillingComponent_ng_container_11_app_add_credit_17_Template","UserBillingComponent_ng_container_11_p_23_Template","UserBillingComponent_ng_container_11_ng_container_25_Template","UserBillingComponent_ng_container_11_button_27_Template","UserBillingComponent_ng_container_11_app_adjust_payment_29_Template","UserBillingComponent_ng_container_11_p_35_Template","UserBillingComponent_ng_container_11_table_37_Template","UserBillingComponent_ng_container_11_p_43_Template","UserBillingComponent_ng_container_11_table_45_Template","isCreditBalance","creditOrBalance","showAddCredit","showAdjustPayment","UserBillingComponent","firstLoaded","TransactionType","getOrganizationBilling","billing","getUserBilling","VerifyBankRequest","amount1","amount2","postOrganizationVerifyBank","balance","UserBillingComponent_button_6_Template","UserBillingComponent_ng_container_9_Template","UserBillingComponent_ng_container_11_Template","bitPayInvoiceRequest_1","AddCreditComponent","onAdded","ppButtonFormAction","buttonActionProduction","ppButtonBusinessId","businessIdProduction","ppLoading","buttonActionSandbox","businessIdSandbox","creditAmount","ppButtonCustomField","getOrganization","subject","returnUrl","location","ppButtonFormRef","req","BitPayInvoiceRequest","credit","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","AddCreditComponent_div_14_Template","paymentRequest_1","AdjustPaymentComponent","onAdjusted","request_1","PaymentRequest","taxInfoComponent","postAccountPayment","postOrganizationPayment","currentType","UpdateLicenseComponent","updatePromise","postAccountLicense","postOrganizationLicenseUpdate","storageRequest_1","ɵɵtextInterpolate4","storageAdjustment","storageGbPrice","adjustedStorageTotal","AdjustStorageComponent","add","StorageRequest","storageGbAdjustment","paymentFailed_1","postAccountStorage","postOrganizationStorage","relativeTo","AdjustStorageComponent_div_26_Template","updateTwoFactorDuoRequest_1","two_factor_base_component_1","ikey","skey","TwoFactorDuoComponent_form_25_ng_container_5_Template","TwoFactorDuoComponent_form_25_ng_container_7_Template","TwoFactorDuoComponent_form_25_span_17_Template","TwoFactorDuoComponent_form_25_span_19_Template","TwoFactorDuoComponent","processResponse","UpdateTwoFactorDuoRequest","integrationKey","secretKey","putTwoFactorOrganizationDuo","putTwoFactorDuo","TwoFactorDuoComponent_app_two_factor_verify_23_Template","TwoFactorDuoComponent_form_25_Template","auth_service_1","two_factor_authenticator_component_1","two_factor_duo_component_1","two_factor_email_component_1","two_factor_recovery_component_1","two_factor_u2f_component_1","two_factor_yubikey_component_1","_r19","recoveryCode","TwoFactorSetupComponent_li_23_ng_container_11_Template","TwoFactorSetupComponent_li_23_a_13_Template","p_r20","manage","TwoFactorSetupComponent","showPolicyWarning","filterProvider","getTwoFactorProviders","evaluatePolicies","openModal","authenticatorModalRef","TwoFactorAuthenticatorComponent","updateStatus","yubikeyModalRef","TwoFactorYubiKeyComponent","duoModalRef","emailModalRef","TwoFactorEmailComponent","u2fModalRef","TwoFactorU2fComponent","recoveryModalRef","TwoFactorRecoveryComponent","ref","TwoFactorAuthentication","TwoFactorSetupComponent_p_7_Template","TwoFactorSetupComponent_p_9_Template","TwoFactorSetupComponent_app_callout_11_Template","TwoFactorSetupComponent_small_16_Template","TwoFactorSetupComponent_app_callout_19_Template","TwoFactorSetupComponent_li_23_Template","TwoFactorSetupComponent_ng_template_26_Template","TwoFactorSetupComponent_ng_template_29_Template","TwoFactorSetupComponent_ng_template_32_Template","TwoFactorSetupComponent_ng_template_35_Template","TwoFactorSetupComponent_ng_template_38_Template","TwoFactorSetupComponent_ng_template_41_Template","_c6","export_component_1","ExportComponent","exportService","saved","format","cipher_report_component_1","c_r6","ExposedPasswordsReportComponent_div_21_ng_container_4_tr_12_ng_container_13_Template","ExposedPasswordsReportComponent_div_21_ng_container_4_tr_12_ng_container_15_Template","exposedPasswordMap","ExposedPasswordsReportComponent_div_21_ng_container_4_tr_12_Template","ExposedPasswordsReportComponent_div_21_app_callout_2_Template","ExposedPasswordsReportComponent_div_21_ng_container_4_Template","ExposedPasswordsReportComponent","getAllCiphers","allCiphers","exposedPasswordCiphers","passwordLeaked","exposedCount","getAllDecrypted","ExposedPasswordsReportComponent_div_21_Template","ExposedPasswordsReportComponent_ng_template_23_Template","cipher_1","cipherCreateRequest_1","cipherRequest_1","originalCipher","isAdmin","loadCollections","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","CipherCreateRequest","postCipherAdmin","deleteCipherAdmin","putDeleteCipherAdmin","i13","PasswordHistoryView","forms_1","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","target","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","o_r4","o_r6","ImportComponent_ng_container_24_option_4_Template","importOptions","ImportComponent_app_callout_30_ng_container_26_span_2_Template","ctx_r19","ImportComponent_app_callout_30_ng_container_2_Template","ImportComponent_app_callout_30_ng_container_4_Template","ImportComponent_app_callout_30_ng_container_6_Template","ImportComponent_app_callout_30_ng_container_8_Template","ImportComponent_app_callout_30_ng_container_10_Template","ImportComponent_app_callout_30_ng_container_12_Template","ImportComponent_app_callout_30_ng_container_14_Template","ImportComponent_app_callout_30_ng_container_16_Template","ImportComponent_app_callout_30_ng_container_18_Template","ImportComponent_app_callout_30_ng_container_20_Template","ImportComponent_app_callout_30_ng_container_22_Template","ImportComponent_app_callout_30_ng_container_24_Template","ImportComponent_app_callout_30_ng_container_26_Template","ImportComponent_app_callout_30_ng_container_28_Template","ImportComponent_app_callout_30_ng_container_30_Template","ImportComponent_app_callout_30_ng_container_32_Template","ImportComponent_app_callout_30_ng_container_34_Template","ImportComponent_app_callout_30_ng_container_36_Template","ImportComponent_app_callout_30_ng_container_38_Template","ImportComponent_app_callout_30_ng_container_40_Template","ImportComponent_app_callout_30_ng_container_42_Template","ImportComponent_app_callout_30_ng_container_44_Template","ImportComponent_app_callout_30_ng_container_46_Template","ImportComponent_app_callout_30_ng_container_48_Template","ImportComponent_app_callout_30_ng_container_50_Template","ImportComponent_app_callout_30_ng_container_52_Template","ImportComponent_app_callout_30_ng_container_54_Template","ImportComponent_app_callout_30_ng_container_56_Template","ImportComponent_app_callout_30_ng_container_58_Template","ImportComponent_app_callout_30_ng_container_60_Template","ImportComponent_app_callout_30_ng_container_62_Template","ImportComponent_app_callout_30_ng_container_64_Template","ImportComponent_app_callout_30_ng_container_66_Template","ImportComponent_app_callout_30_ng_container_68_Template","ImportComponent_app_callout_30_ng_container_70_Template","ImportComponent_app_callout_30_ng_container_72_Template","ImportComponent_app_callout_30_ng_container_74_Template","ImportComponent_app_callout_30_ng_container_76_Template","ImportComponent_app_callout_30_ng_container_78_Template","ImportComponent_app_callout_30_ng_container_80_Template","ImportComponent_app_callout_30_ng_container_82_Template","ImportComponent_app_callout_30_ng_container_84_Template","ImportComponent_app_callout_30_ng_container_86_Template","ImportComponent_app_callout_30_ng_container_88_Template","ImportComponent_app_callout_30_ng_container_90_Template","ImportComponent_app_callout_30_ng_container_92_Template","ImportComponent_app_callout_30_ng_container_94_Template","ImportComponent_app_callout_30_ng_container_96_Template","ImportComponent_app_callout_30_ng_container_98_Template","getFormatInstructionTitle","ImportComponent","importService","successNavigate","setImportOptions","importer","getImporter","fileContents","getFileContents","content","import","properties","results","featuredImportOptions","__spreadArrays","regularImportOptions","reader","FileReader","readAsText","evt","pre","onerror","ImportComponent_option_22_Template","ImportComponent_ng_container_24_Template","ImportComponent_app_callout_30_Template","cipherDocs","c_r8","InactiveTwoFactorReportComponent_div_15_ng_container_4_tr_12_ng_container_13_Template","InactiveTwoFactorReportComponent_div_15_ng_container_4_tr_12_ng_container_15_Template","InactiveTwoFactorReportComponent_div_15_ng_container_4_tr_12_a_25_Template","InactiveTwoFactorReportComponent_div_15_ng_container_4_tr_12_Template","InactiveTwoFactorReportComponent_div_15_app_callout_2_Template","InactiveTwoFactorReportComponent_div_15_ng_container_4_Template","InactiveTwoFactorReportComponent","services","load2fa","inactive2faCiphers_1","docs_1","fetch","Request","json","categoryName","responseJson","serviceName","category","service","tfa","software","InactiveTwoFactorReportComponent_small_5_Template","InactiveTwoFactorReportComponent_div_13_Template","InactiveTwoFactorReportComponent_div_15_Template","InactiveTwoFactorReportComponent_ng_template_17_Template","ReusedPasswordsReportComponent_div_15_ng_container_4_tr_12_ng_container_13_Template","ReusedPasswordsReportComponent_div_15_ng_container_4_tr_12_ng_container_15_Template","passwordUseMap","ReusedPasswordsReportComponent_div_15_ng_container_4_tr_12_Template","ReusedPasswordsReportComponent_div_15_app_callout_2_Template","ReusedPasswordsReportComponent_div_15_ng_container_4_Template","ReusedPasswordsReportComponent","ciphersWithPasswords","reusedPasswordCiphers","ReusedPasswordsReportComponent_small_5_Template","ReusedPasswordsReportComponent_div_13_Template","ReusedPasswordsReportComponent_div_15_Template","ReusedPasswordsReportComponent_ng_template_17_Template","UnsecuredWebsitesReportComponent_div_15_ng_container_4_tr_12_ng_container_13_Template","UnsecuredWebsitesReportComponent_div_15_ng_container_4_tr_12_ng_container_15_Template","UnsecuredWebsitesReportComponent_div_15_ng_container_4_tr_12_Template","UnsecuredWebsitesReportComponent_div_15_app_callout_2_Template","UnsecuredWebsitesReportComponent_div_15_ng_container_4_Template","UnsecuredWebsitesReportComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent_small_5_Template","UnsecuredWebsitesReportComponent_div_13_Template","UnsecuredWebsitesReportComponent_div_15_Template","UnsecuredWebsitesReportComponent_ng_template_17_Template","WeakPasswordsReportComponent_div_15_ng_container_4_tr_12_ng_container_13_Template","WeakPasswordsReportComponent_div_15_ng_container_4_tr_12_ng_container_15_Template","passwordStrengthMap","WeakPasswordsReportComponent_div_15_ng_container_4_tr_12_Template","WeakPasswordsReportComponent_div_15_app_callout_2_Template","WeakPasswordsReportComponent_div_15_ng_container_4_Template","WeakPasswordsReportComponent","passwordStrengthCache","weakPasswordCiphers","hasUsername","cacheKey","userInput","atPosition","passwordStrength","scoreKey","WeakPasswordsReportComponent_small_5_Template","WeakPasswordsReportComponent_div_13_Template","WeakPasswordsReportComponent_div_15_Template","WeakPasswordsReportComponent_ng_template_17_Template","attachments_component_1","a_r4","reupload","reuploadPromises","AttachmentsComponent_table_25_tr_4_i_4_Template","AttachmentsComponent_table_25_tr_4_i_6_Template","download","AttachmentsComponent_table_25_tr_4_div_16_Template","downloading","deletePromises","AttachmentsComponent_table_25_tr_4_Template","AttachmentsComponent","reuploadCipherAttachment","AttachmentsComponent_small_12_Template","AttachmentsComponent_table_25_Template","onEventsClicked","deleted","getAllFromApiForOrganization","applyFilter","searchPending","filteredCiphers","searchCiphersBasic","resetPaging","collections_component_1","c_r9","i_r10","CollectionsComponent_table_40_tr_4_Template","CollectionsComponent","CollectionsComponent_small_12_Template","CollectionsComponent_div_35_Template","CollectionsComponent_div_38_Template","CollectionsComponent_table_40_Template","collectionData_1","getCollections","collectionDomains","decryptMany","unassignedCollection","getAllNested","grouping","bulk_delete_component_1","bulk_move_component_1","bulk_restore_component_1","bulk_share_component_1","bulkMove","bulkShare","bulkRestore","BulkActionsComponent","bulkDelete","selectedIds","ciphersComponent","bulkDeleteModalRef","BulkDeleteComponent","cipherIds","onDeleted","bulkRestoreModalRef","BulkRestoreComponent","onRestored","selectedCiphers","bulkShareModalRef","BulkShareComponent","onShared","bulkMoveModalRef","BulkMoveComponent","onMoved","BulkActionsComponent_button_10_Template","BulkActionsComponent_button_12_Template","BulkActionsComponent_button_14_Template","BulkActionsComponent_ng_template_38_Template","BulkActionsComponent_ng_template_41_Template","BulkActionsComponent_ng_template_44_Template","BulkActionsComponent_ng_template_47_Template","sendFileView_1","SendFile","toSendFileData","sendTextView_1","SendText","toSendTextData","CipherWithIdRequest","FolderRequest","folder","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","colorizedPassword","isSpecial","baseResponse_1","profileOrganizationResponse_1","ProfileResponse","emailVerified","masterPasswordHint","culture","twoFactorEnabled","securityStamp","ProfileOrganizationResponse","SendFileApi","SendTextApi","NotificationsService","webpackEmptyAsyncContext","keys","FrontendLayoutComponent","classList","remove","OrganizationLayoutComponent_div_2_ul_23_li_20_Template","OrganizationLayoutComponent_div_2_ul_23_li_22_Template","isOwner","goToEnterprisePortal","enterpriseTokenPromise","OrganizationLayoutComponent_div_2_div_20_Template","OrganizationLayoutComponent_div_2_ul_23_Template","OrganizationLayoutComponent_div_2_button_28_Template","isManager","OrganizationLayoutComponent","broadcasterService","ngZone","enterpriseUrl","run","command","unsubscribe","getEnterprisePortalSignInToken","NgZone","OrganizationLayoutComponent_div_2_Template","UserLayoutComponent","organizationUserAcceptRequest_1","orgName","AcceptOrganizationComponent","fired","queryParams","qParams","errorMessage","isAuthenticated","OrganizationUserAcceptRequest","postOrganizationUserAccept","toast","save","organizationName","AcceptOrganizationComponent_div_0_Template","AcceptOrganizationComponent_div_2_Template","hint_component_1","HintComponent","lock_component_1","LockComponent","routerService","hasKey","onSuccessfulSubmit","successRoute","webVaultHostname","login_component_1","LoginComponent","authService","onSuccessfulLoginNavigate","goAfterLogIn","queryParamsSub","invite","loginRedirect","rememberEmail","deleteRecoverRequest_1","RecoverDeleteComponent","DeleteRecoverRequest","postAccountRecoverDelete","twoFactorRecoveryRequest_1","RecoverTwoFactorComponent","TwoFactorRecoveryRequest","postTwoFactorRecover","register_component_1","policy_1","policyData_1","referenceEventRequest_1","RegisterComponent_div_9_div_4_Template","RegisterComponent_div_9_div_6_Template","RegisterComponent_div_9_div_8_Template","layout","getPasswordScoreAlertDisplay","enforcedPolicyOptions","minLength","RegisterComponent_app_callout_53_li_5_Template","RegisterComponent_app_callout_53_li_7_Template","RegisterComponent_app_callout_53_li_9_Template","RegisterComponent_app_callout_53_li_11_Template","RegisterComponent_app_callout_53_li_13_Template","RegisterComponent_app_callout_53_li_15_Template","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","acceptPolicies","RegisterComponent","showCreateOrgMessage","referenceData","ReferenceEventRequest","reference","cookie","pop","getPoliciesByToken","policiesData","PolicyData","Policy","getMasterPasswordPolicyOptions","evaluateMasterPassword","masterPasswordScore","RegisterComponent_header_2_Template","RegisterComponent_div_9_Template","RegisterComponent_p_17_Template","RegisterComponent_app_callout_23_Template","RegisterComponent_app_callout_53_Template","updatePasswordStrength","confirmMasterPassword","hint","RegisterComponent_div_117_Template","showTerms","_r1","set_password_component_1","SetPasswordComponent_div_15_app_callout_8_li_5_Template","SetPasswordComponent_div_15_app_callout_8_li_7_Template","SetPasswordComponent_div_15_app_callout_8_li_9_Template","SetPasswordComponent_div_15_app_callout_8_li_11_Template","SetPasswordComponent_div_15_app_callout_8_li_13_Template","SetPasswordComponent_div_15_app_callout_8_li_15_Template","SetPasswordComponent_div_15_app_callout_8_Template","_r11","masterPasswordRetype","SetPasswordComponent","SetPasswordComponent_div_13_Template","SetPasswordComponent_div_15_Template","syncLoading","ChangePasswordComponent","strengthResult","getPasswordStrengthUserInput","setupSubmitActions","getKdf","getKdfIterations","encKey","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordStrengthTimeout","clearTimeout","sso_component_1","SsoComponent","redirectUri","origin","storedIdentifier","SsoComponent_div_11_Template","SsoComponent_div_13_Template","initiateSsoFormPromise","loggingIn","twoFactorRoute","changePasswordRoute","checkState","getOrgIdentiferFromState","codeChallenge","returnUri","includeUserIdentifier","preValidate","buildAuthorizeUrl","authorizeUrl","sameWindow","preValidateSso","passwordOptions","uppercase","lowercase","numbers","special","codeVerifierHash","identityBaseUrl","getSsoUserIdentifier","userIdentifier","orgIdFromState","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginChangePasswordNavigate","disableFavicon","onSuccessfulLogin","stateSplit","checkStateSplit","two_factor_options_component_1","two_factor_component_1","twoFactorEmail","sendEmail","emailPromise","TwoFactorComponent_ng_container_14_small_14_a_2_Template","selectedProviderType","TwoFactorComponent_ng_container_14_p_2_Template","TwoFactorComponent_ng_container_14_p_4_Template","TwoFactorComponent_ng_container_14_small_14_Template","TwoFactorComponent_ng_container_18_p_2_Template","TwoFactorComponent_ng_container_18_ng_container_4_Template","u2fReady","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","TwoFactorOptionsComponent","onProviderSelected","onRecoverSelected","TwoFactorComponent_ng_container_14_Template","TwoFactorComponent_ng_container_16_Template","TwoFactorComponent_ng_container_18_Template","TwoFactorComponent_ng_container_20_Template","TwoFactorComponent_i_22_Template","TwoFactorComponent_div_24_Template","TwoFactorComponent_ng_container_26_Template","TwoFactorComponent_button_32_Template","TwoFactorComponent_ng_template_51_Template","p_r1","choose","TwoFactorOptionsComponent_a_22_Template","recover","TwoFactorEmailRequest","verifyEmailRequest_1","VerifyEmailTokenComponent","postAccountVerifyEmailToken","VerifyEmailRequest","verifyDeleteRecoverRequest_1","VerifyRecoverDeleteComponent","VerifyDeleteRecoverRequest","postAccountRecoverDeleteToken","collection_add_edit_component_1","entity_users_component_1","c_r10","CollectionsComponent_ng_container_28_table_4_tr_4_Template","searchedCollections_r6","CollectionsComponent_ng_container_28_p_2_Template","CollectionsComponent_ng_container_28_table_4_Template","didScroll","pagedCollectionsCount","getUserCollections","pagedLength","pagedCollections","pagedSize","addEditModalRef","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","removeCollection","deleteCollection","usersModalRef","isSearching","isSearchable","searching","index","CollectionsComponent_ng_container_26_Template","CollectionsComponent_ng_container_28_Template","CollectionsComponent_ng_template_31_Template","CollectionsComponent_ng_template_34_Template","collectionRequest_1","g_r12","CollectionAddEditComponent_div_22_ng_container_24_table_10_tr_25_ng_container_9_Template","i_r13","CollectionAddEditComponent_div_22_ng_container_24_table_10_tr_25_Template","groups","CollectionAddEditComponent_div_22_ng_container_24_div_5_Template","CollectionAddEditComponent_div_22_ng_container_24_div_8_Template","CollectionAddEditComponent_div_22_ng_container_24_table_10_Template","CollectionAddEditComponent_div_22_ng_container_24_Template","accessGroups","getGroups","groupsResponse","orgKey","getCollectionDetails","group","g","CollectionRequest","putCollection","postCollection","CollectionAddEditComponent_div_20_Template","CollectionAddEditComponent_div_22_Template","CollectionAddEditComponent_button_42_Template","e_r7","EventsComponent_ng_container_39_table_4_tr_29_Template","EventsComponent_ng_container_39_p_2_Template","EventsComponent_ng_container_39_table_4_Template","EventsComponent_ng_container_39_button_6_Template","EventsComponent","getEventsOrganization","EventsComponent_ng_container_37_Template","EventsComponent_ng_container_39_Template","group_add_edit_component_1","g_r10","GroupsComponent_ng_container_28_table_4_tr_4_Template","searchedGroups_r6","GroupsComponent_ng_container_28_p_2_Template","GroupsComponent_ng_container_28_table_4_Template","GroupsComponent","pagedGroupsCount","pagedGroups","GroupAddEditComponent","onSavedGroup","onDeletedGroup","removeGroup","deleteGroup","GroupsComponent_ng_container_26_Template","GroupsComponent_ng_container_28_Template","GroupsComponent_ng_template_31_Template","GroupsComponent_ng_template_34_Template","groupRequest_1","c_r12","GroupAddEditComponent_div_22_ng_container_60_table_4_tr_25_Template","GroupAddEditComponent_div_22_ng_container_60_div_2_Template","GroupAddEditComponent_div_22_ng_container_60_table_4_Template","GroupAddEditComponent_div_22_div_36_Template","access","GroupAddEditComponent_div_22_ng_container_60_Template","getGroupDetails","GroupRequest","putGroup","postGroup","GroupAddEditComponent_div_20_Template","GroupAddEditComponent_div_22_Template","GroupAddEditComponent_button_42_Template","ManageComponent_div_6_a_8_Template","ManageComponent_div_6_a_14_Template","ManageComponent_div_6_a_16_Template","ManageComponent_div_6_a_18_Template","accessPolicies","ManageComponent","ManageComponent_div_6_Template","organizationUserConfirmRequest_1","entity_events_component_1","user_add_edit_component_1","user_confirm_component_1","user_groups_component_1","allCount","invitedCount","acceptedCount","u_r18","reinvite","_r37","confirm","_r45","PeopleComponent_ng_container_49_ng_container_4_tr_8_span_12_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_span_14_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_small_16_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_ng_container_21_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_span_26_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_span_28_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_span_30_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_span_32_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_a_47_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_a_49_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_a_51_Template","PeopleComponent_ng_container_49_ng_container_4_tr_8_a_53_Template","ctx_r17","PeopleComponent_ng_container_49_ng_container_4_app_callout_2_Template","_r48","PeopleComponent_ng_container_49_ng_container_4_tr_8_Template","showConfirmUsers","searchedUsers_r13","PeopleComponent_ng_container_49_p_2_Template","PeopleComponent_ng_container_49_ng_container_4_Template","PeopleComponent","statusMap","pagedUsersCount","viewEvents","pagedUsers","confirmedCount","UserAddEditComponent","onSavedUser","onDeletedUser","removeUser","groupsModalRef","UserGroupsComponent","deleteOrganizationUser","postOrganizationUserReinvite","updateUser","mapIndex","autoConfirm","doConfirmation","confirmModalRef","UserConfirmComponent","onConfirmedUser","eventsModalRef","getUserPublicKey","publicKeyResponse","log","getFingerprint","rsaEncrypt","OrganizationUserConfirmRequest","postOrganizationUserConfirm","PeopleComponent_span_13_Template","PeopleComponent_span_19_Template","PeopleComponent_span_25_Template","PeopleComponent_ng_container_47_Template","PeopleComponent_ng_container_49_Template","PeopleComponent_ng_template_52_Template","PeopleComponent_ng_template_55_Template","PeopleComponent_ng_template_58_Template","PeopleComponent_ng_template_61_Template","_c4","_c5","organizationUserInviteRequest_1","organizationUserUpdateRequest_1","emails","c_r16","i_r17","UserAddEditComponent_div_24_ng_container_102_table_4_tr_25_Template","UserAddEditComponent_div_24_ng_container_102_div_2_Template","UserAddEditComponent_div_24_ng_container_102_table_4_Template","UserAddEditComponent_div_24_ng_container_2_Template","UserAddEditComponent_div_24_div_78_Template","UserAddEditComponent_div_24_ng_container_102_Template","getOrganizationUser","OrganizationUserUpdateRequest","putOrganizationUser","OrganizationUserInviteRequest","postOrganizationUserInvite","UserAddEditComponent_small_11_Template","UserAddEditComponent_div_22_Template","UserAddEditComponent_div_24_Template","UserAddEditComponent_button_44_Template","dontAskAgain","fingerprint","UserConfirmComponent_small_12_Template","organizationUserUpdateGroupsRequest_1","g_r7","i_r8","UserGroupsComponent_div_25_table_8_tr_4_Template","UserGroupsComponent_div_25_div_6_Template","UserGroupsComponent_div_25_table_8_Template","getOrganizationUserGroups","userGroups","ug","OrganizationUserUpdateGroupsRequest","groupIds","putOrganizationUserGroups","UserGroupsComponent_small_12_Template","UserGroupsComponent_div_23_Template","UserGroupsComponent_div_25_Template","policy_edit_component_1","p_r5","PoliciesComponent_table_20_tr_4_td_2_span_5_Template","PoliciesComponent_table_20_tr_4_td_2_Template","display","PoliciesComponent_table_20_tr_4_Template","PoliciesComponent","policiesEnabledMap","MasterPassword","PasswordGenerator","RequireSso","getPolicies","orgPolicies","op","editModalRef","PolicyEditComponent","onSavedPolicy","PoliciesComponent_ng_container_18_Template","PoliciesComponent_table_20_Template","PoliciesComponent_ng_template_22_Template","api_service_1","appId_service_1","AppIdService","audit_service_1","cipher_service_1","collection_service_1","crypto_service_1","environment_service_1","folder_service_1","i18n_service_1","log_service_1","LogService","messaging_service_1","passwordGeneration_service_1","platformUtils_service_1","search_service_1","settings_service_1","storage_service_1","state_service_1","sync_service_1","token_service_1","totp_service_1","user_service_1","vaultTimeout_service_1","policyRequest_1","o_r9","masterPassMinComplexity","PolicyEditComponent_div_23_ng_container_23_option_12_Template","masterPassMinLength","masterPassRequireUpper","masterPassRequireLower","masterPassRequireNumbers","masterPassRequireSpecial","passwordScores","o_r18","passGenDefaultType","PolicyEditComponent_div_23_ng_container_25_option_12_Template","passGenMinLength","passGenMinNumbers","passGenMinSpecial","passGenUseUpper","passGenUseLower","passGenUseNumbers","passGenUseSpecial","passGenMinNumberWords","passGenCapitalize","passGenIncludeNumber","defaultTypes","PolicyEditComponent_div_23_app_callout_5_Template","PolicyEditComponent_div_23_app_callout_7_Template","PolicyEditComponent_div_23_ng_container_9_Template","_r32","PolicyEditComponent_div_23_ng_container_23_Template","PolicyEditComponent_div_23_ng_container_25_Template","policyType","getPolicy","defaultType","useUpper","useLower","useNumbers","useSpecial","minNumbers","minSpecial","minNumberWords","capitalize","includeNumber","PolicyRequest","putPolicy","PolicyEditComponent_div_21_Template","PolicyEditComponent_div_23_Template","organizationUpdateRequest_1","api_key_component_1","purge_vault_component_1","delete_organization_component_1","_r13","viewApiKey","rotateApiKey","taxFormPromise","AccountComponent","canUseApi","OrganizationUpdateRequest","putOrganization","deleteOrganization","deleteModalRef","DeleteOrganizationComponent","purgeVault","purgeModalRef","apiKeyModalRef","postOrganizationApiKey","rotateApiKeyModalRef","postOrganizationRotateApiKey","AccountComponent_div_7_Template","AccountComponent_form_9_Template","AccountComponent_ng_container_11_Template","AccountComponent_div_24_Template","AccountComponent_form_26_Template","AccountComponent_ng_template_53_Template","AccountComponent_ng_template_56_Template","AccountComponent_ng_template_59_Template","AccountComponent_ng_template_62_Template","user_billing_component_1","OrganizationBillingComponent_ng_container_11_ng_container_25_app_callout_2_Template","OrganizationBillingComponent_ng_container_11_ng_container_25_span_8_Template","OrganizationBillingComponent_ng_container_11_table_37_tr_4_span_25_Template","OrganizationBillingComponent_ng_container_11_table_37_tr_4_span_27_Template","OrganizationBillingComponent_ng_container_11_table_37_tr_4_Template","OrganizationBillingComponent_ng_container_11_table_45_tr_4_span_8_Template","OrganizationBillingComponent_ng_container_11_table_45_tr_4_span_10_Template","OrganizationBillingComponent_ng_container_11_table_45_tr_4_i_15_Template","OrganizationBillingComponent_ng_container_11_table_45_tr_4_Template","OrganizationBillingComponent_ng_container_11_button_15_Template","OrganizationBillingComponent_ng_container_11_app_add_credit_17_Template","OrganizationBillingComponent_ng_container_11_p_23_Template","OrganizationBillingComponent_ng_container_11_ng_container_25_Template","OrganizationBillingComponent_ng_container_11_button_27_Template","OrganizationBillingComponent_ng_container_11_app_adjust_payment_29_Template","OrganizationBillingComponent_ng_container_11_p_35_Template","OrganizationBillingComponent_ng_container_11_table_37_Template","OrganizationBillingComponent_ng_container_11_p_43_Template","OrganizationBillingComponent_ng_container_11_table_45_Template","OrganizationBillingComponent","OrganizationBillingComponent_button_6_Template","OrganizationBillingComponent_ng_container_9_Template","OrganizationBillingComponent_ng_container_11_Template","reinstate","reinstatePromise","OrganizationSubscriptionComponent_ng_container_11_dl_6_dd_13_span_3_Template","sub","isExpired","OrganizationSubscriptionComponent_ng_container_11_dl_6_dd_13_Template","OrganizationSubscriptionComponent_ng_container_11_dl_6_dd_15_Template","OrganizationSubscriptionComponent_ng_container_11_div_8_ng_container_13_span_11_Template","subscription","subscriptionMarkedForCancel","nextInvoice","i_r19","quantity","OrganizationSubscriptionComponent_ng_container_11_div_8_div_17_tr_10_Template","ctx_r16","OrganizationSubscriptionComponent_ng_container_11_div_8_ng_container_13_Template","OrganizationSubscriptionComponent_ng_container_11_div_8_div_17_Template","closeUpdateLicense","updateLicense","OrganizationSubscriptionComponent_ng_container_11_ng_container_10_div_13_Template","showUpdateLicense","changePlan","downloadLicense","showDownloadLicense","ctx_r29","cancelPromise","closeChangePlan","ctx_r30","closeDownloadLicense","ctx_r31","_r50","adjustSeats","_r53","closeSeats","ctx_r48","adjustSeatsAdd","billingInterval","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_ng_container_23_div_4_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_ng_container_23_app_adjust_seats_6_Template","showAdjustSeats","adjustStorage","_r61","closeStorage","ctx_r56","adjustStorageAdd","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_ng_container_40_div_4_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_ng_container_40_app_adjust_storage_6_Template","ctx_r33","showAdjustStorage","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_button_4_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_button_6_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_button_8_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_app_change_plan_11_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_div_13_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_ng_container_23_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_ng_container_40_Template","showChangePlan","canDownloadLicense","cancelled","canAdjustSeats","storageName","storageProgressWidth","storagePercentage","OrganizationSubscriptionComponent_ng_container_11_app_callout_2_Template","OrganizationSubscriptionComponent_ng_container_11_app_callout_4_Template","OrganizationSubscriptionComponent_ng_container_11_dl_6_Template","OrganizationSubscriptionComponent_ng_container_11_div_8_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_10_Template","OrganizationSubscriptionComponent_ng_container_11_ng_container_12_Template","OrganizationSubscriptionComponent","getOrganizationSubscription","postOrganizationReinstate","postOrganizationCancel","changed","updated","cancelAtEndDate","upcomingInvoice","storageGb","OrganizationSubscriptionComponent_small_5_Template","OrganizationSubscriptionComponent_ng_container_9_Template","OrganizationSubscriptionComponent_ng_container_11_Template","ChangePlanComponent","onChanged","defaultUpgradePlan","FamiliesAnnually","defaultUpgradeProduct","Families","DownloadLicenseComponent","onDownloaded","installationId","getOrganizationLicense","license","licenseString","JSON","stringify","saveFile","seatRequest_1","seatAdjustment","adjustedSeatTotal","AdjustSeatsComponent","SeatRequest","postOrganizationSeat","AdjustSeatsComponent_div_26_Template","SettingsComponent","access2fa","SettingsComponent_a_22_Template","SettingsComponent_a_24_Template","two_factor_setup_component_1","duoComp","getTwoFactorOrganizationProviders","updateTwoFactorAuthenticatorRequest_1","TwoFactorAuthenticatorComponent_form_26_ng_container_5_Template","TwoFactorAuthenticatorComponent_form_26_ng_container_7_Template","TwoFactorAuthenticatorComponent_form_26_p_43_Template","TwoFactorAuthenticatorComponent_form_26_hr_45_Template","TwoFactorAuthenticatorComponent_form_26_ng_container_57_Template","TwoFactorAuthenticatorComponent_form_26_span_67_Template","TwoFactorAuthenticatorComponent_form_26_span_69_Template","qrScript","UpdateTwoFactorAuthenticatorRequest","putTwoFactorAuthenticator","QRious","element","TwoFactorAuthenticatorComponent_app_two_factor_verify_24_Template","TwoFactorAuthenticatorComponent_form_26_Template","twoFactorEmailRequest_1","updateTwoFactorEmailRequest_1","sentEmail","TwoFactorEmailComponent_form_26_ng_container_7_span_33_Template","TwoFactorEmailComponent_form_26_ng_container_5_Template","TwoFactorEmailComponent_form_26_ng_container_7_Template","TwoFactorEmailComponent_form_26_span_17_Template","TwoFactorEmailComponent_form_26_span_19_Template","postTwoFactorEmailSetup","UpdateTwoFactorEmailRequest","putTwoFactorEmail","TwoFactorEmailComponent_app_two_factor_verify_24_Template","TwoFactorEmailComponent_form_26_Template","print","TwoFactorRecoveryComponent_ng_container_26_ng_container_4_Template","TwoFactorRecoveryComponent_ng_container_26_ng_container_6_Template","TwoFactorRecoveryComponent_ng_container_26_button_11_Template","w","open","write","formatString","TwoFactorRecoveryComponent_app_two_factor_verify_24_Template","TwoFactorRecoveryComponent_ng_container_26_Template","updateTwoFactorU2fDeleteRequest_1","updateTwoFactorU2fRequest_1","i_r14","k_r13","TwoFactorU2fComponent_form_25_li_25_ng_container_9_ng_container_2_Template","TwoFactorU2fComponent_form_25_li_25_ng_container_9_ng_container_4_Template","compromised","TwoFactorU2fComponent_form_25_li_25_ng_container_11_i_2_Template","TwoFactorU2fComponent_form_25_li_25_strong_5_Template","TwoFactorU2fComponent_form_25_li_25_strong_7_Template","TwoFactorU2fComponent_form_25_li_25_ng_container_9_Template","TwoFactorU2fComponent_form_25_li_25_ng_container_11_Template","removePromise","configured","keysConfiguredCount","TwoFactorU2fComponent_form_25_ng_container_72_ng_container_2_Template","TwoFactorU2fComponent_form_25_ng_container_72_ng_container_4_Template","TwoFactorU2fComponent_form_25_ng_container_72_ng_container_6_Template","u2fListening","u2fResponse","u2fError","disablePromise","TwoFactorU2fComponent_form_25_app_callout_5_Template","TwoFactorU2fComponent_form_25_li_25_Template","readKey","TwoFactorU2fComponent_form_25_ng_container_70_Template","TwoFactorU2fComponent_form_25_ng_container_72_Template","TwoFactorU2fComponent_form_25_i_79_Template","TwoFactorU2fComponent_form_25_span_81_Template","TwoFactorU2fComponent_form_25_button_84_Template","keyIdAvailable","challengePromise","u2fScript","UpdateTwoFactorU2fRequest","deviceResponse","putTwoFactorU2f","UpdateTwoFactorU2fDeleteRequest","deleteTwoFactorU2f","getTwoFactorU2fChallenge","challenge","readDevice","u2fChallenge","resetU2f","u2f","register","errorCode","listening","k","this_1","TwoFactorU2fComponent_app_two_factor_verify_23_Template","TwoFactorU2fComponent_form_25_Template","updateTwoFactorYubioOtpRequest_1","i_r9","k_r8","existingKey","TwoFactorYubiKeyComponent_form_25_div_54_input_6_Template","TwoFactorYubiKeyComponent_form_25_div_54_div_8_Template","TwoFactorYubiKeyComponent_form_25_app_callout_5_Template","TwoFactorYubiKeyComponent_form_25_div_54_Template","nfc","TwoFactorYubiKeyComponent_form_25_button_87_Template","UpdateTwoFactorYubioOtpRequest","key1","key2","key3","key4","key5","putTwoFactorYubiKey","padRight","max","TwoFactorYubiKeyComponent_app_two_factor_verify_23_Template","TwoFactorYubiKeyComponent_form_25_Template","getExportData","getOrganizationExport","getFileName","collectEvent","exposed_passwords_report_component_1","loginUriData_1","LoginUriData","attachmentView_1","symmetricCryptoKey_1","AttachmentView","view","decryptToBytes","decValue","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","loginUri_1","LoginUri","toLoginUriData","passwordHistoryView_1","FallbackSrcDirective","onError","appFallbackSrc","import_component_1","inactive_two_factor_report_component_1","reused_passwords_report_component_1","_r2","ToolsComponent","accessReports","ToolsComponent_a_31_Template","unsecured_websites_report_component_1","weak_passwords_report_component_1","VaultComponent","changeDetectorRef","groupingsComponent","successfully","detectChanges","reload","filterDeleted","filterCipherType","filterCollection","clearGroupingFilters","clearFilters","go","filterSearchText","editCipherAttachments","attachmentsModalRef","madeAttachmentChanges","onUploadedAttachment","onDeletedAttachment","editCipherCollections","collectionsModalRef","onSavedCollections","component","editCipher","cloneCipher","replaceUrl","ChangeDetectorRef","VaultComponent_ng_container_20_Template","VaultComponent_button_29_Template","VaultComponent_ng_template_39_Template","VaultComponent_ng_template_42_Template","VaultComponent_ng_template_45_Template","VaultComponent_ng_template_48_Template","saveCipherAttachment","saveAttachmentWithServer","cipherDomain","deleteCipherAttachment","attachmentId","deleteCipherAttachmentAdmin","cipherCollectionsRequest_1","allowSelectNone","loadCipherCollections","saveCollections","CipherCollectionsRequest","putCipherCollectionsAdmin","cipherBulkDeleteRequest_1","deleteCiphers","deleteCiphersAdmin","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","CipherBulkDeleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","ids","f_r2","moveManyWithServer","BulkMoveComponent_option_35_Template","restoreManyWithServer","o_r5","i_r11","BulkShareComponent_table_54_tr_4_Template","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","BulkShareComponent_option_39_Template","BulkShareComponent_div_49_Template","BulkShareComponent_div_52_Template","BulkShareComponent_table_54_Template","canSave","sendAccess_1","sendAccessRequest_1","errorResponse_1","toggleText","AccessComponent_div_16_ng_container_9_app_callout_2_Template","sendText","selectText","AccessComponent_div_16_ng_container_9_button_9_Template","AccessComponent_div_16_ng_container_9_Template","AccessComponent_div_16_ng_container_12_Template","sendType","AccessComponent","passwordRequired","maskedText","sendId","decKey","cache","arrayBuffer","buf","decryptFromBytes","decBuf","keyArray","accessRequest","SendAccessRequest","pbkdf2","passwordHash","sendResponse","postSendAccess","sendAccess","SendAccess","makeSendKey","ErrorResponse","AccessComponent_div_12_Template","AccessComponent_div_14_Template","AccessComponent_div_16_Template","identityResponse","errorModel","responseErrorModel","getSingleMessage","messages","item","prefix","lastSep","lastIndexOf","s_r7","removePassword","SendComponent_table_81_tr_4_i_6_Template","SendComponent_table_81_tr_4_i_8_Template","editSend","SendComponent_table_81_tr_4_ng_container_17_Template","SendComponent_table_81_tr_4_a_44_Template","SendComponent_table_81_tr_4_Template","filteredSends","addSend","SendComponent_div_83_ng_container_2_Template","SendComponent_div_83_ng_container_4_Template","SendComponent","sendService","refreshing","expired","sends","searchTimeout","sendAddEditModalRef","onSavedSend","onDeletedSend","putSendRemovePassword","deleteSend","webVaultUrl","getWebVaultUrl","link","urlB64Key","clearSelections","SendComponent_ng_container_66_Template","SendComponent_table_81_Template","SendComponent_div_83_Template","SendComponent_ng_template_88_Template","sendView_1","send_1","sendData_1","o_r11","AddEditComponent_div_20_ng_container_20_div_4_Template","AddEditComponent_div_20_ng_container_20_div_6_Template","AddEditComponent_div_20_ng_container_17_Template","AddEditComponent_div_20_ng_container_20_Template","clearExpiration","AddEditComponent_div_20_div_65_Template","AddEditComponent_div_20_label_72_Template","AddEditComponent_div_20_label_74_Template","AddEditComponent_div_20_div_101_Template","hasPassword","datePipe","onCancelled","loadSend","SendView","encryptSend","encSend","saveWithServer","getSend","Send","sendData","DatePipe","sendFile_1","sendText_1","cryptoKey","toSendData","deauthorize_sessions_component_1","delete_account_component_1","deauthorizeSessions","deauthModalRef","DeauthorizeSessionsComponent","deleteAccount","DeleteAccountComponent","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","AccountComponent_ng_template_84_Template","AccountComponent_ng_template_87_Template","AccountComponent_ng_template_90_Template","AccountComponent_ng_template_93_Template","AccountComponent_ng_template_96_Template","postSecurityStamp","updateProfileRequest_1","profile","ProfileComponent_form_2_p_44_Template","ProfileComponent","getProfile","UpdateProfileRequest","putProfile","ProfileComponent_div_0_Template","ProfileComponent_form_2_Template","emailRequest_1","emailTokenRequest_1","newEmail","reset","ChangeEmailComponent","tokenSent","hasEncKey","EmailTokenRequest","postEmailToken","EmailRequest","newKey","newMasterPasswordHash","newEncKey","postEmail","ChangeEmailComponent_ng_container_27_Template","ChangeEmailComponent_span_34_Template","ChangeEmailComponent_span_36_Template","ChangeEmailComponent_button_39_Template","change_password_component_1","cipherWithIdRequest_1","folderWithIdRequest_1","passwordRequest_1","updateKeyRequest_1","ChangePasswordComponent_app_callout_4_li_5_Template","ChangePasswordComponent_app_callout_4_li_7_Template","ChangePasswordComponent_app_callout_4_li_9_Template","ChangePasswordComponent_app_callout_4_li_11_Template","ChangePasswordComponent_app_callout_4_li_13_Template","ChangePasswordComponent_app_callout_4_li_15_Template","rotateEncKey","rotateEncKeyClicked","currentMasterPassword","PasswordRequest","postPassword","updateKey","getPrivateKey","encPrivateKey","UpdateKeyRequest","FolderWithIdRequest","postAccountKey","ChangePasswordComponent_app_callout_4_Template","kdfRequest_1","kdfType_1","o_r2","ChangeKdfComponent","PBKDF2_SHA256","kdfOptions","KdfRequest","postAccountKdf","ChangeKdfComponent_option_40_Template","organization_plans_component_1","CreateOrganizationComponent","orgPlansComponent","updateDomainsRequest_1","i_r7","custom","DomainRulesComponent_ng_container_20_div_2_Template","indexTrackBy","d_r14","toggleExcluded","DomainRulesComponent_table_38_tr_4_a_17_Template","DomainRulesComponent_table_38_tr_4_a_19_Template","customize","excluded","domains","DomainRulesComponent_table_38_tr_4_Template","DomainRulesComponent","getSettingsDomains","equivalentDomains","globalEquivalentDomains","globalDomain","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","putSettingsDomains","DomainRulesComponent_p_18_Template","DomainRulesComponent_ng_container_20_Template","DomainRulesComponent_p_36_Template","DomainRulesComponent_table_38_Template","o_r3","OptionsComponent","vaultTimeout","vaultTimeoutAction","vaultTimeouts","localeOptions","supportedTranslationLocales","locale","localeNames","_h","disableIcons","enableGravatars","enableFullWidth","_g","startingLocale","setVaultTimeoutOptions","vaultTimeoutActionChanged","newValue","OptionsComponent_option_25_Template","OptionsComponent_option_89_Template","LinkSsoComponent","ngAfterContentInit","premiumPrice","total","PremiumComponent","getPremium","getEmailVerified","finalizePremium","postPremium","paymentResponse","PremiumComponent_app_callout_7_Template","PremiumComponent_a_59_Template","PremiumComponent_ng_container_62_Template","PremiumComponent_form_64_Template","SettingsComponent_a_26_Template","SettingsComponent_a_28_Template","SettingsComponent_a_30_Template","UserSubscriptionComponent_ng_container_11_dl_6_dd_6_Template","UserSubscriptionComponent_ng_container_11_dl_6_dd_8_Template","UserSubscriptionComponent_ng_container_11_div_8_div_29_tr_10_Template","UserSubscriptionComponent_ng_container_11_div_8_span_15_Template","UserSubscriptionComponent_ng_container_11_div_8_div_29_Template","UserSubscriptionComponent_ng_container_11_ng_container_10_div_13_Template","ctx_r34","UserSubscriptionComponent_ng_container_11_ng_container_12_ng_container_24_div_4_Template","UserSubscriptionComponent_ng_container_11_ng_container_12_ng_container_24_app_adjust_storage_6_Template","ctx_r27","UserSubscriptionComponent_ng_container_11_ng_container_12_button_4_Template","UserSubscriptionComponent_ng_container_11_ng_container_12_button_6_Template","UserSubscriptionComponent_ng_container_11_ng_container_12_ng_container_24_Template","UserSubscriptionComponent_ng_container_11_app_callout_2_Template","UserSubscriptionComponent_ng_container_11_app_callout_4_Template","UserSubscriptionComponent_ng_container_11_dl_6_Template","UserSubscriptionComponent_ng_container_11_div_8_Template","UserSubscriptionComponent_ng_container_11_ng_container_10_Template","UserSubscriptionComponent_ng_container_11_ng_container_12_Template","UserSubscriptionComponent","getUserSubscription","usingInAppPurchase","postReinstatePremium","postCancelPremium","UserSubscriptionComponent_small_5_Template","UserSubscriptionComponent_ng_container_9_Template","UserSubscriptionComponent_ng_container_11_Template","checkedUsername","breachedAccounts","d_r10","BreachReportComponent_div_41_ng_container_4_ul_6_li_2_li_22_Template","a_r8","logoPath","dataClasses","pwnCount","breachDate","addedDate","BreachReportComponent_div_41_ng_container_4_ul_6_li_2_Template","BreachReportComponent_div_41_ng_container_4_app_callout_2_Template","BreachReportComponent_div_41_ng_container_4_app_callout_4_Template","BreachReportComponent_div_41_ng_container_4_ul_6_Template","BreachReportComponent_div_41_p_2_Template","BreachReportComponent_div_41_ng_container_4_Template","BreachReportComponent","BreachReportComponent_div_41_Template","password_generator_component_1","password_generator_history_component_1","numWords","saveOptions","wordSeparator","lengthChanged","minNumber","minNumberChanged","minSpecialChanged","avoidAmbiguous","useUppercase","useLowercase","PasswordGeneratorComponent","history","historyModalRef","PasswordGeneratorHistoryComponent","PasswordGeneratorComponent_app_callout_7_Template","PasswordGeneratorComponent_ng_container_39_Template","PasswordGeneratorComponent_ng_container_41_Template","regenerate","PasswordGeneratorComponent_ng_template_66_Template","inEffect","h_r3","PasswordGeneratorHistoryComponent_ul_20_li_2_Template","PasswordGeneratorHistoryComponent_ul_20_Template","PasswordGeneratorHistoryComponent_div_22_Template","ToolsComponent_a_35_Template","ToolsComponent_span_66_Template","organizations_component_1","update_key_component_1","folder_add_edit_component_1","share_component_1","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","organizationsComponent","filterFavorites","filterFolder","onReuploadedAttachment","shareCipher","shareModalRef","ShareComponent","onSharedCipher","folderAddEditModalRef","FolderAddEditComponent","onSavedFolder","loadFolders","onDeletedFolder","updateKeyModalRef","UpdateKeyComponent","VaultComponent_div_39_Template","VaultComponent_app_verify_email_41_Template","VaultComponent_div_43_Template","VaultComponent_div_45_Template","VaultComponent_ng_template_68_Template","VaultComponent_ng_template_71_Template","VaultComponent_ng_template_74_Template","VaultComponent_ng_template_77_Template","VaultComponent_ng_template_80_Template","VaultComponent_ng_template_83_Template","makeRequest","getKey","FolderAddEditComponent_button_47_Template","o_r10","c_r15","i_r16","ShareComponent_div_25_table_29_tr_4_Template","ShareComponent_div_25_option_14_Template","ShareComponent_div_25_div_24_Template","ShareComponent_div_25_div_27_Template","ShareComponent_div_25_table_29_Template","ShareComponent_small_12_Template","ShareComponent_div_23_Template","ShareComponent_div_25_Template","ShareComponent_button_29_Template","ShareComponent_a_31_Template","VerifyEmailComponent","postAccountVerifyEmail","OrganizationGuardService","canActivate","OrganizationTypeGuardService","allowedTypes","UnauthGuardService","isLocked","AuthGuardService","routerState","promptBiometric","apiKeyResponse_1","billingResponse_1","breachAccountResponse_1","cipherResponse_1","collectionResponse_1","domainsResponse_1","eventResponse_1","folderResponse_1","groupResponse_1","identityTokenResponse_1","identityTwoFactorResponse_1","listResponse_1","organizationResponse_1","organizationSubscriptionResponse_1","organizationUserResponse_1","paymentResponse_1","planResponse_1","policyResponse_1","preloginResponse_1","profileResponse_1","selectionReadOnlyResponse_1","sendAccessResponse_1","sendResponse_1","subscriptionResponse_1","syncResponse_1","taxInfoResponse_1","twoFactorAuthenticatorResponse_1","twoFactorDuoResponse_1","twoFactorEmailResponse_1","twoFactorProviderResponse_1","twoFactorRescoverResponse_1","twoFactorU2fResponse_1","twoFactorYubiKeyResponse_1","userKeyResponse_1","logoutCallback","customUserAgent","urlsSet","isWebClient","isDesktopClient","usingBaseUrl","device","getDevice","setUrls","urls","apiBaseUrl","eventsBaseUrl","api","headers","Headers","Content-Type","Accept","Device-Type","qsStringify","toIdentityToken","identityClientId","credentials","getCredentials","isJsonResponse","IdentityTokenResponse","TwoFactorProviders2","clearTwoFactorToken","IdentityTwoFactorResponse","doRefreshToken","BillingResponse","SubscriptionResponse","TaxInfoResponse","PreloginResponse","setPassword","getAccountRevisionDate","postPasswordHint","postRegister","PaymentResponse","postIapCheck","postAccountVerifyPassword","ApiKeyResponse","getFolder","FolderResponse","postFolder","putFolder","deleteFolder","SendResponse","SendAccessResponse","getSends","ListResponse","postSend","postSendFile","putSend","getCipher","CipherResponse","getCiphersOrganization","postCipher","postCipherCreate","putCipher","deleteManyCiphers","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteManyCiphers","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentAdmin","postShareCipherAttachment","CollectionGroupDetailsResponse","CollectionResponse","dr","deleteCollectionUser","GroupDetailsResponse","GroupResponse","deleteGroupUser","PolicyResponse","OrganizationUserDetailsResponse","OrganizationUserUserDetailsResponse","PlanResponse","postImportDirectory","DomainsResponse","getSync","SyncResponse","TwoFactorProviderResponse","TwoFactorAuthenticatorResponse","TwoFactorEmailResponse","TwoFactorDuoResponse","TwoFactorYubiKeyResponse","TwoFactorU2fResponse","ChallengeResponse","TwoFactorRecoverResponse","postTwoFactorEmail","OrganizationResponse","OrganizationSubscriptionResponse","getEvents","addEventParameters","EventResponse","postEventsCollect","getActiveBearerToken","authHeader","Authorization","UserKeyResponse","getHibpBreach","BreachAccountResponse","getToken","tokenNeedsRefresh","nativeFetch","handleError","hasResponse","requestInit","tokenError","getRefreshToken","decodedToken","decodeToken","grant_type","client_id","refresh_token","typeHeader","attachmentResponse_1","passwordHistoryResponse_1","AttachmentResponse","h","PasswordHistoryResponse","CollectionDetailsResponse","globalDomainResponse_1","GlobalDomainResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","maxAdditionalStorage","hasEvents","hasTotp","has2fa","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","sendFileApi_1","sendTextApi_1","makeAndGetAppId","getAnonymousAppId","existingId","guid","throttle_1","hashStart","hashEnding","leakedHashes","v","__decorate","throttle","cipherBulkMoveRequest_1","cipherBulkRestoreRequest_1","cipherBulkShareRequest_1","cipherShareRequest_1","sortedCiphersCache_1","sequentialize_1","Keys","DomainMatchBlacklist","Set","settingsService","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","_decryptedCipherCache","clearIndex","indexCiphers","clearCache","decryptedCipherCache","existingCipher","existingHiddenFields","hiddenFields_1","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encryptField","encField","fieldModel","phModels","encPhs","encryptPasswordHistory","encPh","phModel","decCiphers","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","matches","eqDomain","matchingDomains","domainUrlHost","Host","urlHost","Exact","StartsWith","Never","decCiphers_1","promises_1","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedIndex","updateLastUsedDate","ciphersLocalData","cached","updateLastLaunchedDate","lastLaunched","saveNeverDomain","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","encCiphers","_i","ciphers_1","CipherBulkShareRequest","unencryptedFile","admin","readAsArrayBuffer","saveAttachmentRawWithServer","cData","filename","encFileName","dataEncKey","encryptToBytes","encData","blob","Blob","filepath","contentType","saveCollectionsWithServer","CipherBulkMoveRequest","deleteAttachment","deleteAttachmentWithServer","e_3","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","clearDeletedDate","CipherBulkRestoreRequest","attachmentView","attachmentResponse","e_4","theObj","modelProp","lastUsed","isCached","addCiphers","getLastLaunched","getLastUsed","getNext","sequentialize","propertyKey","descriptor","originalMethod","caches","args","arguments","getCache","argsCacheKey","onFinally","serviceUtils_1","decryptedCollectionCache","decCollections","nodes","collectionCopy","ServiceUtils","nestedTraverse","getNested","getTreeNodeObject","treeNode_1","nodeTree","partIndex","delimiter","partName","TreeNode","newPartName","ContainerService","attachToWindow","attachToGlobal","bigInt","encryptedObject_1","wordlist_1","secureStorageService","platformUtilService","option","biometric","supportsSecureStorage","keyHash","setOrgKeys","orgKeys","getKeyHash","encKeyCipher","decEncKey","stretchKey","getPublicKey","rsaExtractPublicKey","keyFingerprint","hkdfExpand","userFingerprint","hashPhrase","getOrgKeys","encOrgKeys","rsaDecrypt","clearKey","legacyEtmKey","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","clearOrgKeys","clearPinProtectedKey","clearKeys","toggleKey","salt","makeKeyFromPin","pin","protectedKeyCs","makePinKey","pinKey","randomBytes","rsaGenerateKeyPair","publicB64","privateEnc","keyMaterial","hkdf","sendKey","getKeyForEncryption","theKey","buildEncKey","plainValue","plainBuf","aesEncrypt","encObj","encValue","macLen","encBytes","cipherString","aesDecryptToBytes","decipher","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","EncryptedObject","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","hmacFast","computedMac","compareFast","aesDecryptFast","aesDecrypt","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","minimumEntropy","entropyPerWord","EEFLongWordList","hashArr","entropyAvailable","phrase","hashNumber","fromArray","remainder","divide","encKeyEnc","environmentUrls_1","notificationsService","setUrlsFromStorage","urlsObj","icons","notifications","webVault","enterprise","envUrls","EnvironmentUrls","apiUrl","identityUrl","notificationsUrl","eventsUrl","formatUrl","folderData_1","folder_1","folderRequest_1","decryptedFolderCache","Folder","decFolders","noneFolder","folderCopy","FolderData","cId","updates","systemLanguage","localesDirectory","getLocalesJson","defaultMessages","localeMessages","translationLocale","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","zxcvbn","generatedPasswordHistory_1","passwordGeneratorPolicyOptions_1","DefaultOptions","ambiguous","minUppercase","minLowercase","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","optionsCache","enforcePasswordGeneratorPoliciesOnOptions","enforcedOptions","getPasswordGeneratorPolicyOptions","numberCount","specialCount","PasswordGeneratorPolicyOptions","currentPolicy","getHistory","encrypted","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","now","encryptHistory","newHistory","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","decrypted","array","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","settingsCache","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","settings","purge","organizationData_1","syncInProgress","getLastSync","lastSync","setLastSync","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","syncDeleteCipher","getSecurityStamp","stamp","setSecurityStamp","OrganizationData","replaceOrganizations","setToken","setRefreshToken","skipTokenStorage","toggleTokens","clearToken","decoded","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","valueOf","minutes","email_verified","getIssuer","iss","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","organization_1","clearOrganizations","lockedCallback","loggedOutCallback","checkOnInterval","checkVaultTimeout","isBiometricLockSet","isViewOpen","lockTimeout","lastActive","vaultTimeoutSeconds","allowSoftLock","isPinLockSet","CipherWithIds","build","CollectionWithId","FolderWithId","NotificationType","enableProdMode","__NgCli_bootstrap_2","platformBrowser","bootstrapModule","__NgCli_bootstrap_1","AppModule","preserveWhitespaces","angular2_toaster_1","angulartics2_1","ngx_infinite_scroll_1","app_routing_module_1","drag_drop_1","platform_browser_1","animations_1","services_module_1","app_component_1","avatar_component_1","password_strength_component_1","footer_component_1","frontend_layout_component_1","navbar_component_1","organization_layout_component_1","user_layout_component_1","accept_organization_component_1","recover_delete_component_1","recover_two_factor_component_1","verify_email_token_component_1","verify_recover_delete_component_1","events_component_1","groups_component_1","manage_component_1","people_component_1","policies_component_1","account_component_1","adjust_seats_component_1","change_plan_component_1","download_license_component_1","organization_billing_component_1","organization_subscription_component_1","settings_component_1","tools_component_1","collections_component_2","vault_component_1","access_component_1","send_component_1","account_component_2","add_credit_component_1","adjust_payment_component_1","adjust_storage_component_1","change_email_component_1","change_kdf_component_1","create_organization_component_1","domain_rules_component_1","link_sso_component_1","options_component_1","premium_component_1","profile_component_1","settings_component_2","two_factor_setup_component_2","two_factor_verify_component_1","update_license_component_1","user_subscription_component_1","verify_email_component_1","breach_report_component_1","export_component_2","exposed_passwords_report_component_2","import_component_2","inactive_two_factor_report_component_2","reused_passwords_report_component_2","tools_component_2","unsecured_websites_report_component_2","weak_passwords_report_component_2","add_edit_component_3","attachments_component_2","bulk_actions_component_1","ciphers_component_2","collections_component_3","groupings_component_2","vault_component_2","callout_component_1","icon_component_1","a11y_title_directive_1","api_action_directive_1","autofocus_directive_1","blur_click_directive_1","box_row_directive_1","fallback_src_directive_1","input_verbatim_directive_1","select_copy_directive_1","stop_click_directive_1","stop_prop_directive_1","true_false_value_directive_1","color_password_pipe_1","i18n_pipe_1","search_ciphers_pipe_1","search_pipe_1","common_1","ca_1","cs_1","da_1","de_1","el_1","en_GB_1","es_1","et_1","fr_1","he_1","it_1","ja_1","ko_1","lv_1","ml_1","nb_1","nl_1","pl_1","pt_1","pt_PT_1","ru_1","sk_1","sv_1","uk_1","zh_Hans_1","zh_Hant_1","registerLocaleData","bootstrap","AppComponent","imports","BrowserModule","BrowserAnimationsModule","FormsModule","AppRoutingModule","ServicesModule","Angulartics2Module","forRoot","pageTracking","clearQueryParams","ToasterModule","InfiniteScrollModule","DragDropModule","declarations","BlurClickDirective","BoxRowDirective","SearchCiphersPipe","organization_guard_service_1","organization_type_guard_service_1","unauth_guard_service_1","auth_guard_service_1","routes","pathMatch","redirectTo","RouterModule","useHash","subscribers","messageCallback","passwordHintRequest_1","PasswordHintRequest","pinLock","invalidPinAttempts","pinSet","supportsBiometric","biometricLock","vaultUrl","failed","decPin","setKeyAndContinue","passwordValid","storedKeyHash","unlockBiometric","authenticateBiometric","doContinue","launchSsoBrowser","ssoRedirectUri","ssoCodeVerifier","webUrl","registerRequest_1","useLowerKdf","isIE","RegisterRequest","orgInvite","confirmField","setPasswordRequest_1","SetPasswordRequest","orgIdentifier","onSuccessfulChangePassword","Window","backdrop","className","addEventListener","modals_1","DuoWebSDK","u2f_1","initU2f","loginRoute","authing","needsLock","customWebVaultUrl","info","cleanupU2f","providerData","Challenge","challenges","Challenges","keyHandle","iframe","sig_request","Signature","submit_callback","sig","stop","doToast","cleanup","getDeviceString","pushToken","codes","client_secret","code_verifier","redirect_uri","deviceIdentifier","deviceName","twoFactorRemember","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","base64Encode","sendMessage","contentWindow","postMessage","removeEventListener","validMessage","onSaved","downloadFile","getExport","csv","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","currentDate","myEmail","addEditCipherInfo","previousCipherId","editCollections","restorePromise","restoreCipher","toggleUriOptions","moveItemInArray","previousIndex","currentIndex","hasUpdatedKey","canAccessAttachments","foundAttachment","a2","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","pagedCiphersCount","deletedFilter","searchCiphers","rightClickCipher","addCipherOptions","selectedCollectionIds","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","setLoaded","collapsedGroupings","idPrefix","sendAccessView_1","SendAccessView","showSelect","onSelected","optionsResponse","sliderChanged","sliderInput","copyOptions","toggleOptions","cipherView","broadcasterMessaging_service_1","htmlStorage_service_1","memoryStorage_service_1","webPlatformUtils_service_1","event_service_1","router_service_1","validation_service_1","analytics_1","container_service_1","event_service_2","export_service_1","import_service_1","notifications_service_1","policy_service_1","send_service_1","webCryptoFunction_service_1","api_service_2","audit_service_2","auth_service_2","cipher_service_2","collection_service_2","crypto_service_2","cryptoFunction_service_1","environment_service_2","event_service_3","export_service_2","folder_service_2","i18n_service_2","import_service_2","notifications_service_2","passwordGeneration_service_2","policy_service_2","search_service_2","send_service_2","settings_service_2","state_service_2","sync_service_2","token_service_2","totp_service_2","user_service_2","vaultTimeout_service_2","language","BroadcasterMessagingService","WebPlatformUtilsService","HtmlStorageService","MemoryStorageService","WebCryptoFunctionService","__generator","eventLoggingService","Analytics","initFactory","htmlEl","documentElement","theme","useValue","APP_INITIALIZER","useFactory","deps","LOCALE_ID","subscriber","arg","services_1","localStorageKeys","localStorageStartsWithKeys","memoryStorageStartsWithKeys","memoryStorage","isLocalStorage","localStorage","getItem","isMemoryStorage","sessionStorage","setItem","removeItem","swKey","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","partiallyRefunded","refundedAmount","isActive","isVerified","modifiedDate","access_token","expiresIn","expires_in","tokenType","token_type","OrganizationUserResponse","userProfile","taxIdType","KeyResponse","limit","throttleKey","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","comparator","sortedCiphersByUrl","timeouts","Ciphers","resetTimer","lastUsedIndex","y","getNextIndex","filePath","store","sweetalert2_js_1","browserCache","chrome","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isSafari","isMacAppStore","analyticsId","rel","click","blobData","blobOptions","fileNameLower","doDownload","endsWith","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","confirmText","cancelText","iconClasses","iconHtmlStr","fire","heightAuto","buttonsStyling","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","clipboardData","setData","queryCommandSupported","textarea","copyEl","contains","execCommand","readFromClipboard","GaObj","AnalyticsIds","gaFilter","dependencyResolver","gaTrackingId","defaultDisabled","appVersion","GoogleAnalyticsObject","param1","param2","ga","gaAnonAppId","gaTrackPageView","hitType","page","gaTrackEvent","XMLHttpRequest","eventCategory","eventAction","eventLabel","eventValue","cleanPagePath","pagePath","paramIndex","pathParts","newPathParts","eventData_1","eventRequest_1","uploadEvents","eventType","uploadImmediately","orgIds","eventCollection","EventData","EventRequest","clearEvents","cipherWithIds_1","collectionWithId_1","folderWithId_1","foldersMap_1","exportCiphers_1","buildCommonCipher","unparse","jsonDoc_1","collectionPromises","decCol","cipherPromises","decCipher","collectionsMap_1","exportCiphers_2","jsonDoc_2","extension","padNumber","getSeconds","padCharacter","numString","login_uri","login_username","login_password","login_totp","toView","importCiphersRequest_1","importOrganizationCiphersRequest_1","kvpRequest_1","ascendoCsvImporter_1","avastCsvImporter_1","avastJsonImporter_1","aviraCsvImporter_1","bitwardenCsvImporter_1","bitwardenJsonImporter_1","blackBerryCsvImporter_1","blurCsvImporter_1","buttercupCsvImporter_1","chromeCsvImporter_1","clipperzHtmlImporter_1","codebookCsvImporter_1","dashlaneJsonImporter_1","encryptrCsvImporter_1","enpassCsvImporter_1","enpassJsonImporter_1","firefoxCsvImporter_1","fsecureFskImporter_1","gnomeJsonImporter_1","kasperskyTxtImporter_1","keepass2XmlImporter_1","keepassxCsvImporter_1","keeperCsvImporter_1","lastpassCsvImporter_1","logMeOnceCsvImporter_1","meldiumCsvImporter_1","msecureCsvImporter_1","mykiCsvImporter_1","onepassword1PifImporter_1","onepasswordWinCsvImporter_1","padlockCsvImporter_1","passkeepCsvImporter_1","passmanJsonImporter_1","passpackCsvImporter_1","passwordAgentCsvImporter_1","passwordBossJsonImporter_1","passwordDragonXmlImporter_1","passwordSafeXmlImporter_1","passwordWalletTxtImporter_1","rememBearCsvImporter_1","roboformCsvImporter_1","safeInCloudXmlImporter_1","saferpassCsvImport_1","secureSafeCsvImporter_1","splashIdCsvImporter_1","stickyPasswordXmlImporter_1","truekeyCsvImporter_1","upmCsvImporter_1","yotiCsvImporter_1","zohoVaultCsvImporter_1","getImportOptions","importResult","halfway","last","badData","postImport","getImporterInstance","BitwardenCsvImporter","BitwardenJsonImporter","LastPassCsvImporter","KeePassXCsvImporter","AviraCsvImporter","BlurCsvImporter","SafeInCloudXmlImporter","PadlockCsvImporter","KeePass2XmlImporter","ChromeCsvImporter","FirefoxCsvImporter","UpmCsvImporter","SaferPassCsvImporter","MeldiumCsvImporter","OnePassword1PifImporter","OnePasswordWinCsvImporter","KeeperCsvImporter","PasswordDragonXmlImporter","EnpassCsvImporter","EnpassJsonImporter","PasswordSafeXmlImporter","DashlaneJsonImporter","MSecureCsvImporter","StickyPasswordXmlImporter","TrueKeyCsvImporter","ClipperzHtmlImporter","RoboFormCsvImporter","AscendoCsvImporter","PasswordBossJsonImporter","ZohoVaultCsvImporter","SplashIdCsvImporter","PassKeepCsvImporter","GnomeJsonImporter","PasswordAgentCsvImporter","PasspackCsvImporter","PassmanJsonImporter","AvastCsvImporter","AvastJsonImporter","FSecureFskImporter","KasperskyTxtImporter","RememBearCsvImporter","PasswordWalletTxtImporter","MykiCsvImporter","SecureSafeCsvImporter","LogMeOnceCsvImporter","BlackBerryCsvImporter","ButtercupCsvImporter","CodebookCsvImporter","EncryptrCsvImporter","YotiCsvImporter","ImportCiphersRequest","KvpRequest","request_2","ImportOrganizationCiphersRequest","baseImporter_1","importResult_1","fieldLower","web","logins","custName","note","pwd","loginName","cards","holderName","cardNumber","cvv","website","secondary_username","col","addCollection","collectionIndex","delimPosition","groupingsMap","fav","extra","OfficialProps","processingCustomFields","entry","currentVersion","actionType","labelLower","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","Account","HandledResults","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","fullName","nameParts","pseudo","addressName","addressFull","zipcode","owner","nameProperty","Label","Notes","CVV","expiry","Expiry","expParts","firstRow","containsField","fieldValue","fieldName","fieldNameLower","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","sensitive","uuid","parent_uuid","titlePrefix","tree","creditNumber","creditCvv","creditExpiry","keyRing","display_name","secret","attributes","attr","username_value","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","nameKey","itemComment","itemCommentKey","colonIndex","rootGroup","traverse","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","Group","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","zip","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","Number","Name on Card","Security Code","Expiration Date","monthString","First Name","Last Name","Middle Name","Company","Address 1","Address 2","Address 3","City / Town","State","Zip / Postal Code","Country","Email Address","processingNotes","extraPart","DisplayName","UserName","Url","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","line","trashed","processStandardItem","processWinOpVaultItem","overview","URLs","urls_1","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","secureContents","urls_2","maxSize","time","designationKey","valueKey","fieldDesignation","street","view_1","IgnoredProperties","getProp","altUsername","lowerProp","View","tags","tag","getValue","custom_fields","customField","field_type","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","newVersion","altFormat","login_url","identifiers","valObj","expDate","cf","records","record","categoryText","accountName","tagName","passwordSafe","notesDelimiter","getAttribute","entries","groupText","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","Name","Pwd","Rf_fields","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","Comment","parseFieldsToNotes","startIndex","loginNodes","loginNode","accountId","usernameText","passwordText","titleText","linkText","notesText","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","memo","kind","expiryDate","document_content","ChamberName","parseData","SecretData","CustomData","signalR","signalRMsgPack","notificationType_1","notificationResponse_1","connected","inactive","reconnectTimer","signalrConnection","off","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","MessagePackHubProtocol","processNotification","NotificationResponse","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","contextId","payloadUserId","UserId","myUserId","SyncCipherCreate","SyncCipherUpdate","SyncCipherDelete","SyncLoginDelete","SyncFolderCreate","SyncFolderUpdate","SyncFolderDelete","SyncVault","SyncCiphers","SyncSettings","SyncOrgKeys","LogOut","SyncCipherNotification","SyncFolderNotification","UserNotification","masterPasswordPolicyOptions_1","policyCache","MasterPasswordPolicyOptions","newPassword","toLocaleLowerCase","toLocaleUpperCase","lunr","indexing","builder","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","timeEnd","isArray","every","getIndexForSearch","ciphersMap","searchResults","soWild_1","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","sendRequest_1","decryptedSendCache","fileData","parseFile","decSends","SendRequest","forge","decryptParameters_1","crypto","subtle","ua","isOldSafari","algorithm","iterations","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","wcLen","passwordBuf","toBuf","saltBuf","pbkdf2Params","toWebCryptoAlgorithm","importKey","impKey","deriveBits","ikm","outputByteSize","infoBuf","hkdfParams","prk","hashLen","infoArr","runningOkmLength","previousT","okm","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","exportKey","jwkPrivateKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","angulartics2GoogleAnalytics","toasterConfig","ToasterConfig","showCloseButton","mouseoverTimerStop","animation","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","message_1","sanitize","SecurityContext","HTML","bodyOutputType","BodyOutputType","TrustedHtml","trustedHtml","Angulartics2GoogleAnalytics","i14","i15","i16","i17","i18","i19","i20","i21","i22","i23","i24","i25","i26","blur","elRef","formEls","formEl","inputEl"],"mappings":"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","file":"app/main.7a3cbd0aa238df7f4d4f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([722,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export abstract class I18nService {\r\n    locale: string;\r\n    supportedTranslationLocales: string[];\r\n    translationLocale: string;\r\n    collator: Intl.Collator;\r\n    localeNames: Map<string, string>;\r\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\r\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\r\n}\r\n","import { DeviceType } from '../enums/deviceType';\r\n\r\nexport abstract class PlatformUtilsService {\r\n    identityClientId: string;\r\n    getDevice: () => DeviceType;\r\n    getDeviceString: () => string;\r\n    isFirefox: () => boolean;\r\n    isChrome: () => boolean;\r\n    isEdge: () => boolean;\r\n    isOpera: () => boolean;\r\n    isVivaldi: () => boolean;\r\n    isSafari: () => boolean;\r\n    isIE: () => boolean;\r\n    isMacAppStore: () => boolean;\r\n    analyticsId: () => string;\r\n    isViewOpen: () => Promise<boolean>;\r\n    /**\r\n     * @deprecated This only ever returns null. Pull from your platform's storage using ConstantsService.vaultTimeoutKey\r\n     */\r\n    lockTimeout: () => number;\r\n    launchUri: (uri: string, options?: any) => void;\r\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\r\n    getApplicationVersion: () => string;\r\n    supportsU2f: (win: Window) => boolean;\r\n    supportsDuo: () => boolean;\r\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\r\n        options?: any) => void;\r\n    showDialog: (text: string, title?: string, confirmText?: string, cancelText?: string,\r\n        type?: string) => Promise<boolean>;\r\n    eventTrack: (action: string, label?: string, options?: any) => void;\r\n    isDev: () => boolean;\r\n    isSelfHost: () => boolean;\r\n    copyToClipboard: (text: string, options?: any) => void;\r\n    readFromClipboard: (options?: any) => Promise<string>;\r\n    supportsBiometric: () => Promise<boolean>;\r\n    authenticateBiometric: () => Promise<boolean>;\r\n    supportsSecureStorage: () => boolean;\r\n}\r\n","import { PolicyType } from '../enums/policyType';\r\n\r\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\r\n\r\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\r\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\r\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\r\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\r\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\r\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\r\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\r\nimport { CipherRequest } from '../models/request/cipherRequest';\r\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\r\nimport { CollectionRequest } from '../models/request/collectionRequest';\r\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\r\nimport { EmailRequest } from '../models/request/emailRequest';\r\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\r\nimport { EventRequest } from '../models/request/eventRequest';\r\nimport { FolderRequest } from '../models/request/folderRequest';\r\nimport { GroupRequest } from '../models/request/groupRequest';\r\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\r\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\r\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\r\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\r\nimport { KdfRequest } from '../models/request/kdfRequest';\r\nimport { KeysRequest } from '../models/request/keysRequest';\r\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\r\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\r\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\r\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\r\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\r\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\r\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\r\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\r\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\r\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\r\nimport { PasswordRequest } from '../models/request/passwordRequest';\r\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\r\nimport { PaymentRequest } from '../models/request/paymentRequest';\r\nimport { PolicyRequest } from '../models/request/policyRequest';\r\nimport { PreloginRequest } from '../models/request/preloginRequest';\r\nimport { RegisterRequest } from '../models/request/registerRequest';\r\nimport { SeatRequest } from '../models/request/seatRequest';\r\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\r\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\r\nimport { SendRequest } from '../models/request/sendRequest';\r\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\r\nimport { StorageRequest } from '../models/request/storageRequest';\r\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\r\nimport { TokenRequest } from '../models/request/tokenRequest';\r\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\r\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\r\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\r\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\r\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\r\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\r\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\r\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\r\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\r\nimport { UpdateTwoFactorU2fDeleteRequest } from '../models/request/updateTwoFactorU2fDeleteRequest';\r\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\r\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\r\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\r\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\r\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\r\n\r\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\r\nimport { BillingResponse } from '../models/response/billingResponse';\r\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\r\nimport { CipherResponse } from '../models/response/cipherResponse';\r\nimport {\r\n    CollectionGroupDetailsResponse,\r\n    CollectionResponse,\r\n} from '../models/response/collectionResponse';\r\nimport { DomainsResponse } from '../models/response/domainsResponse';\r\nimport { EventResponse } from '../models/response/eventResponse';\r\nimport { FolderResponse } from '../models/response/folderResponse';\r\nimport {\r\n    GroupDetailsResponse,\r\n    GroupResponse,\r\n} from '../models/response/groupResponse';\r\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\r\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\r\nimport { ListResponse } from '../models/response/listResponse';\r\nimport { OrganizationResponse } from '../models/response/organizationResponse';\r\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\r\nimport {\r\n    OrganizationUserDetailsResponse,\r\n    OrganizationUserUserDetailsResponse,\r\n} from '../models/response/organizationUserResponse';\r\nimport { PaymentResponse } from '../models/response/paymentResponse';\r\nimport { PlanResponse } from '../models/response/planResponse';\r\nimport { PolicyResponse } from '../models/response/policyResponse';\r\nimport { PreloginResponse } from '../models/response/preloginResponse';\r\nimport { ProfileResponse } from '../models/response/profileResponse';\r\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\r\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\r\nimport { SendResponse } from '../models/response/sendResponse';\r\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\r\nimport { SyncResponse } from '../models/response/syncResponse';\r\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\r\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\r\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\r\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\r\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\r\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\r\nimport {\r\n    ChallengeResponse,\r\n    TwoFactorU2fResponse,\r\n} from '../models/response/twoFactorU2fResponse';\r\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\r\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\r\n\r\nexport abstract class ApiService {\r\n    urlsSet: boolean;\r\n    apiBaseUrl: string;\r\n    identityBaseUrl: string;\r\n    eventsBaseUrl: string;\r\n\r\n    setUrls: (urls: EnvironmentUrls) => void;\r\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse>;\r\n    refreshIdentityToken: () => Promise<any>;\r\n\r\n    getProfile: () => Promise<ProfileResponse>;\r\n    getUserBilling: () => Promise<BillingResponse>;\r\n    getUserSubscription: () => Promise<SubscriptionResponse>;\r\n    getTaxInfo: () => Promise<TaxInfoResponse>;\r\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\r\n    putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\r\n    postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\r\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\r\n    postEmail: (request: EmailRequest) => Promise<any>;\r\n    postPassword: (request: PasswordRequest) => Promise<any>;\r\n    setPassword: (request: SetPasswordRequest) => Promise<any>;\r\n    postSecurityStamp: (request: PasswordVerificationRequest) => Promise<any>;\r\n    deleteAccount: (request: PasswordVerificationRequest) => Promise<any>;\r\n    getAccountRevisionDate: () => Promise<number>;\r\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\r\n    postRegister: (request: RegisterRequest) => Promise<any>;\r\n    postPremium: (data: FormData) => Promise<PaymentResponse>;\r\n    postIapCheck: (request: IapCheckRequest) => Promise<any>;\r\n    postReinstatePremium: () => Promise<any>;\r\n    postCancelPremium: () => Promise<any>;\r\n    postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\r\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\r\n    postAccountLicense: (data: FormData) => Promise<any>;\r\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\r\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\r\n    postAccountVerifyEmail: () => Promise<any>;\r\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\r\n    postAccountVerifyPassword: (request: PasswordVerificationRequest) => Promise<any>;\r\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\r\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\r\n    postAccountKdf: (request: KdfRequest) => Promise<any>;\r\n    getEnterprisePortalSignInToken: () => Promise<string>;\r\n    postUserApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\r\n    postUserRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\r\n\r\n    getFolder: (id: string) => Promise<FolderResponse>;\r\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\r\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\r\n    deleteFolder: (id: string) => Promise<any>;\r\n\r\n    getSend: (id: string) => Promise<SendResponse>;\r\n    postSendAccess: (id: string, request: SendAccessRequest) => Promise<SendAccessResponse>;\r\n    getSends: () => Promise<ListResponse<SendResponse>>;\r\n    postSend: (request: SendRequest) => Promise<SendResponse>;\r\n    postSendFile: (data: FormData) => Promise<SendResponse>;\r\n    putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\r\n    putSendRemovePassword: (id: string) => Promise<SendResponse>;\r\n    deleteSend: (id: string) => Promise<any>;\r\n\r\n    getCipher: (id: string) => Promise<CipherResponse>;\r\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\r\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\r\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\r\n    postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\r\n    postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\r\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\r\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\r\n    deleteCipher: (id: string) => Promise<any>;\r\n    deleteCipherAdmin: (id: string) => Promise<any>;\r\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\r\n    deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\r\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\r\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\r\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\r\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\r\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\r\n    postPurgeCiphers: (request: PasswordVerificationRequest, organizationId?: string) => Promise<any>;\r\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\r\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\r\n    putDeleteCipher: (id: string) => Promise<any>;\r\n    putDeleteCipherAdmin: (id: string) => Promise<any>;\r\n    putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\r\n    putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\r\n    putRestoreCipher: (id: string) => Promise<any>;\r\n    putRestoreCipherAdmin: (id: string) => Promise<any>;\r\n    putRestoreManyCiphers: (request: CipherBulkRestoreRequest) => Promise<any>;\r\n\r\n    postCipherAttachment: (id: string, data: FormData) => Promise<CipherResponse>;\r\n    postCipherAttachmentAdmin: (id: string, data: FormData) => Promise<CipherResponse>;\r\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\r\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\r\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\r\n        organizationId: string) => Promise<any>;\r\n\r\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\r\n    getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\r\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\r\n    getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\r\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\r\n    putCollectionUsers: (organizationId: string, id: string, request: SelectionReadOnlyRequest[]) => Promise<any>;\r\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\r\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\r\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\r\n\r\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\r\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\r\n    getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\r\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\r\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\r\n    putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\r\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\r\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\r\n\r\n    getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\r\n    getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\r\n    getPoliciesByToken: (organizationId: string, token: string, email: string, organizationUserId: string) =>\r\n        Promise<ListResponse<PolicyResponse>>;\r\n    putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<PolicyResponse>;\r\n\r\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\r\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\r\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\r\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\r\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\r\n    postOrganizationUserAccept: (organizationId: string, id: string,\r\n        request: OrganizationUserAcceptRequest) => Promise<any>;\r\n    postOrganizationUserConfirm: (organizationId: string, id: string,\r\n        request: OrganizationUserConfirmRequest) => Promise<any>;\r\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\r\n    putOrganizationUserGroups: (organizationId: string, id: string,\r\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\r\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\r\n\r\n    getSync: () => Promise<SyncResponse>;\r\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\r\n\r\n    getSettingsDomains: () => Promise<DomainsResponse>;\r\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\r\n\r\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\r\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\r\n    getTwoFactorAuthenticator: (request: PasswordVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\r\n    getTwoFactorEmail: (request: PasswordVerificationRequest) => Promise<TwoFactorEmailResponse>;\r\n    getTwoFactorDuo: (request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\r\n    getTwoFactorOrganizationDuo: (organizationId: string,\r\n        request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\r\n    getTwoFactorYubiKey: (request: PasswordVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\r\n    getTwoFactorU2f: (request: PasswordVerificationRequest) => Promise<TwoFactorU2fResponse>;\r\n    getTwoFactorU2fChallenge: (request: PasswordVerificationRequest) => Promise<ChallengeResponse>;\r\n    getTwoFactorRecover: (request: PasswordVerificationRequest) => Promise<TwoFactorRecoverResponse>;\r\n    putTwoFactorAuthenticator: (\r\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\r\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\r\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\r\n    putTwoFactorOrganizationDuo: (organizationId: string,\r\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\r\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\r\n    putTwoFactorU2f: (request: UpdateTwoFactorU2fRequest) => Promise<TwoFactorU2fResponse>;\r\n    deleteTwoFactorU2f: (request: UpdateTwoFactorU2fDeleteRequest) => Promise<TwoFactorU2fResponse>;\r\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\r\n    putTwoFactorOrganizationDisable: (organizationId: string,\r\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\r\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\r\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\r\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\r\n\r\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\r\n    getOrganizationBilling: (id: string) => Promise<BillingResponse>;\r\n    getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\r\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\r\n    getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\r\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\r\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\r\n    putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\r\n    postLeaveOrganization: (id: string) => Promise<any>;\r\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\r\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\r\n    postOrganizationApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\r\n    postOrganizationRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\r\n    postOrganizationUpgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\r\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\r\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\r\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\r\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\r\n    postOrganizationCancel: (id: string) => Promise<any>;\r\n    postOrganizationReinstate: (id: string) => Promise<any>;\r\n    deleteOrganization: (id: string, request: PasswordVerificationRequest) => Promise<any>;\r\n    getPlans: () => Promise<ListResponse<PlanResponse>>;\r\n\r\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\r\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\r\n    getEventsOrganization: (id: string, start: string, end: string,\r\n        token: string) => Promise<ListResponse<EventResponse>>;\r\n    getEventsOrganizationUser: (organizationId: string, id: string,\r\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\r\n    postEventsCollect: (request: EventRequest[]) => Promise<any>;\r\n\r\n    deleteSsoUser: (organizationId: string) => Promise<any>;\r\n    getSsoUserIdentifier: () => Promise<string>;\r\n\r\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\r\n\r\n    getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\r\n\r\n    postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\r\n    postSetupPayment: () => Promise<string>;\r\n\r\n    getActiveBearerToken: () => Promise<string>;\r\n    fetch: (request: Request) => Promise<Response>;\r\n    nativeFetch: (request: Request) => Promise<Response>;\r\n\r\n    preValidateSso: (identifier: string) => Promise<boolean>;\r\n}\r\n","import { OrganizationData } from '../models/data/organizationData';\r\nimport { Organization } from '../models/domain/organization';\r\n\r\nimport { KdfType } from '../enums/kdfType';\r\n\r\nexport abstract class UserService {\r\n    setInformation: (userId: string, email: string, kdf: KdfType, kdfIterations: number) => Promise<any>;\r\n    setSecurityStamp: (stamp: string) => Promise<any>;\r\n    getUserId: () => Promise<string>;\r\n    getEmail: () => Promise<string>;\r\n    getSecurityStamp: () => Promise<string>;\r\n    getKdf: () => Promise<KdfType>;\r\n    getKdfIterations: () => Promise<number>;\r\n    clear: () => Promise<any>;\r\n    isAuthenticated: () => Promise<boolean>;\r\n    canAccessPremium: () => Promise<boolean>;\r\n    getOrganization: (id: string) => Promise<Organization>;\r\n    getAllOrganizations: () => Promise<Organization[]>;\r\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\r\n    clearOrganizations: (userId: string) => Promise<any>;\r\n}\r\n","import {\r\n    Pipe,\r\n    PipeTransform,\r\n} from '@angular/core';\r\n\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\n\r\n@Pipe({\r\n    name: 'i18n',\r\n})\r\nexport class I18nPipe implements PipeTransform {\r\n    constructor(private i18nService: I18nService) { }\r\n\r\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\r\n        return this.i18nService.t(id, p1, p2, p3);\r\n    }\r\n}\r\n","export abstract class MessagingService {\r\n    send: (subscriber: string, arg?: any) => void;\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    Input,\r\n    OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { ValidationService } from '../services/validation.service';\r\n\r\n@Directive({\r\n    selector: '[appApiAction]',\r\n})\r\nexport class ApiActionDirective implements OnChanges {\r\n    @Input() appApiAction: Promise<any>;\r\n\r\n    constructor(private el: ElementRef, private validationService: ValidationService) { }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (this.appApiAction == null || this.appApiAction.then == null) {\r\n            return;\r\n        }\r\n\r\n        this.el.nativeElement.loading = true;\r\n\r\n        this.appApiAction.then((response: any) => {\r\n            this.el.nativeElement.loading = false;\r\n        }, (e: any) => {\r\n            this.el.nativeElement.loading = false;\r\n            this.validationService.showError(e);\r\n        });\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    Input,\r\n    Renderer2,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appA11yTitle]',\r\n})\r\nexport class A11yTitleDirective {\r\n    @Input() set appA11yTitle(title: string) {\r\n        this.title = title;\r\n    }\r\n\r\n    private title: string;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\r\n\r\n    ngOnInit() {\r\n        if (!this.el.nativeElement.hasAttribute('title')) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'title', this.title);\r\n        }\r\n        if (!this.el.nativeElement.hasAttribute('aria-label')) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'aria-label', this.title);\r\n        }\r\n    }\r\n}\r\n","import { CipherType } from '../enums/cipherType';\r\nimport { UriMatchType } from '../enums/uriMatchType';\r\n\r\nimport { CipherData } from '../models/data/cipherData';\r\n\r\nimport { Cipher } from '../models/domain/cipher';\r\nimport { Field } from '../models/domain/field';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { FieldView } from '../models/view/fieldView';\r\n\r\nexport abstract class CipherService {\r\n    decryptedCipherCache: CipherView[];\r\n\r\n    clearCache: () => void;\r\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey, originalCipher?: Cipher) => Promise<Cipher>;\r\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\r\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\r\n    get: (id: string) => Promise<Cipher>;\r\n    getAll: () => Promise<Cipher[]>;\r\n    getAllDecrypted: () => Promise<CipherView[]>;\r\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\r\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[],\r\n        defaultMatch?: UriMatchType) => Promise<CipherView[]>;\r\n    getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\r\n    getLastUsedForUrl: (url: string) => Promise<CipherView>;\r\n    getLastLaunchedForUrl: (url: string) => Promise<CipherView>;\r\n    getNextCipherForUrl: (url: string) => Promise<CipherView>;\r\n    updateLastUsedIndexForUrl: (url: string) => void;\r\n    updateLastUsedDate: (id: string) => Promise<void>;\r\n    updateLastLaunchedDate: (id: string) => Promise<void>;\r\n    saveNeverDomain: (domain: string) => Promise<void>;\r\n    saveWithServer: (cipher: Cipher) => Promise<any>;\r\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\r\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\r\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\r\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\r\n        admin?: boolean) => Promise<Cipher>;\r\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\r\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\r\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\r\n    clear: (userId: string) => Promise<any>;\r\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\r\n    delete: (id: string | string[]) => Promise<any>;\r\n    deleteWithServer: (id: string) => Promise<any>;\r\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\r\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\r\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\r\n    sortCiphersByLastUsed: (a: any, b: any) => number;\r\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\r\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\r\n    softDelete: (id: string | string[]) => Promise<any>;\r\n    softDeleteWithServer: (id: string) => Promise<any>;\r\n    softDeleteManyWithServer: (ids: string[]) => Promise<any>;\r\n    restore: (id: string | string[]) => Promise<any>;\r\n    restoreWithServer: (id: string) => Promise<any>;\r\n    restoreManyWithServer: (ids: string[]) => Promise<any>;\r\n}\r\n","import { CipherString } from '../models/domain/cipherString';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\r\n\r\nimport { KdfType } from '../enums/kdfType';\r\n\r\nexport abstract class CryptoService {\r\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\r\n    setKeyHash: (keyHash: string) => Promise<{}>;\r\n    setEncKey: (encKey: string) => Promise<{}>;\r\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\r\n    setOrgKeys: (orgs: ProfileOrganizationResponse[]) => Promise<{}>;\r\n    getKey: () => Promise<SymmetricCryptoKey>;\r\n    getKeyHash: () => Promise<string>;\r\n    getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\r\n    getPublicKey: () => Promise<ArrayBuffer>;\r\n    getPrivateKey: () => Promise<ArrayBuffer>;\r\n    getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\r\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\r\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\r\n    hasKey: () => Promise<boolean>;\r\n    hasEncKey: () => Promise<boolean>;\r\n    clearKey: () => Promise<any>;\r\n    clearKeyHash: () => Promise<any>;\r\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\r\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\r\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\r\n    clearPinProtectedKey: () => Promise<any>;\r\n    clearKeys: () => Promise<any>;\r\n    toggleKey: () => Promise<any>;\r\n    makeKey: (password: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\r\n    makeKeyFromPin: (pin: string, salt: string, kdf: KdfType, kdfIterations: number,\r\n        protectedKeyCs?: CipherString) => Promise<SymmetricCryptoKey>;\r\n    makeShareKey: () => Promise<[CipherString, SymmetricCryptoKey]>;\r\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, CipherString]>;\r\n    makePinKey: (pin: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\r\n    makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\r\n    hashPassword: (password: string, key: SymmetricCryptoKey) => Promise<string>;\r\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, CipherString]>;\r\n    remakeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, CipherString]>;\r\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<CipherString>;\r\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\r\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<CipherString>;\r\n    decryptToBytes: (cipherString: CipherString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\r\n    decryptToUtf8: (cipherString: CipherString, key?: SymmetricCryptoKey) => Promise<string>;\r\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\r\n    randomNumber: (min: number, max: number) => Promise<number>;\r\n}\r\n","import * as papa from 'papaparse';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { CollectionView } from '../models/view/collectionView';\r\nimport { LoginUriView } from '../models/view/loginUriView';\r\n\r\nimport { Utils } from '../misc/utils';\r\n\r\nimport { FieldView } from '../models/view/fieldView';\r\nimport { FolderView } from '../models/view/folderView';\r\nimport { LoginView } from '../models/view/loginView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { FieldType } from '../enums/fieldType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nexport abstract class BaseImporter {\r\n    organization = false;\r\n\r\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\r\n\r\n    protected passwordFieldNames = [\r\n        'password', 'pass word', 'passphrase', 'pass phrase',\r\n        'pass', 'code', 'code word', 'codeword',\r\n        'secret', 'secret word', 'personpwd',\r\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\r\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\r\n        'p', 'serial', 'serial#', 'license key', 'reg #',\r\n\r\n        // Non-English names\r\n        'passwort',\r\n    ];\r\n\r\n    protected usernameFieldNames = [\r\n        'user', 'name', 'user name', 'username', 'login name',\r\n        'email', 'e-mail', 'id', 'userid', 'user id',\r\n        'login', 'form_loginname', 'wpname', 'mail',\r\n        'loginid', 'login id', 'log', 'personlogin',\r\n        'first name', 'last name', 'card#', 'account #',\r\n        'member', 'member #',\r\n\r\n        // Non-English names\r\n        'nom', 'benutzername',\r\n    ];\r\n\r\n    protected notesFieldNames = [\r\n        'note', 'notes', 'comment', 'comments', 'memo',\r\n        'description', 'free form', 'freeform',\r\n        'free text', 'freetext', 'free',\r\n\r\n        // Non-English names\r\n        'kommentar',\r\n    ];\r\n\r\n    protected uriFieldNames: string[] = [\r\n        'url', 'hyper link', 'hyperlink', 'link',\r\n        'host', 'hostname', 'host name', 'server', 'address',\r\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\r\n        'web-site', 'uri',\r\n\r\n        // Non-English names\r\n        'ort', 'adresse',\r\n    ];\r\n\r\n    protected parseXml(data: string): Document {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(data, 'application/xml');\r\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\r\n    }\r\n\r\n    protected parseCsv(data: string, header: boolean): any[] {\r\n        data = this.splitNewLine(data).join('\\n').trim();\r\n        const result = papa.parse(data, {\r\n            header: header,\r\n            encoding: 'UTF-8',\r\n            skipEmptyLines: false,\r\n        });\r\n        if (result.errors != null && result.errors.length > 0) {\r\n            result.errors.forEach((e) => {\r\n                if (e.row != null) {\r\n                    // tslint:disable-next-line\r\n                    console.warn('Error parsing row ' + e.row + ': ' + e.message);\r\n                }\r\n            });\r\n        }\r\n        return result.data && result.data.length > 0 ? result.data : null;\r\n    }\r\n\r\n    protected parseSingleRowCsv(rowData: string) {\r\n        if (this.isNullOrWhitespace(rowData)) {\r\n            return null;\r\n        }\r\n        const parsedRow = this.parseCsv(rowData, false);\r\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\r\n            return parsedRow[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\r\n        if (uri == null) {\r\n            return null;\r\n        }\r\n\r\n        if (typeof uri === 'string') {\r\n            const loginUri = new LoginUriView();\r\n            loginUri.uri = this.fixUri(uri);\r\n            if (this.isNullOrWhitespace(loginUri.uri)) {\r\n                return null;\r\n            }\r\n            loginUri.match = null;\r\n            return [loginUri];\r\n        }\r\n\r\n        if (uri.length > 0) {\r\n            const returnArr: LoginUriView[] = [];\r\n            uri.forEach((u) => {\r\n                const loginUri = new LoginUriView();\r\n                loginUri.uri = this.fixUri(u);\r\n                if (this.isNullOrWhitespace(loginUri.uri)) {\r\n                    return;\r\n                }\r\n                loginUri.match = null;\r\n                returnArr.push(loginUri);\r\n            });\r\n            return returnArr.length === 0 ? null : returnArr;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    protected fixUri(uri: string) {\r\n        if (uri == null) {\r\n            return null;\r\n        }\r\n        uri = uri.trim();\r\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\r\n            uri = 'http://' + uri;\r\n        }\r\n        if (uri.length > 1000) {\r\n            return uri.substring(0, 1000);\r\n        }\r\n        return uri;\r\n    }\r\n\r\n    protected nameFromUrl(url: string) {\r\n        const hostname = Utils.getHostname(url);\r\n        if (this.isNullOrWhitespace(hostname)) {\r\n            return null;\r\n        }\r\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\r\n    }\r\n\r\n    protected isNullOrWhitespace(str: string): boolean {\r\n        return Utils.isNullOrWhitespace(str);\r\n    }\r\n\r\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\r\n        if (this.isNullOrWhitespace(str)) {\r\n            return defaultValue;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    protected splitNewLine(str: string): string[] {\r\n        return str.split(this.newLineRegex);\r\n    }\r\n\r\n    // ref https://stackoverflow.com/a/5911300\r\n    protected getCardBrand(cardNum: string) {\r\n        if (this.isNullOrWhitespace(cardNum)) {\r\n            return null;\r\n        }\r\n\r\n        // Visa\r\n        let re = new RegExp('^4');\r\n        if (cardNum.match(re) != null) {\r\n            return 'Visa';\r\n        }\r\n\r\n        // Mastercard\r\n        // Updated for Mastercard 2017 BINs expansion\r\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\r\n            .test(cardNum)) {\r\n            return 'Mastercard';\r\n        }\r\n\r\n        // AMEX\r\n        re = new RegExp('^3[47]');\r\n        if (cardNum.match(re) != null) {\r\n            return 'Amex';\r\n        }\r\n\r\n        // Discover\r\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\r\n        if (cardNum.match(re) != null) {\r\n            return 'Discover';\r\n        }\r\n\r\n        // Diners\r\n        re = new RegExp('^36');\r\n        if (cardNum.match(re) != null) {\r\n            return 'Diners Club';\r\n        }\r\n\r\n        // Diners - Carte Blanche\r\n        re = new RegExp('^30[0-5]');\r\n        if (cardNum.match(re) != null) {\r\n            return 'Diners Club';\r\n        }\r\n\r\n        // JCB\r\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\r\n        if (cardNum.match(re) != null) {\r\n            return 'JCB';\r\n        }\r\n\r\n        // Visa Electron\r\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\r\n        if (cardNum.match(re) != null) {\r\n            return 'Visa';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\r\n        if (!this.isNullOrWhitespace(expiration)) {\r\n            const parts = expiration.split('/');\r\n            if (parts.length === 2) {\r\n                let month: string = null;\r\n                let year: string = null;\r\n                if (parts[0].length === 1 || parts[0].length === 2) {\r\n                    month = parts[0];\r\n                    if (month.length === 2 && month[0] === '0') {\r\n                        month = month.substr(1, 1);\r\n                    }\r\n                }\r\n                if (parts[1].length === 2 || parts[1].length === 4) {\r\n                    year = month.length === 2 ? '20' + parts[1] : parts[1];\r\n                }\r\n                if (month != null && year != null) {\r\n                    cipher.card.expMonth = month;\r\n                    cipher.card.expYear = year;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected moveFoldersToCollections(result: ImportResult) {\r\n        result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\r\n        result.collections = result.folders.map((f) => {\r\n            const collection = new CollectionView();\r\n            collection.name = f.name;\r\n            return collection;\r\n        });\r\n        result.folderRelationships = [];\r\n        result.folders = [];\r\n    }\r\n\r\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\r\n        const els = this.querySelectorAllDirectChild(parentEl, query);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\r\n        return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\r\n    }\r\n\r\n    protected initLoginCipher() {\r\n        const cipher = new CipherView();\r\n        cipher.favorite = false;\r\n        cipher.notes = '';\r\n        cipher.fields = [];\r\n        cipher.login = new LoginView();\r\n        cipher.type = CipherType.Login;\r\n        return cipher;\r\n    }\r\n\r\n    protected cleanupCipher(cipher: CipherView) {\r\n        if (cipher == null) {\r\n            return;\r\n        }\r\n        if (cipher.type !== CipherType.Login) {\r\n            cipher.login = null;\r\n        }\r\n        if (this.isNullOrWhitespace(cipher.name)) {\r\n            cipher.name = '--';\r\n        }\r\n        if (this.isNullOrWhitespace(cipher.notes)) {\r\n            cipher.notes = null;\r\n        } else {\r\n            cipher.notes = cipher.notes.trim();\r\n        }\r\n        if (cipher.fields != null && cipher.fields.length === 0) {\r\n            cipher.fields = null;\r\n        }\r\n    }\r\n\r\n    protected processKvp(cipher: CipherView, key: string, value: string, type: FieldType = FieldType.Text) {\r\n        if (this.isNullOrWhitespace(value)) {\r\n            return;\r\n        }\r\n        if (this.isNullOrWhitespace(key)) {\r\n            key = '';\r\n        }\r\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\r\n            if (cipher.notes == null) {\r\n                cipher.notes = '';\r\n            }\r\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\r\n        } else {\r\n            if (cipher.fields == null) {\r\n                cipher.fields = [];\r\n            }\r\n            const field = new FieldView();\r\n            field.type = type;\r\n            field.name = key;\r\n            field.value = value;\r\n            cipher.fields.push(field);\r\n        }\r\n    }\r\n\r\n    protected processFolder(result: ImportResult, folderName: string) {\r\n        let folderIndex = result.folders.length;\r\n        const hasFolder = !this.isNullOrWhitespace(folderName);\r\n        let addFolder = hasFolder;\r\n\r\n        if (hasFolder) {\r\n            for (let i = 0; i < result.folders.length; i++) {\r\n                if (result.folders[i].name === folderName) {\r\n                    addFolder = false;\r\n                    folderIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (addFolder) {\r\n            const f = new FolderView();\r\n            f.name = folderName;\r\n            result.folders.push(f);\r\n        }\r\n        if (hasFolder) {\r\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\r\n        }\r\n    }\r\n\r\n    protected convertToNoteIfNeeded(cipher: CipherView) {\r\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\r\n            this.isNullOrWhitespace(cipher.login.password) &&\r\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\r\n            cipher.type = CipherType.SecureNote;\r\n            cipher.secureNote = new SecureNoteView();\r\n            cipher.secureNote.type = SecureNoteType.Generic;\r\n        }\r\n    }\r\n}\r\n","import { CipherView } from '../view/cipherView';\r\nimport { CollectionView } from '../view/collectionView';\r\nimport { FolderView } from '../view/folderView';\r\n\r\nexport class ImportResult {\r\n    success = false;\r\n    errorMessage: string;\r\n    ciphers: CipherView[] = [];\r\n    folders: FolderView[] = [];\r\n    folderRelationships: [number, number][] = [];\r\n    collections: CollectionView[] = [];\r\n    collectionRelationships: [number, number][] = [];\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\n\r\n@Component({\r\n    selector: 'app-callout',\r\n    templateUrl: 'callout.component.html',\r\n})\r\nexport class CalloutComponent implements OnInit {\r\n    @Input() type = 'info';\r\n    @Input() icon: string;\r\n    @Input() title: string;\r\n\r\n    calloutStyle: string;\r\n\r\n    constructor(private i18nService: I18nService) { }\r\n\r\n    ngOnInit() {\r\n        this.calloutStyle = this.type;\r\n\r\n        if (this.type === 'warning' || this.type === 'danger') {\r\n            if (this.type === 'danger') {\r\n                this.calloutStyle = 'danger';\r\n            }\r\n            if (this.title === undefined) {\r\n                this.title = this.i18nService.t('warning');\r\n            }\r\n            if (this.icon === undefined) {\r\n                this.icon = 'fa-warning';\r\n            }\r\n        } else if (this.type === 'error') {\r\n            this.calloutStyle = 'danger';\r\n            if (this.title === undefined) {\r\n                this.title = this.i18nService.t('error');\r\n            }\r\n            if (this.icon === undefined) {\r\n                this.icon = 'fa-bolt';\r\n            }\r\n        } else if (this.type === 'tip') {\r\n            this.calloutStyle = 'success';\r\n            if (this.title === undefined) {\r\n                this.title = this.i18nService.t('tip');\r\n            }\r\n            if (this.icon === undefined) {\r\n                this.icon = 'fa-lightbulb-o';\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"callout callout-{{calloutStyle}}\" role=\"alert\">\r\n    <h3 class=\"callout-heading\" *ngIf=\"title\">\r\n        <i class=\"fa {{icon}}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\r\n        {{title}}\r\n    </h3>\r\n    <ng-content></ng-content>\r\n</div>\r\n","export abstract class BaseResponse {\r\n    private response: any;\r\n\r\n    constructor(response: any) {\r\n        this.response = response;\r\n    }\r\n\r\n    protected getResponseProperty(propertyName: string, response: any = null, exactName = false): any {\r\n        if (propertyName == null || propertyName === '') {\r\n            throw new Error('propertyName must not be null/empty.');\r\n        }\r\n        if (response == null && this.response != null) {\r\n            response = this.response;\r\n        }\r\n        if (response == null) {\r\n            return null;\r\n        }\r\n        if (!exactName && response[propertyName] === undefined) {\r\n            let otherCasePropertyName: string = null;\r\n            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\r\n                otherCasePropertyName = propertyName.charAt(0).toLowerCase();\r\n            } else {\r\n                otherCasePropertyName = propertyName.charAt(0).toUpperCase();\r\n            }\r\n            if (propertyName.length > 1) {\r\n                otherCasePropertyName += propertyName.slice(1);\r\n            }\r\n\r\n            propertyName = otherCasePropertyName;\r\n            if (response[propertyName] === undefined) {\r\n                propertyName = propertyName.toLowerCase();\r\n            }\r\n            if (response[propertyName] === undefined) {\r\n                propertyName = propertyName.toUpperCase();\r\n            }\r\n        }\r\n        return response[propertyName];\r\n    }\r\n}\r\n","import * as tldjs from 'tldjs';\r\n\r\nimport { I18nService } from '../abstractions/i18n.service';\r\n\r\n// tslint:disable-next-line\r\nconst nodeURL = typeof window === 'undefined' ? require('url') : null;\r\n\r\nexport class Utils {\r\n    static inited = false;\r\n    static isNativeScript = false;\r\n    static isNode = false;\r\n    static isBrowser = true;\r\n    static isMobileBrowser = false;\r\n    static isAppleMobileBrowser = false;\r\n    static global: any = null;\r\n    static tldEndingRegex = /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\r\n\r\n    static init() {\r\n        if (Utils.inited) {\r\n            return;\r\n        }\r\n\r\n        Utils.inited = true;\r\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\r\n            (process as any).release.name === 'node';\r\n        Utils.isBrowser = typeof window !== 'undefined';\r\n        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;\r\n        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\r\n        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\r\n        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);\r\n    }\r\n\r\n    static fromB64ToArray(str: string): Uint8Array {\r\n        if (Utils.isNode || Utils.isNativeScript) {\r\n            return new Uint8Array(Buffer.from(str, 'base64'));\r\n        } else {\r\n            const binaryString = window.atob(str);\r\n            const bytes = new Uint8Array(binaryString.length);\r\n            for (let i = 0; i < binaryString.length; i++) {\r\n                bytes[i] = binaryString.charCodeAt(i);\r\n            }\r\n            return bytes;\r\n        }\r\n    }\r\n\r\n    static fromUrlB64ToArray(str: string): Uint8Array {\r\n        return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\r\n    }\r\n\r\n    static fromHexToArray(str: string): Uint8Array {\r\n        if (Utils.isNode || Utils.isNativeScript) {\r\n            return new Uint8Array(Buffer.from(str, 'hex'));\r\n        } else {\r\n            const bytes = new Uint8Array(str.length / 2);\r\n            for (let i = 0; i < str.length; i += 2) {\r\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\r\n            }\r\n            return bytes;\r\n        }\r\n    }\r\n\r\n    static fromUtf8ToArray(str: string): Uint8Array {\r\n        if (Utils.isNode || Utils.isNativeScript) {\r\n            return new Uint8Array(Buffer.from(str, 'utf8'));\r\n        } else {\r\n            const strUtf8 = unescape(encodeURIComponent(str));\r\n            const arr = new Uint8Array(strUtf8.length);\r\n            for (let i = 0; i < strUtf8.length; i++) {\r\n                arr[i] = strUtf8.charCodeAt(i);\r\n            }\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    static fromByteStringToArray(str: string): Uint8Array {\r\n        const arr = new Uint8Array(str.length);\r\n        for (let i = 0; i < str.length; i++) {\r\n            arr[i] = str.charCodeAt(i);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    static fromBufferToB64(buffer: ArrayBuffer): string {\r\n        if (Utils.isNode || Utils.isNativeScript) {\r\n            return Buffer.from(buffer).toString('base64');\r\n        } else {\r\n            let binary = '';\r\n            const bytes = new Uint8Array(buffer);\r\n            for (let i = 0; i < bytes.byteLength; i++) {\r\n                binary += String.fromCharCode(bytes[i]);\r\n            }\r\n            return window.btoa(binary);\r\n        }\r\n    }\r\n\r\n    static fromBufferToUrlB64(buffer: ArrayBuffer): string {\r\n        return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer))\r\n    }\r\n\r\n    static fromB64toUrlB64(b64Str: string) {\r\n        return b64Str.replace(/\\+/g, '-')\r\n            .replace(/\\//g, '_')\r\n            .replace(/=/g, '');\r\n    }\r\n\r\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\r\n        if (Utils.isNode || Utils.isNativeScript) {\r\n            return Buffer.from(buffer).toString('utf8');\r\n        } else {\r\n            const bytes = new Uint8Array(buffer);\r\n            const encodedString = String.fromCharCode.apply(null, bytes);\r\n            return decodeURIComponent(escape(encodedString));\r\n        }\r\n    }\r\n\r\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\r\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\r\n    }\r\n\r\n    // ref: https://stackoverflow.com/a/40031979/1090359\r\n    static fromBufferToHex(buffer: ArrayBuffer): string {\r\n        if (Utils.isNode || Utils.isNativeScript) {\r\n            return Buffer.from(buffer).toString('hex');\r\n        } else {\r\n            const bytes = new Uint8Array(buffer);\r\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\r\n        }\r\n    }\r\n\r\n    static fromUrlB64ToB64(urlB64Str: string): string {\r\n        let output = urlB64Str.replace(/-/g, '+').replace(/_/g, '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default:\r\n                throw new Error('Illegal base64url string!');\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    static fromUrlB64ToUtf8(urlB64Str: string): string {\r\n        return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\r\n    }\r\n\r\n    static fromB64ToUtf8(b64Str: string): string {\r\n        if (Utils.isNode || Utils.isNativeScript) {\r\n            return Buffer.from(b64Str, 'base64').toString('utf8');\r\n        } else {\r\n            return decodeURIComponent(escape(window.atob(b64Str)));\r\n        }\r\n    }\r\n\r\n    // ref: http://stackoverflow.com/a/2117523/1090359\r\n    static newGuid(): string {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n            // tslint:disable-next-line\r\n            const r = Math.random() * 16 | 0;\r\n            // tslint:disable-next-line\r\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    static isGuid(id: string) {\r\n        return RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, 'i').test(id);\r\n    }\r\n\r\n    static getHostname(uriString: string): string {\r\n        const url = Utils.getUrl(uriString);\r\n        try {\r\n            return url != null && url.hostname !== '' ? url.hostname : null;\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static getHost(uriString: string): string {\r\n        const url = Utils.getUrl(uriString);\r\n        try {\r\n            return url != null && url.host !== '' ? url.host : null;\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static getDomain(uriString: string): string {\r\n        if (uriString == null) {\r\n            return null;\r\n        }\r\n\r\n        uriString = uriString.trim();\r\n        if (uriString === '') {\r\n            return null;\r\n        }\r\n\r\n        if (uriString.startsWith('data:')) {\r\n            return null;\r\n        }\r\n\r\n        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');\r\n        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString)) {\r\n            uriString = 'http://' + uriString;\r\n            httpUrl = true;\r\n        }\r\n\r\n        if (httpUrl) {\r\n            try {\r\n                const url = Utils.getUrlObject(uriString);\r\n                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {\r\n                    return url.hostname;\r\n                }\r\n\r\n                const urlDomain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\r\n                return urlDomain != null ? urlDomain : url.hostname;\r\n            } catch (e) { }\r\n        }\r\n\r\n        try {\r\n            const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\r\n\r\n            if (domain != null) {\r\n                return domain;\r\n            }\r\n        } catch {\r\n            return null;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getQueryParams(uriString: string): Map<string, string> {\r\n        const url = Utils.getUrl(uriString);\r\n        if (url == null || url.search == null || url.search === '') {\r\n            return null;\r\n        }\r\n        const map = new Map<string, string>();\r\n        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');\r\n        pairs.forEach((pair) => {\r\n            const parts = pair.split('=');\r\n            if (parts.length < 1) {\r\n                return;\r\n            }\r\n            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));\r\n        });\r\n        return map;\r\n    }\r\n\r\n    static getSortFunction(i18nService: I18nService, prop: string) {\r\n        return (a: any, b: any) => {\r\n            if (a[prop] == null && b[prop] != null) {\r\n                return -1;\r\n            }\r\n            if (a[prop] != null && b[prop] == null) {\r\n                return 1;\r\n            }\r\n            if (a[prop] == null && b[prop] == null) {\r\n                return 0;\r\n            }\r\n\r\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\r\n                a[prop].localeCompare(b[prop]);\r\n        };\r\n    }\r\n\r\n    static isNullOrWhitespace(str: string): boolean {\r\n        return str == null || typeof str !== 'string' || str.trim() === '';\r\n    }\r\n\r\n    private static validIpAddress(ipString: string): boolean {\r\n        // tslint:disable-next-line\r\n        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n        return ipRegex.test(ipString);\r\n    }\r\n\r\n    private static isMobile(win: Window) {\r\n        let mobile = false;\r\n        ((a) => {\r\n            // tslint:disable-next-line\r\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\r\n                mobile = true;\r\n            }\r\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\r\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\r\n    }\r\n\r\n    private static isAppleMobile(win: Window) {\r\n        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;\r\n    }\r\n\r\n    private static getUrl(uriString: string): URL {\r\n        if (uriString == null) {\r\n            return null;\r\n        }\r\n\r\n        uriString = uriString.trim();\r\n        if (uriString === '') {\r\n            return null;\r\n        }\r\n\r\n        let url = Utils.getUrlObject(uriString);\r\n        if (url == null) {\r\n            const hasHttpProtocol = uriString.indexOf('http://') === 0 || uriString.indexOf('https://') === 0;\r\n            if (!hasHttpProtocol && uriString.indexOf('.') > -1) {\r\n                url = Utils.getUrlObject('http://' + uriString);\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n    private static getUrlObject(uriString: string): URL {\r\n        try {\r\n            if (nodeURL != null) {\r\n                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);\r\n            } else if (typeof URL === 'function') {\r\n                return new URL(uriString);\r\n            } else if (window != null) {\r\n                const hasProtocol = uriString.indexOf('://') > -1;\r\n                if (!hasProtocol && uriString.indexOf('.') > -1) {\r\n                    uriString = 'http://' + uriString;\r\n                } else if (!hasProtocol) {\r\n                    return null;\r\n                }\r\n                const anchor = window.document.createElement('a');\r\n                anchor.href = uriString;\r\n                return anchor as any;\r\n            }\r\n        } catch (e) { }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nUtils.init();\r\n","import { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\r\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\r\n\r\nexport abstract class PasswordGenerationService {\r\n    generatePassword: (options: any) => Promise<string>;\r\n    generatePassphrase: (options: any) => Promise<string>;\r\n    getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\r\n    enforcePasswordGeneratorPoliciesOnOptions: (options: any) => Promise<[any, PasswordGeneratorPolicyOptions]>;\r\n    getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\r\n    saveOptions: (options: any) => Promise<any>;\r\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\r\n    addHistory: (password: string) => Promise<any>;\r\n    clear: () => Promise<any>;\r\n    passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\r\n    normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\r\n}\r\n","import {\r\n    Directive,\r\n    HostListener,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appStopClick]',\r\n})\r\nexport class StopClickDirective {\r\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\r\n        $event.preventDefault();\r\n    }\r\n}\r\n","export enum CipherType {\r\n    Login = 1,\r\n    SecureNote = 2,\r\n    Card = 3,\r\n    Identity = 4,\r\n}\r\n","export abstract class StateService {\r\n    get: <T>(key: string) => Promise<T>;\r\n    save: (key: string, obj: any) => Promise<any>;\r\n    remove: (key: string) => Promise<any>;\r\n    purge: () => Promise<any>;\r\n}\r\n","import { CollectionData } from '../models/data/collectionData';\r\n\r\nimport { Collection } from '../models/domain/collection';\r\nimport { TreeNode } from '../models/domain/treeNode';\r\n\r\nimport { CollectionView } from '../models/view/collectionView';\r\n\r\nexport abstract class CollectionService {\r\n    decryptedCollectionCache: CollectionView[];\r\n\r\n    clearCache: () => void;\r\n    encrypt: (model: CollectionView) => Promise<Collection>;\r\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\r\n    get: (id: string) => Promise<Collection>;\r\n    getAll: () => Promise<Collection[]>;\r\n    getAllDecrypted: () => Promise<CollectionView[]>;\r\n    getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\r\n    getNested: (id: string) => Promise<TreeNode<CollectionView>>;\r\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\r\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\r\n    clear: (userId: string) => Promise<any>;\r\n    delete: (id: string | string[]) => Promise<any>;\r\n}\r\n","export abstract class StorageService {\r\n    get: <T>(key: string) => Promise<T>;\r\n    save: (key: string, obj: any) => Promise<any>;\r\n    remove: (key: string) => Promise<any>;\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    Input,\r\n    Renderer2,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appInputVerbatim]',\r\n})\r\nexport class InputVerbatimDirective {\r\n    @Input() set appInputVerbatim(condition: boolean | string) {\r\n        this.disableComplete = condition === '' || condition === true;\r\n    }\r\n\r\n    private disableComplete: boolean;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\r\n\r\n    ngOnInit() {\r\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\r\n        }\r\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\r\n        }\r\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\r\n        }\r\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\r\n        }\r\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\r\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\r\n        }\r\n    }\r\n}\r\n","import { FolderData } from '../models/data/folderData';\r\n\r\nimport { Folder } from '../models/domain/folder';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\nimport { TreeNode } from '../models/domain/treeNode';\r\n\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nexport abstract class FolderService {\r\n    decryptedFolderCache: FolderView[];\r\n\r\n    clearCache: () => void;\r\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\r\n    get: (id: string) => Promise<Folder>;\r\n    getAll: () => Promise<Folder[]>;\r\n    getAllDecrypted: () => Promise<FolderView[]>;\r\n    getAllNested: () => Promise<TreeNode<FolderView>[]>;\r\n    getNested: (id: string) => Promise<TreeNode<FolderView>>;\r\n    saveWithServer: (folder: Folder) => Promise<any>;\r\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\r\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\r\n    clear: (userId: string) => Promise<any>;\r\n    delete: (id: string | string[]) => Promise<any>;\r\n    deleteWithServer: (id: string) => Promise<any>;\r\n}\r\n","import {\r\n    Directive,\r\n    HostListener,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appStopProp]',\r\n})\r\nexport class StopPropDirective {\r\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n    }\r\n}\r\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\r\n\r\nimport { AuthResult } from '../models/domain/authResult';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nexport abstract class AuthService {\r\n    email: string;\r\n    masterPasswordHash: string;\r\n    code: string;\r\n    codeVerifier: string;\r\n    ssoRedirectUrl: string;\r\n    clientId: string;\r\n    clientSecret: string;\r\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\r\n    selectedTwoFactorProviderType: TwoFactorProviderType;\r\n\r\n    logIn: (email: string, masterPassword: string) => Promise<AuthResult>;\r\n    logInSso: (code: string, codeVerifier: string, redirectUrl: string) => Promise<AuthResult>;\r\n    logInApiKey: (clientId: string, clientSecret: string) => Promise<AuthResult>;\r\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\r\n        remember?: boolean) => Promise<AuthResult>;\r\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\r\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\r\n    logInSsoComplete: (code: string, codeVerifier: string, redirectUrl: string,\r\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\r\n    logInApiKeyComplete: (clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\r\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\r\n    logOut: (callback: Function) => void;\r\n    getSupportedTwoFactorProviders: (win: Window) => any[];\r\n    getDefaultTwoFactorProvider: (u2fSupported: boolean) => TwoFactorProviderType;\r\n    makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\r\n    authingWithApiKey: () => boolean;\r\n    authingWithSso: () => boolean;\r\n    authingWithPassword: () => boolean;\r\n}\r\n","import {\r\n    SyncCipherNotification,\r\n    SyncFolderNotification,\r\n} from '../models/response/notificationResponse';\r\n\r\nexport abstract class SyncService {\r\n    syncInProgress: boolean;\r\n\r\n    getLastSync: () => Promise<Date>;\r\n    setLastSync: (date: Date) => Promise<any>;\r\n    fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\r\n    syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\r\n    syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\r\n    syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\r\n    syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    Input,\r\n} from '@angular/core';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\n@Directive({\r\n    selector: '[appAutofocus]',\r\n})\r\nexport class AutofocusDirective {\r\n    @Input() set appAutofocus(condition: boolean | string) {\r\n        this.autofocus = condition === '' || condition === true;\r\n    }\r\n\r\n    private autofocus: boolean;\r\n\r\n    constructor(private el: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n        if (!Utils.isMobileBrowser && this.autofocus) {\r\n            this.el.nativeElement.focus();\r\n        }\r\n    }\r\n}\r\n","export abstract class EnvironmentService {\r\n    baseUrl: string;\r\n    webVaultUrl: string;\r\n    apiUrl: string;\r\n    identityUrl: string;\r\n    iconsUrl: string;\r\n    notificationsUrl: string;\r\n    eventsUrl: string;\r\n    enterpriseUrl: string;\r\n\r\n    getWebVaultUrl: () => string;\r\n    setUrlsFromStorage: () => Promise<void>;\r\n    setUrls: (urls: any) => Promise<any>;\r\n}\r\n","export class ConstantsService {\r\n    static readonly environmentUrlsKey: string = 'environmentUrls';\r\n    static readonly disableGaKey: string = 'disableGa';\r\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\r\n    static readonly disableChangedPasswordNotificationKey: string = 'disableChangedPasswordNotification';\r\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\r\n    static readonly disableFaviconKey: string = 'disableFavicon';\r\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\r\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\r\n    static readonly vaultTimeoutKey: string = 'lockOption';\r\n    static readonly vaultTimeoutActionKey: string = 'vaultTimeoutAction';\r\n    static readonly lastActiveKey: string = 'lastActive';\r\n    static readonly neverDomainsKey: string = 'neverDomains';\r\n    static readonly installedVersionKey: string = 'installedVersion';\r\n    static readonly localeKey: string = 'locale';\r\n    static readonly themeKey: string = 'theme';\r\n    static readonly collapsedGroupingsKey: string = 'collapsedGroupings';\r\n    static readonly autoConfirmFingerprints: string = 'autoConfirmFingerprints';\r\n    static readonly dontShowCardsCurrentTab: string = 'dontShowCardsCurrentTab';\r\n    static readonly dontShowIdentitiesCurrentTab: string = 'dontShowIdentitiesCurrentTab';\r\n    static readonly defaultUriMatch: string = 'defaultUriMatch';\r\n    static readonly pinProtectedKey: string = 'pinProtectedKey';\r\n    static readonly protectedPin: string = 'protectedPin';\r\n    static readonly clearClipboardKey: string = 'clearClipboardKey';\r\n    static readonly eventCollectionKey: string = 'eventCollection';\r\n    static readonly ssoCodeVerifierKey: string = 'ssoCodeVerifier';\r\n    static readonly ssoStateKey: string = 'ssoState';\r\n    static readonly biometricUnlockKey: string = 'biometric';\r\n    static readonly biometricText: string = 'biometricText';\r\n    static readonly biometricAwaitingAcceptance: string = 'biometricAwaitingAcceptance';\r\n\r\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\r\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\r\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\r\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\r\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\r\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\r\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\r\n    readonly vaultTimeoutKey: string = ConstantsService.vaultTimeoutKey;\r\n    readonly vaultTimeoutActionKey: string = ConstantsService.vaultTimeoutActionKey;\r\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\r\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\r\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\r\n    readonly localeKey: string = ConstantsService.localeKey;\r\n    readonly themeKey: string = ConstantsService.themeKey;\r\n    readonly collapsedGroupingsKey: string = ConstantsService.collapsedGroupingsKey;\r\n    readonly autoConfirmFingerprints: string = ConstantsService.autoConfirmFingerprints;\r\n    readonly dontShowCardsCurrentTab: string = ConstantsService.dontShowCardsCurrentTab;\r\n    readonly dontShowIdentitiesCurrentTab: string = ConstantsService.dontShowIdentitiesCurrentTab;\r\n    readonly defaultUriMatch: string = ConstantsService.defaultUriMatch;\r\n    readonly pinProtectedKey: string = ConstantsService.pinProtectedKey;\r\n    readonly protectedPin: string = ConstantsService.protectedPin;\r\n    readonly clearClipboardKey: string = ConstantsService.clearClipboardKey;\r\n    readonly eventCollectionKey: string = ConstantsService.eventCollectionKey;\r\n    readonly ssoCodeVerifierKey: string = ConstantsService.ssoCodeVerifierKey;\r\n    readonly ssoStateKey: string = ConstantsService.ssoStateKey;\r\n    readonly biometricUnlockKey: string = ConstantsService.biometricUnlockKey;\r\n    readonly biometricText: string = ConstantsService.biometricText;\r\n    readonly biometricAwaitingAcceptance: string = ConstantsService.biometricAwaitingAcceptance;\r\n}\r\n","export class PasswordVerificationRequest {\r\n    masterPasswordHash: string;\r\n}\r\n","import { EventType } from '../enums/eventType';\r\n\r\nexport abstract class EventService {\r\n    collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\r\n    uploadEvents: () => Promise<any>;\r\n    clearEvents: () => Promise<any>;\r\n}\r\n","import { CipherString } from './cipherString';\r\n\r\nimport { View } from '../view/view';\r\n\r\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\r\n\r\nexport default class Domain {\r\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\r\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\r\n        for (const prop in map) {\r\n            if (!map.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n\r\n            const objProp = dataObj[(map[prop] || prop)];\r\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\r\n                (domain as any)[prop] = objProp ? objProp : null;\r\n            } else {\r\n                (domain as any)[prop] = objProp ? new CipherString(objProp) : null;\r\n            }\r\n        }\r\n    }\r\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notCipherStringList: any[] = []) {\r\n        for (const prop in map) {\r\n            if (!map.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n\r\n            const objProp = (domain as any)[(map[prop] || prop)];\r\n            if (notCipherStringList.indexOf(prop) > -1) {\r\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\r\n            } else {\r\n                (dataObj as any)[prop] = objProp != null ? (objProp as CipherString).encryptedString : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string,\r\n        key: SymmetricCryptoKey = null): Promise<T> {\r\n        const promises = [];\r\n        const self: any = this;\r\n\r\n        for (const prop in map) {\r\n            if (!map.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n\r\n            // tslint:disable-next-line\r\n            (function (theProp) {\r\n                const p = Promise.resolve().then(() => {\r\n                    const mapProp = map[theProp] || theProp;\r\n                    if (self[mapProp]) {\r\n                        return self[mapProp].decrypt(orgId, key);\r\n                    }\r\n                    return null;\r\n                }).then((val: any) => {\r\n                    (viewModel as any)[theProp] = val;\r\n                });\r\n                promises.push(p);\r\n            })(prop);\r\n        }\r\n\r\n        await Promise.all(promises);\r\n        return viewModel;\r\n    }\r\n}\r\n","import { PolicyData } from '../models/data/policyData';\r\n\r\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\r\nimport { Policy } from '../models/domain/policy';\r\n\r\nimport { PolicyType } from '../enums/policyType';\r\n\r\nexport abstract class PolicyService {\r\n    policyCache: Policy[];\r\n\r\n    clearCache: () => void;\r\n    getAll: (type?: PolicyType) => Promise<Policy[]>;\r\n    replace: (policies: { [id: string]: PolicyData; }) => Promise<any>;\r\n    clear: (userId: string) => Promise<any>;\r\n    getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\r\n    evaluateMasterPassword: (passwordStrength: number, newPassword: string,\r\n        enforcedPolicyOptions?: MasterPasswordPolicyOptions) => boolean;\r\n}\r\n","import { CipherView } from '../models/view/cipherView';\r\n\r\nexport abstract class SearchService {\r\n    clearIndex: () => void;\r\n    isSearchable: (query: string) => boolean;\r\n    indexCiphers: () => Promise<void>;\r\n    searchCiphers: (query: string,\r\n        filter?: ((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[]),\r\n        ciphers?: CipherView[]) => Promise<CipherView[]>;\r\n    searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\r\n}\r\n","import { View } from './view';\r\n\r\nimport { Card } from '../domain/card';\r\n\r\nexport class CardView implements View {\r\n    cardholderName: string = null;\r\n    expMonth: string = null;\r\n    expYear: string = null;\r\n    code: string = null;\r\n\r\n    // tslint:disable\r\n    private _brand: string = null;\r\n    private _number: string = null;\r\n    private _subTitle: string = null;\r\n    // tslint:enable\r\n\r\n    constructor(c?: Card) {\r\n        // ctor\r\n    }\r\n\r\n    get maskedCode(): string {\r\n        return this.code != null ? '•'.repeat(this.code.length) : null;\r\n    }\r\n\r\n    get brand(): string {\r\n        return this._brand;\r\n    }\r\n    set brand(value: string) {\r\n        this._brand = value;\r\n        this._subTitle = null;\r\n    }\r\n\r\n    get number(): string {\r\n        return this._number;\r\n    }\r\n    set number(value: string) {\r\n        this._number = value;\r\n        this._subTitle = null;\r\n    }\r\n\r\n    get subTitle(): string {\r\n        if (this._subTitle == null) {\r\n            this._subTitle = this.brand;\r\n            if (this.number != null && this.number.length >= 4) {\r\n                if (this._subTitle != null && this._subTitle !== '') {\r\n                    this._subTitle += ', ';\r\n                } else {\r\n                    this._subTitle = '';\r\n                }\r\n\r\n                // Show last 5 on amex, last 4 for all others\r\n                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;\r\n                this._subTitle += ('*' + this.number.substr(this.number.length - count));\r\n            }\r\n        }\r\n        return this._subTitle;\r\n    }\r\n\r\n    get expiration(): string {\r\n        if (!this.expMonth && !this.expYear) {\r\n            return null;\r\n        }\r\n\r\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\r\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\r\n        return exp;\r\n    }\r\n\r\n    private formatYear(year: string): string {\r\n        return year.length === 2 ? '20' + year : year;\r\n    }\r\n}\r\n","import * as jq from 'jquery';\r\n\r\nimport {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    Type,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport { ModalComponent as BaseModalComponent } from 'jslib/angular/components/modal.component';\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\n\r\n@Component({\r\n    selector: 'app-modal',\r\n    template: `<ng-template #container></ng-template>`,\r\n})\r\nexport class ModalComponent extends BaseModalComponent {\r\n    el: any = null;\r\n\r\n    constructor(componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService) {\r\n        super(componentFactoryResolver, messagingService);\r\n    }\r\n\r\n    ngOnDestroy() { /* Nothing */ }\r\n\r\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\r\n        setComponentParameters: (component: T) => void = null): T {\r\n        this.parentContainer = parentContainer;\r\n        this.fade = fade;\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\r\n        const componentRef = this.container.createComponent<T>(factory);\r\n        if (setComponentParameters != null) {\r\n            setComponentParameters(componentRef.instance);\r\n        }\r\n\r\n        const modals = Array.from(document.querySelectorAll('.modal'));\r\n        if (modals.length > 0) {\r\n            this.el = jq(modals[0]);\r\n            this.el.modal('show');\r\n\r\n            this.el.on('show.bs.modal', () => {\r\n                this.onShow.emit();\r\n                this.messagingService.send('modalShow');\r\n            });\r\n            this.el.on('shown.bs.modal', () => {\r\n                this.onShown.emit();\r\n                this.messagingService.send('modalShown');\r\n                if (!Utils.isMobileBrowser) {\r\n                    this.el.find('*[appAutoFocus]').focus();\r\n                }\r\n            });\r\n            this.el.on('hide.bs.modal', () => {\r\n                this.onClose.emit();\r\n                this.messagingService.send('modalClose');\r\n            });\r\n            this.el.on('hidden.bs.modal', () => {\r\n                this.onClosed.emit();\r\n                this.messagingService.send('modalClosed');\r\n                if (this.parentContainer != null) {\r\n                    this.parentContainer.clear();\r\n                }\r\n            });\r\n        }\r\n\r\n        return componentRef.instance;\r\n    }\r\n\r\n    close() {\r\n        if (this.el != null) {\r\n            this.el.modal('hide');\r\n        }\r\n    }\r\n}\r\n","import { SecureNoteType } from '../../enums/secureNoteType';\r\n\r\nimport { View } from './view';\r\n\r\nimport { SecureNote } from '../domain/secureNote';\r\n\r\nexport class SecureNoteView implements View {\r\n    type: SecureNoteType = null;\r\n\r\n    constructor(n?: SecureNote) {\r\n        if (!n) {\r\n            return;\r\n        }\r\n\r\n        this.type = n.type;\r\n    }\r\n\r\n    get subTitle(): string {\r\n        return null;\r\n    }\r\n}\r\n","export abstract class TokenService {\r\n    token: string;\r\n    decodedToken: any;\r\n    refreshToken: string;\r\n    setTokens: (accessToken: string, refreshToken: string) => Promise<any>;\r\n    setToken: (token: string) => Promise<any>;\r\n    getToken: () => Promise<string>;\r\n    setRefreshToken: (refreshToken: string) => Promise<any>;\r\n    getRefreshToken: () => Promise<string>;\r\n    toggleTokens: () => Promise<any>;\r\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\r\n    getTwoFactorToken: (email: string) => Promise<string>;\r\n    clearTwoFactorToken: (email: string) => Promise<any>;\r\n    clearToken: () => Promise<any>;\r\n    decodeToken: () => any;\r\n    getTokenExpirationDate: () => Date;\r\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\r\n    tokenNeedsRefresh: (minutes?: number) => boolean;\r\n    getUserId: () => string;\r\n    getEmail: () => string;\r\n    getEmailVerified: () => boolean;\r\n    getName: () => string;\r\n    getPremium: () => boolean;\r\n    getIssuer: () => string;\r\n}\r\n","import { DecryptParameters } from '../models/domain/decryptParameters';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nexport abstract class CryptoFunctionService {\r\n    pbkdf2: (password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\r\n        iterations: number) => Promise<ArrayBuffer>;\r\n    hkdf: (ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\r\n        outputByteSize: number, algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>\r\n    hkdfExpand: (prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\r\n        algorithm: 'sha256' | 'sha512') => Promise<ArrayBuffer>;\r\n    hash: (value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5') => Promise<ArrayBuffer>;\r\n    hmac: (value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512') => Promise<ArrayBuffer>;\r\n    compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\r\n    hmacFast: (value: ArrayBuffer | string, key: ArrayBuffer | string, algorithm: 'sha1' | 'sha256' | 'sha512') =>\r\n        Promise<ArrayBuffer | string>;\r\n    compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\r\n    aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\r\n    aesDecryptFastParameters: (data: string, iv: string, mac: string, key: SymmetricCryptoKey) =>\r\n        DecryptParameters<ArrayBuffer | string>;\r\n    aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\r\n    aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\r\n    rsaEncrypt: (data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\r\n    rsaDecrypt: (data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\r\n    rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\r\n    rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\r\n    randomBytes: (length: number) => Promise<ArrayBuffer>;\r\n}\r\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\r\n\r\nexport abstract class AuditService {\r\n    passwordLeaked: (password: string) => Promise<number>;\r\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\r\n}\r\n","import { CipherString } from '../models/domain/cipherString';\r\n\r\nexport abstract class VaultTimeoutService {\r\n    biometricLocked: boolean;\r\n    pinProtectedKey: CipherString;\r\n    isLocked: () => Promise<boolean>;\r\n    checkVaultTimeout: () => Promise<void>;\r\n    lock: (allowSoftLock?: boolean) => Promise<void>;\r\n    logOut: () => Promise<void>;\r\n    setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\r\n    isPinLockSet: () => Promise<[boolean, boolean]>;\r\n    isBiometricLockSet: () => Promise<boolean>;\r\n    clear: () => Promise<any>;\r\n}\r\n","export enum SecureNoteType {\r\n    Generic = 0,\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { CipherType } from '../../enums/cipherType';\r\n\r\nimport { CipherView } from '../../models/view/cipherView';\r\n\r\nimport { EnvironmentService } from '../../abstractions/environment.service';\r\nimport { StateService } from '../../abstractions/state.service';\r\n\r\nimport { ConstantsService } from '../../services/constants.service';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nconst IconMap: any = {\r\n    'fa-globe': String.fromCharCode(0xf0ac),\r\n    'fa-sticky-note-o': String.fromCharCode(0xf24a),\r\n    'fa-id-card-o': String.fromCharCode(0xf2c3),\r\n    'fa-credit-card': String.fromCharCode(0xf09d),\r\n    'fa-android': String.fromCharCode(0xf17b),\r\n    'fa-apple': String.fromCharCode(0xf179),\r\n};\r\n\r\n@Component({\r\n    selector: 'app-vault-icon',\r\n    templateUrl: 'icon.component.html',\r\n})\r\nexport class IconComponent implements OnChanges {\r\n    @Input() cipher: CipherView;\r\n    icon: string;\r\n    image: string;\r\n    fallbackImage: string;\r\n    imageEnabled: boolean;\r\n\r\n    private iconsUrl: string;\r\n\r\n    constructor(environmentService: EnvironmentService, protected stateService: StateService) {\r\n        this.iconsUrl = environmentService.iconsUrl;\r\n        if (!this.iconsUrl) {\r\n            if (environmentService.baseUrl) {\r\n                this.iconsUrl = environmentService.baseUrl + '/icons';\r\n            } else {\r\n                this.iconsUrl = 'https://icons.bitwarden.net';\r\n            }\r\n        }\r\n    }\r\n\r\n    async ngOnChanges() {\r\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\r\n        this.load();\r\n    }\r\n\r\n    get iconCode(): string {\r\n        return IconMap[this.icon];\r\n    }\r\n\r\n    protected load() {\r\n        switch (this.cipher.type) {\r\n            case CipherType.Login:\r\n                this.icon = 'fa-globe';\r\n                this.setLoginIcon();\r\n                break;\r\n            case CipherType.SecureNote:\r\n                this.icon = 'fa-sticky-note-o';\r\n                break;\r\n            case CipherType.Card:\r\n                this.icon = 'fa-credit-card';\r\n                break;\r\n            case CipherType.Identity:\r\n                this.icon = 'fa-id-card-o';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private setLoginIcon() {\r\n        if (this.cipher.login.uri) {\r\n            let hostnameUri = this.cipher.login.uri;\r\n            let isWebsite = false;\r\n\r\n            if (hostnameUri.indexOf('androidapp://') === 0) {\r\n                this.icon = 'fa-android';\r\n                this.image = null;\r\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\r\n                this.icon = 'fa-apple';\r\n                this.image = null;\r\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\r\n                hostnameUri = 'http://' + hostnameUri;\r\n                isWebsite = true;\r\n            } else if (this.imageEnabled) {\r\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\r\n            }\r\n\r\n            if (this.imageEnabled && isWebsite) {\r\n                try {\r\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\r\n                    this.fallbackImage = 'images/fa-globe.png';\r\n                } catch (e) { }\r\n            }\r\n        } else {\r\n            this.image = null;\r\n        }\r\n    }\r\n}\r\n","<div class=\"icon\" aria-hidden=\"true\">\r\n    <img [src]=\"image\" appFallbackSrc=\"{{fallbackImage}}\" *ngIf=\"imageEnabled && image\" alt=\"\" />\r\n    <i class=\"fa fa-fw fa-lg {{icon}}\" *ngIf=\"!imageEnabled || !image\"></i>\r\n</div>\r\n","export enum TwoFactorProviderType {\r\n    Authenticator = 0,\r\n    Email = 1,\r\n    Duo = 2,\r\n    Yubikey = 3,\r\n    U2f = 4,\r\n    Remember = 5,\r\n    OrganizationDuo = 6,\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BroadcasterService as BaseBroadcasterService } from '../../services/broadcaster.service';\r\n\r\n@Injectable()\r\nexport class BroadcasterService extends BaseBroadcasterService {\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { WebConstants } from '../../services/webConstants';\r\n\r\nconst StripeElementStyle = {\r\n    base: {\r\n        color: '#333333',\r\n        fontFamily: '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\r\n            '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n        fontSize: '14px',\r\n        fontSmoothing: 'antialiased',\r\n    },\r\n    invalid: {\r\n        color: '#333333',\r\n    },\r\n};\r\n\r\nconst StripeElementClasses = {\r\n    focus: 'is-focused',\r\n    empty: 'is-empty',\r\n    invalid: 'is-invalid',\r\n};\r\n\r\n@Component({\r\n    selector: 'app-payment',\r\n    templateUrl: 'payment.component.html',\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n    @Input() showMethods = true;\r\n    @Input() showOptions = true;\r\n    @Input() method = PaymentMethodType.Card;\r\n    @Input() hideBank = false;\r\n    @Input() hidePaypal = false;\r\n    @Input() hideCredit = false;\r\n\r\n    bank: any = {\r\n        routing_number: null,\r\n        account_number: null,\r\n        account_holder_name: null,\r\n        account_holder_type: '',\r\n        currency: 'USD',\r\n        country: 'US',\r\n    };\r\n\r\n    paymentMethodType = PaymentMethodType;\r\n\r\n    private btScript: HTMLScriptElement;\r\n    private btInstance: any = null;\r\n    private stripeScript: HTMLScriptElement;\r\n    private stripe: any = null;\r\n    private stripeElements: any = null;\r\n    private stripeCardNumberElement: any = null;\r\n    private stripeCardExpiryElement: any = null;\r\n    private stripeCardCvcElement: any = null;\r\n\r\n    constructor(private platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\r\n        this.stripeScript = window.document.createElement('script');\r\n        this.stripeScript.src = 'https://js.stripe.com/v3/';\r\n        this.stripeScript.async = true;\r\n        this.stripeScript.onload = () => {\r\n            this.stripe = (window as any).Stripe(this.platformUtilsService.isDev() ?\r\n                WebConstants.stripeTestKey : WebConstants.stripeLiveKey);\r\n            this.stripeElements = this.stripe.elements();\r\n            this.setStripeElement();\r\n        };\r\n        this.btScript = window.document.createElement('script');\r\n        this.btScript.src = 'scripts/dropin.js';\r\n        this.btScript.async = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.showOptions) {\r\n            this.hidePaypal = this.method !== PaymentMethodType.PayPal;\r\n            this.hideBank = this.method !== PaymentMethodType.BankAccount;\r\n            this.hideCredit = this.method !== PaymentMethodType.Credit;\r\n        }\r\n        window.document.head.appendChild(this.stripeScript);\r\n        if (!this.hidePaypal) {\r\n            window.document.head.appendChild(this.btScript);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        window.document.head.removeChild(this.stripeScript);\r\n        window.setTimeout(() => {\r\n            Array.from(window.document.querySelectorAll('iframe')).forEach((el) => {\r\n                if (el.src != null && el.src.indexOf('stripe') > -1) {\r\n                    try {\r\n                        window.document.body.removeChild(el);\r\n                    } catch { }\r\n                }\r\n            });\r\n        }, 500);\r\n        if (!this.hidePaypal) {\r\n            window.document.head.removeChild(this.btScript);\r\n            window.setTimeout(() => {\r\n                Array.from(window.document.head.querySelectorAll('script')).forEach((el) => {\r\n                    if (el.src != null && el.src.indexOf('paypal') > -1) {\r\n                        try {\r\n                            window.document.head.removeChild(el);\r\n                        } catch { }\r\n                    }\r\n                });\r\n                const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\r\n                if (btStylesheet != null) {\r\n                    try {\r\n                        window.document.head.removeChild(btStylesheet);\r\n                    } catch { }\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    changeMethod() {\r\n        this.btInstance = null;\r\n\r\n        if (this.method === PaymentMethodType.PayPal) {\r\n            window.setTimeout(() => {\r\n                (window as any).braintree.dropin.create({\r\n                    authorization: this.platformUtilsService.isDev() ?\r\n                        WebConstants.btSandboxKey : WebConstants.btProductionKey,\r\n                    container: '#bt-dropin-container',\r\n                    paymentOptionPriority: ['paypal'],\r\n                    paypal: {\r\n                        flow: 'vault',\r\n                        buttonStyle: {\r\n                            label: 'pay',\r\n                            size: 'medium',\r\n                            shape: 'pill',\r\n                            color: 'blue',\r\n                        },\r\n                    },\r\n                }, (createErr: any, instance: any) => {\r\n                    if (createErr != null) {\r\n                        // tslint:disable-next-line\r\n                        console.error(createErr);\r\n                        return;\r\n                    }\r\n                    this.btInstance = instance;\r\n                });\r\n            }, 250);\r\n        } else {\r\n            this.setStripeElement();\r\n        }\r\n    }\r\n\r\n    createPaymentToken(): Promise<[string, PaymentMethodType]> {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.method === PaymentMethodType.Credit) {\r\n                resolve([null, this.method]);\r\n            } else if (this.method === PaymentMethodType.PayPal) {\r\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\r\n                    resolve([payload.nonce, this.method]);\r\n                }).catch((err: any) => {\r\n                    reject(err.message);\r\n                });\r\n            } else if (this.method === PaymentMethodType.Card || this.method === PaymentMethodType.BankAccount) {\r\n                if (this.method === PaymentMethodType.Card) {\r\n                    this.apiService.postSetupPayment().then((clientSecret) =>\r\n                        this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement))\r\n                        .then((result: any) => {\r\n                            if (result.error) {\r\n                                reject(result.error.message);\r\n                            } else if (result.setupIntent && result.setupIntent.status === 'succeeded') {\r\n                                resolve([result.setupIntent.payment_method, this.method]);\r\n                            } else {\r\n                                reject();\r\n                            }\r\n                        });\r\n                } else {\r\n                    this.stripe.createToken('bank_account', this.bank).then((result: any) => {\r\n                        if (result.error) {\r\n                            reject(result.error.message);\r\n                        } else if (result.token && result.token.id != null) {\r\n                            resolve([result.token.id, this.method]);\r\n                        } else {\r\n                            reject();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.showMethods && this.stripeCardNumberElement == null) {\r\n                reject();\r\n                return;\r\n            }\r\n            const handleCardPayment = () => this.showMethods ?\r\n                this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement) :\r\n                this.stripe.handleCardSetup(clientSecret);\r\n            return handleCardPayment().then(async (result: any) => {\r\n                if (result.error) {\r\n                    reject(result.error.message);\r\n                } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\r\n                    if (successCallback != null) {\r\n                        await successCallback();\r\n                    }\r\n                    resolve();\r\n                } else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private setStripeElement() {\r\n        window.setTimeout(() => {\r\n            if (this.showMethods && this.method === PaymentMethodType.Card) {\r\n                if (this.stripeCardNumberElement == null) {\r\n                    this.stripeCardNumberElement = this.stripeElements.create('cardNumber', {\r\n                        style: StripeElementStyle,\r\n                        classes: StripeElementClasses,\r\n                        placeholder: '',\r\n                    });\r\n                }\r\n                if (this.stripeCardExpiryElement == null) {\r\n                    this.stripeCardExpiryElement = this.stripeElements.create('cardExpiry', {\r\n                        style: StripeElementStyle,\r\n                        classes: StripeElementClasses,\r\n                    });\r\n                }\r\n                if (this.stripeCardCvcElement == null) {\r\n                    this.stripeCardCvcElement = this.stripeElements.create('cardCvc', {\r\n                        style: StripeElementStyle,\r\n                        classes: StripeElementClasses,\r\n                        placeholder: '',\r\n                    });\r\n                }\r\n                this.stripeCardNumberElement.mount('#stripe-card-number-element');\r\n                this.stripeCardExpiryElement.mount('#stripe-card-expiry-element');\r\n                this.stripeCardCvcElement.mount('#stripe-card-cvc-element');\r\n            }\r\n        }, 50);\r\n    }\r\n}\r\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\r\n    <div class=\"form-check form-check-inline mr-4\">\r\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-card\" [value]=\"paymentMethodType.Card\"\r\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\r\n        <label class=\"form-check-label\" for=\"method-card\">\r\n            <i class=\"fa fa-fw fa-credit-card\" aria-hidden=\"true\"></i> {{'creditCard' | i18n}}</label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\r\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-bank\"\r\n            [value]=\"paymentMethodType.BankAccount\" [(ngModel)]=\"method\" (change)=\"changeMethod()\">\r\n        <label class=\"form-check-label\" for=\"method-bank\">\r\n            <i class=\"fa fa-fw fa-university\" aria-hidden=\"true\"></i> {{'bankAccount' | i18n}}</label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\r\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-paypal\" [value]=\"paymentMethodType.PayPal\"\r\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\r\n        <label class=\"form-check-label\" for=\"method-paypal\">\r\n            <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\r\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-credit\" [value]=\"paymentMethodType.Credit\"\r\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\r\n        <label class=\"form-check-label\" for=\"method-credit\">\r\n            <i class=\"fa fa-fw fa-dollar\" aria-hidden=\"true\"></i> {{'accountCredit' | i18n}}</label>\r\n    </div>\r\n</div>\r\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-4\">\r\n            <label for=\"stripe-card-number-element\">{{'number' | i18n}}</label>\r\n            <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\r\n        </div>\r\n        <div class=\"form-group col-8 d-flex align-items-end\">\r\n            <img src=\"images/cards.png\" alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\r\n                width=\"323\" height=\"32\">\r\n        </div>\r\n        <div class=\"form-group col-4\">\r\n            <label for=\"stripe-card-expiry-element\">{{'expiration' | i18n}}</label>\r\n            <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\r\n        </div>\r\n        <div class=\"form-group col-4\">\r\n            <div class=\"d-flex\">\r\n                <label for=\"stripe-card-cvc-element\">\r\n                    {{'securityCode' | i18n}}\r\n                </label>\r\n                <a href=\"https://www.cvvnumber.com/cvv.html\" tabindex=\"-1\" target=\"_blank\" rel=\"noopener noreferrer\"\r\n                    class=\"ml-auto\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                </a>\r\n            </div>\r\n            <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\r\n    <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\">\r\n        {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}\r\n    </app-callout>\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"routing_number\">{{'routingNumber' | i18n}}</label>\r\n            <input id=\"routing_number\" class=\"form-control\" type=\"text\" name=\"routing_number\"\r\n                [(ngModel)]=\"bank.routing_number\" required appInputVerbatim>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"account_number\">{{'accountNumber' | i18n}}</label>\r\n            <input id=\"account_number\" class=\"form-control\" type=\"text\" name=\"account_number\"\r\n                [(ngModel)]=\"bank.account_number\" required appInputVerbatim>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"account_holder_name\">{{'accountHolderName' | i18n}}</label>\r\n            <input id=\"account_holder_name\" class=\"form-control\" type=\"text\" name=\"account_holder_name\"\r\n                [(ngModel)]=\"bank.account_holder_name\" required>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"account_holder_type\">{{'bankAccountType' | i18n}}</label>\r\n            <select id=\"account_holder_type\" class=\"form-control\" name=\"account_holder_type\"\r\n                [(ngModel)]=\"bank.account_holder_type\" required>\r\n                <option value=\"\">-- {{'select' | i18n}} --</option>\r\n                <option value=\"company\">{{'bankAccountTypeCompany' | i18n}}</option>\r\n                <option value=\"individual\">{{'bankAccountTypeIndividual' | i18n}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\r\n    <div class=\"mb-3\">\r\n        <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\r\n        <small class=\"text-muted\">{{'paypalClickSubmit' | i18n}}</small>\r\n    </div>\r\n</ng-container>\r\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\r\n    <app-callout type=\"note\">\r\n        {{'makeSureEnoughCredit' | i18n}}\r\n    </app-callout>\r\n</ng-container>\r\n","import { View } from './view';\r\n\r\nimport { Folder } from '../domain/folder';\r\nimport { ITreeNodeObject } from '../domain/treeNode';\r\n\r\nexport class FolderView implements View, ITreeNodeObject {\r\n    id: string = null;\r\n    name: string = null;\r\n    revisionDate: Date = null;\r\n\r\n    constructor(f?: Folder) {\r\n        if (!f) {\r\n            return;\r\n        }\r\n\r\n        this.id = f.id;\r\n        this.revisionDate = f.revisionDate;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Output,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { OrganizationTaxInfoUpdateRequest } from 'jslib/models/request/organizationTaxInfoUpdateRequest';\r\nimport { TaxInfoUpdateRequest } from 'jslib/models/request/taxInfoUpdateRequest';\r\n\r\n@Component({\r\n    selector: 'app-tax-info',\r\n    templateUrl: 'tax-info.component.html',\r\n})\r\nexport class TaxInfoComponent {\r\n    @Output() onCountryChanged = new EventEmitter();\r\n\r\n    loading: boolean = true;\r\n    organizationId: string;\r\n    taxInfo: any = {\r\n        taxId: null,\r\n        line1: null,\r\n        line2: null,\r\n        city: null,\r\n        state: null,\r\n        postalCode: null,\r\n        country: 'US',\r\n        includeTaxId: false,\r\n    };\r\n\r\n    private pristine: any = {\r\n        taxId: null,\r\n        line1: null,\r\n        line2: null,\r\n        city: null,\r\n        state: null,\r\n        postalCode: null,\r\n        country: 'US',\r\n        includeTaxId: false,\r\n    };\r\n\r\n    constructor(private apiService: ApiService, private route: ActivatedRoute) { }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            if (this.organizationId) {\r\n                try {\r\n                    const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\r\n                    if (taxInfo) {\r\n                        this.taxInfo.taxId = taxInfo.taxId;\r\n                        this.taxInfo.state = taxInfo.state;\r\n                        this.taxInfo.line1 = taxInfo.line1;\r\n                        this.taxInfo.line2 = taxInfo.line2;\r\n                        this.taxInfo.city = taxInfo.city;\r\n                        this.taxInfo.state = taxInfo.state;\r\n                        this.taxInfo.postalCode = taxInfo.postalCode;\r\n                        this.taxInfo.country = taxInfo.country || 'US';\r\n                        this.taxInfo.includeTaxId = this.taxInfo.country !== 'US' && (\r\n                            !!taxInfo.taxId\r\n                            || !!taxInfo.line1\r\n                            || !!taxInfo.line2\r\n                            || !!taxInfo.city\r\n                            || !!taxInfo.state);\r\n                    }\r\n                } catch { }\r\n            } else {\r\n                const taxInfo = await this.apiService.getTaxInfo();\r\n                if (taxInfo) {\r\n                    this.taxInfo.postalCode = taxInfo.postalCode;\r\n                    this.taxInfo.country = taxInfo.country || 'US';\r\n                }\r\n            }\r\n            this.pristine = Object.assign({}, this.taxInfo);\r\n            // If not the default (US) then trigger onCountryChanged\r\n            if (this.taxInfo.country !== 'US') {\r\n                this.onCountryChanged.emit();\r\n            }\r\n        });\r\n        this.loading = false;\r\n    }\r\n\r\n    getTaxInfoRequest(): TaxInfoUpdateRequest {\r\n        if (this.organizationId) {\r\n            const request = new OrganizationTaxInfoUpdateRequest();\r\n            request.taxId = this.taxInfo.taxId;\r\n            request.state = this.taxInfo.state;\r\n            request.line1 = this.taxInfo.line1;\r\n            request.line2 = this.taxInfo.line2;\r\n            request.city = this.taxInfo.city;\r\n            request.state = this.taxInfo.state;\r\n            request.postalCode = this.taxInfo.postalCode;\r\n            request.country = this.taxInfo.country;\r\n            return request;\r\n        } else {\r\n            const request = new TaxInfoUpdateRequest();\r\n            request.postalCode = this.taxInfo.postalCode;\r\n            request.country = this.taxInfo.country;\r\n            return request;\r\n        }\r\n    }\r\n\r\n    submitTaxInfo(): Promise<any> {\r\n        if (!this.hasChanged()) {\r\n            return new Promise((resolve) => { resolve(); });\r\n        }\r\n        const request = this.getTaxInfoRequest();\r\n        return this.organizationId ? this.apiService.putOrganizationTaxInfo(this.organizationId,\r\n            request as OrganizationTaxInfoUpdateRequest) : this.apiService.putTaxInfo(request);\r\n    }\r\n\r\n    changeCountry() {\r\n        if (this.taxInfo.country === 'US') {\r\n            this.taxInfo.includeTaxId = false;\r\n            this.taxInfo.taxId = null;\r\n            this.taxInfo.line1 = null;\r\n            this.taxInfo.line2 = null;\r\n            this.taxInfo.city = null;\r\n            this.taxInfo.state = null;\r\n        }\r\n        this.onCountryChanged.emit();\r\n    }\r\n\r\n    private hasChanged(): boolean {\r\n        for (const key in this.taxInfo) {\r\n            if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n            <label for=\"addressCountry\">{{'country' | i18n}}</label>\r\n            <select id=\"addressCountry\" class=\"form-control\" [(ngModel)]=\"taxInfo.country\" required name=\"addressCountry\" \r\n                autocomplete=\"country\" (change)=\"changeCountry()\">\r\n                <option value=\"\">-- Select --</option>\r\n                <option value=\"US\">United States</option>\r\n                <option value=\"CN\">China</option>\r\n                <option value=\"FR\">France</option>\r\n                <option value=\"DE\">Germany</option>\r\n                <option value=\"CA\">Canada</option>\r\n                <option value=\"GB\">United Kingdom</option>\r\n                <option value=\"AU\">Australia</option>\r\n                <option value=\"IN\">India</option>\r\n                <option value=\"-\" disabled></option>\r\n                <option value=\"AF\">Afghanistan</option>\r\n                <option value=\"AX\">Åland Islands</option>\r\n                <option value=\"AL\">Albania</option>\r\n                <option value=\"DZ\">Algeria</option>\r\n                <option value=\"AS\">American Samoa</option>\r\n                <option value=\"AD\">Andorra</option>\r\n                <option value=\"AO\">Angola</option>\r\n                <option value=\"AI\">Anguilla</option>\r\n                <option value=\"AQ\">Antarctica</option>\r\n                <option value=\"AG\">Antigua and Barbuda</option>\r\n                <option value=\"AR\">Argentina</option>\r\n                <option value=\"AM\">Armenia</option>\r\n                <option value=\"AW\">Aruba</option>\r\n                <option value=\"AT\">Austria</option>\r\n                <option value=\"AZ\">Azerbaijan</option>\r\n                <option value=\"BS\">Bahamas</option>\r\n                <option value=\"BH\">Bahrain</option>\r\n                <option value=\"BD\">Bangladesh</option>\r\n                <option value=\"BB\">Barbados</option>\r\n                <option value=\"BY\">Belarus</option>\r\n                <option value=\"BE\">Belgium</option>\r\n                <option value=\"BZ\">Belize</option>\r\n                <option value=\"BJ\">Benin</option>\r\n                <option value=\"BM\">Bermuda</option>\r\n                <option value=\"BT\">Bhutan</option>\r\n                <option value=\"BO\">Bolivia, Plurinational State of</option>\r\n                <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\r\n                <option value=\"BA\">Bosnia and Herzegovina</option>\r\n                <option value=\"BW\">Botswana</option>\r\n                <option value=\"BV\">Bouvet Island</option>\r\n                <option value=\"BR\">Brazil</option>\r\n                <option value=\"IO\">British Indian Ocean Territory</option>\r\n                <option value=\"BN\">Brunei Darussalam</option>\r\n                <option value=\"BG\">Bulgaria</option>\r\n                <option value=\"BF\">Burkina Faso</option>\r\n                <option value=\"BI\">Burundi</option>\r\n                <option value=\"KH\">Cambodia</option>\r\n                <option value=\"CM\">Cameroon</option>\r\n                <option value=\"CV\">Cape Verde</option>\r\n                <option value=\"KY\">Cayman Islands</option>\r\n                <option value=\"CF\">Central African Republic</option>\r\n                <option value=\"TD\">Chad</option>\r\n                <option value=\"CL\">Chile</option>\r\n                <option value=\"CX\">Christmas Island</option>\r\n                <option value=\"CC\">Cocos (Keeling) Islands</option>\r\n                <option value=\"CO\">Colombia</option>\r\n                <option value=\"KM\">Comoros</option>\r\n                <option value=\"CG\">Congo</option>\r\n                <option value=\"CD\">Congo, the Democratic Republic of the</option>\r\n                <option value=\"CK\">Cook Islands</option>\r\n                <option value=\"CR\">Costa Rica</option>\r\n                <option value=\"CI\">Côte d'Ivoire</option>\r\n                <option value=\"HR\">Croatia</option>\r\n                <option value=\"CU\">Cuba</option>\r\n                <option value=\"CW\">Curaçao</option>\r\n                <option value=\"CY\">Cyprus</option>\r\n                <option value=\"CZ\">Czech Republic</option>\r\n                <option value=\"DK\">Denmark</option>\r\n                <option value=\"DJ\">Djibouti</option>\r\n                <option value=\"DM\">Dominica</option>\r\n                <option value=\"DO\">Dominican Republic</option>\r\n                <option value=\"EC\">Ecuador</option>\r\n                <option value=\"EG\">Egypt</option>\r\n                <option value=\"SV\">El Salvador</option>\r\n                <option value=\"GQ\">Equatorial Guinea</option>\r\n                <option value=\"ER\">Eritrea</option>\r\n                <option value=\"EE\">Estonia</option>\r\n                <option value=\"ET\">Ethiopia</option>\r\n                <option value=\"FK\">Falkland Islands (Malvinas)</option>\r\n                <option value=\"FO\">Faroe Islands</option>\r\n                <option value=\"FJ\">Fiji</option>\r\n                <option value=\"FI\">Finland</option>\r\n                <option value=\"GF\">French Guiana</option>\r\n                <option value=\"PF\">French Polynesia</option>\r\n                <option value=\"TF\">French Southern Territories</option>\r\n                <option value=\"GA\">Gabon</option>\r\n                <option value=\"GM\">Gambia</option>\r\n                <option value=\"GE\">Georgia</option>\r\n                <option value=\"GH\">Ghana</option>\r\n                <option value=\"GI\">Gibraltar</option>\r\n                <option value=\"GR\">Greece</option>\r\n                <option value=\"GL\">Greenland</option>\r\n                <option value=\"GD\">Grenada</option>\r\n                <option value=\"GP\">Guadeloupe</option>\r\n                <option value=\"GU\">Guam</option>\r\n                <option value=\"GT\">Guatemala</option>\r\n                <option value=\"GG\">Guernsey</option>\r\n                <option value=\"GN\">Guinea</option>\r\n                <option value=\"GW\">Guinea-Bissau</option>\r\n                <option value=\"GY\">Guyana</option>\r\n                <option value=\"HT\">Haiti</option>\r\n                <option value=\"HM\">Heard Island and McDonald Islands</option>\r\n                <option value=\"VA\">Holy See (Vatican City State)</option>\r\n                <option value=\"HN\">Honduras</option>\r\n                <option value=\"HK\">Hong Kong</option>\r\n                <option value=\"HU\">Hungary</option>\r\n                <option value=\"IS\">Iceland</option>\r\n                <option value=\"ID\">Indonesia</option>\r\n                <option value=\"IR\">Iran, Islamic Republic of</option>\r\n                <option value=\"IQ\">Iraq</option>\r\n                <option value=\"IE\">Ireland</option>\r\n                <option value=\"IM\">Isle of Man</option>\r\n                <option value=\"IL\">Israel</option>\r\n                <option value=\"IT\">Italy</option>\r\n                <option value=\"JM\">Jamaica</option>\r\n                <option value=\"JP\">Japan</option>\r\n                <option value=\"JE\">Jersey</option>\r\n                <option value=\"JO\">Jordan</option>\r\n                <option value=\"KZ\">Kazakhstan</option>\r\n                <option value=\"KE\">Kenya</option>\r\n                <option value=\"KI\">Kiribati</option>\r\n                <option value=\"KP\">Korea, Democratic People's Republic of</option>\r\n                <option value=\"KR\">Korea, Republic of</option>\r\n                <option value=\"KW\">Kuwait</option>\r\n                <option value=\"KG\">Kyrgyzstan</option>\r\n                <option value=\"LA\">Lao People's Democratic Republic</option>\r\n                <option value=\"LV\">Latvia</option>\r\n                <option value=\"LB\">Lebanon</option>\r\n                <option value=\"LS\">Lesotho</option>\r\n                <option value=\"LR\">Liberia</option>\r\n                <option value=\"LY\">Libya</option>\r\n                <option value=\"LI\">Liechtenstein</option>\r\n                <option value=\"LT\">Lithuania</option>\r\n                <option value=\"LU\">Luxembourg</option>\r\n                <option value=\"MO\">Macao</option>\r\n                <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\r\n                <option value=\"MG\">Madagascar</option>\r\n                <option value=\"MW\">Malawi</option>\r\n                <option value=\"MY\">Malaysia</option>\r\n                <option value=\"MV\">Maldives</option>\r\n                <option value=\"ML\">Mali</option>\r\n                <option value=\"MT\">Malta</option>\r\n                <option value=\"MH\">Marshall Islands</option>\r\n                <option value=\"MQ\">Martinique</option>\r\n                <option value=\"MR\">Mauritania</option>\r\n                <option value=\"MU\">Mauritius</option>\r\n                <option value=\"YT\">Mayotte</option>\r\n                <option value=\"MX\">Mexico</option>\r\n                <option value=\"FM\">Micronesia, Federated States of</option>\r\n                <option value=\"MD\">Moldova, Republic of</option>\r\n                <option value=\"MC\">Monaco</option>\r\n                <option value=\"MN\">Mongolia</option>\r\n                <option value=\"ME\">Montenegro</option>\r\n                <option value=\"MS\">Montserrat</option>\r\n                <option value=\"MA\">Morocco</option>\r\n                <option value=\"MZ\">Mozambique</option>\r\n                <option value=\"MM\">Myanmar</option>\r\n                <option value=\"NA\">Namibia</option>\r\n                <option value=\"NR\">Nauru</option>\r\n                <option value=\"NP\">Nepal</option>\r\n                <option value=\"NL\">Netherlands</option>\r\n                <option value=\"NC\">New Caledonia</option>\r\n                <option value=\"NZ\">New Zealand</option>\r\n                <option value=\"NI\">Nicaragua</option>\r\n                <option value=\"NE\">Niger</option>\r\n                <option value=\"NG\">Nigeria</option>\r\n                <option value=\"NU\">Niue</option>\r\n                <option value=\"NF\">Norfolk Island</option>\r\n                <option value=\"MP\">Northern Mariana Islands</option>\r\n                <option value=\"NO\">Norway</option>\r\n                <option value=\"OM\">Oman</option>\r\n                <option value=\"PK\">Pakistan</option>\r\n                <option value=\"PW\">Palau</option>\r\n                <option value=\"PS\">Palestinian Territory, Occupied</option>\r\n                <option value=\"PA\">Panama</option>\r\n                <option value=\"PG\">Papua New Guinea</option>\r\n                <option value=\"PY\">Paraguay</option>\r\n                <option value=\"PE\">Peru</option>\r\n                <option value=\"PH\">Philippines</option>\r\n                <option value=\"PN\">Pitcairn</option>\r\n                <option value=\"PL\">Poland</option>\r\n                <option value=\"PT\">Portugal</option>\r\n                <option value=\"PR\">Puerto Rico</option>\r\n                <option value=\"QA\">Qatar</option>\r\n                <option value=\"RE\">Réunion</option>\r\n                <option value=\"RO\">Romania</option>\r\n                <option value=\"RU\">Russian Federation</option>\r\n                <option value=\"RW\">Rwanda</option>\r\n                <option value=\"BL\">Saint Barthélemy</option>\r\n                <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\r\n                <option value=\"KN\">Saint Kitts and Nevis</option>\r\n                <option value=\"LC\">Saint Lucia</option>\r\n                <option value=\"MF\">Saint Martin (French part)</option>\r\n                <option value=\"PM\">Saint Pierre and Miquelon</option>\r\n                <option value=\"VC\">Saint Vincent and the Grenadines</option>\r\n                <option value=\"WS\">Samoa</option>\r\n                <option value=\"SM\">San Marino</option>\r\n                <option value=\"ST\">Sao Tome and Principe</option>\r\n                <option value=\"SA\">Saudi Arabia</option>\r\n                <option value=\"SN\">Senegal</option>\r\n                <option value=\"RS\">Serbia</option>\r\n                <option value=\"SC\">Seychelles</option>\r\n                <option value=\"SL\">Sierra Leone</option>\r\n                <option value=\"SG\">Singapore</option>\r\n                <option value=\"SX\">Sint Maarten (Dutch part)</option>\r\n                <option value=\"SK\">Slovakia</option>\r\n                <option value=\"SI\">Slovenia</option>\r\n                <option value=\"SB\">Solomon Islands</option>\r\n                <option value=\"SO\">Somalia</option>\r\n                <option value=\"ZA\">South Africa</option>\r\n                <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\r\n                <option value=\"SS\">South Sudan</option>\r\n                <option value=\"ES\">Spain</option>\r\n                <option value=\"LK\">Sri Lanka</option>\r\n                <option value=\"SD\">Sudan</option>\r\n                <option value=\"SR\">Suriname</option>\r\n                <option value=\"SJ\">Svalbard and Jan Mayen</option>\r\n                <option value=\"SZ\">Swaziland</option>\r\n                <option value=\"SE\">Sweden</option>\r\n                <option value=\"CH\">Switzerland</option>\r\n                <option value=\"SY\">Syrian Arab Republic</option>\r\n                <option value=\"TW\">Taiwan</option>\r\n                <option value=\"TJ\">Tajikistan</option>\r\n                <option value=\"TZ\">Tanzania, United Republic of</option>\r\n                <option value=\"TH\">Thailand</option>\r\n                <option value=\"TL\">Timor-Leste</option>\r\n                <option value=\"TG\">Togo</option>\r\n                <option value=\"TK\">Tokelau</option>\r\n                <option value=\"TO\">Tonga</option>\r\n                <option value=\"TT\">Trinidad and Tobago</option>\r\n                <option value=\"TN\">Tunisia</option>\r\n                <option value=\"TR\">Turkey</option>\r\n                <option value=\"TM\">Turkmenistan</option>\r\n                <option value=\"TC\">Turks and Caicos Islands</option>\r\n                <option value=\"TV\">Tuvalu</option>\r\n                <option value=\"UG\">Uganda</option>\r\n                <option value=\"UA\">Ukraine</option>\r\n                <option value=\"AE\">United Arab Emirates</option>\r\n                <option value=\"UM\">United States Minor Outlying Islands</option>\r\n                <option value=\"UY\">Uruguay</option>\r\n                <option value=\"UZ\">Uzbekistan</option>\r\n                <option value=\"VU\">Vanuatu</option>\r\n                <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\r\n                <option value=\"VN\">Viet Nam</option>\r\n                <option value=\"VG\">Virgin Islands, British</option>\r\n                <option value=\"VI\">Virgin Islands, U.S.</option>\r\n                <option value=\"WF\">Wallis and Futuna</option>\r\n                <option value=\"EH\">Western Sahara</option>\r\n                <option value=\"YE\">Yemen</option>\r\n                <option value=\"ZM\">Zambia</option>\r\n                <option value=\"ZW\">Zimbabwe</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n            <label for=\"addressPostalCode\">{{'zipPostalCode' | i18n}}</label>\r\n            <input id=\"addressPostalCode\" class=\"form-control\" type=\"text\" name=\"addressPostalCode\" \r\n                [(ngModel)]=\"taxInfo.postalCode\" [required]=\"taxInfo.country === 'US'\" autocomplete=\"postal-code\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\r\n        <div class=\"form-group form-check\">\r\n            <input class=\"form-check-input\" id=\"addressIncludeTaxId\" name=\"addressIncludeTaxId\" type=\"checkbox\" \r\n                [(ngModel)]=\"taxInfo.includeTaxId\">\r\n            <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{'includeVAT' | i18n}}</label>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\r\n    <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n            <label for=\"taxId\">{{'taxIdNumber' | i18n}}</label>\r\n            <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\">\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\r\n    <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n            <label for=\"addressLine1\">{{'address1' | i18n}}</label>\r\n            <input id=\"addressLine1\" class=\"form-control\" type=\"text\" name=\"addressLine1\" \r\n                [(ngModel)]=\"taxInfo.line1\" autocomplete=\"address-line1\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n            <label for=\"addressLine2\">{{'address2' | i18n}}</label>\r\n            <input id=\"addressLine2\" class=\"form-control\" type=\"text\" name=\"addressLine2\" \r\n                [(ngModel)]=\"taxInfo.line2\" autocomplete=\"address-line2\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n            <label for=\"addressCity\">{{'cityTown' | i18n}}</label>\r\n            <input id=\"addressCity\" class=\"form-control\" type=\"text\" name=\"addressCity\" \r\n                [(ngModel)]=\"taxInfo.city\" autocomplete=\"address-level2\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <div class=\"form-group\">\r\n            <label for=\"addressState\">{{'stateProvince' | i18n}}</label>\r\n            <input id=\"addressState\" class=\"form-control\" type=\"text\" name=\"addressState\" \r\n                [(ngModel)]=\"taxInfo.state\" autocomplete=\"address-level1\">\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { CipherType } from '../../enums/cipherType';\r\n\r\nimport { Cipher } from '../domain/cipher';\r\n\r\nimport { AttachmentView } from './attachmentView';\r\nimport { CardView } from './cardView';\r\nimport { FieldView } from './fieldView';\r\nimport { IdentityView } from './identityView';\r\nimport { LoginView } from './loginView';\r\nimport { PasswordHistoryView } from './passwordHistoryView';\r\nimport { SecureNoteView } from './secureNoteView';\r\nimport { View } from './view';\r\n\r\nexport class CipherView implements View {\r\n    id: string = null;\r\n    organizationId: string = null;\r\n    folderId: string = null;\r\n    name: string = null;\r\n    notes: string = null;\r\n    type: CipherType = null;\r\n    favorite = false;\r\n    organizationUseTotp = false;\r\n    edit = false;\r\n    viewPassword = true;\r\n    localData: any;\r\n    login = new LoginView();\r\n    identity = new IdentityView();\r\n    card = new CardView();\r\n    secureNote = new SecureNoteView();\r\n    attachments: AttachmentView[] = null;\r\n    fields: FieldView[] = null;\r\n    passwordHistory: PasswordHistoryView[] = null;\r\n    collectionIds: string[] = null;\r\n    revisionDate: Date = null;\r\n    deletedDate: Date = null;\r\n\r\n    constructor(c?: Cipher) {\r\n        if (!c) {\r\n            return;\r\n        }\r\n\r\n        this.id = c.id;\r\n        this.organizationId = c.organizationId;\r\n        this.folderId = c.folderId;\r\n        this.favorite = c.favorite;\r\n        this.organizationUseTotp = c.organizationUseTotp;\r\n        this.edit = c.edit;\r\n        this.viewPassword = c.viewPassword;\r\n        this.type = c.type;\r\n        this.localData = c.localData;\r\n        this.collectionIds = c.collectionIds;\r\n        this.revisionDate = c.revisionDate;\r\n        this.deletedDate = c.deletedDate;\r\n    }\r\n\r\n    get subTitle(): string {\r\n        switch (this.type) {\r\n            case CipherType.Login:\r\n                return this.login.subTitle;\r\n            case CipherType.SecureNote:\r\n                return this.secureNote.subTitle;\r\n            case CipherType.Card:\r\n                return this.card.subTitle;\r\n            case CipherType.Identity:\r\n                return this.identity.subTitle;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get hasPasswordHistory(): boolean {\r\n        return this.passwordHistory && this.passwordHistory.length > 0;\r\n    }\r\n\r\n    get hasAttachments(): boolean {\r\n        return this.attachments && this.attachments.length > 0;\r\n    }\r\n\r\n    get hasOldAttachments(): boolean {\r\n        if (this.hasAttachments) {\r\n            for (let i = 0; i < this.attachments.length; i++) {\r\n                if (this.attachments[i].key == null) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get hasFields(): boolean {\r\n        return this.fields && this.fields.length > 0;\r\n    }\r\n\r\n    get passwordRevisionDisplayDate(): Date {\r\n        if (this.type !== CipherType.Login || this.login == null) {\r\n            return null;\r\n        } else if (this.login.password == null || this.login.password === '') {\r\n            return null;\r\n        }\r\n        return this.login.passwordRevisionDate;\r\n    }\r\n\r\n    get isDeleted(): boolean {\r\n        return this.deletedDate != null;\r\n    }\r\n}\r\n","import { View } from './view';\r\n\r\nimport { Identity } from '../domain/identity';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nexport class IdentityView implements View {\r\n    title: string = null;\r\n    middleName: string = null;\r\n    address1: string = null;\r\n    address2: string = null;\r\n    address3: string = null;\r\n    city: string = null;\r\n    state: string = null;\r\n    postalCode: string = null;\r\n    country: string = null;\r\n    company: string = null;\r\n    email: string = null;\r\n    phone: string = null;\r\n    ssn: string = null;\r\n    username: string = null;\r\n    passportNumber: string = null;\r\n    licenseNumber: string = null;\r\n\r\n    // tslint:disable\r\n    private _firstName: string = null;\r\n    private _lastName: string = null;\r\n    private _subTitle: string = null;\r\n    // tslint:enable\r\n\r\n    constructor(i?: Identity) {\r\n        // ctor\r\n    }\r\n\r\n    get firstName(): string {\r\n        return this._firstName;\r\n    }\r\n    set firstName(value: string) {\r\n        this._firstName = value;\r\n        this._subTitle = null;\r\n    }\r\n\r\n    get lastName(): string {\r\n        return this._lastName;\r\n    }\r\n    set lastName(value: string) {\r\n        this._lastName = value;\r\n        this._subTitle = null;\r\n    }\r\n\r\n    get subTitle(): string {\r\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\r\n            this._subTitle = '';\r\n            if (this.firstName != null) {\r\n                this._subTitle = this.firstName;\r\n            }\r\n            if (this.lastName != null) {\r\n                if (this._subTitle !== '') {\r\n                    this._subTitle += ' ';\r\n                }\r\n                this._subTitle += this.lastName;\r\n            }\r\n        }\r\n\r\n        return this._subTitle;\r\n    }\r\n\r\n    get fullName(): string {\r\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\r\n            let name = '';\r\n            if (this.title != null) {\r\n                name += (this.title + ' ');\r\n            }\r\n            if (this.firstName != null) {\r\n                name += (this.firstName + ' ');\r\n            }\r\n            if (this.middleName != null) {\r\n                name += (this.middleName + ' ');\r\n            }\r\n            if (this.lastName != null) {\r\n                name += this.lastName;\r\n            }\r\n            return name.trim();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get fullAddress(): string {\r\n        let address = this.address1;\r\n        if (!Utils.isNullOrWhitespace(this.address2)) {\r\n            if (!Utils.isNullOrWhitespace(address)) {\r\n                address += ', ';\r\n            }\r\n            address += this.address2;\r\n        }\r\n        if (!Utils.isNullOrWhitespace(this.address3)) {\r\n            if (!Utils.isNullOrWhitespace(address)) {\r\n                address += ', ';\r\n            }\r\n            address += this.address3;\r\n        }\r\n        return address;\r\n    }\r\n\r\n    get fullAddressPart2(): string {\r\n        if (this.city == null && this.state == null && this.postalCode == null) {\r\n            return null;\r\n        }\r\n        const city = this.city || '-';\r\n        const state = this.state;\r\n        const postalCode = this.postalCode || '-';\r\n        let addressPart2 = city;\r\n        if (!Utils.isNullOrWhitespace(state)) {\r\n            addressPart2 += ', ' + state;\r\n        }\r\n        addressPart2 += ', ' + postalCode;\r\n        return addressPart2;\r\n    }\r\n}\r\n","export enum FieldType {\r\n    Text = 0,\r\n    Hidden = 1,\r\n    Boolean = 2,\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\n@Component({\r\n    selector: 'app-avatar',\r\n    template: '<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\r\n        '[ngClass]=\"{\\'rounded-circle\\': circle}\">',\r\n})\r\nexport class AvatarComponent implements OnChanges, OnInit {\r\n    @Input() data: string;\r\n    @Input() email: string;\r\n    @Input() size = 45;\r\n    @Input() charCount = 2;\r\n    @Input() textColor = '#ffffff';\r\n    @Input() fontSize = 20;\r\n    @Input() fontWeight = 300;\r\n    @Input() dynamic = false;\r\n    @Input() circle = false;\r\n\r\n    src: string;\r\n\r\n    constructor(public sanitizer: DomSanitizer, private cryptoFunctionService: CryptoFunctionService,\r\n        private stateService: StateService) { }\r\n\r\n    ngOnInit() {\r\n        if (!this.dynamic) {\r\n            this.generate();\r\n        }\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.dynamic) {\r\n            this.generate();\r\n        }\r\n    }\r\n\r\n    private async generate() {\r\n        const enableGravatars = await this.stateService.get<boolean>('enableGravatars');\r\n        if (enableGravatars && this.email != null) {\r\n            const hashBytes = await this.cryptoFunctionService.hash(this.email.toLowerCase().trim(), 'md5');\r\n            const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\r\n            this.src = 'https://www.gravatar.com/avatar/' + hash + '?s=' + this.size + '&r=pg&d=retro';\r\n        } else {\r\n            let chars: string = null;\r\n            const upperData = this.data.toUpperCase();\r\n\r\n            if (this.charCount > 1) {\r\n                chars = this.getFirstLetters(upperData, this.charCount);\r\n            }\r\n            if (chars == null) {\r\n                chars = upperData.substr(0, this.charCount);\r\n            }\r\n\r\n            const charObj = this.getCharText(chars);\r\n            const color = this.stringToColor(upperData);\r\n            const svg = this.getSvg(this.size, color);\r\n            svg.appendChild(charObj);\r\n            const html = window.document.createElement('div').appendChild(svg).outerHTML;\r\n            const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\r\n            this.src = 'data:image/svg+xml;base64,' + svgHtml;\r\n        }\r\n    }\r\n\r\n    private stringToColor(str: string): string {\r\n        let hash = 0;\r\n        for (let i = 0; i < str.length; i++) {\r\n            // tslint:disable-next-line\r\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n        }\r\n        let color = '#';\r\n        for (let i = 0; i < 3; i++) {\r\n            // tslint:disable-next-line\r\n            const value = (hash >> (i * 8)) & 0xFF;\r\n            color += ('00' + value.toString(16)).substr(-2);\r\n        }\r\n        return color;\r\n    }\r\n\r\n    private getFirstLetters(data: string, count: number): string {\r\n        const parts = data.split(' ');\r\n        if (parts.length > 1) {\r\n            let text = '';\r\n            for (let i = 0; i < count; i++) {\r\n                text += parts[i].substr(0, 1);\r\n            }\r\n            return text;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private getSvg(size: number, color: string): HTMLElement {\r\n        const svgTag = window.document.createElement('svg');\r\n        svgTag.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n        svgTag.setAttribute('pointer-events', 'none');\r\n        svgTag.setAttribute('width', size.toString());\r\n        svgTag.setAttribute('height', size.toString());\r\n        svgTag.style.backgroundColor = color;\r\n        svgTag.style.width = size + 'px';\r\n        svgTag.style.height = size + 'px';\r\n        return svgTag;\r\n    }\r\n\r\n    private getCharText(character: string): HTMLElement {\r\n        const textTag = window.document.createElement('text');\r\n        textTag.setAttribute('text-anchor', 'middle');\r\n        textTag.setAttribute('y', '50%');\r\n        textTag.setAttribute('x', '50%');\r\n        textTag.setAttribute('dy', '0.35em');\r\n        textTag.setAttribute('pointer-events', 'auto');\r\n        textTag.setAttribute('fill', this.textColor);\r\n        textTag.setAttribute('font-family', '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\r\n            'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"');\r\n        textTag.textContent = character;\r\n        textTag.style.fontWeight = this.fontWeight.toString();\r\n        textTag.style.fontSize = this.fontSize + 'px';\r\n        return textTag;\r\n    }\r\n}\r\n","import { View } from './view';\r\n\r\nimport { Collection } from '../domain/collection';\r\nimport { ITreeNodeObject } from '../domain/treeNode';\r\n\r\nimport { CollectionGroupDetailsResponse } from '../response/collectionResponse';\r\n\r\nexport class CollectionView implements View, ITreeNodeObject {\r\n    id: string = null;\r\n    organizationId: string = null;\r\n    name: string = null;\r\n    externalId: string = null;\r\n    readOnly: boolean = null;\r\n    hidePasswords: boolean = null;\r\n\r\n    constructor(c?: Collection | CollectionGroupDetailsResponse) {\r\n        if (!c) {\r\n            return;\r\n        }\r\n\r\n        this.id = c.id;\r\n        this.organizationId = c.organizationId;\r\n        this.externalId = c.externalId;\r\n        if (c instanceof Collection) {\r\n            this.readOnly = c.readOnly;\r\n            this.hidePasswords = c.hidePasswords;\r\n        }\r\n    }\r\n}\r\n","import { LoginUriView } from './loginUriView';\r\nimport { View } from './view';\r\n\r\nimport { Login } from '../domain/login';\r\n\r\nexport class LoginView implements View {\r\n    username: string = null;\r\n    password: string = null;\r\n    passwordRevisionDate?: Date = null;\r\n    totp: string = null;\r\n    uris: LoginUriView[] = null;\r\n\r\n    constructor(l?: Login) {\r\n        if (!l) {\r\n            return;\r\n        }\r\n\r\n        this.passwordRevisionDate = l.passwordRevisionDate;\r\n    }\r\n\r\n    get uri(): string {\r\n        return this.hasUris ? this.uris[0].uri : null;\r\n    }\r\n\r\n    get maskedPassword(): string {\r\n        return this.password != null ? '••••••••' : null;\r\n    }\r\n\r\n    get subTitle(): string {\r\n        return this.username;\r\n    }\r\n\r\n    get canLaunch(): boolean {\r\n        return this.hasUris && this.uris.some((u) => u.canLaunch);\r\n    }\r\n\r\n    get launchUri(): string {\r\n        if (this.hasUris) {\r\n            const uri = this.uris.find((u) => u.canLaunch);\r\n            if (uri != null) {\r\n                return uri.launchUri;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get hasUris(): boolean {\r\n        return this.uris != null && this.uris.length > 0;\r\n    }\r\n}\r\n","export enum SendType {\r\n    Text = 0,\r\n    File = 1,\r\n}\r\n","import { CollectionDetailsResponse } from '../response/collectionResponse';\r\n\r\nexport class CollectionData {\r\n    id: string;\r\n    organizationId: string;\r\n    name: string;\r\n    externalId: string;\r\n    readOnly: boolean;\r\n\r\n    constructor(response: CollectionDetailsResponse) {\r\n        this.id = response.id;\r\n        this.organizationId = response.organizationId;\r\n        this.name = response.name;\r\n        this.externalId = response.externalId;\r\n        this.readOnly = response.readOnly;\r\n    }\r\n}\r\n","import { CollectionData } from '../data/collectionData';\r\n\r\nimport { CollectionView } from '../view/collectionView';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nexport class Collection extends Domain {\r\n    id: string;\r\n    organizationId: string;\r\n    name: CipherString;\r\n    externalId: string;\r\n    readOnly: boolean;\r\n    hidePasswords: boolean;\r\n\r\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            id: null,\r\n            organizationId: null,\r\n            name: null,\r\n            externalId: null,\r\n            readOnly: null,\r\n            hidePasswords: null,\r\n        }, alreadyEncrypted, ['id', 'organizationId', 'externalId', 'readOnly', 'hidePasswords']);\r\n    }\r\n\r\n    decrypt(): Promise<CollectionView> {\r\n        return this.decryptObj(new CollectionView(this), {\r\n            name: null,\r\n        }, this.organizationId);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-verify',\r\n    templateUrl: 'two-factor-verify.component.html',\r\n})\r\nexport class TwoFactorVerifyComponent {\r\n    @Input() type: TwoFactorProviderType;\r\n    @Input() organizationId: string;\r\n    @Output() onAuthed = new EventEmitter<any>();\r\n\r\n    masterPassword: string;\r\n    formPromise: Promise<any>;\r\n\r\n    private masterPasswordHash: string;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        const request = new PasswordVerificationRequest();\r\n        request.masterPasswordHash = this.masterPasswordHash =\r\n            await this.cryptoService.hashPassword(this.masterPassword, null);\r\n\r\n        try {\r\n            switch (this.type) {\r\n                case -1:\r\n                    this.formPromise = this.apiService.getTwoFactorRecover(request);\r\n                    break;\r\n                case TwoFactorProviderType.Duo:\r\n                case TwoFactorProviderType.OrganizationDuo:\r\n                    if (this.organizationId != null) {\r\n                        this.formPromise = this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\r\n                    } else {\r\n                        this.formPromise = this.apiService.getTwoFactorDuo(request);\r\n                    }\r\n                    break;\r\n                case TwoFactorProviderType.Email:\r\n                    this.formPromise = this.apiService.getTwoFactorEmail(request);\r\n                    break;\r\n                case TwoFactorProviderType.U2f:\r\n                    this.formPromise = this.apiService.getTwoFactorU2f(request);\r\n                    break;\r\n                case TwoFactorProviderType.Authenticator:\r\n                    this.formPromise = this.apiService.getTwoFactorAuthenticator(request);\r\n                    break;\r\n                case TwoFactorProviderType.Yubikey:\r\n                    this.formPromise = this.apiService.getTwoFactorYubiKey(request);\r\n                    break;\r\n            }\r\n\r\n            const response = await this.formPromise;\r\n            this.onAuthed.emit({\r\n                response: response,\r\n                masterPasswordHash: this.masterPasswordHash,\r\n            });\r\n        } catch { }\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"modal-body\">\r\n        <p>{{'twoStepLoginAuthDesc' | i18n}}</p>\r\n        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n        <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n            [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'continue' | i18n}}</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n    </div>\r\n</form>\r\n","export abstract class ExportService {\r\n    getExport: (format?: 'csv' | 'json') => Promise<string>;\r\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json') => Promise<string>;\r\n    getFileName: (prefix?: string, extension?: string) => string;\r\n}\r\n","import { CipherType } from '../../enums/cipherType';\r\n\r\nimport { AttachmentData } from './attachmentData';\r\nimport { CardData } from './cardData';\r\nimport { FieldData } from './fieldData';\r\nimport { IdentityData } from './identityData';\r\nimport { LoginData } from './loginData';\r\nimport { PasswordHistoryData } from './passwordHistoryData';\r\nimport { SecureNoteData } from './secureNoteData';\r\n\r\nimport { CipherResponse } from '../response/cipherResponse';\r\n\r\nexport class CipherData {\r\n    id: string;\r\n    organizationId: string;\r\n    folderId: string;\r\n    userId: string;\r\n    edit: boolean;\r\n    viewPassword: boolean;\r\n    organizationUseTotp: boolean;\r\n    favorite: boolean;\r\n    revisionDate: string;\r\n    type: CipherType;\r\n    sizeName: string;\r\n    name: string;\r\n    notes: string;\r\n    login?: LoginData;\r\n    secureNote?: SecureNoteData;\r\n    card?: CardData;\r\n    identity?: IdentityData;\r\n    fields?: FieldData[];\r\n    attachments?: AttachmentData[];\r\n    passwordHistory?: PasswordHistoryData[];\r\n    collectionIds?: string[];\r\n    deletedDate: string;\r\n\r\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\r\n        if (response == null) {\r\n            return;\r\n        }\r\n\r\n        this.id = response.id;\r\n        this.organizationId = response.organizationId;\r\n        this.folderId = response.folderId;\r\n        this.userId = userId;\r\n        this.edit = response.edit;\r\n        this.viewPassword = response.viewPassword;\r\n        this.organizationUseTotp = response.organizationUseTotp;\r\n        this.favorite = response.favorite;\r\n        this.revisionDate = response.revisionDate;\r\n        this.type = response.type;\r\n        this.name = response.name;\r\n        this.notes = response.notes;\r\n        this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\r\n        this.deletedDate = response.deletedDate;\r\n\r\n        switch (this.type) {\r\n            case CipherType.Login:\r\n                this.login = new LoginData(response.login);\r\n                break;\r\n            case CipherType.SecureNote:\r\n                this.secureNote = new SecureNoteData(response.secureNote);\r\n                break;\r\n            case CipherType.Card:\r\n                this.card = new CardData(response.card);\r\n                break;\r\n            case CipherType.Identity:\r\n                this.identity = new IdentityData(response.identity);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (response.fields != null) {\r\n            this.fields = response.fields.map((f) => new FieldData(f));\r\n        }\r\n        if (response.attachments != null) {\r\n            this.attachments = response.attachments.map((a) => new AttachmentData(a));\r\n        }\r\n        if (response.passwordHistory != null) {\r\n            this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\r\n        }\r\n    }\r\n}\r\n","export enum PolicyType {\n    TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n    MasterPassword = 1, // Sets minimum requirements for master password complexity\n    PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n    SingleOrg = 3, // Allows users to only be apart of one organization\n    RequireSso = 4, // Requires users to authenticate with SSO\n}\n","export abstract class TotpService {\r\n    getCode: (key: string) => Promise<string>;\r\n    getTimeInterval: (key: string) => number;\r\n    isAutoCopyEnabled: () => Promise<boolean>;\r\n}\r\n","import { FieldType } from '../../enums/fieldType';\r\n\r\nimport { View } from './view';\r\n\r\nimport { Field } from '../domain/field';\r\n\r\nexport class FieldView implements View {\r\n    name: string = null;\r\n    value: string = null;\r\n    type: FieldType = null;\r\n    newField: boolean = false; // Marks if the field is new and hasn't been saved\r\n    showValue: boolean = false;\r\n\r\n    constructor(f?: Field) {\r\n        if (!f) {\r\n            return;\r\n        }\r\n\r\n        this.type = f.type;\r\n    }\r\n\r\n    get maskedValue(): string {\r\n        return this.value != null ? '••••••••' : null;\r\n    }\r\n}\r\n","import { CipherType } from '../../enums/cipherType';\r\n\r\nimport { Cipher } from '../domain/cipher';\r\n\r\nimport { CardApi } from '../api/cardApi';\r\nimport { FieldApi } from '../api/fieldApi';\r\nimport { IdentityApi } from '../api/identityApi';\r\nimport { LoginApi } from '../api/loginApi';\r\nimport { LoginUriApi } from '../api/loginUriApi';\r\nimport { SecureNoteApi } from '../api/secureNoteApi';\r\n\r\nimport { AttachmentRequest } from './attachmentRequest';\r\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\r\n\r\nexport class CipherRequest {\r\n    type: CipherType;\r\n    folderId: string;\r\n    organizationId: string;\r\n    name: string;\r\n    notes: string;\r\n    favorite: boolean;\r\n    login: LoginApi;\r\n    secureNote: SecureNoteApi;\r\n    card: CardApi;\r\n    identity: IdentityApi;\r\n    fields: FieldApi[];\r\n    passwordHistory: PasswordHistoryRequest[];\r\n    // Deprecated, remove at some point and rename attachments2 to attachments\r\n    attachments: { [id: string]: string; };\r\n    attachments2: { [id: string]: AttachmentRequest; };\r\n    lastKnownRevisionDate: Date;\r\n\r\n    constructor(cipher: Cipher) {\r\n        this.type = cipher.type;\r\n        this.folderId = cipher.folderId;\r\n        this.organizationId = cipher.organizationId;\r\n        this.name = cipher.name ? cipher.name.encryptedString : null;\r\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\r\n        this.favorite = cipher.favorite;\r\n        this.lastKnownRevisionDate = cipher.revisionDate;\r\n\r\n        switch (this.type) {\r\n            case CipherType.Login:\r\n                this.login = new LoginApi();\r\n                this.login.uris = null;\r\n                this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\r\n                this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\r\n                this.login.passwordRevisionDate = cipher.login.passwordRevisionDate != null ?\r\n                    cipher.login.passwordRevisionDate.toISOString() : null;\r\n                this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\r\n\r\n                if (cipher.login.uris != null) {\r\n                    this.login.uris = cipher.login.uris.map((u) => {\r\n                        const uri = new LoginUriApi();\r\n                        uri.uri = u.uri != null ? u.uri.encryptedString : null;\r\n                        uri.match = u.match != null ? u.match : null;\r\n                        return uri;\r\n                    });\r\n                }\r\n                break;\r\n            case CipherType.SecureNote:\r\n                this.secureNote = new SecureNoteApi();\r\n                this.secureNote.type = cipher.secureNote.type;\r\n                break;\r\n            case CipherType.Card:\r\n                this.card = new CardApi();\r\n                this.card.cardholderName = cipher.card.cardholderName != null ?\r\n                    cipher.card.cardholderName.encryptedString : null;\r\n                this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\r\n                this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\r\n                this.card.expMonth = cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\r\n                this.card.expYear = cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\r\n                this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\r\n                break;\r\n            case CipherType.Identity:\r\n                this.identity = new IdentityApi();\r\n                this.identity.title = cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\r\n                this.identity.firstName = cipher.identity.firstName != null ?\r\n                    cipher.identity.firstName.encryptedString : null;\r\n                this.identity.middleName = cipher.identity.middleName != null ?\r\n                    cipher.identity.middleName.encryptedString : null;\r\n                this.identity.lastName = cipher.identity.lastName != null ?\r\n                    cipher.identity.lastName.encryptedString : null;\r\n                this.identity.address1 = cipher.identity.address1 != null ?\r\n                    cipher.identity.address1.encryptedString : null;\r\n                this.identity.address2 = cipher.identity.address2 != null ?\r\n                    cipher.identity.address2.encryptedString : null;\r\n                this.identity.address3 = cipher.identity.address3 != null ?\r\n                    cipher.identity.address3.encryptedString : null;\r\n                this.identity.city = cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\r\n                this.identity.state = cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\r\n                this.identity.postalCode = cipher.identity.postalCode != null ?\r\n                    cipher.identity.postalCode.encryptedString : null;\r\n                this.identity.country = cipher.identity.country != null ?\r\n                    cipher.identity.country.encryptedString : null;\r\n                this.identity.company = cipher.identity.company != null ?\r\n                    cipher.identity.company.encryptedString : null;\r\n                this.identity.email = cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\r\n                this.identity.phone = cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\r\n                this.identity.ssn = cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\r\n                this.identity.username = cipher.identity.username != null ?\r\n                    cipher.identity.username.encryptedString : null;\r\n                this.identity.passportNumber = cipher.identity.passportNumber != null ?\r\n                    cipher.identity.passportNumber.encryptedString : null;\r\n                this.identity.licenseNumber = cipher.identity.licenseNumber != null ?\r\n                    cipher.identity.licenseNumber.encryptedString : null;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (cipher.fields != null) {\r\n            this.fields = cipher.fields.map((f) => {\r\n                const field = new FieldApi();\r\n                field.type = f.type;\r\n                field.name = f.name ? f.name.encryptedString : null;\r\n                field.value = f.value ? f.value.encryptedString : null;\r\n                return field;\r\n            });\r\n        }\r\n\r\n        if (cipher.passwordHistory != null) {\r\n            this.passwordHistory = [];\r\n            cipher.passwordHistory.forEach((ph) => {\r\n                this.passwordHistory.push({\r\n                    lastUsedDate: ph.lastUsedDate,\r\n                    password: ph.password ? ph.password.encryptedString : null,\r\n                });\r\n            });\r\n        }\r\n\r\n        if (cipher.attachments != null) {\r\n            this.attachments = {};\r\n            this.attachments2 = {};\r\n            cipher.attachments.forEach((attachment) => {\r\n                const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\r\n                this.attachments[attachment.id] = fileName;\r\n                const attachmentRequest = new AttachmentRequest();\r\n                attachmentRequest.fileName = fileName;\r\n                if (attachment.key != null) {\r\n                    attachmentRequest.key = attachment.key.encryptedString;\r\n                }\r\n                this.attachments2[attachment.id] = attachmentRequest;\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport {\r\n    ActivatedRoute,\r\n    NavigationEnd,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\n@Injectable()\r\nexport class RouterService {\r\n    private previousUrl: string = undefined;\r\n    private currentUrl: string = undefined;\r\n\r\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\r\n        private titleService: Title, i18nService: I18nService) {\r\n        this.currentUrl = this.router.url;\r\n        router.events.subscribe((event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.previousUrl = this.currentUrl;\r\n                this.currentUrl = event.url;\r\n\r\n                let title = i18nService.t('pageTitle', 'Bitwarden');\r\n                let titleId: string = null;\r\n                let rawTitle: string = null;\r\n                let child = this.activatedRoute.firstChild;\r\n                while (child != null) {\r\n                    if (child.firstChild != null) {\r\n                        child = child.firstChild;\r\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\r\n                        rawTitle = child.snapshot.data.title;\r\n                        break;\r\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\r\n                        titleId = child.snapshot.data.titleId;\r\n                        break;\r\n                    } else {\r\n                        titleId = null;\r\n                        rawTitle = null;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (titleId != null || rawTitle != null) {\r\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\r\n                    if (newTitle != null && newTitle !== '') {\r\n                        title = (newTitle + ' | ' + title);\r\n                    }\r\n                }\r\n                this.titleService.setTitle(title);\r\n            }\r\n        });\r\n    }\r\n\r\n    getPreviousUrl() {\r\n        return this.previousUrl;\r\n    }\r\n\r\n    setPreviousUrl(url: string) {\r\n        this.previousUrl = url;\r\n    }\r\n}\r\n","import { EncryptionType } from '../../enums/encryptionType';\r\n\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\r\n\r\nexport class CipherString {\r\n    encryptedString?: string;\r\n    encryptionType?: EncryptionType;\r\n    decryptedValue?: string;\r\n    data?: string;\r\n    iv?: string;\r\n    mac?: string;\r\n\r\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\r\n        if (data != null) {\r\n            // data and header\r\n            const encType = encryptedStringOrType as EncryptionType;\r\n\r\n            if (iv != null) {\r\n                this.encryptedString = encType + '.' + iv + '|' + data;\r\n            } else {\r\n                this.encryptedString = encType + '.' + data;\r\n            }\r\n\r\n            // mac\r\n            if (mac != null) {\r\n                this.encryptedString += ('|' + mac);\r\n            }\r\n\r\n            this.encryptionType = encType;\r\n            this.data = data;\r\n            this.iv = iv;\r\n            this.mac = mac;\r\n\r\n            return;\r\n        }\r\n\r\n        this.encryptedString = encryptedStringOrType as string;\r\n        if (!this.encryptedString) {\r\n            return;\r\n        }\r\n\r\n        const headerPieces = this.encryptedString.split('.');\r\n        let encPieces: string[] = null;\r\n\r\n        if (headerPieces.length === 2) {\r\n            try {\r\n                this.encryptionType = parseInt(headerPieces[0], null);\r\n                encPieces = headerPieces[1].split('|');\r\n            } catch (e) {\r\n                return;\r\n            }\r\n        } else {\r\n            encPieces = this.encryptedString.split('|');\r\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\r\n                EncryptionType.AesCbc256_B64;\r\n        }\r\n\r\n        switch (this.encryptionType) {\r\n            case EncryptionType.AesCbc128_HmacSha256_B64:\r\n            case EncryptionType.AesCbc256_HmacSha256_B64:\r\n                if (encPieces.length !== 3) {\r\n                    return;\r\n                }\r\n\r\n                this.iv = encPieces[0];\r\n                this.data = encPieces[1];\r\n                this.mac = encPieces[2];\r\n                break;\r\n            case EncryptionType.AesCbc256_B64:\r\n                if (encPieces.length !== 2) {\r\n                    return;\r\n                }\r\n\r\n                this.iv = encPieces[0];\r\n                this.data = encPieces[1];\r\n                break;\r\n            case EncryptionType.Rsa2048_OaepSha256_B64:\r\n            case EncryptionType.Rsa2048_OaepSha1_B64:\r\n                if (encPieces.length !== 1) {\r\n                    return;\r\n                }\r\n\r\n                this.data = encPieces[0];\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\r\n        if (this.decryptedValue != null) {\r\n            return this.decryptedValue;\r\n        }\r\n\r\n        let cryptoService: CryptoService;\r\n        const containerService = (Utils.global as any).bitwardenContainerService;\r\n        if (containerService) {\r\n            cryptoService = containerService.getCryptoService();\r\n        } else {\r\n            throw new Error('global bitwardenContainerService not initialized.');\r\n        }\r\n\r\n        try {\r\n            if (key == null) {\r\n                key = await cryptoService.getOrgKey(orgId);\r\n            }\r\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\r\n        } catch (e) {\r\n            this.decryptedValue = '[error: cannot decrypt]';\r\n        }\r\n        return this.decryptedValue;\r\n    }\r\n}\r\n","export enum OrganizationUserStatusType {\r\n    Invited = 0,\r\n    Accepted = 1,\r\n    Confirmed = 2,\r\n}\r\n","export enum OrganizationUserType {\r\n    Owner = 0,\r\n    Admin = 1,\r\n    User = 2,\r\n    Manager = 3,\r\n}\r\n","import {\r\n    Pipe,\r\n    PipeTransform,\r\n} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'search',\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\r\n        if (items == null || items.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        if (searchText == null || searchText.length < 2) {\r\n            return items;\r\n        }\r\n\r\n        searchText = searchText.trim().toLowerCase();\r\n        return items.filter((i) => {\r\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\r\n                return true;\r\n            }\r\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\r\n                return true;\r\n            }\r\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { DeviceType } from 'jslib/enums/deviceType';\r\nimport { EventType } from 'jslib/enums/eventType';\r\n\r\nimport { EventResponse } from 'jslib/models/response/eventResponse';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n    constructor(private i18nService: I18nService) { }\r\n\r\n    getDefaultDateFilters() {\r\n        const d = new Date();\r\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\r\n        d.setDate(d.getDate() - 30);\r\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\r\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\r\n    }\r\n\r\n    formatDateFilters(filterStart: string, filterEnd: string) {\r\n        const start: Date = new Date(filterStart);\r\n        const end: Date = new Date(filterEnd + ':59.999');\r\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\r\n            throw new Error('Invalid date range.');\r\n        }\r\n        return [start.toISOString(), end.toISOString()];\r\n    }\r\n\r\n    getEventInfo(ev: EventResponse, options = new EventOptions()): EventInfo {\r\n        const appInfo = this.getAppInfo(ev.deviceType);\r\n        return {\r\n            message: this.getEventMessage(ev, options),\r\n            appIcon: appInfo[0],\r\n            appName: appInfo[1],\r\n        };\r\n    }\r\n\r\n    private getEventMessage(ev: EventResponse, options: EventOptions) {\r\n        let msg = '';\r\n        switch (ev.type) {\r\n            // User\r\n            case EventType.User_LoggedIn:\r\n                msg = this.i18nService.t('loggedIn');\r\n                break;\r\n            case EventType.User_ChangedPassword:\r\n                msg = this.i18nService.t('changedPassword');\r\n                break;\r\n            case EventType.User_Updated2fa:\r\n                msg = this.i18nService.t('enabledUpdated2fa');\r\n                break;\r\n            case EventType.User_Disabled2fa:\r\n                msg = this.i18nService.t('disabled2fa');\r\n                break;\r\n            case EventType.User_Recovered2fa:\r\n                msg = this.i18nService.t('recovered2fa');\r\n                break;\r\n            case EventType.User_FailedLogIn:\r\n                msg = this.i18nService.t('failedLogin');\r\n                break;\r\n            case EventType.User_FailedLogIn2fa:\r\n                msg = this.i18nService.t('failedLogin2fa');\r\n                break;\r\n            case EventType.User_ClientExportedVault:\r\n                msg = this.i18nService.t('exportedVault');\r\n                break;\r\n            // Cipher\r\n            case EventType.Cipher_Created:\r\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_Updated:\r\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_Deleted:\r\n                msg = this.i18nService.t('permanentlyDeletedItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_SoftDeleted:\r\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_Restored:\r\n                msg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_AttachmentCreated:\r\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_AttachmentDeleted:\r\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_Shared:\r\n                msg = this.i18nService.t('sharedItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientViewed:\r\n                msg = this.i18nService.t('viewedItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientToggledPasswordVisible:\r\n                msg = this.i18nService.t('viewedPasswordItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientToggledHiddenFieldVisible:\r\n                msg = this.i18nService.t('viewedHiddenFieldItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientToggledCardCodeVisible:\r\n                msg = this.i18nService.t('viewedSecurityCodeItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientCopiedHiddenField:\r\n                msg = this.i18nService.t('copiedHiddenFieldItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientCopiedPassword:\r\n                msg = this.i18nService.t('copiedPasswordItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientCopiedCardCode:\r\n                msg = this.i18nService.t('copiedSecurityCodeItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_ClientAutofilled:\r\n                msg = this.i18nService.t('autofilledItemId', this.formatCipherId(ev, options));\r\n                break;\r\n            case EventType.Cipher_UpdatedCollections:\r\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\r\n                break;\r\n            // Collection\r\n            case EventType.Collection_Created:\r\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\r\n                break;\r\n            case EventType.Collection_Updated:\r\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\r\n                break;\r\n            case EventType.Collection_Deleted:\r\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\r\n                break;\r\n            // Group\r\n            case EventType.Group_Created:\r\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\r\n                break;\r\n            case EventType.Group_Updated:\r\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\r\n                break;\r\n            case EventType.Group_Deleted:\r\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\r\n                break;\r\n            // Org user\r\n            case EventType.OrganizationUser_Invited:\r\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\r\n                break;\r\n            case EventType.OrganizationUser_Confirmed:\r\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\r\n                break;\r\n            case EventType.OrganizationUser_Updated:\r\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\r\n                break;\r\n            case EventType.OrganizationUser_Removed:\r\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\r\n                break;\r\n            case EventType.OrganizationUser_UpdatedGroups:\r\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\r\n                break;\r\n            // Org\r\n            case EventType.Organization_Updated:\r\n                msg = this.i18nService.t('editedOrgSettings');\r\n                break;\r\n            case EventType.Organization_PurgedVault:\r\n                msg = this.i18nService.t('purgedOrganizationVault');\r\n                break;\r\n            /*\r\n            case EventType.Organization_ClientExportedVault:\r\n                msg = this.i18nService.t('exportedOrganizationVault');\r\n                break;\r\n            */\r\n            default:\r\n                break;\r\n        }\r\n        return msg === '' ? null : msg;\r\n    }\r\n\r\n    private getAppInfo(deviceType: DeviceType): [string, string] {\r\n        switch (deviceType) {\r\n            case DeviceType.Android:\r\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\r\n            case DeviceType.iOS:\r\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\r\n            case DeviceType.UWP:\r\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\r\n            case DeviceType.ChromeExtension:\r\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\r\n            case DeviceType.FirefoxExtension:\r\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\r\n            case DeviceType.OperaExtension:\r\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\r\n            case DeviceType.EdgeExtension:\r\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\r\n            case DeviceType.VivaldiExtension:\r\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\r\n            case DeviceType.SafariExtension:\r\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\r\n            case DeviceType.WindowsDesktop:\r\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\r\n            case DeviceType.MacOsDesktop:\r\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\r\n            case DeviceType.LinuxDesktop:\r\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\r\n            case DeviceType.ChromeBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\r\n            case DeviceType.FirefoxBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\r\n            case DeviceType.OperaBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\r\n            case DeviceType.SafariBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\r\n            case DeviceType.VivaldiBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\r\n            case DeviceType.EdgeBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\r\n            case DeviceType.IEBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\r\n            case DeviceType.UnknownBrowser:\r\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\r\n            default:\r\n                return ['fa-globe', this.i18nService.t('unknown')];\r\n        }\r\n    }\r\n\r\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\r\n        const shortId = this.getShortId(ev.cipherId);\r\n        if (ev.organizationId == null || !options.cipherInfo) {\r\n            return '<code>' + shortId + '</code>';\r\n        }\r\n        const a = this.makeAnchor(shortId);\r\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\r\n            '&viewEvents=' + ev.cipherId);\r\n        return a.outerHTML;\r\n    }\r\n\r\n    private formatGroupId(ev: EventResponse) {\r\n        const shortId = this.getShortId(ev.groupId);\r\n        const a = this.makeAnchor(shortId);\r\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\r\n        return a.outerHTML;\r\n    }\r\n\r\n    private formatCollectionId(ev: EventResponse) {\r\n        const shortId = this.getShortId(ev.collectionId);\r\n        const a = this.makeAnchor(shortId);\r\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\r\n        return a.outerHTML;\r\n    }\r\n\r\n    private formatOrgUserId(ev: EventResponse) {\r\n        const shortId = this.getShortId(ev.organizationUserId);\r\n        const a = this.makeAnchor(shortId);\r\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\r\n            '&viewEvents=' + ev.organizationUserId);\r\n        return a.outerHTML;\r\n    }\r\n\r\n    private makeAnchor(shortId: string) {\r\n        const a = document.createElement('a');\r\n        a.title = this.i18nService.t('view');\r\n        a.innerHTML = '<code>' + shortId + '</code>';\r\n        return a;\r\n    }\r\n\r\n    private getShortId(id: string) {\r\n        return id.substring(0, 8);\r\n    }\r\n\r\n    private toDateTimeLocalString(date: Date) {\r\n        return date.getFullYear() +\r\n            '-' + this.pad(date.getMonth() + 1) +\r\n            '-' + this.pad(date.getDate()) +\r\n            'T' + this.pad(date.getHours()) +\r\n            ':' + this.pad(date.getMinutes());\r\n    }\r\n\r\n    private pad(num: number) {\r\n        const norm = Math.floor(Math.abs(num));\r\n        return (norm < 10 ? '0' : '') + norm;\r\n    }\r\n}\r\n\r\nexport class EventInfo {\r\n    message: string;\r\n    appIcon: string;\r\n    appName: string;\r\n}\r\n\r\nexport class EventOptions {\r\n    cipherInfo = true;\r\n}\r\n","export enum EventType {\r\n    User_LoggedIn = 1000,\r\n    User_ChangedPassword = 1001,\r\n    User_Updated2fa = 1002,\r\n    User_Disabled2fa = 1003,\r\n    User_Recovered2fa = 1004,\r\n    User_FailedLogIn = 1005,\r\n    User_FailedLogIn2fa = 1006,\r\n    User_ClientExportedVault = 1007,\r\n\r\n    Cipher_Created = 1100,\r\n    Cipher_Updated = 1101,\r\n    Cipher_Deleted = 1102,\r\n    Cipher_AttachmentCreated = 1103,\r\n    Cipher_AttachmentDeleted = 1104,\r\n    Cipher_Shared = 1105,\r\n    Cipher_UpdatedCollections = 1106,\r\n    Cipher_ClientViewed = 1107,\r\n    Cipher_ClientToggledPasswordVisible = 1108,\r\n    Cipher_ClientToggledHiddenFieldVisible = 1109,\r\n    Cipher_ClientToggledCardCodeVisible = 1110,\r\n    Cipher_ClientCopiedPassword = 1111,\r\n    Cipher_ClientCopiedHiddenField = 1112,\r\n    Cipher_ClientCopiedCardCode = 1113,\r\n    Cipher_ClientAutofilled = 1114,\r\n    Cipher_SoftDeleted = 1115,\r\n    Cipher_Restored = 1116,\r\n\r\n    Collection_Created = 1300,\r\n    Collection_Updated = 1301,\r\n    Collection_Deleted = 1302,\r\n\r\n    Group_Created = 1400,\r\n    Group_Updated = 1401,\r\n    Group_Deleted = 1402,\r\n\r\n    OrganizationUser_Invited = 1500,\r\n    OrganizationUser_Confirmed = 1501,\r\n    OrganizationUser_Updated = 1502,\r\n    OrganizationUser_Removed = 1503,\r\n    OrganizationUser_UpdatedGroups = 1504,\r\n\r\n    Organization_Updated = 1600,\r\n    Organization_PurgedVault = 1601,\r\n    // Organization_ClientExportedVault = 1602,\r\n\r\n    Policy_Created = 1700,\r\n    Policy_Updated = 1701,\r\n    Policy_Deleted = 1702,\r\n}\r\n","export enum PaymentMethodType {\r\n    Card = 0,\r\n    BankAccount = 1,\r\n    PayPal = 2,\r\n    BitPay = 3,\r\n    Credit = 4,\r\n    WireTransfer = 5,\r\n    AppleInApp = 6,\r\n    GoogleInApp = 7,\r\n    Check = 8,\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\nimport { TwoFactorProviderRequest } from 'jslib/models/request/twoFactorProviderRequest';\r\n\r\n@Directive()\r\nexport abstract class TwoFactorBaseComponent {\r\n    @Output() onUpdated = new EventEmitter<boolean>();\r\n\r\n    type: TwoFactorProviderType;\r\n    organizationId: string;\r\n    twoFactorProviderType = TwoFactorProviderType;\r\n    enabled = false;\r\n    authed = false;\r\n\r\n    protected masterPasswordHash: string;\r\n\r\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\r\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\r\n        protected platformUtilsService: PlatformUtilsService) { }\r\n\r\n    protected auth(authResponse: any) {\r\n        this.masterPasswordHash = authResponse.masterPasswordHash;\r\n        this.authed = true;\r\n    }\r\n\r\n    protected async enable(enableFunction: () => Promise<void>) {\r\n        try {\r\n            await enableFunction();\r\n            this.analytics.eventTrack.next({\r\n                action: 'Enabled Two-step ' + TwoFactorProviderType[this.type].toString(),\r\n            });\r\n            this.onUpdated.emit(true);\r\n        } catch { }\r\n    }\r\n\r\n    protected async disable(promise: Promise<any>) {\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\r\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const request = new TwoFactorProviderRequest();\r\n            request.masterPasswordHash = this.masterPasswordHash;\r\n            request.type = this.type;\r\n            if (this.organizationId != null) {\r\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\r\n            } else {\r\n                promise = this.apiService.putTwoFactorDisable(request);\r\n            }\r\n            await promise;\r\n            this.enabled = false;\r\n            this.analytics.eventTrack.next({\r\n                action: 'Disabled Two-step ' + TwoFactorProviderType[this.type].toString(),\r\n            });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\r\n            this.onUpdated.emit(false);\r\n        } catch { }\r\n    }\r\n}\r\n","import {\r\n    ComponentFactoryResolver,\r\n    Directive,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\nimport { AddEditComponent as OrgAddEditComponent } from '../organizations/vault/add-edit.component';\r\nimport { AddEditComponent } from '../vault/add-edit.component';\r\n\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\n@Directive()\r\nexport class CipherReportComponent {\r\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\r\n\r\n    loading = false;\r\n    hasLoaded = false;\r\n    ciphers: CipherView[] = [];\r\n    organization: Organization;\r\n\r\n    private modal: ModalComponent = null;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, protected userService: UserService,\r\n        protected messagingService: MessagingService, public requiresPaid: boolean) { }\r\n\r\n    async load() {\r\n        this.loading = true;\r\n        await this.setCiphers();\r\n        this.loading = false;\r\n        this.hasLoaded = true;\r\n    }\r\n\r\n    selectCipher(cipher: CipherView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\r\n        let childComponent: OrgAddEditComponent | AddEditComponent;\r\n        if (this.organization != null) {\r\n            childComponent = this.modal.show<OrgAddEditComponent>(OrgAddEditComponent, this.cipherAddEditModalRef);\r\n            (childComponent as OrgAddEditComponent).organization = this.organization;\r\n        } else {\r\n            childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\r\n        }\r\n\r\n        childComponent.cipherId = cipher == null ? null : cipher.id;\r\n        if (this.organization != null) {\r\n            childComponent.organizationId = this.organization.id;\r\n        }\r\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.load();\r\n        });\r\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.load();\r\n        });\r\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.load();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n\r\n        return childComponent;\r\n    }\r\n\r\n    protected async checkAccess(): Promise<boolean> {\r\n        if (this.organization != null) {\r\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\r\n            // since all paid plans include useTotp\r\n            if (this.requiresPaid && !this.organization.useTotp) {\r\n                this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\r\n                return false;\r\n            }\r\n        } else {\r\n            const accessPremium = await this.userService.canAccessPremium();\r\n            if (this.requiresPaid && !accessPremium) {\r\n                this.messagingService.send('premiumRequired');\r\n                this.loading = false;\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected async setCiphers() {\r\n        this.ciphers = [];\r\n    }\r\n}\r\n","import { CipherType } from '../../enums/cipherType';\r\n\r\nimport { CipherData } from '../data/cipherData';\r\n\r\nimport { CipherView } from '../view/cipherView';\r\n\r\nimport { Attachment } from './attachment';\r\nimport { Card } from './card';\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\nimport { Field } from './field';\r\nimport { Identity } from './identity';\r\nimport { Login } from './login';\r\nimport { Password } from './password';\r\nimport { SecureNote } from './secureNote';\r\n\r\nexport class Cipher extends Domain {\r\n    id: string;\r\n    organizationId: string;\r\n    folderId: string;\r\n    name: CipherString;\r\n    notes: CipherString;\r\n    type: CipherType;\r\n    favorite: boolean;\r\n    organizationUseTotp: boolean;\r\n    edit: boolean;\r\n    viewPassword: boolean;\r\n    revisionDate: Date;\r\n    localData: any;\r\n    login: Login;\r\n    identity: Identity;\r\n    card: Card;\r\n    secureNote: SecureNote;\r\n    attachments: Attachment[];\r\n    fields: Field[];\r\n    passwordHistory: Password[];\r\n    collectionIds: string[];\r\n    deletedDate: Date;\r\n\r\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            id: null,\r\n            userId: null,\r\n            organizationId: null,\r\n            folderId: null,\r\n            name: null,\r\n            notes: null,\r\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\r\n\r\n        this.type = obj.type;\r\n        this.favorite = obj.favorite;\r\n        this.organizationUseTotp = obj.organizationUseTotp;\r\n        this.edit = obj.edit;\r\n        if (obj.viewPassword != null) {\r\n            this.viewPassword = obj.viewPassword;\r\n        } else {\r\n            this.viewPassword = true; // Default for already synced Ciphers without viewPassword\r\n        }\r\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\r\n        this.collectionIds = obj.collectionIds;\r\n        this.localData = localData;\r\n        this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\r\n\r\n        switch (this.type) {\r\n            case CipherType.Login:\r\n                this.login = new Login(obj.login, alreadyEncrypted);\r\n                break;\r\n            case CipherType.SecureNote:\r\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\r\n                break;\r\n            case CipherType.Card:\r\n                this.card = new Card(obj.card, alreadyEncrypted);\r\n                break;\r\n            case CipherType.Identity:\r\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (obj.attachments != null) {\r\n            this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\r\n        } else {\r\n            this.attachments = null;\r\n        }\r\n\r\n        if (obj.fields != null) {\r\n            this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\r\n        } else {\r\n            this.fields = null;\r\n        }\r\n\r\n        if (obj.passwordHistory != null) {\r\n            this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\r\n        } else {\r\n            this.passwordHistory = null;\r\n        }\r\n    }\r\n\r\n    async decrypt(): Promise<CipherView> {\r\n        const model = new CipherView(this);\r\n\r\n        await this.decryptObj(model, {\r\n            name: null,\r\n            notes: null,\r\n        }, this.organizationId);\r\n\r\n        switch (this.type) {\r\n            case CipherType.Login:\r\n                model.login = await this.login.decrypt(this.organizationId);\r\n                break;\r\n            case CipherType.SecureNote:\r\n                model.secureNote = await this.secureNote.decrypt(this.organizationId);\r\n                break;\r\n            case CipherType.Card:\r\n                model.card = await this.card.decrypt(this.organizationId);\r\n                break;\r\n            case CipherType.Identity:\r\n                model.identity = await this.identity.decrypt(this.organizationId);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const orgId = this.organizationId;\r\n\r\n        if (this.attachments != null && this.attachments.length > 0) {\r\n            const attachments: any[] = [];\r\n            await this.attachments.reduce((promise, attachment) => {\r\n                return promise.then(() => {\r\n                    return attachment.decrypt(orgId);\r\n                }).then((decAttachment) => {\r\n                    attachments.push(decAttachment);\r\n                });\r\n            }, Promise.resolve());\r\n            model.attachments = attachments;\r\n        }\r\n\r\n        if (this.fields != null && this.fields.length > 0) {\r\n            const fields: any[] = [];\r\n            await this.fields.reduce((promise, field) => {\r\n                return promise.then(() => {\r\n                    return field.decrypt(orgId);\r\n                }).then((decField) => {\r\n                    fields.push(decField);\r\n                });\r\n            }, Promise.resolve());\r\n            model.fields = fields;\r\n        }\r\n\r\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\r\n            const passwordHistory: any[] = [];\r\n            await this.passwordHistory.reduce((promise, ph) => {\r\n                return promise.then(() => {\r\n                    return ph.decrypt(orgId);\r\n                }).then((decPh) => {\r\n                    passwordHistory.push(decPh);\r\n                });\r\n            }, Promise.resolve());\r\n            model.passwordHistory = passwordHistory;\r\n        }\r\n\r\n        return model;\r\n    }\r\n\r\n    toCipherData(userId: string): CipherData {\r\n        const c = new CipherData();\r\n        c.id = this.id;\r\n        c.organizationId = this.organizationId;\r\n        c.folderId = this.folderId;\r\n        c.userId = this.organizationId != null ? userId : null;\r\n        c.edit = this.edit;\r\n        c.viewPassword = this.viewPassword;\r\n        c.organizationUseTotp = this.organizationUseTotp;\r\n        c.favorite = this.favorite;\r\n        c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\r\n        c.type = this.type;\r\n        c.collectionIds = this.collectionIds;\r\n        c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\r\n\r\n        this.buildDataModel(this, c, {\r\n            name: null,\r\n            notes: null,\r\n        });\r\n\r\n        switch (c.type) {\r\n            case CipherType.Login:\r\n                c.login = this.login.toLoginData();\r\n                break;\r\n            case CipherType.SecureNote:\r\n                c.secureNote = this.secureNote.toSecureNoteData();\r\n                break;\r\n            case CipherType.Card:\r\n                c.card = this.card.toCardData();\r\n                break;\r\n            case CipherType.Identity:\r\n                c.identity = this.identity.toIdentityData();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (this.fields != null) {\r\n            c.fields = this.fields.map((f) => f.toFieldData());\r\n        }\r\n        if (this.attachments != null) {\r\n            c.attachments = this.attachments.map((a) => a.toAttachmentData());\r\n        }\r\n        if (this.passwordHistory != null) {\r\n            c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\r\n        }\r\n        return c;\r\n    }\r\n}\r\n","import { UriMatchType } from '../../enums/uriMatchType';\r\n\r\nimport { View } from './view';\r\n\r\nimport { LoginUri } from '../domain/loginUri';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nconst CanLaunchWhitelist = [\r\n    'https://',\r\n    'http://',\r\n    'ssh://',\r\n    'ftp://',\r\n    'sftp://',\r\n    'irc://',\r\n    'vnc://',\r\n    // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\r\n    'rdp://', // Legacy RDP URI scheme\r\n    'ms-rd:', // Preferred RDP URI scheme\r\n    'chrome://',\r\n    'iosapp://',\r\n    'androidapp://',\r\n];\r\n\r\nexport class LoginUriView implements View {\r\n    match: UriMatchType = null;\r\n\r\n    // tslint:disable\r\n    private _uri: string = null;\r\n    private _domain: string = null;\r\n    private _hostname: string = null;\r\n    private _host: string = null;\r\n    private _canLaunch: boolean = null;\r\n    // tslint:enable\r\n\r\n    constructor(u?: LoginUri) {\r\n        if (!u) {\r\n            return;\r\n        }\r\n\r\n        this.match = u.match;\r\n    }\r\n\r\n    get uri(): string {\r\n        return this._uri;\r\n    }\r\n    set uri(value: string) {\r\n        this._uri = value;\r\n        this._domain = null;\r\n        this._canLaunch = null;\r\n    }\r\n\r\n    get domain(): string {\r\n        if (this._domain == null && this.uri != null) {\r\n            this._domain = Utils.getDomain(this.uri);\r\n            if (this._domain === '') {\r\n                this._domain = null;\r\n            }\r\n        }\r\n\r\n        return this._domain;\r\n    }\r\n\r\n    get hostname(): string {\r\n        if (this.match === UriMatchType.RegularExpression) {\r\n            return null;\r\n        }\r\n        if (this._hostname == null && this.uri != null) {\r\n            this._hostname = Utils.getHostname(this.uri);\r\n            if (this._hostname === '') {\r\n                this._hostname = null;\r\n            }\r\n        }\r\n\r\n        return this._hostname;\r\n    }\r\n\r\n    get host(): string {\r\n        if (this.match === UriMatchType.RegularExpression) {\r\n            return null;\r\n        }\r\n        if (this._host == null && this.uri != null) {\r\n            this._host = Utils.getHost(this.uri);\r\n            if (this._host === '') {\r\n                this._host = null;\r\n            }\r\n        }\r\n\r\n        return this._host;\r\n    }\r\n\r\n    get hostnameOrUri(): string {\r\n        return this.hostname != null ? this.hostname : this.uri;\r\n    }\r\n\r\n    get hostOrUri(): string {\r\n        return this.host != null ? this.host : this.uri;\r\n    }\r\n\r\n    get isWebsite(): boolean {\r\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||\r\n            (this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri)));\r\n    }\r\n\r\n    get canLaunch(): boolean {\r\n        if (this._canLaunch != null) {\r\n            return this._canLaunch;\r\n        }\r\n        if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\r\n            const uri = this.launchUri;\r\n            for (let i = 0; i < CanLaunchWhitelist.length; i++) {\r\n                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\r\n                    this._canLaunch = true;\r\n                    return this._canLaunch;\r\n                }\r\n            }\r\n        }\r\n        this._canLaunch = false;\r\n        return this._canLaunch;\r\n    }\r\n\r\n    get launchUri(): string {\r\n        return this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;\r\n    }\r\n}\r\n","import { Importer } from '../importers/importer';\r\n\r\nexport interface ImportOption {\r\n    id: string;\r\n    name: string;\r\n}\r\nexport abstract class ImportService {\r\n    featuredImportOptions: ImportOption[];\r\n    regularImportOptions: ImportOption[];\r\n    getImportOptions: () => ImportOption[];\r\n    import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\r\n    getImporter: (format: string, organization?: boolean) => Importer;\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { EventService } from 'jslib/abstractions/event.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SearchService } from 'jslib/abstractions/search.service';\r\n\r\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib/angular/components/ciphers.component';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\nimport { EventType } from 'jslib/enums/eventType';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nconst MaxCheckedCount = 500;\r\n\r\n@Component({\r\n    selector: 'app-vault-ciphers',\r\n    templateUrl: 'ciphers.component.html',\r\n})\r\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\r\n    @Input() showAddNew = true;\r\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\r\n    @Output() onShareClicked = new EventEmitter<CipherView>();\r\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\r\n    @Output() onCloneClicked = new EventEmitter<CipherView>();\r\n\r\n    cipherType = CipherType;\r\n    actionPromise: Promise<any>;\r\n\r\n    constructor(searchService: SearchService, protected analytics: Angulartics2,\r\n        protected toasterService: ToasterService, protected i18nService: I18nService,\r\n        protected platformUtilsService: PlatformUtilsService, protected cipherService: CipherService,\r\n        protected eventService: EventService) {\r\n        super(searchService);\r\n        this.pageSize = 200;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.selectAll(false);\r\n    }\r\n\r\n    launch(uri: string) {\r\n        this.platformUtilsService.eventTrack('Launched Login URI');\r\n        this.platformUtilsService.launchUri(uri);\r\n    }\r\n\r\n    attachments(c: CipherView) {\r\n        this.onAttachmentsClicked.emit(c);\r\n    }\r\n\r\n    share(c: CipherView) {\r\n        this.onShareClicked.emit(c);\r\n    }\r\n\r\n    collections(c: CipherView) {\r\n        this.onCollectionsClicked.emit(c);\r\n    }\r\n\r\n    clone(c: CipherView) {\r\n        this.onCloneClicked.emit(c);\r\n    }\r\n\r\n    async delete(c: CipherView): Promise<boolean> {\r\n        if (this.actionPromise != null) {\r\n            return;\r\n        }\r\n        const permanent = c.isDeleted;\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t(permanent ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\r\n            this.i18nService.t(permanent ? 'permanentlyDeleteItem' : 'deleteItem'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.actionPromise = this.deleteCipher(c.id, permanent);\r\n            await this.actionPromise;\r\n            this.analytics.eventTrack.next({ action: 'Deleted Cipher' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t(permanent ? 'permanentlyDeletedItem'\r\n                : 'deletedItem'));\r\n            this.refresh();\r\n        } catch { }\r\n        this.actionPromise = null;\r\n    }\r\n\r\n    async restore(c: CipherView): Promise<boolean> {\r\n        if (this.actionPromise != null || !c.isDeleted) {\r\n            return;\r\n        }\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('restoreItemConfirmation'),\r\n            this.i18nService.t('restoreItem'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.actionPromise = this.cipherService.restoreWithServer(c.id);\r\n            await this.actionPromise;\r\n            this.analytics.eventTrack.next({ action: 'Restored Cipher' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('restoredItem'));\r\n            this.refresh();\r\n        } catch { }\r\n        this.actionPromise = null;\r\n    }\r\n\r\n    copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\r\n        if (value == null) {\r\n            return;\r\n        }\r\n\r\n        this.analytics.eventTrack.next({ action: 'Copied ' + aType.toLowerCase() + ' from listing.' });\r\n        this.platformUtilsService.copyToClipboard(value, { window: window });\r\n        this.toasterService.popAsync('info', null,\r\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\r\n\r\n        if (typeI18nKey === 'password') {\r\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\r\n        } else if (typeI18nKey === 'securityCode') {\r\n            this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\r\n        }\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        if (select) {\r\n            this.selectAll(false);\r\n        }\r\n        const selectCount = select && this.ciphers.length > MaxCheckedCount\r\n            ? MaxCheckedCount\r\n            : this.ciphers.length;\r\n        for (let i = 0; i < selectCount; i++) {\r\n            this.checkCipher(this.ciphers[i], select);\r\n        }\r\n    }\r\n\r\n    checkCipher(c: CipherView, select?: boolean) {\r\n        (c as any).checked = select == null ? !(c as any).checked : select;\r\n    }\r\n\r\n    getSelected(): CipherView[] {\r\n        if (this.ciphers == null) {\r\n            return [];\r\n        }\r\n        return this.ciphers.filter((c) => !!(c as any).checked);\r\n    }\r\n\r\n    getSelectedIds(): string[] {\r\n        return this.getSelected().map((c) => c.id);\r\n    }\r\n\r\n    protected deleteCipher(id: string, permanent: boolean) {\r\n        return permanent ? this.cipherService.deleteWithServer(id) : this.cipherService.softDeleteWithServer(id);\r\n    }\r\n\r\n    protected showFixOldAttachments(c: CipherView) {\r\n        return c.hasOldAttachments && c.organizationId == null;\r\n    }\r\n}\r\n","<ng-container *ngIf=\"(isPaging() ? pagedCiphers : ciphers) as filteredCiphers\">\r\n    <table class=\"table table-hover table-list table-ciphers\" *ngIf=\"filteredCiphers.length\" infiniteScroll\r\n        [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\r\n        <tbody>\r\n            <tr *ngFor=\"let c of filteredCiphers\">\r\n                <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp>\r\n                </td>\r\n                <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\r\n                    <app-vault-icon [cipher]=\"c\"></app-vault-icon>\r\n                </td>\r\n                <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\r\n                    <a href=\"#\" appStopClick appStopProp (click)=\"selectCipher(c)\"\r\n                        title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\r\n                    <ng-container *ngIf=\"!organization && c.organizationId\">\r\n                        <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span class=\"sr-only\">{{'shared' | i18n}}</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"c.hasAttachments\">\r\n                        <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span class=\"sr-only\">{{'attachments' | i18n}}</span>\r\n                        <ng-container *ngIf=\"showFixOldAttachments(c)\">\r\n                            <i class=\"fa fa-exclamation-triangle text-warning\" appStopProp\r\n                                title=\"{{'attachmentsNeedFix' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'attachmentsNeedFix' | i18n}}</span>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <br>\r\n                    <small appStopProp>{{c.subTitle}}</small>\r\n                </td>\r\n                <td class=\"table-list-options\">\r\n                    <div class=\"dropdown\" appListDropdown>\r\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\r\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n                            appA11yTitle=\"{{'options' | i18n}}\">\r\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\r\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick\r\n                                    (click)=\"copy(c, c.login.username, 'username', 'username')\">\r\n                                    <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i>\r\n                                    {{'copyUsername' | i18n}}\r\n                                </a>\r\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick\r\n                                    (click)=\"copy(c, c.login.password, 'password', 'password')\" *ngIf=\"c.viewPassword\">\r\n                                    <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i>\r\n                                    {{'copyPassword' | i18n}}\r\n                                </a>\r\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.login.canLaunch\"\r\n                                    (click)=\"launch(c.login.launchUri)\">\r\n                                    <i class=\"fa fa-fw fa-share-square-o\" aria-hidden=\"true\"></i>\r\n                                    {{'launch' | i18n}}\r\n                                </a>\r\n                            </ng-container>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\">\r\n                                <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i>\r\n                                {{'attachments' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick\r\n                                *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\r\n                                (click)=\"clone(c)\">\r\n                                <i class=\"fa fa-fw fa-files-o\" aria-hidden=\"true\"></i>\r\n                                {{'clone' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick\r\n                                *ngIf=\"!organization && !c.organizationId && !c.isDeleted\" (click)=\"share(c)\">\r\n                                <i class=\"fa fa-fw fa-share-alt\" aria-hidden=\"true\"></i>\r\n                                {{'share' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && !c.isDeleted\"\r\n                                (click)=\"collections(c)\">\r\n                                <i class=\"fa fa-fw fa-cubes\" aria-hidden=\"true\"></i>\r\n                                {{'collections' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && accessEvents\"\r\n                                (click)=\"events(c)\">\r\n                                <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i>\r\n                                {{'eventLogs' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\r\n                                <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i>\r\n                                {{'restore' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\r\n                                <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\r\n                                {{(c.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\r\n        <ng-container *ngIf=\"!loaded\">\r\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"loaded\">\r\n            <p>{{'noItemsInList' | i18n}}</p>\r\n            <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\r\n                <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}</button>\r\n        </ng-container>\r\n    </div>\r\n</ng-container>\r\n","import { SendData } from '../models/data/sendData';\r\n\r\nimport { Send } from '../models/domain/send';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nimport { SendView } from '../models/view/sendView';\r\n\r\nexport abstract class SendService {\r\n    decryptedSendCache: SendView[];\r\n\r\n    clearCache: () => void;\r\n    encrypt: (model: SendView, file: File, password: string, key?: SymmetricCryptoKey) => Promise<[Send, ArrayBuffer]>;\r\n    get: (id: string) => Promise<Send>;\r\n    getAll: () => Promise<Send[]>;\r\n    getAllDecrypted: () => Promise<SendView[]>;\r\n    saveWithServer: (sendData: [Send, ArrayBuffer]) => Promise<any>;\r\n    upsert: (send: SendData | SendData[]) => Promise<any>;\r\n    replace: (sends: { [id: string]: SendData; }) => Promise<any>;\r\n    clear: (userId: string) => Promise<any>;\r\n    delete: (id: string | string[]) => Promise<any>;\r\n    deleteWithServer: (id: string) => Promise<any>;\r\n}\r\n","export enum KdfType {\r\n    PBKDF2_SHA256 = 0,\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n} from '@angular/core';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\n@Component({\r\n    selector: 'app-password-strength',\r\n    templateUrl: 'password-strength.component.html',\r\n})\r\nexport class PasswordStrengthComponent implements OnChanges {\r\n    @Input() score?: number;\r\n    @Input() showText = false;\r\n\r\n    scoreWidth = 0;\r\n    color = 'bg-danger';\r\n    text: string;\r\n\r\n    constructor(private i18nService: I18nService) { }\r\n\r\n    ngOnChanges(): void {\r\n        this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\r\n        switch (this.score) {\r\n            case 4:\r\n                this.color = 'bg-success';\r\n                this.text = this.i18nService.t('strong');\r\n                break;\r\n            case 3:\r\n                this.color = 'bg-primary';\r\n                this.text = this.i18nService.t('good');\r\n                break;\r\n            case 2:\r\n                this.color = 'bg-warning';\r\n                this.text = this.i18nService.t('weak');\r\n                break;\r\n            default:\r\n                this.color = 'bg-danger';\r\n                this.text = this.score != null ? this.i18nService.t('weak') : null;\r\n                break;\r\n        }\r\n    }\r\n}\r\n","<div class=\"progress\">\r\n    <div class=\"progress-bar {{color}}\" role=\"progressbar\" [ngStyle]=\"{width: (scoreWidth + '%')}\"\r\n        attr.aria-valuenow=\"{{scoreWidth}}\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n        <ng-container *ngIf=\"showText && text\">\r\n            {{text}}\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n","import { KdfType } from '../enums/kdfType';\r\nimport { TwoFactorProviderType } from '../enums/twoFactorProviderType';\r\n\r\nimport { AuthResult } from '../models/domain/authResult';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nimport { DeviceRequest } from '../models/request/deviceRequest';\r\nimport { KeysRequest } from '../models/request/keysRequest';\r\nimport { PreloginRequest } from '../models/request/preloginRequest';\r\nimport { TokenRequest } from '../models/request/tokenRequest';\r\n\r\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\r\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { AppIdService } from '../abstractions/appId.service';\r\nimport { AuthService as AuthServiceAbstraction } from '../abstractions/auth.service';\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport { I18nService } from '../abstractions/i18n.service';\r\nimport { MessagingService } from '../abstractions/messaging.service';\r\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\r\nimport { TokenService } from '../abstractions/token.service';\r\nimport { UserService } from '../abstractions/user.service';\r\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\r\n\r\nexport const TwoFactorProviders = {\r\n    [TwoFactorProviderType.Authenticator]: {\r\n        type: TwoFactorProviderType.Authenticator,\r\n        name: null as string,\r\n        description: null as string,\r\n        priority: 1,\r\n        sort: 1,\r\n        premium: false,\r\n    },\r\n    [TwoFactorProviderType.Yubikey]: {\r\n        type: TwoFactorProviderType.Yubikey,\r\n        name: null as string,\r\n        description: null as string,\r\n        priority: 3,\r\n        sort: 2,\r\n        premium: true,\r\n    },\r\n    [TwoFactorProviderType.Duo]: {\r\n        type: TwoFactorProviderType.Duo,\r\n        name: 'Duo',\r\n        description: null as string,\r\n        priority: 2,\r\n        sort: 3,\r\n        premium: true,\r\n    },\r\n    [TwoFactorProviderType.OrganizationDuo]: {\r\n        type: TwoFactorProviderType.OrganizationDuo,\r\n        name: 'Duo (Organization)',\r\n        description: null as string,\r\n        priority: 10,\r\n        sort: 4,\r\n        premium: false,\r\n    },\r\n    [TwoFactorProviderType.U2f]: {\r\n        type: TwoFactorProviderType.U2f,\r\n        name: null as string,\r\n        description: null as string,\r\n        priority: 4,\r\n        sort: 5,\r\n        premium: true,\r\n    },\r\n    [TwoFactorProviderType.Email]: {\r\n        type: TwoFactorProviderType.Email,\r\n        name: null as string,\r\n        description: null as string,\r\n        priority: 0,\r\n        sort: 6,\r\n        premium: false,\r\n    },\r\n};\r\n\r\nexport class AuthService implements AuthServiceAbstraction {\r\n    email: string;\r\n    masterPasswordHash: string;\r\n    code: string;\r\n    codeVerifier: string;\r\n    ssoRedirectUrl: string;\r\n    clientId: string;\r\n    clientSecret: string;\r\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\r\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\r\n\r\n    private key: SymmetricCryptoKey;\r\n\r\n    constructor(private cryptoService: CryptoService, private apiService: ApiService,\r\n        private userService: UserService, private tokenService: TokenService,\r\n        private appIdService: AppIdService, private i18nService: I18nService,\r\n        private platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\r\n        private vaultTimeoutService: VaultTimeoutService, private setCryptoKeys = true) { }\r\n\r\n    init() {\r\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\r\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\r\n\r\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\r\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\r\n            this.i18nService.t('authenticatorAppDesc');\r\n\r\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\r\n\r\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\r\n            'Duo (' + this.i18nService.t('organization') + ')';\r\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\r\n            this.i18nService.t('duoOrganizationDesc');\r\n\r\n        TwoFactorProviders[TwoFactorProviderType.U2f].name = this.i18nService.t('u2fTitle');\r\n        TwoFactorProviders[TwoFactorProviderType.U2f].description = this.i18nService.t('u2fDesc');\r\n\r\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\r\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\r\n    }\r\n\r\n    async logIn(email: string, masterPassword: string): Promise<AuthResult> {\r\n        this.selectedTwoFactorProviderType = null;\r\n        const key = await this.makePreloginKey(masterPassword, email);\r\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\r\n        return await this.logInHelper(email, hashedPassword, null, null, null, null, null,\r\n            key, null, null, null);\r\n    }\r\n\r\n    async logInSso(code: string, codeVerifier: string, redirectUrl: string): Promise<AuthResult> {\r\n        this.selectedTwoFactorProviderType = null;\r\n        return await this.logInHelper(null, null, code, codeVerifier, redirectUrl, null, null,\r\n            null, null, null, null);\r\n    }\r\n\r\n    async logInApiKey(clientId: string, clientSecret: string): Promise<AuthResult> {\r\n        this.selectedTwoFactorProviderType = null;\r\n        return await this.logInHelper(null, null, null, null, null, clientId, clientSecret,\r\n            null, null, null, null);\r\n    }\r\n\r\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\r\n        remember?: boolean): Promise<AuthResult> {\r\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.code, this.codeVerifier,\r\n            this.ssoRedirectUrl, this.clientId, this.clientSecret, this.key, twoFactorProvider,\r\n            twoFactorToken, remember);\r\n    }\r\n\r\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\r\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\r\n        this.selectedTwoFactorProviderType = null;\r\n        const key = await this.makePreloginKey(masterPassword, email);\r\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\r\n        return await this.logInHelper(email, hashedPassword, null, null, null, null, null, key,\r\n            twoFactorProvider, twoFactorToken, remember);\r\n    }\r\n\r\n    async logInSsoComplete(code: string, codeVerifier: string, redirectUrl: string,\r\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\r\n        this.selectedTwoFactorProviderType = null;\r\n        return await this.logInHelper(null, null, code, codeVerifier, redirectUrl, null,\r\n            null, null, twoFactorProvider, twoFactorToken, remember);\r\n    }\r\n\r\n    async logInApiKeyComplete(clientId: string, clientSecret: string, twoFactorProvider: TwoFactorProviderType,\r\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\r\n        this.selectedTwoFactorProviderType = null;\r\n        return await this.logInHelper(null, null, null, null, null, clientId, clientSecret, null,\r\n            twoFactorProvider, twoFactorToken, remember);\r\n    }\r\n\r\n    logOut(callback: Function) {\r\n        callback();\r\n        this.messagingService.send('loggedOut');\r\n    }\r\n\r\n    getSupportedTwoFactorProviders(win: Window): any[] {\r\n        const providers: any[] = [];\r\n        if (this.twoFactorProvidersData == null) {\r\n            return providers;\r\n        }\r\n\r\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\r\n            this.platformUtilsService.supportsDuo()) {\r\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\r\n        }\r\n\r\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\r\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\r\n        }\r\n\r\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\r\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\r\n        }\r\n\r\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\r\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\r\n        }\r\n\r\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.U2f) && this.platformUtilsService.supportsU2f(win)) {\r\n            providers.push(TwoFactorProviders[TwoFactorProviderType.U2f]);\r\n        }\r\n\r\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\r\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\r\n        }\r\n\r\n        return providers;\r\n    }\r\n\r\n    getDefaultTwoFactorProvider(u2fSupported: boolean): TwoFactorProviderType {\r\n        if (this.twoFactorProvidersData == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.selectedTwoFactorProviderType != null &&\r\n            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {\r\n            return this.selectedTwoFactorProviderType;\r\n        }\r\n\r\n        let providerType: TwoFactorProviderType = null;\r\n        let providerPriority = -1;\r\n        this.twoFactorProvidersData.forEach((value, type) => {\r\n            const provider = (TwoFactorProviders as any)[type];\r\n            if (provider != null && provider.priority > providerPriority) {\r\n                if (type === TwoFactorProviderType.U2f && !u2fSupported) {\r\n                    return;\r\n                }\r\n\r\n                providerType = type;\r\n                providerPriority = provider.priority;\r\n            }\r\n        });\r\n\r\n        return providerType;\r\n    }\r\n\r\n    async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\r\n        email = email.trim().toLowerCase();\r\n        let kdf: KdfType = null;\r\n        let kdfIterations: number = null;\r\n        try {\r\n            const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\r\n            if (preloginResponse != null) {\r\n                kdf = preloginResponse.kdf;\r\n                kdfIterations = preloginResponse.kdfIterations;\r\n            }\r\n        } catch (e) {\r\n            if (e == null || e.statusCode !== 404) {\r\n                throw e;\r\n            }\r\n        }\r\n        return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\r\n    }\r\n\r\n    authingWithApiKey(): boolean {\r\n        return this.clientId != null && this.clientSecret != null;\r\n    }\r\n\r\n    authingWithSso(): boolean {\r\n        return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\r\n    }\r\n\r\n    authingWithPassword(): boolean {\r\n        return this.email != null && this.masterPasswordHash != null;\r\n    }\r\n\r\n    private async logInHelper(email: string, hashedPassword: string, code: string, codeVerifier: string,\r\n        redirectUrl: string, clientId: string, clientSecret: string, key: SymmetricCryptoKey,\r\n        twoFactorProvider?: TwoFactorProviderType, twoFactorToken?: string, remember?: boolean): Promise<AuthResult> {\r\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\r\n        const appId = await this.appIdService.getAppId();\r\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\r\n\r\n        let emailPassword: string[] = [];\r\n        let codeCodeVerifier: string[] = [];\r\n        let clientIdClientSecret: string[] = [];\r\n\r\n        if (email != null && hashedPassword != null) {\r\n            emailPassword = [email, hashedPassword];\r\n        } else {\r\n            emailPassword = null;\r\n        }\r\n        if (code != null && codeVerifier != null && redirectUrl != null) {\r\n            codeCodeVerifier = [code, codeVerifier, redirectUrl];\r\n        } else {\r\n            codeCodeVerifier = null;\r\n        }\r\n        if (clientId != null && clientSecret != null) {\r\n            clientIdClientSecret = [clientId, clientSecret]\r\n        } else {\r\n            clientIdClientSecret = null;\r\n        }\r\n\r\n        let request: TokenRequest;\r\n        if (twoFactorToken != null && twoFactorProvider != null) {\r\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, twoFactorProvider,\r\n                twoFactorToken, remember, deviceRequest);\r\n        } else if (storedTwoFactorToken != null) {\r\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, TwoFactorProviderType.Remember,\r\n                storedTwoFactorToken, false, deviceRequest);\r\n        } else {\r\n            request = new TokenRequest(emailPassword, codeCodeVerifier, clientIdClientSecret, null,\r\n                null, false, deviceRequest);\r\n        }\r\n\r\n        const response = await this.apiService.postIdentityToken(request);\r\n\r\n        this.clearState();\r\n        const result = new AuthResult();\r\n        result.twoFactor = !(response as any).accessToken;\r\n\r\n        if (result.twoFactor) {\r\n            // two factor required\r\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\r\n            this.email = email;\r\n            this.masterPasswordHash = hashedPassword;\r\n            this.code = code;\r\n            this.codeVerifier = codeVerifier;\r\n            this.ssoRedirectUrl = redirectUrl;\r\n            this.clientId = clientId;\r\n            this.clientSecret = clientSecret;\r\n            this.key = this.setCryptoKeys ? key : null;\r\n            this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\r\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\r\n            return result;\r\n        }\r\n\r\n        const tokenResponse = response as IdentityTokenResponse;\r\n        result.resetMasterPassword = tokenResponse.resetMasterPassword;\r\n        if (tokenResponse.twoFactorToken != null) {\r\n            await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\r\n        }\r\n\r\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\r\n        await this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(),\r\n            tokenResponse.kdf, tokenResponse.kdfIterations);\r\n        if (this.setCryptoKeys) {\r\n            if (key != null) {\r\n                await this.cryptoService.setKey(key);\r\n            }\r\n            if (hashedPassword != null) {\r\n                await this.cryptoService.setKeyHash(hashedPassword);\r\n            }\r\n\r\n            // Skip this step during SSO new user flow. No key is returned from server.\r\n            if (code == null || tokenResponse.key != null) {\r\n                await this.cryptoService.setEncKey(tokenResponse.key);\r\n\r\n                // User doesn't have a key pair yet (old account), let's generate one for them\r\n                if (tokenResponse.privateKey == null) {\r\n                    try {\r\n                        const keyPair = await this.cryptoService.makeKeyPair();\r\n                        await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\r\n                        tokenResponse.privateKey = keyPair[1].encryptedString;\r\n                    } catch (e) {\r\n                        // tslint:disable-next-line\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\r\n            }\r\n        }\r\n\r\n        if (this.vaultTimeoutService != null) {\r\n            this.vaultTimeoutService.biometricLocked = false;\r\n        }\r\n        this.messagingService.send('loggedIn');\r\n        return result;\r\n    }\r\n\r\n    private clearState(): void {\r\n        this.key = null;\r\n        this.email = null;\r\n        this.masterPasswordHash = null;\r\n        this.code = null;\r\n        this.codeVerifier = null;\r\n        this.ssoRedirectUrl = null;\r\n        this.clientId = null;\r\n        this.clientSecret = null;\r\n        this.twoFactorProvidersData = null;\r\n        this.selectedTwoFactorProviderType = null;\r\n    }\r\n}\r\n","export class SelectionReadOnlyRequest {\r\n    id: string;\r\n    readOnly: boolean;\r\n    hidePasswords: boolean;\r\n\r\n    constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\r\n        this.id = id;\r\n        this.readOnly = readOnly;\r\n        this.hidePasswords = hidePasswords;\r\n    }\r\n}\r\n","export enum DeviceType {\r\n    Android = 0,\r\n    iOS = 1,\r\n    ChromeExtension = 2,\r\n    FirefoxExtension = 3,\r\n    OperaExtension = 4,\r\n    EdgeExtension = 5,\r\n    WindowsDesktop = 6,\r\n    MacOsDesktop = 7,\r\n    LinuxDesktop = 8,\r\n    ChromeBrowser = 9,\r\n    FirefoxBrowser = 10,\r\n    OperaBrowser = 11,\r\n    EdgeBrowser = 12,\r\n    IEBrowser = 13,\r\n    UnknownBrowser = 14,\r\n    AndroidAmazon = 15,\r\n    UWP = 16,\r\n    SafariBrowser = 17,\r\n    VivaldiBrowser = 18,\r\n    VivaldiExtension = 19,\r\n    SafariExtension = 20,\r\n}\r\n","export abstract class SettingsService {\r\n    clearCache: () => void;\r\n    getEquivalentDomains: () => Promise<any>;\r\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\r\n    clear: (userId: string) => Promise<void>;\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { PolicyService } from 'jslib/abstractions/policy.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\n\r\nimport { PaymentComponent } from './payment.component';\r\nimport { TaxInfoComponent } from './tax-info.component';\r\n\r\nimport { PlanType } from 'jslib/enums/planType';\r\nimport { PolicyType } from 'jslib/enums/policyType';\r\nimport { ProductType } from 'jslib/enums/productType';\r\n\r\nimport { OrganizationCreateRequest } from 'jslib/models/request/organizationCreateRequest';\r\nimport { OrganizationUpgradeRequest } from 'jslib/models/request/organizationUpgradeRequest';\r\nimport { PlanResponse } from 'jslib/models/response/planResponse';\r\n\r\n@Component({\r\n    selector: 'app-organization-plans',\r\n    templateUrl: 'organization-plans.component.html',\r\n})\r\nexport class OrganizationPlansComponent implements OnInit {\r\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\r\n    @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\r\n\r\n    @Input() organizationId: string;\r\n    @Input() showFree = true;\r\n    @Input() showCancel = false;\r\n    @Input() product: ProductType = ProductType.Free;\r\n    @Input() plan: PlanType = PlanType.Free;\r\n    @Output() onSuccess = new EventEmitter();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    loading: boolean = true;\r\n    selfHosted: boolean = false;\r\n    ownedBusiness: boolean = false;\r\n    premiumAccessAddon: boolean = false;\r\n    additionalStorage: number = 0;\r\n    additionalSeats: number = 0;\r\n    name: string;\r\n    billingEmail: string;\r\n    businessName: string;\r\n    productTypes = ProductType;\r\n    formPromise: Promise<any>;\r\n    singleOrgPolicyBlock: boolean = false;\r\n\r\n    plans: PlanResponse[];\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService,\r\n        private router: Router, private syncService: SyncService,\r\n        private policyService: PolicyService) {\r\n        this.selfHosted = platformUtilsService.isSelfHost();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        if (!this.selfHosted) {\r\n            const plans = await this.apiService.getPlans();\r\n            this.plans = plans.data;\r\n        }\r\n        this.loading = false;\r\n    }\r\n\r\n    get createOrganization() {\r\n        return this.organizationId == null;\r\n    }\r\n\r\n    get selectedPlan() {\r\n        return this.plans.find((plan) => plan.type === this.plan);\r\n    }\r\n\r\n    get selectedPlanInterval() {\r\n        return this.selectedPlan.isAnnual\r\n            ? 'year'\r\n            : 'month';\r\n    }\r\n\r\n    get selectableProducts() {\r\n        let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\r\n\r\n        if (this.ownedBusiness) {\r\n            validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\r\n        }\r\n\r\n        if (!this.showFree) {\r\n            validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\r\n        }\r\n\r\n        validPlans = validPlans\r\n            .filter((plan) => !plan.legacyYear\r\n                && !plan.disabled\r\n                && (plan.isAnnual || plan.product === this.productTypes.Free));\r\n\r\n        return validPlans;\r\n    }\r\n\r\n    get selectablePlans() {\r\n        return this.plans.filter((plan) => !plan.legacyYear && !plan.disabled && plan.product === this.product);\r\n    }\r\n\r\n    additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\r\n        if (!selectedPlan.isAnnual) {\r\n            return selectedPlan.additionalStoragePricePerGb;\r\n        }\r\n        return selectedPlan.additionalStoragePricePerGb / 12;\r\n    }\r\n\r\n    seatPriceMonthly(selectedPlan: PlanResponse) {\r\n        if (!selectedPlan.isAnnual) {\r\n            return selectedPlan.seatPrice;\r\n        }\r\n        return selectedPlan.seatPrice / 12;\r\n    }\r\n\r\n    additionalStorageTotal(plan: PlanResponse): number {\r\n        if (!plan.hasAdditionalStorageOption) {\r\n            return 0;\r\n        }\r\n\r\n        return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\r\n    }\r\n\r\n    seatTotal(plan: PlanResponse): number {\r\n        if (!plan.hasAdditionalSeatsOption) {\r\n            return 0;\r\n        }\r\n\r\n        return plan.seatPrice * Math.abs(this.additionalSeats || 0);\r\n    }\r\n\r\n    get subtotal() {\r\n        let subTotal = this.selectedPlan.basePrice;\r\n        if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\r\n            subTotal += this.seatTotal(this.selectedPlan);\r\n        }\r\n        if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\r\n            subTotal += this.additionalStorageTotal(this.selectedPlan);\r\n        }\r\n        if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\r\n            subTotal += this.selectedPlan.premiumAccessOptionPrice;\r\n        }\r\n        return subTotal;\r\n    }\r\n\r\n    changedProduct() {\r\n        this.plan = this.selectablePlans[0].type;\r\n        if (!this.selectedPlan.hasPremiumAccessOption) {\r\n            this.premiumAccessAddon = false;\r\n        }\r\n        if (!this.selectedPlan.hasAdditionalStorageOption) {\r\n            this.additionalStorage = 0;\r\n        }\r\n        if (!this.selectedPlan.hasAdditionalSeatsOption) {\r\n            this.additionalSeats = 0;\r\n        } else if (!this.additionalSeats && !this.selectedPlan.baseSeats &&\r\n            this.selectedPlan.hasAdditionalSeatsOption) {\r\n            this.additionalSeats = 1;\r\n        }\r\n    }\r\n\r\n    changedOwnedBusiness() {\r\n        if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\r\n            return;\r\n        }\r\n        this.plan = PlanType.TeamsMonthly;\r\n    }\r\n\r\n    changedCountry() {\r\n        this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== 'US';\r\n        // Bank Account payments are only available for US customers\r\n        if (this.paymentComponent.hideBank &&\r\n            this.paymentComponent.method === PaymentMethodType.BankAccount) {\r\n            this.paymentComponent.method = PaymentMethodType.Card;\r\n            this.paymentComponent.changeMethod();\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n\r\n    async submit() {\r\n        if (this.singleOrgPolicyBlock) {\r\n            return;\r\n        } else {\r\n            const policies = await this.policyService.getAll(PolicyType.SingleOrg);\r\n            this.singleOrgPolicyBlock = policies.some(policy => policy.enabled);\r\n            if (this.singleOrgPolicyBlock) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let files: FileList = null;\r\n        if (this.createOrganization && this.selfHosted) {\r\n            const fileEl = document.getElementById('file') as HTMLInputElement;\r\n            files = fileEl.files;\r\n            if (files == null || files.length === 0) {\r\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                    this.i18nService.t('selectFile'));\r\n                return;\r\n            }\r\n        }\r\n\r\n        try {\r\n            const doSubmit = async () => {\r\n                let orgId: string = null;\r\n                if (this.createOrganization) {\r\n                    let tokenResult: [string, PaymentMethodType] = null;\r\n                    if (!this.selfHosted && this.plan !== PlanType.Free) {\r\n                        tokenResult = await this.paymentComponent.createPaymentToken();\r\n                    }\r\n                    const shareKey = await this.cryptoService.makeShareKey();\r\n                    const key = shareKey[0].encryptedString;\r\n                    const collection = await this.cryptoService.encrypt(\r\n                        this.i18nService.t('defaultCollection'), shareKey[1]);\r\n                    const collectionCt = collection.encryptedString;\r\n\r\n                    if (this.selfHosted) {\r\n                        const fd = new FormData();\r\n                        fd.append('license', files[0]);\r\n                        fd.append('key', key);\r\n                        fd.append('collectionName', collectionCt);\r\n                        const response = await this.apiService.postOrganizationLicense(fd);\r\n                        orgId = response.id;\r\n                    } else {\r\n                        const request = new OrganizationCreateRequest();\r\n                        request.key = key;\r\n                        request.collectionName = collectionCt;\r\n                        request.name = this.name;\r\n                        request.billingEmail = this.billingEmail;\r\n\r\n                        if (this.selectedPlan.type === PlanType.Free) {\r\n                            request.planType = PlanType.Free;\r\n                        } else {\r\n                            request.paymentToken = tokenResult[0];\r\n                            request.paymentMethodType = tokenResult[1];\r\n                            request.businessName = this.ownedBusiness ? this.businessName : null;\r\n                            request.additionalSeats = this.additionalSeats;\r\n                            request.additionalStorageGb = this.additionalStorage;\r\n                            request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\r\n                                this.premiumAccessAddon;\r\n                            request.planType = this.selectedPlan.type;\r\n                            request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\r\n                            request.billingAddressCountry = this.taxComponent.taxInfo.country;\r\n                            if (this.taxComponent.taxInfo.includeTaxId) {\r\n                                request.taxIdNumber = this.taxComponent.taxInfo.taxId;\r\n                                request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\r\n                                request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\r\n                                request.billingAddressCity = this.taxComponent.taxInfo.city;\r\n                                request.billingAddressState = this.taxComponent.taxInfo.state;\r\n                            }\r\n                        }\r\n                        const response = await this.apiService.postOrganization(request);\r\n                        orgId = response.id;\r\n                    }\r\n                } else {\r\n                    const request = new OrganizationUpgradeRequest();\r\n                    request.businessName = this.ownedBusiness ? this.businessName : null;\r\n                    request.additionalSeats = this.additionalSeats;\r\n                    request.additionalStorageGb = this.additionalStorage;\r\n                    request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\r\n                        this.premiumAccessAddon;\r\n                    request.planType = this.selectedPlan.type;\r\n                    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\r\n                    if (!result.success && result.paymentIntentClientSecret != null) {\r\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\r\n                    }\r\n                    orgId = this.organizationId;\r\n                }\r\n\r\n                if (orgId != null) {\r\n                    await this.apiService.refreshIdentityToken();\r\n                    await this.syncService.fullSync(true);\r\n                    if (this.createOrganization) {\r\n                        this.analytics.eventTrack.next({ action: 'Created Organization' });\r\n                        this.toasterService.popAsync('success',\r\n                            this.i18nService.t('organizationCreated'), this.i18nService.t('organizationReadyToGo'));\r\n                    } else {\r\n                        this.analytics.eventTrack.next({ action: 'Upgraded Organization' });\r\n                        this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpgraded'));\r\n                    }\r\n                    this.router.navigate(['/organizations/' + orgId]);\r\n                }\r\n            };\r\n\r\n            this.formPromise = doSubmit();\r\n            await this.formPromise;\r\n            this.onSuccess.emit();\r\n        } catch { }\r\n    }\r\n\r\n}\r\n","<ng-container *ngIf=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<ng-container *ngIf=\"createOrganization && selfHosted\">\r\n    <p>{{'uploadLicenseFileOrg' | i18n}}</p>\r\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n        <div class=\"form-group\">\r\n            <label for=\"file\">{{'licenseFile' | i18n}}</label>\r\n            <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\r\n            <small\r\n                class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n    </form>\r\n</ng-container>\r\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate\r\n    *ngIf=\"!loading && !selfHosted && this.plans\">\r\n    <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2>\r\n    <div class=\"row\" *ngIf=\"createOrganization\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"name\">{{'organizationName' | i18n}}</label>\r\n            <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label>\r\n            <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\"\r\n                required>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group form-check\">\r\n        <input id=\"ownedBusiness\" class=\"form-check-input\" type=\"checkbox\" name=\"OwnedBusiness\"\r\n            [(ngModel)]=\"ownedBusiness\" (change)=\"changedOwnedBusiness()\">\r\n        <label for=\"ownedBusiness\" class=\"form-check-label\">{{'accountOwnedBusiness' | i18n}}</label>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"ownedBusiness\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"businessName\">{{'businessName' | i18n}}</label>\r\n            <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"businessName\">\r\n        </div>\r\n    </div>\r\n    <h2 class=\"mt-5\">{{'chooseYourPlan' | i18n}}</h2>\r\n    <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\r\n        <input class=\"form-check-input\" type=\"radio\" name=\"product\" id=\"product{{selectableProduct.product}}\"\r\n            [value]=\"selectableProduct.product\" [(ngModel)]=\"product\" (change)=\"changedProduct()\">\r\n        <label class=\"form-check-label\" for=\"product{{selectableProduct.product}}\">\r\n            {{ selectableProduct.nameLocalizationKey | i18n}}\r\n            <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n : '1'}}</small>\r\n            <ng-container *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\">\r\n                <small>• {{'includeAllTeamsFeatures' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.hasSso\">• {{'includeSsoAuthentication' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.hasPolicies\">• {{'includeEnterprisePolicies' | i18n}}</small>\r\n            </ng-container>\r\n            <ng-template #fullFeatureList>\r\n                <small *ngIf=\"selectableProduct.product == productTypes.Free\">•\r\n                    {{'limitedUsers' | i18n : selectableProduct.maxUsers }}</small>\r\n                <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\">•\r\n                    {{'addShareLimitedUsers' | i18n : selectableProduct.maxUsers}}</small>\r\n                <small *ngIf=\"!selectableProduct.maxUsers\">•\r\n                    {{'addShareUnlimitedUsers' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.maxCollections\">•\r\n                    {{'limitedCollections' | i18n : selectableProduct.maxCollections }}</small>\r\n                <small *ngIf=\"selectableProduct.maxAdditionalSeats\">•\r\n                    {{'addShareLimitedUsers' | i18n : selectableProduct.maxAdditionalSeats }}</small>\r\n                <small *ngIf=\"!selectableProduct.maxCollections\">• {{'createUnlimitedCollections' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.baseStorageGb\">•\r\n                    {{'gbEncryptedFileStorage' | i18n : selectableProduct.baseStorageGb + 'GB'}}</small>\r\n                <small *ngIf=\"selectableProduct.hasGroups\">• {{'controlAccessWithGroups' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.hasApi\">• {{'trackAuditLogs' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.hasDirectory\">• {{'syncUsersFromDirectory' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.usersGetPremium\">• {{'usersGetPremium' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.product != productTypes.Free\">•\r\n                    {{'priorityCustomerSupport' | i18n}}</small>\r\n                <small *ngIf=\"selectableProduct.trialPeriodDays\">•\r\n                    {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }}\r\n                </small>\r\n            </ng-template>\r\n            <span *ngIf=\"selectableProduct.product != productTypes.Free\">\r\n                <ng-container *ngIf=\"selectableProduct.basePrice\">\r\n                    {{selectableProduct.basePrice / 12 | currency:'$'}} /{{'month' | i18n}},\r\n                    {{'includesXUsers' | i18n : selectableProduct.baseSeats}}\r\n                    <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\r\n                        {{('additionalUsers' | i18n).toLowerCase()}}\r\n                        {{selectableProduct.seatPrice  / 12 | currency:'$'}} /{{'month' | i18n}}\r\n                    </ng-container>\r\n                </ng-container>\r\n            </span>\r\n            <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\r\n                {{'costPerUser' | i18n : (selectableProduct.seatPrice / 12 | currency:'$')}} /{{'month' | i18n}}\r\n            </span>\r\n            <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{'freeForever' | i18n}}</span>\r\n        </label>\r\n    </div>\r\n    <div *ngIf=\"product !== productTypes.Free\">\r\n        <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\r\n            <h2 class=\"mt-5\">{{'users' | i18n}}</h2>\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <label for=\"additionalSeats\">{{'userSeats' | i18n}}</label>\r\n                    <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\"\r\n                        [(ngModel)]=\"additionalSeats\" min=\"1\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\"\r\n                        required>\r\n                    <small class=\"text-muted form-text\">{{'userSeatsHowManyDesc' | i18n}}</small>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <h2 class=\"mt-5\">{{'addons' | i18n}}</h2>\r\n        <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\r\n            <div class=\"form-group col-6\">\r\n                <label for=\"additionalSeats\">{{'additionalUserSeats' | i18n}}</label>\r\n                <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\"\r\n                    [(ngModel)]=\"additionalSeats\" min=\"0\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\">\r\n                <small\r\n                    class=\"text-muted form-text\">{{'userSeatsAdditionalDesc' | i18n : selectedPlan.baseSeats : (seatPriceMonthly(selectedPlan) | currency:'$')}}</small>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-6\">\r\n                <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label>\r\n                <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\"\r\n                    [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\"\r\n                    placeholder=\"{{'additionalStorageGbDesc' | i18n}}\">\r\n                <small\r\n                    class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (additionalStoragePriceMonthly(selectedPlan) | currency:'$') : ('month' | i18n)}}</small>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\r\n                <div class=\"form-check\">\r\n                    <input id=\"premiumAccess\" class=\"form-check-input\" type=\"checkbox\" name=\"PremiumAccessAddon\"\r\n                        [(ngModel)]=\"premiumAccessAddon\">\r\n                    <label for=\"premiumAccess\" class=\"form-check-label bold\">{{'premiumAccess' | i18n}}</label>\r\n                </div>\r\n                <small\r\n                    class=\"text-muted form-text\">{{'premiumAccessDesc' | i18n : (3.33 | currency:'$') : ('month' | i18n)}}</small>\r\n            </div>\r\n        </div>\r\n        <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2>\r\n        <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"interval{{selectablePlan.type}}\"\r\n                [value]=\"selectablePlan.type\" [(ngModel)]=\"plan\">\r\n            <label class=\"form-check-label\" for=\"interval{{selectablePlan.type}}\">\r\n                <ng-container *ngIf=\"selectablePlan.isAnnual\">\r\n                    {{'annually' | i18n}}\r\n                    <small *ngIf=\"selectablePlan.basePrice\">\r\n                        {{'basePrice' | i18n}}: {{ selectablePlan.basePrice / 12 | currency:'$'}} &times; 12\r\n                        {{'monthAbbr' | i18n}}\r\n                        =\r\n                        {{selectablePlan.basePrice | currency:'$'}}\r\n                        /{{'year' | i18n}}\r\n                    </small>\r\n                    <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\r\n                        <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span>\r\n                        <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span>\r\n                        {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice / 12 | currency:'$'}} &times; 12\r\n                        {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan)\r\n                    | currency:'$'}} /{{'year' | i18n}}\r\n                    </small>\r\n                    <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\r\n                        {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times;\r\n                        {{selectablePlan.additionalStoragePricePerGb / 12 | currency:'$'}} &times; 12 {{'monthAbbr'\r\n                        | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}}\r\n                        /{{'year' | i18n}}\r\n                    </small>\r\n                    <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\r\n                        {{'premiumAccess' | i18n}}:\r\n                        {{selectablePlan.premiumAccessOptionCost / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}}\r\n                        =\r\n                        {{40 | currency:'$'}}\r\n                        /{{'year' | i18n}}\r\n                    </small>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!selectablePlan.isAnnual\">\r\n                    {{'monthly' | i18n}}\r\n                    <small *ngIf=\"selectablePlan.basePrice\">\r\n                        {{'basePrice' | i18n}}: {{selectablePlan.basePrice | currency:'$'}} {{'monthAbbr' | i18n}}\r\n                        =\r\n                        {{selectablePlan.basePrice | currency:'$'}}\r\n                        /{{'month' | i18n}}\r\n                    </small>\r\n                    <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\r\n                        <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span>\r\n                        <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span>\r\n                        {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice | currency:'$'}}\r\n                        {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan)\r\n                    | currency:'$'}} /{{'month' | i18n}}\r\n                    </small>\r\n                    <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\r\n                        {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times;\r\n                        {{selectablePlan.additionalStoragePricePerGb | currency:'$'}} {{'monthAbbr'\r\n                        | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}}\r\n                        /{{'month' | i18n}}\r\n                    </small>\r\n                    <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\r\n                        {{'premiumAccess' | i18n}}:\r\n                        {{selectablePlan.premiumAccessOptionCost | currency:'$'}} {{'monthAbbr' | i18n}} =\r\n                        {{40 | currency:'$'}}\r\n                        /{{'month' | i18n}}\r\n                    </small>\r\n                </ng-container>\r\n            </label>\r\n        </div>\r\n        <hr class=\"my-3\">\r\n        <div class=\"text-lg\">\r\n            <strong>{{'total' | i18n}}:</strong> {{subtotal | currency:'USD $'}} /{{selectedPlanInterval | i18n}}\r\n        </div>\r\n        <ng-container *ngIf=\"createOrganization\">\r\n            <small\r\n                class=\"text-muted font-italic\">{{'paymentChargedWithTrial' | i18n : (selectedPlanInterval | i18n) }}</small>\r\n            <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2>\r\n            <app-payment [hideCredit]=\"true\"></app-payment>\r\n            <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!createOrganization\">\r\n            <app-payment [showMethods]=\"false\"></app-payment>\r\n        </ng-container>\r\n        <small class=\"text-muted font-italic mt-2 d-block\" *ngIf=\"!createOrganization\">\r\n            {{'paymentCharged' | i18n : (interval | i18n) }}</small>\r\n    </div>\r\n    <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\r\n        <app-callout [type]=\"'error'\">{{'singleOrgBlockCreateMessage' | i18n}}</app-callout>\r\n    </div>\r\n    <div class=\"mt-4\">\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\r\n            {{'cancel' | i18n}}\r\n        </button>\r\n    </div>\r\n</form>\r\n","export enum UriMatchType {\r\n    Domain = 0,\r\n    Host = 1,\r\n    StartsWith = 2,\r\n    Exact = 3,\r\n    RegularExpression = 4,\r\n    Never = 5,\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\nimport { EventType } from 'jslib/enums/eventType';\r\n\r\nimport { AuditService } from 'jslib/abstractions/audit.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { EventService } from 'jslib/abstractions/event.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { TotpService } from 'jslib/abstractions/totp.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib/angular/components/add-edit.component';\r\nimport { LoginUriView } from 'jslib/models/view/loginUriView';\r\n\r\n@Component({\r\n    selector: 'app-vault-add-edit',\r\n    templateUrl: 'add-edit.component.html',\r\n})\r\nexport class AddEditComponent extends BaseAddEditComponent {\r\n    canAccessPremium: boolean;\r\n    totpCode: string;\r\n    totpCodeFormatted: string;\r\n    totpDash: number;\r\n    totpSec: number;\r\n    totpLow: boolean;\r\n    showRevisionDate = false;\r\n    hasPasswordHistory = false;\r\n    viewingPasswordHistory = false;\r\n\r\n    protected totpInterval: number;\r\n\r\n    constructor(cipherService: CipherService, folderService: FolderService,\r\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\r\n        auditService: AuditService, stateService: StateService,\r\n        userService: UserService, collectionService: CollectionService,\r\n        protected totpService: TotpService, protected passwordGenerationService: PasswordGenerationService,\r\n        protected messagingService: MessagingService, eventService: EventService) {\r\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\r\n            userService, collectionService, messagingService, eventService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await super.ngOnInit();\r\n        await this.load();\r\n        this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\r\n        this.hasPasswordHistory = this.cipher.hasPasswordHistory;\r\n        this.cleanUp();\r\n\r\n        this.canAccessPremium = await this.userService.canAccessPremium();\r\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\r\n            (this.cipher.organizationUseTotp || this.canAccessPremium)) {\r\n            await this.totpUpdateCode();\r\n            const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\r\n            await this.totpTick(interval);\r\n\r\n            this.totpInterval = window.setInterval(async () => {\r\n                await this.totpTick(interval);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    toggleFavorite() {\r\n        this.cipher.favorite = !this.cipher.favorite;\r\n    }\r\n\r\n    launch(uri: LoginUriView) {\r\n        if (!uri.canLaunch) {\r\n            return;\r\n        }\r\n\r\n        this.platformUtilsService.eventTrack('Launched Login URI');\r\n        this.platformUtilsService.launchUri(uri.launchUri);\r\n    }\r\n\r\n    copy(value: string, typeI18nKey: string, aType: string) {\r\n        if (value == null) {\r\n            return;\r\n        }\r\n\r\n        this.platformUtilsService.eventTrack('Copied ' + aType);\r\n        this.platformUtilsService.copyToClipboard(value, { window: window });\r\n        this.platformUtilsService.showToast('info', null,\r\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\r\n\r\n        if (this.editMode) {\r\n            if (typeI18nKey === 'password') {\r\n                this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\r\n            } else if (typeI18nKey === 'securityCode') {\r\n                this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\r\n            } else if (aType === 'H_Field') {\r\n                this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\r\n            }\r\n        }\r\n    }\r\n\r\n    async generatePassword(): Promise<boolean> {\r\n        const confirmed = await super.generatePassword();\r\n        if (confirmed) {\r\n            const options = (await this.passwordGenerationService.getOptions())[0];\r\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\r\n        }\r\n        return confirmed;\r\n    }\r\n\r\n    premiumRequired() {\r\n        if (!this.canAccessPremium) {\r\n            this.messagingService.send('premiumRequired');\r\n            return;\r\n        }\r\n    }\r\n\r\n    upgradeOrganization() {\r\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\r\n    }\r\n\r\n    viewHistory() {\r\n        this.viewingPasswordHistory = !this.viewingPasswordHistory;\r\n    }\r\n\r\n    protected cleanUp() {\r\n        if (this.totpInterval) {\r\n            window.clearInterval(this.totpInterval);\r\n        }\r\n    }\r\n\r\n    protected async totpUpdateCode() {\r\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\r\n            if (this.totpInterval) {\r\n                window.clearInterval(this.totpInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\r\n        if (this.totpCode != null) {\r\n            if (this.totpCode.length > 4) {\r\n                const half = Math.floor(this.totpCode.length / 2);\r\n                this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);\r\n            } else {\r\n                this.totpCodeFormatted = this.totpCode;\r\n            }\r\n        } else {\r\n            this.totpCodeFormatted = null;\r\n            if (this.totpInterval) {\r\n                window.clearInterval(this.totpInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected allowOwnershipAssignment() {\r\n        return (!this.editMode || this.cloneMode) && this.ownershipOptions != null && this.ownershipOptions.length > 1;\r\n    }\r\n\r\n    private async totpTick(intervalSeconds: number) {\r\n        const epoch = Math.round(new Date().getTime() / 1000.0);\r\n        const mod = epoch % intervalSeconds;\r\n\r\n        this.totpSec = intervalSeconds - mod;\r\n        this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2') as any) + 'e-2');\r\n        this.totpLow = this.totpSec <= 7;\r\n        if (mod === 0) {\r\n            await this.totpUpdateCode();\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate\r\n            autocomplete=\"off\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{title}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"cipher\">\r\n                <div class=\"row\" *ngIf=\"!editMode\">\r\n                    <div class=\"col-6 form-group\">\r\n                        <label for=\"type\">{{'whatTypeOfItem' | i18n}}</label>\r\n                        <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\" class=\"form-control\"\r\n                            [disabled]=\"cipher.isDeleted\" appAutofocus>\r\n                            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 form-group\">\r\n                        <label for=\"name\">{{'name' | i18n}}</label>\r\n                        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\"\r\n                            required [disabled]=\"cipher.isDeleted\">\r\n                    </div>\r\n                    <div class=\"col-6 form-group\" *ngIf=\"!organization\">\r\n                        <label for=\"folder\">{{'folder' | i18n}}</label>\r\n                        <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\" class=\"form-control\" \r\n                            [disabled]=\"cipher.isDeleted\">\r\n                            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <!-- Login -->\r\n                <ng-container *ngIf=\"cipher.type === cipherType.Login\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"loginUsername\">{{'username' | i18n}}</label>\r\n                            <div class=\"input-group\">\r\n                                <input id=\"loginUsername\" class=\"form-control\" type=\"text\" name=\"Login.Username\"\r\n                                    [(ngModel)]=\"cipher.login.username\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        appA11yTitle=\"{{'copyUsername' | i18n}}\"\r\n                                        (click)=\"copy(cipher.login.username, 'username', 'Username')\" tabindex=\"-1\">\r\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <div class=\"d-flex\">\r\n                                <label for=\"loginPassword\">{{'password' | i18n}}</label>\r\n                                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted\">\r\n                                    <a href=\"#\" class=\"d-block mr-2\" appStopClick\r\n                                        appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\"\r\n                                        *ngIf=\"cipher.viewPassword\">\r\n                                        <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i>\r\n                                    </a>\r\n                                    <a href=\"#\" class=\"d-block\" #checkPasswordBtn appStopClick\r\n                                        appA11yTitle=\"{{'checkPassword' | i18n}}\" (click)=\"checkPassword()\"\r\n                                        [appApiAction]=\"checkPasswordPromise\">\r\n                                        <i class=\"fa fa-lg fa-fw fa-check-circle\" [hidden]=\"checkPasswordBtn.loading\"\r\n                                            aria-hidden=\"true\"></i>\r\n                                        <i class=\"fa fa-lg fa-fw fa-spinner fa-spin\" aria-hidden=\"true\"\r\n                                            [hidden]=\"!checkPasswordBtn.loading\" title=\"{{'loading' | i18n}}\"></i>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"input-group\">\r\n                                <input id=\"loginPassword\" class=\"form-control text-monospace\"\r\n                                    type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Login.Password\"\r\n                                    [(ngModel)]=\"cipher.login.password\" appInputVerbatim autocomplete=\"new-password\"\r\n                                    [disabled]=\"cipher.isDeleted || !cipher.viewPassword\">\r\n                                <div class=\"input-group-append\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"\r\n                                        tabindex=\"-1\" [disabled]=\"!cipher.viewPassword\">\r\n                                        <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                            [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\r\n                                    </button>\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        appA11yTitle=\"{{'copyPassword' | i18n}}\"\r\n                                        (click)=\"copy(cipher.login.password, 'password', 'Password')\" tabindex=\"-1\"\r\n                                        [disabled]=\"!cipher.viewPassword\">\r\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"loginTotp\">{{'authenticatorKeyTotp' | i18n}}</label>\r\n                            <input id=\"loginTotp\" type=\"{{cipher.viewPassword ? 'text' : 'password'}}\" name=\"Login.Totp\" class=\"form-control text-monospace\"\r\n                                [(ngModel)]=\"cipher.login.totp\" appInputVerbatim [disabled]=\"cipher.isDeleted || !cipher.viewPassword\">\r\n                        </div>\r\n                        <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{'low': totpLow}\">\r\n                            <div *ngIf=\"!cipher.login.totp || !totpCode\">\r\n                                <img src=\"images/totp-countdown.png\" title=\"{{'verificationCodeTotp' | i18n}}\"\r\n                                    class=\"ml-2\">\r\n                                <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"premiumRequired()\"\r\n                                    *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\">\r\n                                    {{'premium' | i18n}}\r\n                                </a>\r\n                                <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\"\r\n                                    (click)=\"upgradeOrganization()\"\r\n                                    *ngIf=\"(organization && !organization.useTotp) || (!organization && !canAccessPremium && cipher.organizationId && !cipher.organizationUseTotp)\">\r\n                                    {{'upgrade' | i18n}}\r\n                                </a>\r\n                            </div>\r\n                            <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\r\n                                <span class=\"totp-countdown mr-3 ml-2\">\r\n                                    <span class=\"totp-sec\">{{totpSec}}</span>\r\n                                    <svg>\r\n                                        <g>\r\n                                            <circle class=\"totp-circle inner\" r=\"12.6\" cy=\"16\" cx=\"16\"\r\n                                                [ngStyle]=\"{'stroke-dashoffset.px': totpDash}\"></circle>\r\n                                            <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\r\n                                        </g>\r\n                                    </svg>\r\n                                </span>\r\n                                <span class=\"totp-code mr-2\"\r\n                                    title=\"{{'verificationCodeTotp' | i18n}}\">{{totpCodeFormatted}}</span>\r\n                                <button type=\"button\" class=\"btn btn-link\"\r\n                                    appA11yTitle=\"{{'copyVerificationCode' | i18n}}\"\r\n                                    (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\">\r\n                                    <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container *ngIf=\"cipher.login.hasUris\">\r\n                        <div class=\"row\" *ngFor=\"let u of cipher.login.uris; let i = index; trackBy:trackByFunction\">\r\n                            <div class=\"col-7 form-group\">\r\n                                <label for=\"loginUri{{i}}\">{{'uriPosition' | i18n : (i + 1)}}</label>\r\n                                <div class=\"input-group\">\r\n                                    <input class=\"form-control\" id=\"loginUri{{i}}\" type=\"text\"\r\n                                        name=\"Login.Uris[{{i}}].Uri\" [(ngModel)]=\"u.uri\" [disabled]=\"cipher.isDeleted\"\r\n                                        placeholder=\"{{'ex' | i18n}} https://google.com\" appInputVerbatim>\r\n                                    <div class=\"input-group-append\">\r\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                            appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launch(u)\"\r\n                                            [disabled]=\"!u.canLaunch\" tabindex=\"-1\">\r\n                                            <i class=\"fa fa-lg fa-share\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                            appA11yTitle=\"{{'copyUri' | i18n}}\" (click)=\"copy(u.uri, 'uri', 'URI')\"\r\n                                            tabindex=\"-1\">\r\n                                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-5 form-group\">\r\n                                <div class=\"d-flex\">\r\n                                    <label for=\"loginUriMatch{{i}}\">\r\n                                        {{'matchDetection' | i18n}}\r\n                                    </label>\r\n                                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/uri-match-detection/\"\r\n                                        target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                                    </a>\r\n                                </div>\r\n                                <div class=\"d-flex\">\r\n                                    <select class=\"form-control\" id=\"loginUriMatch{{i}}\" name=\"Login.Uris[{{i}}].Match\"\r\n                                        [(ngModel)]=\"u.match\" (change)=\"loginUriMatchChanged(u)\" \r\n                                        [disabled]=\"cipher.isDeleted\">\r\n                                        <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{o.name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeUri(u)\"\r\n                                        appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted\">\r\n                                        <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                    <a href=\"#\" appStopClick (click)=\"addUri()\" class=\"d-inline-block mb-3\" *ngIf=\"!cipher.isDeleted\">\r\n                        <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newUri' | i18n}}\r\n                    </a>\r\n                </ng-container>\r\n                <!-- Card -->\r\n                <ng-container *ngIf=\"cipher.type === cipherType.Card\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"cardCardholderName\">{{'cardholderName' | i18n}}</label>\r\n                            <input id=\"cardCardholderName\" class=\"form-control\" type=\"text\"\r\n                                name=\"Card.CardCardholderName\" [(ngModel)]=\"cipher.card.cardholderName\"\r\n                                [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"cardBrand\">{{'brand' | i18n}}</label>\r\n                            <select id=\"cardBrand\" class=\"form-control\" name=\"Card.Brand\"\r\n                                [(ngModel)]=\"cipher.card.brand\" [disabled]=\"cipher.isDeleted\">\r\n                                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"cardNumber\">{{'number' | i18n}}</label>\r\n                            <div class=\"input-group\">\r\n                                <input id=\"cardNumber\" class=\"form-control\" type=\"text\" name=\"Card.Number\"\r\n                                    [(ngModel)]=\"cipher.card.number\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                                <div class=\"input-group-append\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        appA11yTitle=\"{{'copyNumber' | i18n}}\"\r\n                                        (click)=\"copy(cipher.card.number, 'number', 'Number')\" tabindex=\"-1\">\r\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col form-group\">\r\n                            <label for=\"cardExpMonth\">{{'expirationMonth' | i18n}}</label>\r\n                            <select id=\"cardExpMonth\" class=\"form-control\" name=\"Card.ExpMonth\"\r\n                                [(ngModel)]=\"cipher.card.expMonth\" [disabled]=\"cipher.isDeleted\">\r\n                                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col form-group\">\r\n                            <label for=\"cardExpYear\">{{'expirationYear' | i18n}}</label>\r\n                            <input id=\"cardExpYear\" class=\"form-control\" type=\"text\" name=\"Card.ExpYear\"\r\n                                [(ngModel)]=\"cipher.card.expYear\" placeholder=\"{{'ex' | i18n}} 2019\" \r\n                                [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"cardCode\">{{'securityCode' | i18n}}</label>\r\n                            <div class=\"input-group\">\r\n                                <input id=\"cardCode\" class=\"form-control text-monospace\"\r\n                                    type=\"{{showCardCode ? 'text' : 'password'}}\" name=\"Card.Code\"\r\n                                    [(ngModel)]=\"cipher.card.code\" appInputVerbatim autocomplete=\"new-password\"\r\n                                    [disabled]=\"cipher.isDeleted\">\r\n                                <div class=\"input-group-append\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardCode()\"\r\n                                        tabindex=\"-1\">\r\n                                        <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                            [ngClass]=\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\"></i>\r\n                                    </button>\r\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                        appA11yTitle=\"{{'securityCode' | i18n}}\"\r\n                                        (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\" tabindex=\"-1\">\r\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <!-- Identity -->\r\n                <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idTitle\">{{'title' | i18n}}</label>\r\n                            <select id=\"idTitle\" class=\"form-control\" name=\"Identity.Title\"\r\n                                [(ngModel)]=\"cipher.identity.title\" [disabled]=\"cipher.isDeleted\">\r\n                                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idFirstName\">{{'firstName' | i18n}}</label>\r\n                            <input id=\"idFirstName\" class=\"form-control\" type=\"text\" name=\"Identity.FirstName\"\r\n                                [(ngModel)]=\"cipher.identity.firstName\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idMiddleName\">{{'middleName' | i18n}}</label>\r\n                            <input id=\"idMiddleName\" class=\"form-control\" type=\"text\" name=\"Identity.MiddleName\"\r\n                                [(ngModel)]=\"cipher.identity.middleName\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idLastName\">{{'lastName' | i18n}}</label>\r\n                            <input id=\"idLastName\" class=\"form-control\" type=\"text\" name=\"Identity.LastName\"\r\n                                [(ngModel)]=\"cipher.identity.lastName\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idUsername\">{{'username' | i18n}}</label>\r\n                            <input id=\"idUsername\" class=\"form-control\" type=\"text\" name=\"Identity.Username\"\r\n                                [(ngModel)]=\"cipher.identity.username\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idCompany\">{{'company' | i18n}}</label>\r\n                            <input id=\"idCompany\" class=\"form-control\" type=\"text\" name=\"Identity.Company\"\r\n                                [(ngModel)]=\"cipher.identity.company\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idSsn\">{{'ssn' | i18n}}</label>\r\n                            <input id=\"idSsn\" class=\"form-control\" type=\"text\" name=\"Identity.SSN\"\r\n                                [(ngModel)]=\"cipher.identity.ssn\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idPassportNumber\">{{'passportNumber' | i18n}}</label>\r\n                            <input id=\"idPassportNumber\" class=\"form-control\" type=\"text\" name=\"Identity.PassportNumber\"\r\n                                [(ngModel)]=\"cipher.identity.passportNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-4 form-group\">\r\n                            <label for=\"idLicenseNumber\">{{'licenseNumber' | i18n}}</label>\r\n                            <input id=\"idLicenseNumber\" class=\"form-control\" type=\"text\" name=\"Identity.LicenseNumber\"\r\n                                [(ngModel)]=\"cipher.identity.licenseNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idEmail\">{{'email' | i18n}}</label>\r\n                            <input id=\"idEmail\" class=\"form-control\" type=\"text\" name=\"Identity.Email\"\r\n                                [(ngModel)]=\"cipher.identity.email\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idPhone\">{{'phone' | i18n}}</label>\r\n                            <input id=\"idPhone\" class=\"form-control\" type=\"text\" name=\"Identity.Phone\"\r\n                                [(ngModel)]=\"cipher.identity.phone\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idAddress1\">{{'address1' | i18n}}</label>\r\n                            <input id=\"idAddress1\" class=\"form-control\" type=\"text\" name=\"Identity.Address1\"\r\n                                [(ngModel)]=\"cipher.identity.address1\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idAddress2\">{{'address2' | i18n}}</label>\r\n                            <input id=\"idAddress2\" class=\"form-control\" type=\"text\" name=\"Identity.Address2\"\r\n                                [(ngModel)]=\"cipher.identity.address2\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idAddress3\">{{'address3' | i18n}}</label>\r\n                            <input id=\"idAddress3\" class=\"form-control\" type=\"text\" name=\"Identity.Address3\"\r\n                                [(ngModel)]=\"cipher.identity.address3\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idCity\">{{'cityTown' | i18n}}</label>\r\n                            <input id=\"idCity\" class=\"form-control\" type=\"text\" name=\"Identity.City\"\r\n                                [(ngModel)]=\"cipher.identity.city\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idState\">{{'stateProvince' | i18n}}</label>\r\n                            <input id=\"idState\" class=\"form-control\" type=\"text\" name=\"Identity.State\"\r\n                                [(ngModel)]=\"cipher.identity.state\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idPostalCode\">{{'zipPostalCode' | i18n}}</label>\r\n                            <input id=\"idPostalCode\" class=\"form-control\" type=\"text\" name=\"Identity.PostalCode\"\r\n                                [(ngModel)]=\"cipher.identity.postalCode\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"idCountry\">{{'country' | i18n}}</label>\r\n                            <input id=\"idCountry\" class=\"form-control\" type=\"text\" name=\"Identity.Country\"\r\n                                [(ngModel)]=\"cipher.identity.country\" [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"form-group\">\r\n                    <label for=\"notes\">{{'notes' | i18n}}</label>\r\n                    <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\" [disabled]=\"cipher.isDeleted\"\r\n                        class=\"form-control\"></textarea>\r\n                </div>\r\n                <h3 class=\"mt-4\">{{'customFields' | i18n}}</h3>\r\n                <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\r\n                    <div class=\"row\" cdkDrag *ngFor=\"let f of cipher.fields; let i = index; trackBy:trackByFunction\">\r\n                        <div class=\"col-5 form-group\">\r\n                            <div class=\"d-flex\">\r\n                                <label for=\"fieldName{{i}}\">{{'name' | i18n}}</label>\r\n                                <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/custom-fields/\"\r\n                                    target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                            </div>\r\n                            <input id=\"fieldName{{i}}\" type=\"text\" name=\"Field.Name{{i}}\" [(ngModel)]=\"f.name\"\r\n                                class=\"form-control\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                        </div>\r\n                        <div class=\"col-7 form-group\">\r\n                            <label for=\"fieldValue{{i}}\">{{'value' | i18n}}</label>\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\r\n                                    <input id=\"fieldValue{{i}}\" class=\"form-control\" type=\"text\" name=\"Field.Value{{i}}\"\r\n                                        [(ngModel)]=\"f.value\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                            appA11yTitle=\"{{'copyValue' | i18n}}\"\r\n                                            (click)=\"copy(f.value, 'value', 'Field')\" tabindex=\"-1\">\r\n                                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\r\n                                    <input id=\"fieldValue{{i}}\" type=\"{{f.showValue ? 'text' : 'password'}}\"\r\n                                        name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\"\r\n                                        class=\"form-control text-monospace\" appInputVerbatim\r\n                                        autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || (!cipher.viewPassword && !f.newField)\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                            appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleFieldValue(f)\"\r\n                                            tabindex=\"-1\" [disabled]=\"!cipher.viewPassword && !f.newField\">\r\n                                            <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                                [ngClass]=\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\">\r\n                                            </i>\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                                            appA11yTitle=\"{{'copyValue' | i18n}}\"\r\n                                            (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\r\n                                            tabindex=\"-1\" [disabled]=\"!cipher.viewPassword && !f.newField\">\r\n                                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"flex-fill\">\r\n                                    <input id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" type=\"checkbox\"\r\n                                        [(ngModel)]=\"f.value\" *ngIf=\"f.type === fieldType.Boolean\" appTrueFalseValue\r\n                                        trueValue=\"true\" falseValue=\"false\" [disabled]=\"cipher.isDeleted\">\r\n                                </div>\r\n                                <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeField(f)\"\r\n                                    appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted\">\r\n                                    <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-link text-muted cursor-move\"\r\n                                    appA11yTitle=\"{{'dragToSort' | i18n}}\" *ngIf=\"!cipher.isDeleted\">\r\n                                    <i class=\"fa fa-bars fa-lg\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a href=\"#\" appStopClick (click)=\"addField()\" class=\"d-inline-block mb-2\" *ngIf=\"!cipher.isDeleted\">\r\n                    <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newCustomField' | i18n}}\r\n                </a>\r\n                <div class=\"row\" *ngIf=\"!cipher.isDeleted\">\r\n                    <div class=\"col-5\">\r\n                        <label for=\"addFieldType\" class=\"sr-only\">{{'type' | i18n}}</label>\r\n                        <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\r\n                            <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"allowOwnershipAssignment()\">\r\n                    <h3 class=\"mt-4\">{{'ownership' | i18n}}</h3>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-5\">\r\n                            <label for=\"organizationId\">{{'whoOwnsThisItem' | i18n}}</label>\r\n                            <select id=\"organizationId\" class=\"form-control\" name=\"OrganizationId\"\r\n                                [(ngModel)]=\"cipher.organizationId\" (change)=\"organizationChanged()\"\r\n                                [disabled]=\"cipher.isDeleted\">\r\n                                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\r\n                    <h3 class=\"mt-4\">{{'collections' | i18n}}</h3>\r\n                    <div *ngIf=\"!collections || !collections.length\">\r\n                        {{'noCollectionsInList' | i18n}}\r\n                    </div>\r\n                    <ng-container *ngIf=\"collections && collections.length\">\r\n                        <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"c.checked\"\r\n                                id=\"collection-{{i}}\" name=\"Collection[{{i}}].Checked\" [disabled]=\"cipher.isDeleted\">\r\n                            <label class=\"form-check-label\" for=\"collection-{{i}}\">{{c.name}}</label>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"editMode\">\r\n                    <div class=\"small text-muted mt-4\">\r\n                        <div>\r\n                            <b class=\"font-weight-semibold\">{{'dateUpdated' | i18n}}:</b>\r\n                            {{cipher.revisionDate | date:'medium'}}\r\n                        </div>\r\n                        <div *ngIf=\"showRevisionDate\">\r\n                            <b class=\"font-weight-semibold\">{{'datePasswordUpdated' | i18n}}:</b>\r\n                            {{cipher.passwordRevisionDisplayDate | date:'medium'}}\r\n                        </div>\r\n                        <div *ngIf=\"hasPasswordHistory\">\r\n                            <b class=\"font-weight-semibold\">{{'passwordHistory' | i18n}}:</b>\r\n                            <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{'view' | i18n}}\">\r\n                                {{cipher.passwordHistory.length}}\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\r\n                            <div *ngFor=\"let ph of cipher.passwordHistory\">\r\n                                {{ph.lastUsedDate | date:'short'}} -\r\n                                <span class=\"text-monospace ml-2\">{{ph.password}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{(cipher?.isDeleted ? 'restore' : 'save') | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\r\n                    {{'cancel' | i18n}}\r\n                </button>\r\n                <div class=\"ml-auto\" *ngIf=\"cipher\">\r\n                    <button *ngIf=\"!organization && !cipher.isDeleted\" type=\"button\" (click)=\"toggleFavorite()\" class=\"btn btn-link\"\r\n                        appA11yTitle=\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\">\r\n                        <i class=\"fa fa-lg\" [ngClass]=\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\"\r\n                            aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\r\n                        appA11yTitle=\"{{(cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\"\r\n                        *ngIf=\"editMode && !cloneMode\" [disabled]=\"deleteBtn.loading\"\r\n                        [appApiAction]=\"deletePromise\">\r\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\r\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\r\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib/angular/components/groupings.component';\r\n\r\n@Component({\r\n    selector: 'app-vault-groupings',\r\n    templateUrl: 'groupings.component.html',\r\n})\r\nexport class GroupingsComponent extends BaseGroupingsComponent {\r\n    @Output() onSearchTextChanged = new EventEmitter<string>();\r\n\r\n    searchText: string = '';\r\n    searchPlaceholder: string = null;\r\n\r\n    constructor(collectionService: CollectionService, folderService: FolderService,\r\n        storageService: StorageService, userService: UserService) {\r\n        super(collectionService, folderService, storageService, userService);\r\n    }\r\n\r\n    searchTextChanged() {\r\n        this.onSearchTextChanged.emit(this.searchText);\r\n    }\r\n}\r\n","<div class=\"card vault-filters\">\r\n    <div class=\"card-header d-flex\">\r\n        {{'filters' | i18n}}\r\n        <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/searching-vault/\" target=\"_blank\" rel=\"noopener\"\r\n            appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n            <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n        </a>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchVault' | i18n)}}\" id=\"search\"\r\n            class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus>\r\n        <ul class=\"fa-ul card-ul\">\r\n            <li [ngClass]=\"{active: selectedAll}\">\r\n                <a href=\"#\" appStopClick (click)=\"selectAll()\">\r\n                    <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allItems' | i18n}}\r\n                </a>\r\n            </li>\r\n            <li [ngClass]=\"{active: selectedFavorites}\" *ngIf=\"showFavorites\">\r\n                <a href=\"#\" appStopClick (click)=\"selectFavorites()\">\r\n                    <i class=\"fa-li fa fa-fw fa-star\"></i>{{'favorites' | i18n}}\r\n                </a>\r\n            </li>\r\n            <li [ngClass]=\"{active: selectedTrash}\" *ngIf=\"showTrash\">\r\n                <a href=\"#\" appStopClick (click)=\"selectTrash()\">\r\n                    <i class=\"fa-li fa fa-fw fa-trash-o\"></i>{{'trash' | i18n}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <h3>{{'types' | i18n}}</h3>\r\n        <ul class=\"fa-ul card-ul\">\r\n            <li [ngClass]=\"{active: selectedType === cipherType.Login}\">\r\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\">\r\n                    <i class=\"fa-li fa fa-fw fa-globe\"></i>{{'typeLogin' | i18n}}\r\n                </a>\r\n            </li>\r\n            <li [ngClass]=\"{active: selectedType === cipherType.Card}\">\r\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\">\r\n                    <i class=\"fa-li fa fa-fw fa-credit-card\"></i>{{'typeCard' | i18n}}\r\n                </a>\r\n            </li>\r\n            <li [ngClass]=\"{active: selectedType === cipherType.Identity}\">\r\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\">\r\n                    <i class=\"fa-li fa fa-fw fa-id-card-o\"></i>{{'typeIdentity' | i18n}}\r\n                </a>\r\n            </li>\r\n            <li [ngClass]=\"{active: selectedType === cipherType.SecureNote}\">\r\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\">\r\n                    <i class=\"fa-li fa fa-fw fa-sticky-note-o\"></i>{{'typeSecureNote' | i18n}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <p *ngIf=\"!loaded\" class=\"text-muted\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </p>\r\n        <ng-container *ngIf=\"loaded\">\r\n            <ng-container *ngIf=\"showFolders\">\r\n                <h3 class=\"d-flex\">\r\n                    {{'folders' | i18n}}\r\n                    <a href=\"#\" class=\"text-muted ml-auto\" appStopClick (click)=\"addFolder()\"\r\n                        appA11yTitle=\"{{'addFolder' | i18n}}\">\r\n                        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                </h3>\r\n                <ul class=\"fa-ul card-ul carets\">\r\n                    <ng-template #recursiveFolders let-folders>\r\n                        <li *ngFor=\"let f of folders\"\r\n                            [ngClass]=\"{active: selectedFolder && f.node.id === selectedFolderId}\">\r\n                            <div class=\"d-flex\">\r\n                                <i class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\"\r\n                                    [ngClass]=\"{'fa-caret-right': isCollapsed(f.node), 'fa-caret-down': !isCollapsed(f.node)}\"\r\n                                    (click)=\"collapse(f.node)\"></i>\r\n                                <a href=\"#\" appStopClick (click)=\"selectFolder(f.node)\">{{f.node.name}}</a>\r\n                                <a href=\"#\" class=\"text-muted ml-auto show-active\" appStopClick\r\n                                    (click)=\"editFolder(f.node)\" appA11yTitle=\"{{'editFolder' | i18n}}\"\r\n                                    *ngIf=\"f.node.id\">\r\n                                    <i class=\"fa fa-pencil fa-fw\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                            </div>\r\n                            <ul class=\"fa-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\">\r\n                                <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: f.children }\">\r\n                                </ng-container>\r\n                            </ul>\r\n                        </li>\r\n                    </ng-template>\r\n                    <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: nestedFolders }\">\r\n                    </ng-container>\r\n                </ul>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"showCollections && collections && collections.length\">\r\n                <h3>{{'collections' | i18n}}</h3>\r\n                <ul class=\"fa-ul card-ul carets\">\r\n                    <ng-template #recursiveCollections let-collections>\r\n                        <li *ngFor=\"let c of collections\" [ngClass]=\"{active: c.node.id === selectedCollectionId}\">\r\n                            <i class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\"\r\n                                [ngClass]=\"{'fa-caret-right': isCollapsed(c.node), 'fa-caret-down': !isCollapsed(c.node)}\"\r\n                                (click)=\"collapse(c.node)\"></i>\r\n                            <a href=\"#\" appStopClick (click)=\"selectCollection(c.node)\">{{c.node.name}}</a>\r\n                            <ul class=\"fa-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\">\r\n                                <ng-container\r\n                                    *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: c.children }\">\r\n                                </ng-container>\r\n                            </ul>\r\n                        </li>\r\n                    </ng-template>\r\n                    <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: nestedCollections }\">\r\n                    </ng-container>\r\n                </ul>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n","import { OrganizationData } from '../data/organizationData';\r\n\r\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\r\nimport { OrganizationUserType } from '../../enums/organizationUserType';\r\n\r\nexport class Organization {\r\n    id: string;\r\n    name: string;\r\n    status: OrganizationUserStatusType;\r\n    type: OrganizationUserType;\r\n    enabled: boolean;\r\n    usePolicies: boolean;\r\n    useGroups: boolean;\r\n    useDirectory: boolean;\r\n    useEvents: boolean;\r\n    useTotp: boolean;\r\n    use2fa: boolean;\r\n    useApi: boolean;\r\n    useBusinessPortal: boolean;\r\n    useSso: boolean;\r\n    selfHost: boolean;\r\n    usersGetPremium: boolean;\r\n    seats: number;\r\n    maxCollections: number;\r\n    maxStorageGb?: number;\r\n    ssoBound: boolean;\r\n    identifier: string;\r\n\r\n    constructor(obj?: OrganizationData) {\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.id = obj.id;\r\n        this.name = obj.name;\r\n        this.status = obj.status;\r\n        this.type = obj.type;\r\n        this.enabled = obj.enabled;\r\n        this.usePolicies = obj.usePolicies;\r\n        this.useGroups = obj.useGroups;\r\n        this.useDirectory = obj.useDirectory;\r\n        this.useEvents = obj.useEvents;\r\n        this.useTotp = obj.useTotp;\r\n        this.use2fa = obj.use2fa;\r\n        this.useApi = obj.useApi;\r\n        this.useBusinessPortal = obj.useBusinessPortal;\r\n        this.useSso = obj.useSso;\r\n        this.selfHost = obj.selfHost;\r\n        this.usersGetPremium = obj.usersGetPremium;\r\n        this.seats = obj.seats;\r\n        this.maxCollections = obj.maxCollections;\r\n        this.maxStorageGb = obj.maxStorageGb;\r\n        this.ssoBound = obj.ssoBound;\r\n        this.identifier = obj.identifier;\r\n    }\r\n\r\n    get canAccess() {\r\n        if (this.type === OrganizationUserType.Owner) {\r\n            return true;\r\n        }\r\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\r\n    }\r\n\r\n    get isManager() {\r\n        return this.type === OrganizationUserType.Manager || this.type === OrganizationUserType.Owner ||\r\n            this.type === OrganizationUserType.Admin;\r\n    }\r\n\r\n    get isAdmin() {\r\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\r\n    }\r\n\r\n    get isOwner() {\r\n        return this.type === OrganizationUserType.Owner;\r\n    }\r\n}\r\n","import { View } from './view';\r\n\r\nimport { SendFile } from '../domain/sendFile';\r\n\r\nexport class SendFileView implements View {\r\n    id: string = null;\r\n    url: string = null;\r\n    size: string = null;\r\n    sizeName: string = null;\r\n    fileName: string = null;\r\n\r\n    constructor(f?: SendFile) {\r\n        if (!f) {\r\n            return;\r\n        }\r\n\r\n        this.id = f.id;\r\n        this.url = f.url;\r\n        this.size = f.size;\r\n        this.sizeName = f.sizeName;\r\n    }\r\n\r\n    get fileSize(): number {\r\n        try {\r\n            if (this.size != null) {\r\n                return parseInt(this.size, null);\r\n            }\r\n        } catch { }\r\n        return 0;\r\n    }\r\n}\r\n","import { View } from './view';\r\n\r\nimport { SendText } from '../domain/sendText';\r\n\r\nexport class SendTextView implements View {\r\n    text: string = null;\r\n    hidden: boolean;\r\n\r\n    constructor(t?: SendText) {\r\n        if (!t) {\r\n            return;\r\n        }\r\n\r\n        this.hidden = t.hidden;\r\n    }\r\n\r\n    get maskedText(): string {\r\n        return this.text != null ? '••••••••' : null;\r\n    }\r\n}\r\n","import { SendType } from '../../enums/sendType';\r\n\r\nimport { SendFileData } from './sendFileData';\r\nimport { SendTextData } from './sendTextData';\r\n\r\nimport { SendResponse } from '../response/sendResponse';\r\n\r\nexport class SendData {\r\n    id: string;\r\n    accessId: string;\r\n    userId: string;\r\n    type: SendType;\r\n    name: string;\r\n    notes: string;\r\n    file: SendFileData;\r\n    text: SendTextData;\r\n    key: string;\r\n    maxAccessCount?: number;\r\n    accessCount: number;\r\n    revisionDate: string;\r\n    expirationDate: string;\r\n    deletionDate: string;\r\n    password: string;\r\n    disabled: boolean;\r\n\r\n    constructor(response?: SendResponse, userId?: string) {\r\n        if (response == null) {\r\n            return;\r\n        }\r\n\r\n        this.id = response.id;\r\n        this.accessId = response.accessId;\r\n        this.userId = userId;\r\n        this.type = response.type;\r\n        this.name = response.name;\r\n        this.notes = response.notes;\r\n        this.key = response.key;\r\n        this.maxAccessCount = response.maxAccessCount;\r\n        this.accessCount = response.accessCount;\r\n        this.revisionDate = response.revisionDate;\r\n        this.expirationDate = response.expirationDate;\r\n        this.deletionDate = response.deletionDate;\r\n        this.password = response.password;\r\n        this.disabled = response.disable;\r\n\r\n        switch (this.type) {\r\n            case SendType.Text:\r\n                this.text = new SendTextData(response.text);\r\n                break;\r\n            case SendType.File:\r\n                this.file = new SendFileData(response.file);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\n@Component({\r\n    selector: 'app-organizations',\r\n    templateUrl: 'organizations.component.html',\r\n})\r\nexport class OrganizationsComponent implements OnInit {\r\n    @Input() vault = false;\r\n\r\n    organizations: Organization[];\r\n    loaded: boolean = false;\r\n    actionPromise: Promise<any>;\r\n\r\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\r\n        private i18nService: I18nService, private apiService: ApiService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private syncService: SyncService) { }\r\n\r\n    async ngOnInit() {\r\n        if (!this.vault) {\r\n            await this.syncService.fullSync(true);\r\n            await this.load();\r\n        }\r\n    }\r\n\r\n    async load() {\r\n        const orgs = await this.userService.getAllOrganizations();\r\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\r\n        this.organizations = orgs;\r\n        this.loaded = true;\r\n    }\r\n\r\n    async unlinkSso(org: Organization) {\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            'Are you sure you want to unlink SSO for this organization?', org.name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\r\n                return this.syncService.fullSync(true);\r\n            });\r\n            await this.actionPromise;\r\n            this.analytics.eventTrack.next({ action: 'Unlinked SSO' });\r\n            this.toasterService.popAsync('success', null, 'Unlinked SSO');\r\n            await this.load();\r\n        } catch { }\r\n    }\r\n\r\n    async leave(org: Organization) {\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\r\n                return this.syncService.fullSync(true);\r\n            });\r\n            await this.actionPromise;\r\n            this.analytics.eventTrack.next({ action: 'Left Organization' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\r\n            await this.load();\r\n        } catch { }\r\n    }\r\n}\r\n","<ng-container *ngIf=\"vault\">\r\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n    </p>\r\n    <ng-container *ngIf=\"loaded\">\r\n        <ul class=\"fa-ul card-ul carets\" *ngIf=\"organizations && organizations.length\">\r\n            <li *ngFor=\"let o of organizations\">\r\n                <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\">\r\n                    <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{o.name}}\r\n                    <ng-container *ngIf=\"!o.enabled\">\r\n                        <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\"\r\n                            aria-hidden=\"true\"></i>\r\n                        <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span>\r\n                    </ng-container>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <p *ngIf=\"!organizations || !organizations.length\">{{'noOrganizationsList' | i18n}}</p>\r\n    </ng-container>\r\n    <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\">\r\n        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\r\n        {{'newOrganization' | i18n}}\r\n    </a>\r\n</ng-container>\r\n<ng-container *ngIf=\"!vault\">\r\n    <div class=\"page-header d-flex\">\r\n        <h1>\r\n            {{'organizations' | i18n}}\r\n            <small [appApiAction]=\"actionPromise\" #action>\r\n                <ng-container *ngIf=\"action.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n                </ng-container>\r\n            </small>\r\n        </h1>\r\n        <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-sm btn-outline-primary ml-auto\"\r\n            *ngIf=\"!loaded || (organizations && organizations.length)\">\r\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\r\n            {{'newOrganization' | i18n}}\r\n        </a>\r\n    </div>\r\n    <ng-container *ngIf=\"!loaded\">\r\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"loaded\">\r\n        <ng-container *ngIf=\"!organizations || !organizations.length\">\r\n            <p>{{'noOrganizationsList' | i18n}}</p>\r\n            <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\">\r\n                <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\r\n                {{'newOrganization' | i18n}}\r\n            </a>\r\n        </ng-container>\r\n        <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\">\r\n            <tbody>\r\n                <tr *ngFor=\"let o of organizations\">\r\n                    <td width=\"30\">\r\n                        <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\r\n                    </td>\r\n                    <td>\r\n                        <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{o.name}}</a>\r\n                        <ng-container *ngIf=\"!o.enabled\">\r\n                            <i class=\"fa fa-exclamation-triangle text-danger\"\r\n                                title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span>\r\n                        </ng-container>\r\n                    </td>\r\n                    <td class=\"table-list-options\">\r\n                        <div class=\"dropdown\" appListDropdown>\r\n                            <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n                                appA11yTitle=\"{{'options' | i18n}}\">\r\n                                <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                            <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                <ng-container *ngIf=\"o.useSso && o.identifier\">\r\n                                    <a *ngIf=\"o.ssoBound; else linkSso\" class=\"dropdown-item\" href=\"#\" appStopClick\r\n                                        (click)=\"unlinkSso(o)\">\r\n                                        <i class=\"fa fa-fw fa-chain-broken\" aria-hidden=\"true\"></i>\r\n                                        {{'unlinkSso' | i18n}}\r\n                                    </a>\r\n                                    <ng-template #linkSso>\r\n                                        <app-link-sso [organization]=\"o\">\r\n                                        </app-link-sso>\r\n                                    </ng-template>\r\n                                </ng-container>\r\n                                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\">\r\n                                    <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i>\r\n                                    {{'leave' | i18n}}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n</ng-container>\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class SelectionReadOnlyResponse extends BaseResponse {\r\n    id: string;\r\n    readOnly: boolean;\r\n    hidePasswords: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.readOnly = this.getResponseProperty('ReadOnly');\r\n        this.hidePasswords = this.getResponseProperty('HidePasswords');\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { TokenService } from 'jslib/abstractions/token.service';\r\n\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: 'navbar.component.html',\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    selfHosted = false;\r\n    name: string;\r\n    email: string;\r\n\r\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\r\n        private tokenService: TokenService) {\r\n        this.selfHosted = this.platformUtilsService.isSelfHost();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.name = await this.tokenService.getName();\r\n        this.email = await this.tokenService.getEmail();\r\n        if (this.name == null || this.name.trim() === '') {\r\n            this.name = this.email;\r\n        }\r\n    }\r\n\r\n    lock() {\r\n        this.messagingService.send('lockVault');\r\n    }\r\n\r\n    logOut() {\r\n        this.messagingService.send('logout');\r\n    }\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-dark bg-primary\" [ngClass]=\"{'bg-secondary-alt': selfHosted}\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{'pageTitle' | i18n : 'Bitwarden'}}\">\r\n            <i class=\"fa fa-shield\" aria-hidden=\"true\"></i>\r\n        </a>\r\n        <div class=\"collapse navbar-collapse\">\r\n            <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                    <a class=\"nav-link\" routerLink=\"/vault\">{{'myVault' | i18n}}</a>\r\n                </li>\r\n                <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                    <a class=\"nav-link\" routerLink=\"/sends\">Send</a>\r\n                </li>\r\n                <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                    <a class=\"nav-link\" routerLink=\"/tools\">{{'tools' | i18n}}</a>\r\n                </li>\r\n                <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                    <a class=\"nav-link\" routerLink=\"/settings\">{{'settings' | i18n}}</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\r\n            <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-item nav-link dropdown-toggle\" href=\"#\" id=\"nav-profile\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <i class=\"fa fa-user-circle fa-lg\" aria-hidden=\"true\"></i>\r\n                </a>\r\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\">\r\n                    <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp>\r\n                        <app-avatar [data]=\"name\" [email]=\"email\" size=\"25\" fontSize=\"14\" [circle]=\"true\"></app-avatar>\r\n                        <div class=\"ml-2 overflow-hidden\">\r\n                            <span>{{'loggedInAs' | i18n}}</span>\r\n                            <small class=\"text-muted\">{{name}}</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\">\r\n                        <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i>\r\n                        {{'myAccount' | i18n}}\r\n                    </a>\r\n                    <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\r\n                        <i class=\"fa fa-fw fa-question-circle\" aria-hidden=\"true\"></i>\r\n                        {{'getHelp' | i18n}}\r\n                    </a>\r\n                    <a class=\"dropdown-item\" href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\r\n                        <i class=\"fa fa-fw fa-download\" aria-hidden=\"true\"></i>\r\n                        {{'getApps' | i18n}}\r\n                    </a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\">\r\n                        <i class=\"fa fa-fw fa-lock\" aria-hidden=\"true\"></i>\r\n                        {{'lockNow' | i18n}}\r\n                    </button>\r\n                    <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\">\r\n                        <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i>\r\n                        {{'logOut' | i18n}}\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: 'footer.component.html',\r\n})\r\nexport class FooterComponent implements OnInit {\r\n    version: string;\r\n    year: string = '2015';\r\n\r\n    constructor(private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    ngOnInit() {\r\n        this.year = new Date().getFullYear().toString();\r\n        this.version = this.platformUtilsService.getApplicationVersion();\r\n    }\r\n}\r\n","<div class=\"container footer text-muted\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            &copy; {{year}}, Bitwarden Inc.\r\n        </div>\r\n        <div class=\"col text-center\"></div>\r\n        <div class=\"col text-right\">\r\n            {{'versionNumber' | i18n : version}}\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\nimport { ErrorResponse } from '../../models/response/errorResponse';\r\n\r\n@Injectable()\r\nexport class ValidationService {\r\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    showError(data: any): string[] {\r\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\r\n        let errors: string[] = [];\r\n\r\n        if (data != null && typeof data === 'string') {\r\n            errors.push(data);\r\n        } else if (data == null || typeof data !== 'object') {\r\n            errors.push(defaultErrorMessage);\r\n        } else if (data.validationErrors != null) {\r\n            errors = errors.concat((data as ErrorResponse).getAllMessages());\r\n        } else {\r\n            errors.push(data.message ? data.message : defaultErrorMessage);\r\n        }\r\n\r\n        if (errors.length === 1) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);\r\n        } else if (errors.length > 1) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {\r\n                timeout: 5000 * errors.length,\r\n            });\r\n        }\r\n\r\n        return errors;\r\n    }\r\n}\r\n","export enum EncryptionType {\r\n    AesCbc256_B64 = 0,\r\n    AesCbc128_HmacSha256_B64 = 1,\r\n    AesCbc256_HmacSha256_B64 = 2,\r\n    Rsa2048_OaepSha256_B64 = 3,\r\n    Rsa2048_OaepSha1_B64 = 4,\r\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\r\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\r\n}\r\n","export class KeysRequest {\r\n    publicKey: string;\r\n    encryptedPrivateKey: string;\r\n\r\n    constructor(publicKey: string, encryptedPrivateKey: string) {\r\n        this.publicKey = publicKey;\r\n        this.encryptedPrivateKey = encryptedPrivateKey;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\r\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\r\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\r\nimport { OrganizationUserUserDetailsResponse } from 'jslib/models/response/organizationUserResponse';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\n@Component({\r\n    selector: 'app-entity-users',\r\n    templateUrl: 'entity-users.component.html',\r\n})\r\nexport class EntityUsersComponent implements OnInit {\r\n    @Input() entity: 'group' | 'collection';\r\n    @Input() entityId: string;\r\n    @Input() entityName: string;\r\n    @Input() organizationId: string;\r\n    @Output() onEditedUsers = new EventEmitter();\r\n\r\n    organizationUserType = OrganizationUserType;\r\n    organizationUserStatusType = OrganizationUserStatusType;\r\n\r\n    showSelected = false;\r\n    loading = true;\r\n    formPromise: Promise<any>;\r\n    selectedCount = 0;\r\n    searchText: string;\r\n\r\n    private allUsers: OrganizationUserUserDetailsResponse[] = [];\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\r\n\r\n    async ngOnInit() {\r\n        await this.loadUsers();\r\n        this.loading = false;\r\n    }\r\n\r\n    get users() {\r\n        if (this.showSelected) {\r\n            return this.allUsers.filter((u) => (u as any).checked);\r\n        } else {\r\n            return this.allUsers;\r\n        }\r\n    }\r\n\r\n    async loadUsers() {\r\n        const users = await this.apiService.getOrganizationUsers(this.organizationId);\r\n        this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, 'email'));\r\n        if (this.entity === 'group') {\r\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\r\n            if (response != null && users.data.length > 0) {\r\n                response.forEach((s) => {\r\n                    const user = users.data.filter((u) => u.id === s);\r\n                    if (user != null && user.length > 0) {\r\n                        (user[0] as any).checked = true;\r\n                    }\r\n                });\r\n            }\r\n        } else if (this.entity === 'collection') {\r\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\r\n            if (response != null && users.data.length > 0) {\r\n                response.forEach((s) => {\r\n                    const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\r\n                    if (user != null && user.length > 0) {\r\n                        (user[0] as any).checked = true;\r\n                        (user[0] as any).readOnly = s.readOnly;\r\n                        (user[0] as any).hidePasswords = s.hidePasswords;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        this.allUsers.forEach((u) => {\r\n            if (this.entity === 'collection' && u.accessAll) {\r\n                (u as any).checked = true;\r\n            }\r\n            if ((u as any).checked) {\r\n                this.selectedCount++;\r\n            }\r\n        });\r\n    }\r\n\r\n    check(u: OrganizationUserUserDetailsResponse) {\r\n        if (this.entity === 'collection' && u.accessAll) {\r\n            return;\r\n        }\r\n        (u as any).checked = !(u as any).checked;\r\n        this.selectedChanged(u);\r\n    }\r\n\r\n    selectedChanged(u: OrganizationUserUserDetailsResponse) {\r\n        if ((u as any).checked) {\r\n            this.selectedCount++;\r\n        } else {\r\n            if (this.entity === 'collection') {\r\n                (u as any).readOnly = false;\r\n                (u as any).hidePasswords = false;\r\n            }\r\n            this.selectedCount--;\r\n        }\r\n    }\r\n\r\n    filterSelected(showSelected: boolean) {\r\n        this.showSelected = showSelected;\r\n    }\r\n\r\n    async submit() {\r\n        try {\r\n            if (this.entity === 'group') {\r\n                const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\r\n                this.formPromise = this.apiService.putGroupUsers(this.organizationId, this.entityId, selections);\r\n            } else {\r\n                const selections = this.users.filter((u) => (u as any).checked && !u.accessAll)\r\n                    .map((u) => new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords));\r\n                this.formPromise = this.apiService.putCollectionUsers(this.organizationId, this.entityId, selections);\r\n            }\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({\r\n                action: this.entity === 'group' ? 'Edited Group Users' : 'Edited Collection Users',\r\n            });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedUsers'));\r\n            this.onEditedUsers.emit();\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"userAccessTitle\">\r\n                    {{'userAccess' | i18n}}\r\n                    <small>{{entityName}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"loading || !users\">\r\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n            </div>\r\n            <div class=\"modal-body\"\r\n                *ngIf=\"!loading && users && (users | search:searchText:'name':'email':'id') as searchedUsers\">\r\n                <div class=\"d-flex\">\r\n                    <div class=\"mr-3\">\r\n                        <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\r\n                        <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\"\r\n                            placeholder=\"{{'search' | i18n}}\" name=\"SearchText\" [(ngModel)]=\"searchText\">\r\n                    </div>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: !showSelected}\"\r\n                            (click)=\"filterSelected(false)\">\r\n                            {{'all' | i18n}}\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: showSelected}\"\r\n                            (click)=\"filterSelected(true)\">\r\n                            {{'selected' | i18n}}\r\n                            <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{selectedCount}}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"!searchedUsers.length\">\r\n                    <hr>\r\n                    {{'noUsersInList' | i18n}}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"searchedUsers.length\">\r\n                    <table class=\"table table-hover table-list mb-0\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>&nbsp;</th>\r\n                                <th>&nbsp;</th>\r\n                                <th>{{'name' | i18n}}</th>\r\n                                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\r\n                                <th>{{'userType' | i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'hidePasswords' |\r\n                                    i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'readOnly' |\r\n                                    i18n}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let u of searchedUsers\">\r\n                                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.checked\" name=\"{{u.id.substr(0,8)}}_Checked\"\r\n                                        [disabled]=\"entity === 'collection' && u.accessAll\"\r\n                                        (change)=\"selectedChanged(u)\" appStopProp>\r\n                                </td>\r\n                                <td width=\"30\" (click)=\"check(u)\">\r\n                                    <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\"\r\n                                        [fontSize]=\"14\"></app-avatar>\r\n                                </td>\r\n                                <td>\r\n                                    {{u.email}}\r\n                                    <span class=\"badge badge-secondary\"\r\n                                        *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited'\r\n                                        | i18n}}</span>\r\n                                    <span class=\"badge badge-warning\"\r\n                                        *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted'\r\n                                        | i18n}}</span>\r\n                                    <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small>\r\n                                </td>\r\n                                <td *ngIf=\"entity === 'collection'\">\r\n                                    <ng-container *ngIf=\"u.accessAll\">\r\n                                        <i class=\"fa fa-th\" title=\"{{'userAccessAllItems' | i18n}}\"\r\n                                            aria-hidden=\"true\"></i>\r\n                                        <span class=\"sr-only\">{{'userAccessAllItems' | i18n}}</span>\r\n                                    </ng-container>\r\n                                </td>\r\n                                <td>\r\n                                    <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span>\r\n                                    <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span>\r\n                                    <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span>\r\n                                    <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span>\r\n                                </td>\r\n                                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.hidePasswords\"\r\n                                        name=\"{{u.id.substr(0,8)}}_HidePasswords\"\r\n                                        [disabled]=\"u.accessAll || !u.checked\">\r\n                                </td>\r\n                                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.readOnly\" name=\"{{u.id.substr(0,8)}}_ReadOnly\"\r\n                                        [disabled]=\"u.accessAll || !u.checked\">\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    Input,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { EventService } from '../../services/event.service';\r\n\r\nimport { EventResponse } from 'jslib/models/response/eventResponse';\r\nimport { ListResponse } from 'jslib/models/response/listResponse';\r\n\r\n@Component({\r\n    selector: 'app-entity-events',\r\n    templateUrl: 'entity-events.component.html',\r\n})\r\nexport class EntityEventsComponent implements OnInit {\r\n    @Input() name: string;\r\n    @Input() entity: 'user' | 'cipher';\r\n    @Input() entityId: string;\r\n    @Input() organizationId: string;\r\n    @Input() showUser = false;\r\n\r\n    loading = true;\r\n    loaded = false;\r\n    events: any[];\r\n    start: string;\r\n    end: string;\r\n    continuationToken: string;\r\n    refreshPromise: Promise<any>;\r\n    morePromise: Promise<any>;\r\n\r\n    private orgUsersUserIdMap = new Map<string, any>();\r\n    private orgUsersIdMap = new Map<string, any>();\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private eventService: EventService, private toasterService: ToasterService) { }\r\n\r\n    async ngOnInit() {\r\n        const defaultDates = this.eventService.getDefaultDateFilters();\r\n        this.start = defaultDates[0];\r\n        this.end = defaultDates[1];\r\n        await this.load();\r\n    }\r\n\r\n    async load() {\r\n        if (this.showUser) {\r\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\r\n            response.data.forEach((u) => {\r\n                const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\r\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\r\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\r\n            });\r\n        }\r\n        await this.loadEvents(true);\r\n        this.loaded = true;\r\n    }\r\n\r\n    async loadEvents(clearExisting: boolean) {\r\n        if (this.refreshPromise != null || this.morePromise != null) {\r\n            return;\r\n        }\r\n\r\n        let dates: string[] = null;\r\n        try {\r\n            dates = this.eventService.formatDateFilters(this.start, this.end);\r\n        } catch (e) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('invalidDateRange'));\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        let response: ListResponse<EventResponse>;\r\n        try {\r\n            let promise: Promise<any>;\r\n            if (this.entity === 'user') {\r\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\r\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\r\n            } else {\r\n                promise = this.apiService.getEventsCipher(this.entityId,\r\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\r\n            }\r\n            if (clearExisting) {\r\n                this.refreshPromise = promise;\r\n            } else {\r\n                this.morePromise = promise;\r\n            }\r\n            response = await promise;\r\n        } catch { }\r\n\r\n        this.continuationToken = response.continuationToken;\r\n        const events = response.data.map((r) => {\r\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\r\n            const eventInfo = this.eventService.getEventInfo(r);\r\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\r\n                this.orgUsersUserIdMap.get(userId) : null;\r\n            return {\r\n                message: eventInfo.message,\r\n                appIcon: eventInfo.appIcon,\r\n                appName: eventInfo.appName,\r\n                userId: userId,\r\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\r\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\r\n                date: r.date,\r\n                ip: r.ipAddress,\r\n                type: r.type,\r\n            };\r\n        });\r\n\r\n        if (!clearExisting && this.events != null && this.events.length > 0) {\r\n            this.events = this.events.concat(events);\r\n        } else {\r\n            this.events = events;\r\n        }\r\n\r\n        this.loading = false;\r\n        this.morePromise = null;\r\n        this.refreshPromise = null;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"eventLogsTitle\">\r\n                    {{'eventLogs' | i18n}}\r\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!loaded\">\r\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"loaded\">\r\n                <div class=\"d-flex\">\r\n                    <div class=\"form-inline\">\r\n                        <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label>\r\n                        <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\"\r\n                            placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\">\r\n                        <span class=\"mx-2\">-</span>\r\n                        <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label>\r\n                        <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\"\r\n                            placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\">\r\n                    </div>\r\n                    <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\"\r\n                        class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\"\r\n                        [disabled]=\"loaded && refreshBtn.loading\">\r\n                        <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\"\r\n                            aria-hidden=\"true\"></i>\r\n                        {{'refresh' | i18n}}\r\n                    </button>\r\n                </div>\r\n                <hr>\r\n                <div *ngIf=\"!events || !events.length\">\r\n                    {{'noEventsInList' | i18n}}\r\n                </div>\r\n                <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th>\r\n                            <th class=\"border-top-0\" width=\"40\">\r\n                                <span class=\"sr-only\">{{'device' | i18n}}</span>\r\n                            </th>\r\n                            <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{'user' | i18n}}</th>\r\n                            <th class=\"border-top-0\">{{'event' | i18n}}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let e of events\">\r\n                            <td>{{e.date | date:'medium'}}</td>\r\n                            <td>\r\n                                <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span>\r\n                            </td>\r\n                            <td *ngIf=\"showUser\">\r\n                                <span appA11yTitle=\"{{e.userEmail}}\">{{e.userName}}</span>\r\n                            </td>\r\n                            <td [innerHTML]=\"e.message\"></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\"\r\n                    (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'loadMore' | i18n}}</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\r\n\r\nimport { ApiKeyResponse } from 'jslib/models/response/apiKeyResponse';\r\n\r\n@Component({\r\n    selector: 'app-api-key',\r\n    templateUrl: 'api-key.component.html',\r\n})\r\nexport class ApiKeyComponent {\r\n    keyType: string;\r\n    isRotation: boolean;\r\n    postKey: (entityId: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\r\n    entityId: string;\r\n    scope: string;\r\n    grantType: string;\r\n    apiKeyTitle: string;\r\n    apiKeyWarning: string;\r\n    apiKeyDescription: string;\r\n\r\n    masterPassword: string;\r\n    formPromise: Promise<ApiKeyResponse>;\r\n    clientId: string;\r\n    clientSecret: string;\r\n\r\n    constructor(private i18nService: I18nService, private analytics: Angulartics2,\r\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        const request = new PasswordVerificationRequest();\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n        try {\r\n            this.formPromise = this.postKey(this.entityId, request);\r\n            const response = await this.formPromise;\r\n            this.clientSecret = response.apiKey;\r\n            this.clientId = `${this.keyType}.${this.entityId}`;\r\n            this.analytics.eventTrack.next({ action: `Viewed ${this.keyType} API Key` });\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{apiKeyTitle | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{apiKeyDescription | i18n}}</p>\r\n                <ng-container *ngIf=\"!clientSecret\">\r\n                    <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                    <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                        [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\r\n                </ng-container>\r\n                <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{apiKeyWarning | i18n}}</app-callout>\r\n                <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\"\r\n                    *ngIf=\"clientSecret\">\r\n                    <p class=\"mb-1\">\r\n                        <strong>client_id:</strong><br>\r\n                        <code>{{clientId}}</code>\r\n                    </p>\r\n                    <p class=\"mb-1\">\r\n                        <strong>client_secret:</strong><br>\r\n                        <code>{{clientSecret}}</code>\r\n                    </p>\r\n                    <p class=\"mb-1\">\r\n                        <strong>scope:</strong><br>\r\n                        <code>{{scope}}</code>\r\n                    </p>\r\n                    <p class=\"mb-0\">\r\n                        <strong>grant_type:</strong><br>\r\n                        <code>{{grantType}}</code>\r\n                    </p>\r\n                </app-callout>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"\r\n                    *ngIf=\"!clientSecret\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{(isRotation ? 'rotateApiKey' : 'viewApiKey') | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    Input,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\r\n\r\n@Component({\r\n    selector: 'app-purge-vault',\r\n    templateUrl: 'purge-vault.component.html',\r\n})\r\nexport class PurgeVaultComponent {\r\n    @Input() organizationId?: string = null;\r\n\r\n    masterPassword: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private router: Router) { }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        const request = new PasswordVerificationRequest();\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n        try {\r\n            this.formPromise = this.apiService.postPurgeCiphers(request, this.organizationId);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({\r\n                action: this.organizationId != null ? 'Purged Organization Vault' : 'Purged Vault',\r\n            });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\r\n            if (this.organizationId != null) {\r\n                this.router.navigate(['organizations', this.organizationId, 'vault']);\r\n            } else {\r\n                this.router.navigate(['vault']);\r\n            }\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{'purgeVault' | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{(organizationId ? 'purgeOrgVaultDesc' : 'purgeVaultDesc') | i18n}}</p>\r\n                <app-callout type=\"warning\">{{'purgeVaultWarning' | i18n}}</app-callout>\r\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'purgeVault' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { BillingResponse } from 'jslib/models/response/billingResponse';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\r\nimport { TransactionType } from 'jslib/enums/transactionType';\r\nimport { VerifyBankRequest } from 'jslib/models/request/verifyBankRequest';\r\n\r\n@Component({\r\n    selector: 'app-user-billing',\r\n    templateUrl: 'user-billing.component.html',\r\n})\r\nexport class UserBillingComponent implements OnInit {\r\n    loading = false;\r\n    firstLoaded = false;\r\n    showAdjustPayment = false;\r\n    showAddCredit = false;\r\n    billing: BillingResponse;\r\n    paymentMethodType = PaymentMethodType;\r\n    transactionType = TransactionType;\r\n    organizationId: string;\r\n    verifyAmount1: number;\r\n    verifyAmount2: number;\r\n\r\n    verifyBankPromise: Promise<any>;\r\n\r\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\r\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\r\n        protected platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async ngOnInit() {\r\n        await this.load();\r\n        this.firstLoaded = true;\r\n    }\r\n\r\n    async load() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n        this.loading = true;\r\n        if (this.organizationId != null) {\r\n            this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\r\n        } else {\r\n            this.billing = await this.apiService.getUserBilling();\r\n        }\r\n        this.loading = false;\r\n    }\r\n\r\n    async verifyBank() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const request = new VerifyBankRequest();\r\n            request.amount1 = this.verifyAmount1;\r\n            request.amount2 = this.verifyAmount2;\r\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\r\n            await this.verifyBankPromise;\r\n            this.analytics.eventTrack.next({ action: 'Verified Bank Account' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\r\n            this.load();\r\n        } catch { }\r\n    }\r\n\r\n    addCredit() {\r\n        if (this.paymentSourceInApp) {\r\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\r\n                this.i18nService.t('addCredit'), null, null, 'warning');\r\n            return;\r\n        }\r\n        this.showAddCredit = true;\r\n    }\r\n\r\n    closeAddCredit(load: boolean) {\r\n        this.showAddCredit = false;\r\n        if (load) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    changePayment() {\r\n        if (this.paymentSourceInApp) {\r\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\r\n                this.i18nService.t('changePaymentMethod'), null, null, 'warning');\r\n            return;\r\n        }\r\n        this.showAdjustPayment = true;\r\n    }\r\n\r\n    closePayment(load: boolean) {\r\n        this.showAdjustPayment = false;\r\n        if (load) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    get isCreditBalance() {\r\n        return this.billing == null || this.billing.balance <= 0;\r\n    }\r\n\r\n    get creditOrBalance() {\r\n        return Math.abs(this.billing != null ? this.billing.balance : 0);\r\n    }\r\n\r\n    get paymentSource() {\r\n        return this.billing != null ? this.billing.paymentSource : null;\r\n    }\r\n\r\n    get paymentSourceInApp() {\r\n        return this.paymentSource != null &&\r\n            (this.paymentSource.type === PaymentMethodType.AppleInApp ||\r\n                this.paymentSource.type === PaymentMethodType.GoogleInApp);\r\n    }\r\n\r\n    get invoices() {\r\n        return this.billing != null ? this.billing.invoices : null;\r\n    }\r\n\r\n    get transactions() {\r\n        return this.billing != null ? this.billing.transactions : null;\r\n    }\r\n}\r\n","<div class=\"page-header d-flex\">\n    <h1>\n        {{'billing' | i18n}}\n    </h1>\n    <button (click)=\"load()\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"firstLoaded\" [disabled]=\"loading\">\n        <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loading}\" aria-hidden=\"true\"></i>\n        {{'refresh' | i18n}}\n    </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n    <h2>{{(isCreditBalance ? 'accountCredit' : 'accountBalance') | i18n}}</h2>\n    <p class=\"text-lg\"><strong>{{creditOrBalance | currency:'$'}}</strong></p>\n    <p>{{'creditAppliedDesc' | i18n}}</p>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n        {{'addCredit' | i18n}}\n    </button>\n    <app-add-credit [organizationId]=\"organizationId\" (onAdded)=\"closeAddCredit(true)\"\n        (onCanceled)=\"closeAddCredit(false)\" *ngIf=\"showAddCredit\">\n    </app-add-credit>\n    <h2 class=\"spaced-header\">{{'paymentMethod' | i18n}}</h2>\n    <p *ngIf=\"!paymentSource\">{{'noPaymentMethod' | i18n}}</p>\n    <ng-container *ngIf=\"paymentSource\">\n        <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\"\n            *ngIf=\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\">\n            <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p>\n            <form #verifyForm class=\"form-inline\" (ngSubmit)=\"verifyBank()\" [appApiAction]=\"verifyBankPromise\"\n                ngNativeValidate>\n                <label class=\"sr-only\" for=\"verifyAmount1\">{{'amount' | i18n : '1'}}</label>\n                <div class=\"input-group mr-2\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">$0.</div>\n                    </div>\n                    <input type=\"number\" class=\"form-control\" id=\"verifyAmount1\" placeholder=\"xx\" name=\"Amount1\"\n                        [(ngModel)]=\"verifyAmount1\" min=\"1\" max=\"99\" step=\"1\" required>\n                </div>\n                <label class=\"sr-only\" for=\"verifyAmount2\">{{'amount' | i18n : '2'}}</label>\n                <div class=\"input-group mr-2\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">$0.</div>\n                    </div>\n                    <input type=\"number\" class=\"form-control\" id=\"verifyAmount2\" placeholder=\"xx\" name=\"Amount2\"\n                        [(ngModel)]=\"verifyAmount2\" min=\"1\" max=\"99\" step=\"1\" required>\n                </div>\n                <button type=\"submit\" class=\"btn btn-outline-primary btn-submit\" [disabled]=\"verifyForm.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'verifyBankAccount' | i18n}}</span>\n                </button>\n            </form>\n        </app-callout>\n        <p>\n            <i class=\"fa fa-fw\" [ngClass]=\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\n                    'fa-university': paymentSource.type === paymentMethodType.BankAccount,\n                    'fa-money': paymentSource.type === paymentMethodType.Check,\n                    'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n                    'fa-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n                    'fa-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp}\"></i>\n            <span *ngIf=\"paymentSourceInApp\">{{'inAppPurchase' | i18n}}</span>\n            {{paymentSource.description}}\n        </p>\n    </ng-container>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n        {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}\n    </button>\n    <app-adjust-payment [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n        [organizationId]=\"organizationId\" (onAdjusted)=\"closePayment(true)\" (onCanceled)=\"closePayment(false)\"\n        *ngIf=\"showAdjustPayment\">\n    </app-adjust-payment>\n    <h2 class=\"spaced-header\">{{'invoices' | i18n}}</h2>\n    <p *ngIf=\"!invoices || !invoices.length\">{{'noInvoices' | i18n}}</p>\n    <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n        <tbody>\n            <tr *ngFor=\"let i of invoices\">\n                <td>{{i.date | date:'mediumDate'}}</td>\n                <td>\n                    <a href=\"{{i.pdfUrl}}\" target=\"_blank\" rel=\"noopener\" class=\"mr-2\"\n                        appA11yTitle=\"{{'downloadInvoice' | i18n}}\">\n                        <i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i></a>\n                    <a href=\"{{i.url}}\" target=\"_blank\" rel=\"noopener\" title=\"{{'viewInvoice' | i18n}}\">\n                        {{'invoiceNumber' | i18n : i.number}}</a>\n                </td>\n                <td>{{i.amount | currency:'$'}}</td>\n                <td>\n                    <span *ngIf=\"i.paid\">\n                        <i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i>\n                        {{'paid' | i18n}}\n                    </span>\n                    <span *ngIf=\"!i.paid\">\n                        <i class=\"fa fa-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n                        {{'unpaid' | i18n}}\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <h2 class=\"spaced-header\">{{'transactions' | i18n}}</h2>\n    <p *ngIf=\"!transactions || !transactions.length\">{{'noTransactions' | i18n}}</p>\n    <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n        <tbody>\n            <tr *ngFor=\"let t of transactions\">\n                <td>{{t.createdDate | date:'mediumDate'}}</td>\n                <td>\n                    <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n                        {{'chargeNoun' | i18n}}\n                    </span>\n                    <span *ngIf=\"t.type === transactionType.Refund\">{{'refundNoun' | i18n}}</span>\n                </td>\n                <td>\n                    <i class=\"fa fa-fw\" *ngIf=\"t.paymentMethodType\" aria-hidden=\"true\" [ngClass]=\"{\n                            'fa-credit-card': t.paymentMethodType === paymentMethodType.Card,\n                            'fa-university': t.paymentMethodType === paymentMethodType.BankAccount ||\n                                t.paymentMethodType === paymentMethodType.WireTransfer,\n                            'fa-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n                            'fa-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n                        }\"></i>\n                    {{t.details}}\n                </td>\n                <td [ngClass]=\"{'text-strike': t.refunded}\" title=\"{{(t.refunded ? 'refunded' : '') | i18n}}\">\n                    {{t.amount | currency:'$'}}</td>\n            </tr>\n        </tbody>\n    </table>\n    <small class=\"text-muted\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small>\n</ng-container>\n","import {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\r\n\r\nimport { BitPayInvoiceRequest } from 'jslib/models/request/bitPayInvoiceRequest';\r\n\r\nimport { WebConstants } from '../../services/webConstants';\r\n\r\n@Component({\r\n    selector: 'app-add-credit',\r\n    templateUrl: 'add-credit.component.html',\r\n})\r\nexport class AddCreditComponent implements OnInit {\r\n    @Input() creditAmount: string;\r\n    @Input() showOptions = true;\r\n    @Input() method = PaymentMethodType.PayPal;\r\n    @Input() organizationId: string;\r\n    @Output() onAdded = new EventEmitter();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    @ViewChild('ppButtonForm', { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\r\n\r\n    paymentMethodType = PaymentMethodType;\r\n    ppButtonFormAction = WebConstants.paypal.buttonActionProduction;\r\n    ppButtonBusinessId = WebConstants.paypal.businessIdProduction;\r\n    ppButtonCustomField: string;\r\n    ppLoading = false;\r\n    subject: string;\r\n    returnUrl: string;\r\n    formPromise: Promise<any>;\r\n\r\n    private userId: string;\r\n    private name: string;\r\n    private email: string;\r\n\r\n    constructor(private userService: UserService, private apiService: ApiService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private platformUtilsService: PlatformUtilsService) {\r\n        if (platformUtilsService.isDev()) {\r\n            this.ppButtonFormAction = WebConstants.paypal.buttonActionSandbox;\r\n            this.ppButtonBusinessId = WebConstants.paypal.businessIdSandbox;\r\n        }\r\n    }\r\n\r\n    async ngOnInit() {\r\n        if (this.organizationId != null) {\r\n            if (this.creditAmount == null) {\r\n                this.creditAmount = '20.00';\r\n            }\r\n            this.ppButtonCustomField = 'organization_id:' + this.organizationId;\r\n            const org = await this.userService.getOrganization(this.organizationId);\r\n            if (org != null) {\r\n                this.subject = org.name;\r\n                this.name = org.name;\r\n            }\r\n        } else {\r\n            if (this.creditAmount == null) {\r\n                this.creditAmount = '10.00';\r\n            }\r\n            this.userId = await this.userService.getUserId();\r\n            this.subject = await this.userService.getEmail();\r\n            this.email = this.subject;\r\n            this.ppButtonCustomField = 'user_id:' + this.userId;\r\n        }\r\n        this.ppButtonCustomField += ',account_credit:1';\r\n        this.returnUrl = window.location.href;\r\n    }\r\n\r\n    async submit() {\r\n        if (this.creditAmount == null || this.creditAmount === '') {\r\n            return;\r\n        }\r\n\r\n        if (this.method === PaymentMethodType.PayPal) {\r\n            this.ppButtonFormRef.nativeElement.submit();\r\n            this.ppLoading = true;\r\n            return;\r\n        }\r\n        if (this.method === PaymentMethodType.BitPay) {\r\n            try {\r\n                const req = new BitPayInvoiceRequest();\r\n                req.email = this.email;\r\n                req.name = this.name;\r\n                req.credit = true;\r\n                req.amount = this.creditAmountNumber;\r\n                req.organizationId = this.organizationId;\r\n                req.userId = this.userId;\r\n                req.returnUrl = this.returnUrl;\r\n                this.formPromise = this.apiService.postBitPayInvoice(req);\r\n                const bitPayUrl: string = await this.formPromise;\r\n                this.platformUtilsService.launchUri(bitPayUrl);\r\n            } catch { }\r\n            return;\r\n        }\r\n        try {\r\n            this.analytics.eventTrack.next({\r\n                action: 'Added Credit',\r\n            });\r\n            this.onAdded.emit();\r\n        } catch { }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n\r\n    formatAmount() {\r\n        try {\r\n            if (this.creditAmount != null && this.creditAmount !== '') {\r\n                const floatAmount = Math.abs(parseFloat(this.creditAmount));\r\n                if (floatAmount > 0) {\r\n                    this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\r\n                        .toFixed(2).toString();\r\n                    return;\r\n                }\r\n            }\r\n        } catch { }\r\n        this.creditAmount = '';\r\n    }\r\n\r\n    get creditAmountNumber(): number {\r\n        if (this.creditAmount != null && this.creditAmount !== '') {\r\n            try {\r\n                return parseFloat(this.creditAmount);\r\n            } catch { }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"card-body\">\r\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\r\n                aria-hidden=\"true\">&times;</span></button>\r\n        <h3 class=\"card-body-header\">{{'addCredit' | i18n}}</h3>\r\n        <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\r\n            <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-paypal\"\r\n                    [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\">\r\n                <label class=\"form-check-label\" for=\"credit-method-paypal\">\r\n                    <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label>\r\n            </div>\r\n            <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-bitcoin\"\r\n                    [value]=\"paymentMethodType.BitPay\" [(ngModel)]=\"method\">\r\n                <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\r\n                    <i class=\"fa fa-fw fa-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                    <label for=\"creditAmount\">{{'amount' | i18n}}</label>\r\n                    <div class=\"input-group\">\r\n                        <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\r\n                        <input id=\"creditAmount\" class=\"form-control\" type=\"text\" name=\"CreditAmount\"\r\n                            [(ngModel)]=\"creditAmount\" (blur)=\"formatAmount()\" required>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <small class=\"form-text text-muted\">{{'creditDelayed' | i18n}}</small>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\r\n            {{'cancel' | i18n}}\r\n        </button>\r\n    </div>\r\n</form>\r\n<form #ppButtonForm action=\"{{ppButtonFormAction}}\" method=\"post\" target=\"_top\">\r\n    <input type=\"hidden\" name=\"cmd\" value=\"_xclick\">\r\n    <input type=\"hidden\" name=\"business\" value=\"{{ppButtonBusinessId}}\">\r\n    <input type=\"hidden\" name=\"button_subtype\" value=\"services\">\r\n    <input type=\"hidden\" name=\"no_note\" value=\"1\">\r\n    <input type=\"hidden\" name=\"no_shipping\" value=\"1\">\r\n    <input type=\"hidden\" name=\"rm\" value=\"1\">\r\n    <input type=\"hidden\" name=\"return\" value=\"{{returnUrl}}\">\r\n    <input type=\"hidden\" name=\"cancel_return\" value=\"{{returnUrl}}\">\r\n    <input type=\"hidden\" name=\"currency_code\" value=\"USD\">\r\n    <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\">\r\n    <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\">\r\n    <input type=\"hidden\" name=\"amount\" value=\"{{creditAmount}}\">\r\n    <input type=\"hidden\" name=\"custom\" value=\"{{ppButtonCustomField}}\">\r\n    <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\">\r\n    <input type=\"hidden\" name=\"item_number\" value=\"{{subject}}\">\r\n</form>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { PaymentRequest } from 'jslib/models/request/paymentRequest';\r\n\r\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\r\n\r\nimport { PaymentComponent } from './payment.component';\r\nimport { TaxInfoComponent } from './tax-info.component';\r\n\r\n@Component({\r\n    selector: 'app-adjust-payment',\r\n    templateUrl: 'adjust-payment.component.html',\r\n})\r\nexport class AdjustPaymentComponent {\r\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\r\n    @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\r\n\r\n    @Input() currentType?: PaymentMethodType;\r\n    @Input() organizationId: string;\r\n    @Output() onAdjusted = new EventEmitter();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    paymentMethodType = PaymentMethodType;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new PaymentRequest();\r\n            this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\r\n                request.paymentToken = result[0];\r\n                request.paymentMethodType = result[1];\r\n                request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\r\n                request.country = this.taxInfoComponent.taxInfo.country;\r\n                if (this.organizationId == null) {\r\n                    return this.apiService.postAccountPayment(request);\r\n                } else {\r\n                    request.taxId = this.taxInfoComponent.taxInfo.taxId;\r\n                    request.state = this.taxInfoComponent.taxInfo.state;\r\n                    request.line1 = this.taxInfoComponent.taxInfo.line1;\r\n                    request.line2 = this.taxInfoComponent.taxInfo.line2;\r\n                    request.city = this.taxInfoComponent.taxInfo.city;\r\n                    request.state = this.taxInfoComponent.taxInfo.state;\r\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\r\n                }\r\n            });\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({\r\n                action: this.currentType == null ? 'Added Payment Method' : 'Changed Payment Method',\r\n            });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\r\n            this.onAdjusted.emit();\r\n        } catch { }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n\r\n    changeCountry() {\r\n        if (this.taxInfoComponent.taxInfo.country === 'US') {\r\n            this.paymentComponent.hideBank = !this.organizationId;\r\n        } else {\r\n            this.paymentComponent.hideBank = true;\r\n            if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\r\n                this.paymentComponent.method = PaymentMethodType.Card;\r\n                this.paymentComponent.changeMethod();\r\n            }\r\n        }\r\n    }\r\n}\r\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"card-body\">\r\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\r\n                aria-hidden=\"true\">&times;</span></button>\r\n        <h3 class=\"card-body-header\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3>\r\n        <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\r\n        <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\r\n            {{'cancel' | i18n}}\r\n        </button>\r\n    </div>\r\n</form>\r\n","export enum PlanType {\r\n    Free = 0,\r\n    FamiliesAnnually2019 = 1,\r\n    TeamsMonthly2019 = 2,\r\n    TeamsAnnually2019 = 3,\r\n    EnterpriseMonthly2019 = 4,\r\n    EnterpriseAnnually2019 = 5,\r\n    Custom = 6,\r\n    FamiliesAnnually = 7,\r\n    TeamsMonthly = 8,\r\n    TeamsAnnually = 9,\r\n    EnterpriseMonthly = 10,\r\n    EnterpriseAnnually = 11,\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\n@Component({\r\n    selector: 'app-update-license',\r\n    templateUrl: 'update-license.component.html',\r\n})\r\nexport class UpdateLicenseComponent {\r\n    @Input() organizationId: string;\r\n    @Output() onUpdated = new EventEmitter();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\r\n\r\n    async submit() {\r\n        const fileEl = document.getElementById('file') as HTMLInputElement;\r\n        const files = fileEl.files;\r\n        if (files == null || files.length === 0) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('selectFile'));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const fd = new FormData();\r\n            fd.append('license', files[0]);\r\n\r\n            let updatePromise: Promise<any> = null;\r\n            if (this.organizationId == null) {\r\n                updatePromise = this.apiService.postAccountLicense(fd);\r\n            } else {\r\n                updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\r\n            }\r\n\r\n            this.formPromise = updatePromise.then(() => {\r\n                return this.apiService.refreshIdentityToken();\r\n            });\r\n\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Updated License' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\r\n            this.onUpdated.emit();\r\n        } catch { }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"form-group\">\r\n        <label for=\"file\" class=\"sr-only\">{{'licenseFile' | i18n}}</label>\r\n        <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\r\n        <small\r\n            class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'submit' | i18n}}</span>\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\r\n        {{'cancel' | i18n}}\r\n    </button>\r\n</form>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\n\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { StorageRequest } from 'jslib/models/request/storageRequest';\r\n\r\nimport { PaymentResponse } from 'jslib/models/response/paymentResponse';\r\n\r\nimport { PaymentComponent } from './payment.component';\r\n\r\n@Component({\r\n    selector: 'app-adjust-storage',\r\n    templateUrl: 'adjust-storage.component.html',\r\n})\r\nexport class AdjustStorageComponent {\r\n    @Input() storageGbPrice = 0;\r\n    @Input() add = true;\r\n    @Input() organizationId: string;\r\n    @Input() interval = 'year';\r\n    @Output() onAdjusted = new EventEmitter<number>();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\r\n\r\n    storageAdjustment = 0;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new StorageRequest();\r\n            request.storageGbAdjustment = this.storageAdjustment;\r\n            if (!this.add) {\r\n                request.storageGbAdjustment *= -1;\r\n            }\r\n\r\n            let paymentFailed = false;\r\n            const action = async () => {\r\n                let response: Promise<PaymentResponse>;\r\n                if (this.organizationId == null) {\r\n                    response = this.formPromise = this.apiService.postAccountStorage(request);\r\n                } else {\r\n                    response = this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\r\n                }\r\n                const result = await response;\r\n                if (result != null && result.paymentIntentClientSecret != null) {\r\n                    try {\r\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\r\n                    } catch {\r\n                        paymentFailed = true;\r\n                    }\r\n                }\r\n            };\r\n            this.formPromise = action();\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Storage' : 'Removed Storage' });\r\n            this.onAdjusted.emit(this.storageAdjustment);\r\n            if (paymentFailed) {\r\n                this.toasterService.popAsync({\r\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\r\n                    type: 'warning',\r\n                    timeout: 10000,\r\n                });\r\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\r\n            } else {\r\n                this.toasterService.popAsync('success', null,\r\n                    this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\r\n            }\r\n        } catch { }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n\r\n    get adjustedStorageTotal(): number {\r\n        return this.storageGbPrice * this.storageAdjustment;\r\n    }\r\n}\r\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"card-body\">\r\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\r\n                aria-hidden=\"true\">&times;</span></button>\r\n        <h3 class=\"card-body-header\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-6\">\r\n                <label for=\"storageAdjustment\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label>\r\n                <input id=\"storageAdjustment\" class=\"form-control\" type=\"number\" name=\"StroageGbAdjustment\"\r\n                    [(ngModel)]=\"storageAdjustment\" min=\"0\" max=\"99\" step=\"1\" required>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"add\" class=\"mb-3\">\r\n            <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}}\r\n            = {{adjustedStorageTotal\r\n            | currency:'$'}} /{{interval | i18n}}\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\r\n            {{'cancel' | i18n}}\r\n        </button>\r\n        <small class=\"d-block text-muted mt-3\">\r\n            {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}}\r\n        </small>\r\n    </div>\r\n</form>\r\n<app-payment [showMethods]=\"false\"></app-payment>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\nimport { UpdateTwoFactorDuoRequest } from 'jslib/models/request/updateTwoFactorDuoRequest';\r\nimport { TwoFactorDuoResponse } from 'jslib/models/response/twoFactorDuoResponse';\r\n\r\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-duo',\r\n    templateUrl: 'two-factor-duo.component.html',\r\n})\r\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\r\n    type = TwoFactorProviderType.Duo;\r\n    ikey: string;\r\n    skey: string;\r\n    host: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(apiService: ApiService, i18nService: I18nService,\r\n        analytics: Angulartics2, toasterService: ToasterService,\r\n        platformUtilsService: PlatformUtilsService) {\r\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\r\n    }\r\n\r\n    auth(authResponse: any) {\r\n        super.auth(authResponse);\r\n        this.processResponse(authResponse.response);\r\n    }\r\n\r\n    submit() {\r\n        if (this.enabled) {\r\n            return super.disable(this.formPromise);\r\n        } else {\r\n            return this.enable();\r\n        }\r\n    }\r\n\r\n    protected enable() {\r\n        const request = new UpdateTwoFactorDuoRequest();\r\n        request.masterPasswordHash = this.masterPasswordHash;\r\n        request.integrationKey = this.ikey;\r\n        request.secretKey = this.skey;\r\n        request.host = this.host;\r\n\r\n        return super.enable(async () => {\r\n            if (this.organizationId != null) {\r\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\r\n            } else {\r\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\r\n            }\r\n            const response = await this.formPromise;\r\n            await this.processResponse(response);\r\n        });\r\n    }\r\n\r\n    private processResponse(response: TwoFactorDuoResponse) {\r\n        this.ikey = response.integrationKey;\r\n        this.skey = response.secretKey;\r\n        this.host = response.host;\r\n        this.enabled = response.enabled;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" title=\"2faDuoTitle\">\r\n                    {{'twoStepLogin' | i18n}}\r\n                    <small>Duo</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\r\n                *ngIf=\"!authed\">\r\n            </app-two-factor-verify>\r\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"\r\n                autocomplete=\"off\">\r\n                <div class=\"modal-body\">\r\n                    <ng-container *ngIf=\"enabled\">\r\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\r\n                            {{'twoStepLoginProviderEnabled' | i18n}}\r\n                        </app-callout>\r\n                        <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\">\r\n                        <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}}\r\n                        <br>\r\n                        <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}}\r\n                        <br>\r\n                        <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!enabled\">\r\n                        <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\">\r\n                        <p>{{'twoFactorDuoDesc' | i18n}}</p>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"ikey\">{{'twoFactorDuoIntegrationKey' | i18n}}</label>\r\n                            <input id=\"ikey\" type=\"text\" name=\"IntegrationKey\" class=\"form-control\" [(ngModel)]=\"ikey\"\r\n                                required appInputVerbatim>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"skey\">{{'twoFactorDuoSecretKey' | i18n}}</label>\r\n                            <input id=\"skey\" type=\"password\" name=\"SecretKey\" class=\"form-control\" [(ngModel)]=\"skey\"\r\n                                required appInputVerbatim autocomplete=\"new-password\">\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"host\">{{'twoFactorDuoApiHostname' | i18n}}</label>\r\n                            <input id=\"host\" type=\"text\" name=\"Host\" class=\"form-control\" [(ngModel)]=\"host\"\r\n                                placeholder=\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\" required appInputVerbatim>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\r\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n    Type,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PolicyService } from 'jslib/abstractions/policy.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { TwoFactorProviders } from 'jslib/services/auth.service';\r\n\r\nimport { PolicyType } from 'jslib/enums/policyType';\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\n\r\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\r\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\r\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\r\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\r\nimport { TwoFactorU2fComponent } from './two-factor-u2f.component';\r\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-setup',\r\n    templateUrl: 'two-factor-setup.component.html',\r\n})\r\nexport class TwoFactorSetupComponent implements OnInit {\r\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef, static: true }) recoveryModalRef: ViewContainerRef;\r\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef, static: true }) authenticatorModalRef: ViewContainerRef;\r\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef, static: true }) yubikeyModalRef: ViewContainerRef;\r\n    @ViewChild('u2fTemplate', { read: ViewContainerRef, static: true }) u2fModalRef: ViewContainerRef;\r\n    @ViewChild('duoTemplate', { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\r\n    @ViewChild('emailTemplate', { read: ViewContainerRef, static: true }) emailModalRef: ViewContainerRef;\r\n\r\n    organizationId: string;\r\n    providers: any[] = [];\r\n    canAccessPremium: boolean;\r\n    showPolicyWarning = false;\r\n    loading = true;\r\n\r\n    private modal: ModalComponent = null;\r\n\r\n    constructor(protected apiService: ApiService, protected userService: UserService,\r\n        protected componentFactoryResolver: ComponentFactoryResolver, protected messagingService: MessagingService,\r\n        protected policyService: PolicyService) { }\r\n\r\n    async ngOnInit() {\r\n        this.canAccessPremium = await this.userService.canAccessPremium();\r\n\r\n        for (const key in TwoFactorProviders) {\r\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            const p = (TwoFactorProviders as any)[key];\r\n            if (this.filterProvider(p.type)) {\r\n                continue;\r\n            }\r\n\r\n            this.providers.push({\r\n                type: p.type,\r\n                name: p.name,\r\n                description: p.description,\r\n                enabled: false,\r\n                premium: p.premium,\r\n                sort: p.sort,\r\n            });\r\n        }\r\n\r\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\r\n        await this.load();\r\n    }\r\n\r\n    async load() {\r\n        this.loading = true;\r\n        const providerList = await this.getTwoFactorProviders();\r\n        providerList.data.forEach((p) => {\r\n            this.providers.forEach((p2) => {\r\n                if (p.type === p2.type) {\r\n                    p2.enabled = p.enabled;\r\n                }\r\n            });\r\n        });\r\n        this.evaluatePolicies();\r\n        this.loading = false;\r\n    }\r\n\r\n    manage(type: TwoFactorProviderType) {\r\n        switch (type) {\r\n            case TwoFactorProviderType.Authenticator:\r\n                const authComp = this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\r\n                authComp.onUpdated.subscribe((enabled: boolean) => {\r\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\r\n                });\r\n                break;\r\n            case TwoFactorProviderType.Yubikey:\r\n                const yubiComp = this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\r\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\r\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\r\n                });\r\n                break;\r\n            case TwoFactorProviderType.Duo:\r\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\r\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\r\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\r\n                });\r\n                break;\r\n            case TwoFactorProviderType.Email:\r\n                const emailComp = this.openModal(this.emailModalRef, TwoFactorEmailComponent);\r\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\r\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\r\n                });\r\n                break;\r\n            case TwoFactorProviderType.U2f:\r\n                const u2fComp = this.openModal(this.u2fModalRef, TwoFactorU2fComponent);\r\n                u2fComp.onUpdated.subscribe((enabled: boolean) => {\r\n                    this.updateStatus(enabled, TwoFactorProviderType.U2f);\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    recoveryCode() {\r\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\r\n    }\r\n\r\n    async premiumRequired() {\r\n        if (!this.canAccessPremium) {\r\n            this.messagingService.send('premiumRequired');\r\n            return;\r\n        }\r\n    }\r\n\r\n    protected getTwoFactorProviders() {\r\n        return this.apiService.getTwoFactorProviders();\r\n    }\r\n\r\n    protected filterProvider(type: TwoFactorProviderType) {\r\n        return type === TwoFactorProviderType.OrganizationDuo;\r\n    }\r\n\r\n    protected openModal<T>(ref: ViewContainerRef, type: Type<T>): T {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = ref.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<T>(type, ref);\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n        return childComponent;\r\n    }\r\n\r\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\r\n        if (!enabled && this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n        this.providers.forEach((p) => {\r\n            if (p.type === type) {\r\n                p.enabled = enabled;\r\n            }\r\n        });\r\n        this.evaluatePolicies();\r\n    }\r\n\r\n    private async evaluatePolicies() {\r\n        if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\r\n            const policies = await this.policyService.getAll(PolicyType.TwoFactorAuthentication);\r\n            this.showPolicyWarning = policies != null && policies.some((p) => p.enabled);\r\n        } else {\r\n            this.showPolicyWarning = false;\r\n        }\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'twoStepLogin' | i18n}}</h1>\r\n</div>\r\n<p *ngIf=\"!organizationId\">{{'twoStepLoginDesc' | i18n}}</p>\r\n<p *ngIf=\"organizationId\">{{'twoStepLoginOrganizationDesc' | i18n}}</p>\r\n<app-callout type=\"warning\" *ngIf=\"!organizationId\">\r\n    <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n        (click)=\"recoveryCode()\">{{'viewRecoveryCode' | i18n}}</button>\r\n</app-callout>\r\n<h2 [ngClass]=\"{'mt-5':!organizationId}\">\r\n    {{'providers' | i18n}}\r\n    <small *ngIf=\"loading\">\r\n        <i class=\"fa fa-spinner fa-spin fa-fw text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n    </small>\r\n</h2>\r\n<app-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\r\n    {{'twoStepLoginPolicyUserWarning' | i18n}}\r\n</app-callout>\r\n<ul class=\"list-group list-group-2fa\">\r\n    <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\r\n        <div class=\"logo-2fa d-flex justify-content-center\">\r\n            <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\">\r\n        </div>\r\n        <div class=\"mx-4\">\r\n            <h3 class=\"mb-0\">\r\n                {{p.name}}\r\n                <ng-container *ngIf=\"p.enabled\">\r\n                    <i class=\"fa fa-check text-success fa-fw\" title=\"{{'enabled' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span class=\"sr-only\">{{'enabled' | i18n}}</span>\r\n                </ng-container>\r\n                <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium && p.premium\"\r\n                    (click)=\"premiumRequired()\">\r\n                    {{'premium' | i18n}}\r\n                </a>\r\n            </h3>\r\n            {{p.description}}\r\n        </div>\r\n        <div class=\"ml-auto\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" [disabled]=\"!canAccessPremium && p.premium\"\r\n                (click)=\"manage(p.type)\">\r\n                {{'manage' | i18n}}\r\n            </button>\r\n        </div>\r\n    </li>\r\n</ul>\r\n\r\n<ng-template #authenticatorTemplate></ng-template>\r\n<ng-template #recoveryTemplate></ng-template>\r\n<ng-template #duoTemplate></ng-template>\r\n<ng-template #emailTemplate></ng-template>\r\n<ng-template #yubikeyTemplate></ng-template>\r\n<ng-template #u2fTemplate></ng-template>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { EventService } from 'jslib/abstractions/event.service';\r\nimport { ExportService } from 'jslib/abstractions/export.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { ExportComponent as BaseExportComponent } from 'jslib/angular/components/export.component';\r\n\r\n@Component({\r\n    selector: 'app-export',\r\n    templateUrl: 'export.component.html',\r\n})\r\nexport class ExportComponent extends BaseExportComponent {\r\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\r\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\r\n        eventService: EventService) {\r\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, window);\r\n    }\r\n\r\n    protected saved() {\r\n        super.saved();\r\n        this.masterPassword = null;\r\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('exportSuccess'));\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" ngNativeValidate [appApiAction]=\"formPromise\">\r\n    <div class=\"page-header\">\r\n        <h1>{{'exportVault' | i18n}}</h1>\r\n    </div>\r\n    <p>{{'exportMasterPassword' | i18n}}</p>\r\n    <app-callout type=\"warning\">{{'exportWarningDesc' | i18n}}</app-callout>\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"format\">{{'fileFormat' | i18n}}</label>\r\n            <select class=\"form-control\" id=\"format\" name=\"Format\" [(ngModel)]=\"format\">\r\n                <option value=\"json\">.json</option>\r\n                <option value=\"csv\">.csv</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n            <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\"\r\n                [(ngModel)]=\"masterPassword\" required appInputVerbatim>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'exportVault' | i18n}}</span>\r\n    </button>\r\n</form>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { AuditService } from 'jslib/abstractions/audit.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\n\r\nimport { CipherReportComponent } from './cipher-report.component';\r\n\r\n@Component({\r\n    selector: 'app-exposed-passwords-report',\r\n    templateUrl: 'exposed-passwords-report.component.html',\r\n})\r\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\r\n    exposedPasswordMap = new Map<string, number>();\r\n\r\n    constructor(protected cipherService: CipherService, protected auditService: AuditService,\r\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\r\n        userService: UserService) {\r\n        super(componentFactoryResolver, userService, messagingService, true);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.checkAccess();\r\n    }\r\n\r\n    async load() {\r\n        if (await this.checkAccess()) {\r\n            super.load();\r\n        }\r\n    }\r\n\r\n    async setCiphers() {\r\n        const allCiphers = await this.getAllCiphers();\r\n        const exposedPasswordCiphers: CipherView[] = [];\r\n        const promises: Promise<void>[] = [];\r\n        allCiphers.forEach((c) => {\r\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\r\n                return;\r\n            }\r\n            const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\r\n                if (exposedCount > 0) {\r\n                    exposedPasswordCiphers.push(c);\r\n                    this.exposedPasswordMap.set(c.id, exposedCount);\r\n                }\r\n            });\r\n            promises.push(promise);\r\n        });\r\n        await Promise.all(promises);\r\n        this.ciphers = exposedPasswordCiphers;\r\n    }\r\n\r\n    protected getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllDecrypted();\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'exposedPasswordsReport' | i18n}}</h1>\r\n</div>\r\n<p>{{'exposedPasswordsReportDesc' | i18n}}</p>\r\n<button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\">\r\n    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span>{{'checkExposedPasswords' | i18n}}</span>\r\n</button>\r\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\r\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\r\n        {{'noExposedPasswords' | i18n}}\r\n    </app-callout>\r\n    <ng-container *ngIf=\"ciphers.length\">\r\n        <app-callout type=\"danger\" title=\"{{'exposedPasswordsFound' | i18n}}\">\r\n            {{'exposedPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\r\n        </app-callout>\r\n        <table class=\"table table-hover table-list table-ciphers\">\r\n            <tbody>\r\n                <tr *ngFor=\"let c of ciphers\">\r\n                    <td class=\"table-list-icon\">\r\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\r\n                    </td>\r\n                    <td class=\"reduced-lh wrap\">\r\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\r\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\r\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"c.hasAttachments\">\r\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\r\n                        </ng-container>\r\n                        <br>\r\n                        <small>{{c.subTitle}}</small>\r\n                    </td>\r\n                    <td class=\"text-right\">\r\n                        <span class=\"badge badge-warning\">\r\n                            {{'exposedXTimes' | i18n : (exposedPasswordMap.get(c.id) | number)}}\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n</div>\r\n<ng-template #cipherAddEdit></ng-template>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { AuditService } from 'jslib/abstractions/audit.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { EventService } from 'jslib/abstractions/event.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { TotpService } from 'jslib/abstractions/totp.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherData } from 'jslib/models/data/cipherData';\r\nimport { Cipher } from 'jslib/models/domain/cipher';\r\nimport { Organization } from 'jslib/models/domain/organization';\r\nimport { CipherCreateRequest } from 'jslib/models/request/cipherCreateRequest';\r\nimport { CipherRequest } from 'jslib/models/request/cipherRequest';\r\n\r\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\r\n\r\n@Component({\r\n    selector: 'app-org-vault-add-edit',\r\n    templateUrl: '../../vault/add-edit.component.html',\r\n})\r\nexport class AddEditComponent extends BaseAddEditComponent {\r\n    organization: Organization;\r\n    originalCipher: Cipher = null;\r\n\r\n    constructor(cipherService: CipherService, folderService: FolderService,\r\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\r\n        auditService: AuditService, stateService: StateService,\r\n        userService: UserService, collectionService: CollectionService,\r\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\r\n        private apiService: ApiService, messagingService: MessagingService,\r\n        eventService: EventService) {\r\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\r\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\r\n            eventService);\r\n    }\r\n\r\n    protected allowOwnershipAssignment() {\r\n        if (this.ownershipOptions != null && this.ownershipOptions.length > 1) {\r\n            if (this.organization != null) {\r\n                return this.cloneMode && this.organization.isAdmin;\r\n            } else {\r\n                return !this.editMode || this.cloneMode;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected loadCollections() {\r\n        if (!this.organization.isAdmin) {\r\n            return super.loadCollections();\r\n        }\r\n        return Promise.resolve(this.collections);\r\n    }\r\n\r\n    protected async loadCipher() {\r\n        if (!this.organization.isAdmin) {\r\n            return await super.loadCipher();\r\n        }\r\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\r\n        const data = new CipherData(response);\r\n        this.originalCipher = new Cipher(data);\r\n        return new Cipher(data);\r\n    }\r\n\r\n    protected encryptCipher() {\r\n        if (!this.organization.isAdmin) {\r\n            return super.encryptCipher();\r\n        }\r\n        return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\r\n    }\r\n\r\n    protected async saveCipher(cipher: Cipher) {\r\n        if (!this.organization.isAdmin || cipher.organizationId == null) {\r\n            return super.saveCipher(cipher);\r\n        }\r\n        if (this.editMode && !this.cloneMode) {\r\n            const request = new CipherRequest(cipher);\r\n            return this.apiService.putCipherAdmin(this.cipherId, request);\r\n        } else {\r\n            const request = new CipherCreateRequest(cipher);\r\n            return this.apiService.postCipherAdmin(request);\r\n        }\r\n    }\r\n\r\n    protected async deleteCipher() {\r\n        if (!this.organization.isAdmin) {\r\n            return super.deleteCipher();\r\n        }\r\n        return this.cipher.isDeleted ? this.apiService.deleteCipherAdmin(this.cipherId)\r\n            : this.apiService.putDeleteCipherAdmin(this.cipherId);\r\n    }\r\n}\r\n","import { View } from './view';\r\n\r\nimport { Password } from '../domain/password';\r\n\r\nexport class PasswordHistoryView implements View {\r\n    password: string = null;\r\n    lastUsedDate: Date = null;\r\n\r\n    constructor(ph?: Password) {\r\n        if (!ph) {\r\n            return;\r\n        }\r\n\r\n        this.lastUsedDate = ph.lastUsedDate;\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    forwardRef,\r\n    HostListener,\r\n    Input,\r\n    Renderer2,\r\n} from '@angular/core';\r\nimport {\r\n    ControlValueAccessor,\r\n    NgControl,\r\n    NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\n\r\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\r\n@Directive({\r\n    selector: 'input[type=checkbox][appTrueFalseValue]',\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => TrueFalseValueDirective),\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class TrueFalseValueDirective implements ControlValueAccessor {\r\n    @Input() trueValue = true;\r\n    @Input() falseValue = false;\r\n\r\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\r\n\r\n    @HostListener('change', ['$event'])\r\n    onHostChange(ev: any) {\r\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (obj === this.trueValue) {\r\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\r\n        } else {\r\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void { /* nothing */ }\r\n\r\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\r\n\r\n    private propagateChange = (_: any) => { /* nothing */ };\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { ImportOption, ImportService } from 'jslib/abstractions/import.service';\r\n\r\n@Component({\r\n    selector: 'app-import',\r\n    templateUrl: 'import.component.html',\r\n})\r\nexport class ImportComponent implements OnInit {\r\n    featuredImportOptions: ImportOption[];\r\n    importOptions: ImportOption[];\r\n    format: string = null;\r\n    fileContents: string;\r\n    formPromise: Promise<Error>;\r\n\r\n    protected organizationId: string = null;\r\n    protected successNavigate: any[] = ['vault'];\r\n\r\n    constructor(protected i18nService: I18nService, protected analytics: Angulartics2,\r\n        protected toasterService: ToasterService, protected importService: ImportService,\r\n        protected router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.setImportOptions();\r\n        this.importOptions.sort((a, b) => {\r\n            if (a.name == null && b.name != null) {\r\n                return -1;\r\n            }\r\n            if (a.name != null && b.name == null) {\r\n                return 1;\r\n            }\r\n            if (a.name == null && b.name == null) {\r\n                return 0;\r\n            }\r\n\r\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\r\n                a.name.localeCompare(b.name);\r\n        });\r\n    }\r\n\r\n    async submit() {\r\n        const importer = this.importService.getImporter(this.format, this.organizationId != null);\r\n        if (importer === null) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('selectFormat'));\r\n            return;\r\n        }\r\n\r\n        const fileEl = document.getElementById('file') as HTMLInputElement;\r\n        const files = fileEl.files;\r\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('selectFile'));\r\n            return;\r\n        }\r\n\r\n        let fileContents = this.fileContents;\r\n        if (files != null && files.length > 0) {\r\n            try {\r\n                const content = await this.getFileContents(files[0]);\r\n                if (content != null) {\r\n                    fileContents = content;\r\n                }\r\n            } catch { }\r\n        }\r\n\r\n        if (fileContents == null || fileContents === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('selectFile'));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\r\n            const error = await this.formPromise;\r\n            if (error != null) {\r\n                this.error(error);\r\n                return;\r\n            }\r\n            this.analytics.eventTrack.next({\r\n                action: 'Imported Data',\r\n                properties: { label: this.format },\r\n            });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\r\n            this.router.navigate(this.successNavigate);\r\n        } catch { }\r\n    }\r\n\r\n    getFormatInstructionTitle() {\r\n        if (this.format == null) {\r\n            return null;\r\n        }\r\n\r\n        const results = this.featuredImportOptions.concat(this.importOptions).filter((o) => o.id === this.format);\r\n        if (results.length > 0) {\r\n            return this.i18nService.t('instructionsFor', results[0].name);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected setImportOptions() {\r\n        this.featuredImportOptions = [{\r\n            id: null,\r\n            name: '-- ' + this.i18nService.t('select') + ' --',\r\n        }, ...this.importService.featuredImportOptions];\r\n        this.importOptions = this.importService.regularImportOptions;\r\n    }\r\n\r\n    private error(error: Error) {\r\n        this.analytics.eventTrack.next({\r\n            action: 'Import Data Failed',\r\n            properties: { label: this.format },\r\n        });\r\n        this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), error.message);\r\n    }\r\n\r\n    private getFileContents(file: File): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsText(file, 'utf-8');\r\n            reader.onload = (evt) => {\r\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\r\n                    const parser = new DOMParser();\r\n                    const doc = parser.parseFromString((evt.target as any).result, 'text/html');\r\n                    const pre = doc.querySelector('pre');\r\n                    if (pre != null) {\r\n                        resolve(pre.textContent);\r\n                        return;\r\n                    }\r\n                    reject();\r\n                    return;\r\n                }\r\n\r\n                resolve((evt.target as any).result);\r\n            };\r\n            reader.onerror = () => {\r\n                reject();\r\n            };\r\n        });\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'importData' | i18n}}</h1>\r\n</div>\r\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"type\">1. {{'selectFormat' | i18n}}</label>\r\n                <select id=\"type\" name=\"Format\" [(ngModel)]=\"format\" class=\"form-control\" required>\r\n                    <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{o.name}}</option>\r\n                    <ng-container *ngIf=\"importOptions && importOptions.length\">\r\n                        <option value=\"-\" disabled></option>\r\n                        <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{o.name}}</option>\r\n                    </ng-container>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <app-callout type=\"info\" title=\"{{getFormatInstructionTitle()}}\" *ngIf=\"format\">\r\n        <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\">\r\n            See detailed instructions on our help site at\r\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/export-your-data/\">\r\n                https://help.bitwarden.com/article/export-your-data/</a>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'lastpasscsv'\">\r\n            See detailed instructions on our help site at\r\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-lastpass/\">\r\n                https://help.bitwarden.com/article/import-from-lastpass/</a>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'keepassxcsv'\">\r\n            Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and save the CSV\r\n            file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'aviracsv'\">\r\n            In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'blurcsv'\">\r\n            In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export Data\", then click\r\n            \"Export CSV\"\r\n            for your \"Accounts\".\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'safeincloudxml'\">\r\n            Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\" and save the\r\n            XML file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'padlockcsv'\">\r\n            Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to\r\n            \"Settings\" &rarr;\r\n            \"Export\" button and save the file \"As CSV\".\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'keepass2xml'\">\r\n            Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the \"KeePass XML\r\n            (2.x)\" option.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'upmcsv'\">\r\n            Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr; \"Export\" and save\r\n            the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'saferpasscsv'\">\r\n            Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to\r\n            \"Settings\". Click the \"Export accounts\" button to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'meldiumcsv'\">\r\n            Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and click \"Show me my\r\n            data\" to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'keepercsv'\">\r\n            Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \"Backup\" (top right) and find the\r\n            \"Export to .csv File\" option. Click \"Export Now\" to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\">\r\n            <span *ngIf=\"format !== 'chromecsv'\">\r\n                The process is exactly the same as importing from Google Chrome.\r\n            </span>\r\n            See detailed instructions on our help site at\r\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-chrome/\">\r\n                https://help.bitwarden.com/article/import-from-chrome/</a>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'firefoxcsv'\">\r\n            Use the\r\n            <a target=\"_blank\" rel=\"noopener\"\r\n                href=\"https://github.com/kspearrin/ff-password-exporter/blob/master/README.md#ff-password-exporter\">\r\n                FF Password Exporter</a> application to export your passwords to a CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === '1password1pif' || format === '1passwordwincsv'\">\r\n            See detailed instructions on our help site at\r\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-1password/\">\r\n                https://help.bitwarden.com/article/import-from-1password/</a>.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passworddragonxml'\">\r\n            Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To XML\". In the\r\n            dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\" button and save the XML file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'enpasscsv'\">\r\n            Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\". Select \"OK\" to the\r\n            warning alert and save the CSV file. Note that the importer only supports files exported while Enpass is set\r\n            to the English language, so adjust your settings accordingly.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'enpassjson'\">\r\n            Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr; \"Export\".\r\n            Select the \".json\" file format option and save the JSON file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'pwsafexml'\">\r\n            Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML format...\"\r\n            and save the XML file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'dashlanejson'\">\r\n            Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured archive\r\n            (readable) in JSON format\" and save the JSON file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'msecurecsv'\">\r\n            Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\" and save the\r\n            CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'stickypasswordxml'\">\r\n            Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\" &rarr; \"Export\r\n            all\". Select the unencrypted format XML option and save the XML file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'truekeycsv'\">\r\n            Using the True Key desktop application, click the gear icon (top right) and then navigate to \"App Settings\".\r\n            Click the \"Export\" button, enter your password and save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'clipperzhtml'\">\r\n            Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to\r\n            expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the \"download HTML+JSON\" button to save\r\n            the HTML file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'roboformcsv'\">\r\n            Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr; \"Options\" &rarr;\r\n            \"Account &amp; Data\" and click the \"Export\" button. Select all of your data, change the \"Format\" to \"CSV\r\n            file\" and then click the \"Export\" button to save the CSV file. Note: RoboForm only allows you to export\r\n            Logins. Other items will not be exported.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passboltcsv'\">\r\n            Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the passwords you\r\n            would like to export and click the \"Export\" button at the top of the listing. Choose the \"csv (lastpass)\"\r\n            export format and click the \"Export\" button.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'ascendocsv'\">\r\n            Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the dialog that\r\n            pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passwordbossjson'\">\r\n            Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr; \"Password Boss\r\n            JSON - not encrypted\" and save the JSON file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'zohovaultcsv'\">\r\n            Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\". Select \"All\r\n            Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data from the textarea. Open a\r\n            text editor like Notepad and paste the data. Save the data from the text editor as\r\n            <code>zoho_export.csv</code>.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'splashidcsv'\">\r\n            Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner.\r\n            Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passkeepcsv'\">\r\n            Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\" section and\r\n            click \"Backup to CSV\" to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'gnomejson'\">\r\n            Make sure you have python-keyring and python-gnomekeyring installed. Save the\r\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\">GNOME Keyring Import/Export</a> python\r\n            script to your desktop as <code>pw_helper.py</code>. Open terminal and run\r\n            <code>chmod +rx Desktop/pw_helper.py</code> and then\r\n            <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting\r\n            <code>my_passwords.json</code> file here to Bitwarden.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passwordagentcsv'\">\r\n            Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the \"Fields to\r\n            export\" button and check all of the fields, change the \"Output format\" to \"CSV\", and then click the \"Start\"\r\n            button to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passpackcsv'\">\r\n            Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the \"Download\"\r\n            button to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passmanjson'\">\r\n            Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\" window switch\r\n            to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your vault's passphrase and\r\n            click the \"Export\" button to save the JSON file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'avastcsv'\">\r\n            Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select\r\n            the \"Export\" button for the \"Export to CSV file\" option to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'avastjson'\">\r\n            Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select\r\n            the \"Export\" button for the \"Export to JSON file\" option to save the JSON file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'fsecurefsk'\">\r\n            Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export Passwords\". Select the\r\n            \"Export\" button, enter your master password, and save the FSK file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'kasperskytxt'\">\r\n            Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr; \"Import/Export\".\r\n            Locate the \"Export to text file\" section and select the \"Export\" button to save the TXT file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'remembearcsv'\">\r\n            Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr; \"Export\".\r\n            Enter your master password and select the \"Export Anyway\" button to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'passwordwallettxt'\">\r\n            Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr;\r\n            \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'mykicsv'\">\r\n            Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\" and then scan\r\n            the QR code with your mobile device. Various CSV files will then be saved to your computer's\r\n            downloads folder.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'securesafecsv'\">\r\n            Export your SecureSafe password safe to a CSV file with a comma delimiter.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'logmeoncecsv'\">\r\n            Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and\r\n            select \"CSV File\" to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'blackberrycsv'\">\r\n            Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr; \"Import/Export\".\r\n            Select \"Export Passwords\" and follow the instructions on screen to save the unencrypted CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'buttercupcsv'\">\r\n            Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon and\r\n            select \"Export\" to save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'codebookcsv'\">\r\n            Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then click\r\n            \"Yes\" on the dialog and save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'encryptrcsv'\">\r\n            Open the newest version of the Encryptr desktop application and allow all of your data to sync.\r\n            Once syncing of your data is complete, the download icon in the top right corner will turn pink. Click\r\n            the download icon and save the CSV file.\r\n        </ng-container>\r\n        <ng-container *ngIf=\"format === 'yoticsv'\">\r\n            From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the CSV file.\r\n        </ng-container>\r\n    </app-callout>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"file\">2. {{'selectImportFile' | i18n}}</label>\r\n                <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"fileContents\">{{'orCopyPasteFileContents' | i18n}}</label>\r\n        <textarea id=\"fileContents\" class=\"form-control\" name=\"FileContents\" [(ngModel)]=\"fileContents\"></textarea>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'importData' | i18n}}</span>\r\n    </button>\r\n</form>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\nimport { CipherReportComponent } from './cipher-report.component';\r\n\r\n@Component({\r\n    selector: 'app-inactive-two-factor-report',\r\n    templateUrl: 'inactive-two-factor-report.component.html',\r\n})\r\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\r\n    services = new Map<string, string>();\r\n    cipherDocs = new Map<string, string>();\r\n\r\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\r\n        messagingService: MessagingService, userService: UserService) {\r\n        super(componentFactoryResolver, userService, messagingService, true);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        if (await this.checkAccess()) {\r\n            await super.load();\r\n        }\r\n    }\r\n\r\n    async setCiphers() {\r\n        try {\r\n            await this.load2fa();\r\n        } catch { }\r\n        if (this.services.size > 0) {\r\n            const allCiphers = await this.getAllCiphers();\r\n            const inactive2faCiphers: CipherView[] = [];\r\n            const promises: Promise<void>[] = [];\r\n            const docs = new Map<string, string>();\r\n            allCiphers.forEach((c) => {\r\n                if (c.type !== CipherType.Login || (c.login.totp != null && c.login.totp !== '') || !c.login.hasUris ||\r\n                    c.isDeleted) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < c.login.uris.length; i++) {\r\n                    const u = c.login.uris[i];\r\n                    if (u.uri != null && u.uri !== '') {\r\n                        const hostname = Utils.getHostname(u.uri);\r\n                        if (hostname != null && this.services.has(hostname)) {\r\n                            if (this.services.get(hostname) != null) {\r\n                                docs.set(c.id, this.services.get(hostname));\r\n                            }\r\n                            inactive2faCiphers.push(c);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            await Promise.all(promises);\r\n            this.ciphers = inactive2faCiphers;\r\n            this.cipherDocs = docs;\r\n        }\r\n    }\r\n\r\n    protected getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllDecrypted();\r\n    }\r\n\r\n    private async load2fa() {\r\n        if (this.services.size > 0) {\r\n            return;\r\n        }\r\n        const response = await fetch(new Request('https://twofactorauth.org/api/v1/data.json'));\r\n        if (response.status !== 200) {\r\n            throw new Error();\r\n        }\r\n        const responseJson = await response.json();\r\n        for (const categoryName in responseJson) {\r\n            if (responseJson.hasOwnProperty(categoryName)) {\r\n                const category = responseJson[categoryName];\r\n                for (const serviceName in category) {\r\n                    if (category.hasOwnProperty(serviceName)) {\r\n                        const service = category[serviceName];\r\n                        if (service.tfa && service.software && service.url != null) {\r\n                            const hostname = Utils.getHostname(service.url);\r\n                            if (hostname != null) {\r\n                                this.services.set(hostname, service.doc);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>\r\n        {{'inactive2faReport' | i18n}}\r\n        <small *ngIf=\"hasLoaded && loading\">\r\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </small>\r\n    </h1>\r\n</div>\r\n<p>{{'inactive2faReportDesc' | i18n}}</p>\r\n<div *ngIf=\"!hasLoaded && loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</div>\r\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\r\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\r\n        {{'noInactive2fa' | i18n}}\r\n    </app-callout>\r\n    <ng-container *ngIf=\"ciphers.length\">\r\n        <app-callout type=\"danger\" title=\"{{'inactive2faFound' | i18n}}\">\r\n            {{'inactive2faFoundDesc' | i18n : (ciphers.length | number)}}\r\n        </app-callout>\r\n        <table class=\"table table-hover table-list table-ciphers\">\r\n            <tbody>\r\n                <tr *ngFor=\"let c of ciphers\">\r\n                    <td class=\"table-list-icon\">\r\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\r\n                    </td>\r\n                    <td class=\"reduced-lh wrap\">\r\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\r\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\r\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"c.hasAttachments\">\r\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\r\n                        </ng-container>\r\n                        <br>\r\n                        <small>{{c.subTitle}}</small>\r\n                    </td>\r\n                    <td class=\"text-right\">\r\n                        <a class=\"badge badge-primary\" href=\"{{cipherDocs.get(c.id)}}\" target=\"_blank\" rel=\"noopener\"\r\n                            *ngIf=\"cipherDocs.has(c.id)\">\r\n                            {{'instructions' | i18n}}</a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n</div>\r\n<ng-template #cipherAddEdit></ng-template>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\n\r\nimport { CipherReportComponent } from './cipher-report.component';\r\n\r\n@Component({\r\n    selector: 'app-reused-passwords-report',\r\n    templateUrl: 'reused-passwords-report.component.html',\r\n})\r\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\r\n    passwordUseMap: Map<string, number>;\r\n\r\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\r\n        messagingService: MessagingService, userService: UserService) {\r\n        super(componentFactoryResolver, userService, messagingService, true);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        if (await this.checkAccess()) {\r\n            await super.load();\r\n        }\r\n    }\r\n\r\n    async setCiphers() {\r\n        const allCiphers = await this.getAllCiphers();\r\n        const ciphersWithPasswords: CipherView[] = [];\r\n        this.passwordUseMap = new Map<string, number>();\r\n        allCiphers.forEach((c) => {\r\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\r\n                return;\r\n            }\r\n            ciphersWithPasswords.push(c);\r\n            if (this.passwordUseMap.has(c.login.password)) {\r\n                this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\r\n            } else {\r\n                this.passwordUseMap.set(c.login.password, 1);\r\n            }\r\n        });\r\n        const reusedPasswordCiphers = ciphersWithPasswords.filter((c) =>\r\n            this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1);\r\n        this.ciphers = reusedPasswordCiphers;\r\n    }\r\n\r\n    protected getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllDecrypted();\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>\r\n        {{'reusedPasswordsReport' | i18n}}\r\n        <small *ngIf=\"hasLoaded && loading\">\r\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </small>\r\n    </h1>\r\n</div>\r\n<p>{{'reusedPasswordsReportDesc' | i18n}}</p>\r\n<div *ngIf=\"!hasLoaded && loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</div>\r\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\r\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\r\n        {{'noReusedPasswords' | i18n}}\r\n    </app-callout>\r\n    <ng-container *ngIf=\"ciphers.length\">\r\n        <app-callout type=\"danger\" title=\"{{'reusedPasswordsFound' | i18n}}\">\r\n            {{'reusedPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\r\n        </app-callout>\r\n        <table class=\"table table-hover table-list table-ciphers\">\r\n            <tbody>\r\n                <tr *ngFor=\"let c of ciphers\">\r\n                    <td class=\"table-list-icon\">\r\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\r\n                    </td>\r\n                    <td class=\"reduced-lh wrap\">\r\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\r\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\r\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"c.hasAttachments\">\r\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\r\n                        </ng-container>\r\n                        <br>\r\n                        <small>{{c.subTitle}}</small>\r\n                    </td>\r\n                    <td class=\"text-right\">\r\n                        <span class=\"badge badge-warning\">\r\n                            {{'reusedXTimes' | i18n : passwordUseMap.get(c.login.password)}}\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n</div>\r\n<ng-template #cipherAddEdit></ng-template>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { CipherReportComponent } from './cipher-report.component';\r\n\r\n@Component({\r\n    selector: 'app-unsecured-websites-report',\r\n    templateUrl: 'unsecured-websites-report.component.html',\r\n})\r\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\r\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\r\n        messagingService: MessagingService, userService: UserService) {\r\n        super(componentFactoryResolver, userService, messagingService, true);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        if (await this.checkAccess()) {\r\n            await super.load();\r\n        }\r\n    }\r\n\r\n    async setCiphers() {\r\n        const allCiphers = await this.getAllCiphers();\r\n        const unsecuredCiphers = allCiphers.filter((c) => {\r\n            if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\r\n                return false;\r\n            }\r\n            return c.login.uris.some((u) => u.uri != null && u.uri.indexOf('http://') === 0);\r\n        });\r\n        this.ciphers = unsecuredCiphers;\r\n    }\r\n\r\n    protected getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllDecrypted();\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>\r\n        {{'unsecuredWebsitesReport' | i18n}}\r\n        <small *ngIf=\"hasLoaded && loading\">\r\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </small>\r\n    </h1>\r\n</div>\r\n<p>{{'unsecuredWebsitesReportDesc' | i18n}}</p>\r\n<div *ngIf=\"!hasLoaded && loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</div>\r\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\r\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\r\n        {{'noUnsecuredWebsites' | i18n}}\r\n    </app-callout>\r\n    <ng-container *ngIf=\"ciphers.length\">\r\n        <app-callout type=\"danger\" title=\"{{'unsecuredWebsitesFound' | i18n}}\">\r\n            {{'unsecuredWebsitesFoundDesc' | i18n : (ciphers.length | number)}}\r\n        </app-callout>\r\n        <table class=\"table table-hover table-list table-ciphers\">\r\n            <tbody>\r\n                <tr *ngFor=\"let c of ciphers\">\r\n                    <td class=\"table-list-icon\">\r\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\r\n                    </td>\r\n                    <td class=\"reduced-lh wrap\">\r\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\r\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\r\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"c.hasAttachments\">\r\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\r\n                        </ng-container>\r\n                        <br>\r\n                        <small>{{c.subTitle}}</small>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n</div>\r\n<ng-template #cipherAddEdit></ng-template>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\n\r\nimport { CipherReportComponent } from './cipher-report.component';\r\n\r\n@Component({\r\n    selector: 'app-weak-passwords-report',\r\n    templateUrl: 'weak-passwords-report.component.html',\r\n})\r\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\r\n    passwordStrengthMap = new Map<string, [string, string]>();\r\n\r\n    private passwordStrengthCache = new Map<string, number>();\r\n\r\n    constructor(protected cipherService: CipherService, protected passwordGenerationService: PasswordGenerationService,\r\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\r\n        userService: UserService) {\r\n        super(componentFactoryResolver, userService, messagingService, true);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        if (await this.checkAccess()) {\r\n            await super.load();\r\n        }\r\n    }\r\n\r\n    async setCiphers() {\r\n        const allCiphers = await this.getAllCiphers();\r\n        const weakPasswordCiphers: CipherView[] = [];\r\n        allCiphers.forEach((c) => {\r\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '' || c.isDeleted) {\r\n                return;\r\n            }\r\n            const hasUsername = c.login.username != null && c.login.username.trim() !== '';\r\n            const cacheKey = c.login.password + '_____' + (hasUsername ? c.login.username : '');\r\n            if (!this.passwordStrengthCache.has(cacheKey)) {\r\n                let userInput: string[] = [];\r\n                if (hasUsername) {\r\n                    const atPosition = c.login.username.indexOf('@');\r\n                    if (atPosition > -1) {\r\n                        userInput = userInput.concat(\r\n                            c.login.username.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/))\r\n                            .filter((i) => i.length >= 3);\r\n                    } else {\r\n                        userInput = c.login.username.trim().toLowerCase().split(/[^A-Za-z0-9]/)\r\n                            .filter((i) => i.length >= 3);\r\n                    }\r\n                }\r\n                const result = this.passwordGenerationService.passwordStrength(c.login.password,\r\n                    userInput.length > 0 ? userInput : null);\r\n                this.passwordStrengthCache.set(cacheKey, result.score);\r\n            }\r\n            const score = this.passwordStrengthCache.get(cacheKey);\r\n            if (score != null && score <= 2) {\r\n                this.passwordStrengthMap.set(c.id, this.scoreKey(score));\r\n                weakPasswordCiphers.push(c);\r\n            }\r\n        });\r\n        this.ciphers = weakPasswordCiphers;\r\n    }\r\n\r\n    protected getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllDecrypted();\r\n    }\r\n\r\n    private scoreKey(score: number): [string, string] {\r\n        switch (score) {\r\n            case 4:\r\n                return ['strong', 'success'];\r\n            case 3:\r\n                return ['good', 'primary'];\r\n            case 2:\r\n                return ['weak', 'warning'];\r\n            default:\r\n                return ['veryWeak', 'danger'];\r\n        }\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>\r\n        {{'weakPasswordsReport' | i18n}}\r\n        <small *ngIf=\"hasLoaded && loading\">\r\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </small>\r\n    </h1>\r\n</div>\r\n<p>{{'weakPasswordsReportDesc' | i18n}}</p>\r\n<div *ngIf=\"!hasLoaded && loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</div>\r\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\r\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\r\n        {{'noWeakPasswords' | i18n}}\r\n    </app-callout>\r\n    <ng-container *ngIf=\"ciphers.length\">\r\n        <app-callout type=\"danger\" title=\"{{'weakPasswordsFound' | i18n}}\">\r\n            {{'weakPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\r\n        </app-callout>\r\n        <table class=\"table table-hover table-list table-ciphers\">\r\n            <tbody>\r\n                <tr *ngFor=\"let c of ciphers\">\r\n                    <td class=\"table-list-icon\">\r\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\r\n                    </td>\r\n                    <td class=\"reduced-lh wrap\">\r\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\r\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\r\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"c.hasAttachments\">\r\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\r\n                        </ng-container>\r\n                        <br>\r\n                        <small>{{c.subTitle}}</small>\r\n                    </td>\r\n                    <td class=\"text-right\">\r\n                        <span class=\"badge badge-{{passwordStrengthMap.get(c.id)[1]}}\">\r\n                            {{passwordStrengthMap.get(c.id)[0] | i18n}}\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n</div>\r\n<ng-template #cipherAddEdit></ng-template>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { AttachmentView } from 'jslib/models/view/attachmentView';\r\n\r\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib/angular/components/attachments.component';\r\n\r\n@Component({\r\n    selector: 'app-vault-attachments',\r\n    templateUrl: 'attachments.component.html',\r\n})\r\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\r\n    constructor(cipherService: CipherService, i18nService: I18nService,\r\n        cryptoService: CryptoService, userService: UserService,\r\n        platformUtilsService: PlatformUtilsService) {\r\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, window);\r\n    }\r\n\r\n    protected async reupload(attachment: AttachmentView) {\r\n        if (this.showFixOldAttachments(attachment)) {\r\n            await this.reuploadCipherAttachment(attachment, false);\r\n        }\r\n    }\r\n\r\n    protected showFixOldAttachments(attachment: AttachmentView) {\r\n        return attachment.key == null && this.cipher.organizationId == null;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"attachmentsTitle\">\r\n                    {{'attachments' | i18n}}\r\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\r\n                    <tbody>\r\n                        <tr *ngFor=\"let a of cipher.attachments\">\r\n                            <td class=\"table-list-icon\">\r\n                                <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\r\n                                <i class=\"fa fa-spinner fa-lg fa-fw fa-spin\" *ngIf=\"a.downloading\"\r\n                                    aria-hidden=\"true\"></i>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"d-flex\">\r\n                                    <a href=\"#\" appStopClick (click)=\"download(a)\">{{a.fileName}}</a>\r\n                                    <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\r\n                                        <a href=\"https://help.bitwarden.com/article/attachments/#fixing-old-attachments\"\r\n                                            target=\"_blank\" rel=\"noopener\">\r\n                                            <i class=\"fa fa-exclamation-triangle text-warning\"\r\n                                                title=\"{{'attachmentFixDesc' | i18n}}\" aria-hidden=\"true\"></i>\r\n                                            <span class=\"sr-only\">{{'attachmentFixDesc' | i18n}}</span></a>\r\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\r\n                                            (click)=\"reupload(a)\" #reuploadBtn [appApiAction]=\"reuploadPromises[a.id]\"\r\n                                            [disabled]=\"reuploadBtn.loading\">{{'fix' | i18n}}</button>\r\n                                    </div>\r\n                                </div>\r\n                                <small>{{a.sizeName}}</small>\r\n                            </td>\r\n                            <td class=\"table-list-options\">\r\n                                <button class=\"btn btn-outline-danger\" type=\"button\" appStopClick\r\n                                    appA11yTitle=\"{{'delete' | i18n}}\" (click)=\"delete(a)\" #deleteBtn\r\n                                    [appApiAction]=\"deletePromises[a.id]\" [disabled]=\"deleteBtn.loading\">\r\n                                    <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\r\n                                        title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <h3>{{'newAttachment' | i18n}}</h3>\r\n                <label for=\"file\" class=\"sr-only\">{{'file' | i18n}}</label>\r\n                <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\r\n                <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close'\r\n                    | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { EventService } from 'jslib/abstractions/event.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SearchService } from 'jslib/abstractions/search.service';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\r\n\r\n@Component({\r\n    selector: 'app-org-vault-ciphers',\r\n    templateUrl: '../../vault/ciphers.component.html',\r\n})\r\nexport class CiphersComponent extends BaseCiphersComponent {\r\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\r\n\r\n    organization: Organization;\r\n    accessEvents = false;\r\n\r\n    protected allCiphers: CipherView[] = [];\r\n\r\n    constructor(searchService: SearchService, analytics: Angulartics2,\r\n        toasterService: ToasterService, i18nService: I18nService,\r\n        platformUtilsService: PlatformUtilsService, cipherService: CipherService,\r\n        private apiService: ApiService, eventService: EventService) {\r\n        super(searchService, analytics, toasterService, i18nService, platformUtilsService,\r\n            cipherService, eventService);\r\n    }\r\n\r\n    async load(filter: (cipher: CipherView) => boolean = null) {\r\n        if (!this.organization.isAdmin) {\r\n            await super.load(filter, this.deleted);\r\n            return;\r\n        }\r\n        this.accessEvents = this.organization.useEvents;\r\n        this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\r\n        this.applyFilter(filter);\r\n        this.loaded = true;\r\n    }\r\n\r\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\r\n        if (this.organization.isAdmin) {\r\n            await super.applyFilter(filter);\r\n        } else {\r\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\r\n            await super.applyFilter(f);\r\n        }\r\n    }\r\n\r\n    async search(timeout: number = null) {\r\n        if (!this.organization.isAdmin) {\r\n            return super.search(timeout);\r\n        }\r\n        this.searchPending = false;\r\n        let filteredCiphers = this.allCiphers;\r\n\r\n        if (this.searchText == null || this.searchText.trim().length < 2) {\r\n            this.ciphers = filteredCiphers.filter((c) => {\r\n                if (c.isDeleted !== this.deleted) {\r\n                    return false;\r\n                }\r\n                return this.filter == null || this.filter(c);\r\n            });\r\n        } else {\r\n            if (this.filter != null) {\r\n                filteredCiphers = filteredCiphers.filter(this.filter);\r\n            }\r\n            this.ciphers = this.searchService.searchCiphersBasic(filteredCiphers, this.searchText, this.deleted);\r\n        }\r\n        await this.resetPaging();\r\n    }\r\n\r\n    events(c: CipherView) {\r\n        this.onEventsClicked.emit(c);\r\n    }\r\n\r\n    protected deleteCipher(id: string) {\r\n        if (!this.organization.isAdmin) {\r\n            return super.deleteCipher(id, this.deleted);\r\n        }\r\n        return this.deleted ? this.apiService.deleteCipherAdmin(id) : this.apiService.putDeleteCipherAdmin(id);\r\n    }\r\n\r\n    protected showFixOldAttachments(c: CipherView) {\r\n        return this.organization.isAdmin && c.hasOldAttachments;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { CollectionView } from 'jslib/models/view/collectionView';\r\n\r\nimport { CollectionsComponent as BaseCollectionsComponent } from 'jslib/angular/components/collections.component';\r\n\r\n@Component({\r\n    selector: 'app-vault-collections',\r\n    templateUrl: 'collections.component.html',\r\n})\r\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\r\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\r\n        i18nService: I18nService, cipherService: CipherService) {\r\n        super(collectionService, platformUtilsService, i18nService, cipherService);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.selectAll(false);\r\n    }\r\n\r\n    check(c: CollectionView, select?: boolean) {\r\n        (c as any).checked = select == null ? !(c as any).checked : select;\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        this.collections.forEach((c) => this.check(c, select));\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"collectionsTitle\">\r\n                    {{'collections' | i18n}}\r\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{'collectionsDesc' | i18n}}</p>\r\n                <div class=\"d-flex\">\r\n                    <h3>{{'collections' | i18n}}</h3>\r\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\r\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'selectAll' | i18n}}\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'unselectAll' | i18n}}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!collections || !collections.length\">\r\n                    {{'noCollectionsInList' | i18n}}\r\n                </div>\r\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\r\n                    <tbody>\r\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\r\n                            <td class=\"table-list-checkbox\">\r\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\r\n                                    appStopProp>\r\n                            </td>\r\n                            <td>\r\n                                {{c.name}}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CollectionData } from 'jslib/models/data/collectionData';\r\nimport { Collection } from 'jslib/models/domain/collection';\r\nimport { Organization } from 'jslib/models/domain/organization';\r\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\r\nimport { CollectionView } from 'jslib/models/view/collectionView';\r\n\r\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\r\n\r\n@Component({\r\n    selector: 'app-org-vault-groupings',\r\n    templateUrl: '../../vault/groupings.component.html',\r\n})\r\nexport class GroupingsComponent extends BaseGroupingsComponent {\r\n    organization: Organization;\r\n\r\n    constructor(collectionService: CollectionService, folderService: FolderService,\r\n        storageService: StorageService, userService: UserService,\r\n        private apiService: ApiService, private i18nService: I18nService) {\r\n        super(collectionService, folderService, storageService, userService);\r\n    }\r\n\r\n    async loadCollections() {\r\n        if (!this.organization.isAdmin) {\r\n            await super.loadCollections(this.organization.id);\r\n            return;\r\n        }\r\n\r\n        const collections = await this.apiService.getCollections(this.organization.id);\r\n        if (collections != null && collections.data != null && collections.data.length) {\r\n            const collectionDomains = collections.data.map((r) =>\r\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\r\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\r\n        } else {\r\n            this.collections = [];\r\n        }\r\n\r\n        const unassignedCollection = new CollectionView();\r\n        unassignedCollection.name = this.i18nService.t('unassigned');\r\n        unassignedCollection.id = 'unassigned';\r\n        unassignedCollection.organizationId = this.organization.id;\r\n        unassignedCollection.readOnly = true;\r\n        this.collections.push(unassignedCollection);\r\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\r\n    }\r\n\r\n    collapse(grouping: CollectionView) {\r\n        super.collapse(grouping, 'org_');\r\n    }\r\n\r\n    isCollapsed(grouping: CollectionView) {\r\n        return super.isCollapsed(grouping, 'org_');\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    Input,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ToasterService } from 'angular2-toaster';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\n\r\nimport { BulkDeleteComponent } from './bulk-delete.component';\r\nimport { BulkMoveComponent } from './bulk-move.component';\r\nimport { BulkRestoreComponent } from './bulk-restore.component';\r\nimport { BulkShareComponent } from './bulk-share.component';\r\nimport { CiphersComponent } from './ciphers.component';\r\n\r\n@Component({\r\n    selector: 'app-vault-bulk-actions',\r\n    templateUrl: 'bulk-actions.component.html',\r\n})\r\nexport class BulkActionsComponent {\r\n    @Input() ciphersComponent: CiphersComponent;\r\n    @Input() modal: ModalComponent;\r\n    @Input() deleted: boolean;\r\n    @Input() organization: Organization;\r\n\r\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef, static: true }) bulkDeleteModalRef: ViewContainerRef;\r\n    @ViewChild('bulkRestoreTemplate', { read: ViewContainerRef, static: true }) bulkRestoreModalRef: ViewContainerRef;\r\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef, static: true }) bulkMoveModalRef: ViewContainerRef;\r\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef, static: true }) bulkShareModalRef: ViewContainerRef;\r\n\r\n    constructor(private toasterService: ToasterService,\r\n        private i18nService: I18nService,\r\n        private componentFactoryResolver: ComponentFactoryResolver) { }\r\n\r\n    bulkDelete() {\r\n        const selectedIds = this.ciphersComponent.getSelectedIds();\r\n        if (selectedIds.length === 0) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('nothingSelected'));\r\n            return;\r\n        }\r\n\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.bulkDeleteModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<BulkDeleteComponent>(BulkDeleteComponent, this.bulkDeleteModalRef);\r\n\r\n        childComponent.permanent = this.deleted;\r\n        childComponent.cipherIds = selectedIds;\r\n        childComponent.organization = this.organization;\r\n        childComponent.onDeleted.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    bulkRestore() {\r\n        const selectedIds = this.ciphersComponent.getSelectedIds();\r\n        if (selectedIds.length === 0) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('nothingSelected'));\r\n            return;\r\n        }\r\n\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.bulkRestoreModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<BulkRestoreComponent>(BulkRestoreComponent, this.bulkRestoreModalRef);\r\n\r\n        childComponent.cipherIds = selectedIds;\r\n        childComponent.onRestored.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    bulkShare() {\r\n        const selectedCiphers = this.ciphersComponent.getSelected();\r\n        if (selectedCiphers.length === 0) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('nothingSelected'));\r\n            return;\r\n        }\r\n\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.bulkShareModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<BulkShareComponent>(BulkShareComponent, this.bulkShareModalRef);\r\n\r\n        childComponent.ciphers = selectedCiphers;\r\n        childComponent.onShared.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    bulkMove() {\r\n        const selectedIds = this.ciphersComponent.getSelectedIds();\r\n        if (selectedIds.length === 0) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('nothingSelected'));\r\n            return;\r\n        }\r\n\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.bulkMoveModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<BulkMoveComponent>(BulkMoveComponent, this.bulkMoveModalRef);\r\n\r\n        childComponent.cipherIds = selectedIds;\r\n        childComponent.onMoved.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        this.ciphersComponent.selectAll(select);\r\n    }\r\n}\r\n","<div class=\"dropdown mr-2\" appListDropdown>\r\n    <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\"\r\n        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\r\n        <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n    </button>\r\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\r\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkMove()\" *ngIf=\"!deleted && !organization\">\r\n            <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\"></i>\r\n            {{'moveSelected' | i18n}}\r\n        </button>\r\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkShare()\" *ngIf=\"!deleted && !organization\">\r\n            <i class=\"fa fa-fw fa-share-alt\" aria-hidden=\"true\"></i>\r\n            {{'shareSelected' | i18n}}\r\n        </button>\r\n        <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\r\n            <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i>\r\n            {{'restoreSelected' | i18n}}\r\n        </button>\r\n        <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\r\n            <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\r\n            {{(deleted ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}}\r\n        </button>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\r\n            <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i>\r\n            {{'selectAll' | i18n}}\r\n        </button>\r\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\r\n            <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i>\r\n            {{'unselectAll' | i18n}}\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #bulkDeleteTemplate></ng-template>\r\n<ng-template #bulkRestoreTemplate></ng-template>\r\n<ng-template #bulkMoveTemplate></ng-template>\r\n<ng-template #bulkShareTemplate></ng-template>\r\n","import { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\r\n\r\nimport { SendFileData } from '../data/sendFileData';\r\n\r\nimport { SendFileView } from '../view/sendFileView';\r\n\r\nexport class SendFile extends Domain {\r\n    id: string;\r\n    url: string;\r\n    size: string;\r\n    sizeName: string;\r\n    fileName: CipherString;\r\n\r\n    constructor(obj?: SendFileData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.size = obj.size;\r\n        this.buildDomainModel(this, obj, {\r\n            id: null,\r\n            url: null,\r\n            sizeName: null,\r\n            fileName: null,\r\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\r\n    }\r\n\r\n    async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\r\n        const view = await this.decryptObj(new SendFileView(this), {\r\n            fileName: null,\r\n        }, null, key);\r\n        return view;\r\n    }\r\n\r\n    toSendFileData(): SendFileData {\r\n        const f = new SendFileData();\r\n        f.size = this.size;\r\n        this.buildDataModel(this, f, {\r\n            id: null,\r\n            url: null,\r\n            sizeName: null,\r\n            fileName: null,\r\n        }, ['id', 'url', 'sizeName']);\r\n        return f;\r\n    }\r\n}\r\n","import { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\r\n\r\nimport { SendTextData } from '../data/sendTextData';\r\n\r\nimport { SendTextView } from '../view/sendTextView';\r\n\r\nexport class SendText extends Domain {\r\n    text: CipherString;\r\n    hidden: boolean;\r\n\r\n    constructor(obj?: SendTextData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.hidden = obj.hidden;\r\n        this.buildDomainModel(this, obj, {\r\n            text: null,\r\n        }, alreadyEncrypted, []);\r\n    }\r\n\r\n    decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\r\n        return this.decryptObj(new SendTextView(this), {\r\n            text: null,\r\n        }, null, key);\r\n    }\r\n\r\n    toSendTextData(): SendTextData {\r\n        const t = new SendTextData();\r\n        this.buildDataModel(this, t, {\r\n            text: null,\r\n            hidden: null,\r\n        }, ['hidden']);\r\n        return t;\r\n    }\r\n}\r\n","import { CipherRequest } from './cipherRequest';\r\n\r\nimport { Cipher } from '../domain/cipher';\r\n\r\nexport class CipherWithIdRequest extends CipherRequest {\r\n    id: string;\r\n\r\n    constructor(cipher: Cipher) {\r\n        super(cipher);\r\n        this.id = cipher.id;\r\n    }\r\n}\r\n","import { Folder } from '../domain/folder';\r\n\r\nexport class FolderRequest {\r\n    name: string;\r\n\r\n    constructor(folder: Folder) {\r\n        this.name = folder.name ? folder.name.encryptedString : null;\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n} from '@angular/core';\r\n\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\n@Directive({\r\n    selector: '[appSelectCopy]',\r\n})\r\nexport class SelectCopyDirective {\r\n    constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    @HostListener('copy') onCopy() {\r\n        if (window == null) {\r\n            return;\r\n        }\r\n        let copyText = '';\r\n        const selection = window.getSelection();\r\n        for (let i = 0; i < selection.rangeCount; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const text = range.toString();\r\n\r\n            // The selection should only contain one line of text. In some cases however, the\r\n            // selection contains newlines and space characters from the indentation of following\r\n            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\r\n            // that aren't part of the password, the selection has to be trimmed.\r\n            let stringEndPos = text.length;\r\n            const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\r\n            if (newLinePos > -1) {\r\n                const otherPart = text.substr(newLinePos).trim();\r\n                if (otherPart === '') {\r\n                    stringEndPos = newLinePos;\r\n                }\r\n            }\r\n            copyText += text.substring(0, stringEndPos);\r\n        }\r\n        this.platformUtilsService.copyToClipboard(copyText, { window: window });\r\n    }\r\n}\r\n","import {\r\n    Pipe,\r\n    PipeTransform,\r\n} from '@angular/core';\r\n\r\n/**\r\n * A pipe that sanitizes HTML and highlights numbers and special characters (in different colors each).\r\n */\r\n@Pipe({ name: 'colorPassword' })\r\nexport class ColorPasswordPipe implements PipeTransform {\r\n    transform(password: string) {\r\n        let colorizedPassword = '';\r\n        for (let i = 0; i < password.length; i++) {\r\n            let character = password[i];\r\n            let isSpecial = false;\r\n            // Sanitize HTML first.\r\n            switch (character) {\r\n                case '&':\r\n                    character = '&amp;';\r\n                    isSpecial = true;\r\n                    break;\r\n                case '<':\r\n                    character = '&lt;';\r\n                    isSpecial = true;\r\n                    break;\r\n                case '>':\r\n                    character = '&gt;';\r\n                    isSpecial = true;\r\n                    break;\r\n                case ' ':\r\n                    character = '&nbsp;';\r\n                    isSpecial = true;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            let type = 'letter';\r\n            if (isSpecial || character.match(/[^\\w ]/)) {\r\n                type = 'special';\r\n            } else if (character.match(/\\d/)) {\r\n                type = 'number';\r\n            }\r\n            colorizedPassword += '<span class=\"password-' + type + '\">' + character + '</span>';\r\n        }\r\n        return colorizedPassword;\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\nimport { ProfileOrganizationResponse } from './profileOrganizationResponse';\r\n\r\nexport class ProfileResponse extends BaseResponse {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n    emailVerified: boolean;\r\n    masterPasswordHint: string;\r\n    premium: boolean;\r\n    culture: string;\r\n    twoFactorEnabled: boolean;\r\n    key: string;\r\n    privateKey: string;\r\n    securityStamp: string;\r\n    organizations: ProfileOrganizationResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.email = this.getResponseProperty('Email');\r\n        this.emailVerified = this.getResponseProperty('EmailVerified');\r\n        this.masterPasswordHint = this.getResponseProperty('MasterPasswordHint');\r\n        this.premium = this.getResponseProperty('Premium');\r\n        this.culture = this.getResponseProperty('Culture');\r\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\r\n        this.key = this.getResponseProperty('Key');\r\n        this.privateKey = this.getResponseProperty('PrivateKey');\r\n        this.securityStamp = this.getResponseProperty('SecurityStamp');\r\n\r\n        const organizations = this.getResponseProperty('Organizations');\r\n        if (organizations != null) {\r\n            this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nexport class SendFileApi extends BaseResponse {\r\n    id: string;\r\n    url: string;\r\n    fileName: string;\r\n    key: string;\r\n    size: string;\r\n    sizeName: string;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.id = this.getResponseProperty('Id');\r\n        this.url = this.getResponseProperty('Url');\r\n        this.fileName = this.getResponseProperty('FileName');\r\n        this.key = this.getResponseProperty('Key');\r\n        this.size = this.getResponseProperty('Size');\r\n        this.sizeName = this.getResponseProperty('SizeName');\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nexport class SendTextApi extends BaseResponse {\r\n    text: string;\r\n    hidden: boolean;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.text = this.getResponseProperty('Text');\r\n        this.hidden = this.getResponseProperty('Hidden') || false;\r\n    }\r\n}\r\n","import { EnvironmentService } from './environment.service';\r\n\r\nexport abstract class NotificationsService {\r\n    init: (environmentService: EnvironmentService) => Promise<void>;\r\n    updateConnection: (sync?: boolean) => Promise<void>;\r\n    reconnectFromActivity: () => Promise<void>;\r\n    disconnectFromInactivity: () => Promise<void>;\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 501;","import {\r\n    Component,\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\n@Component({\r\n    selector: 'app-frontend-layout',\r\n    templateUrl: 'frontend-layout.component.html',\r\n})\r\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\r\n    version: string;\r\n    year: string = '2015';\r\n\r\n    constructor(private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    ngOnInit() {\r\n        this.year = new Date().getFullYear().toString();\r\n        this.version = this.platformUtilsService.getApplicationVersion();\r\n        document.body.classList.add('layout_frontend');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        document.body.classList.remove('layout_frontend');\r\n    }\r\n}\r\n","<router-outlet></router-outlet>\r\n<div class=\"container my-5 text-muted text-center\">\r\n    &copy; {{year}}, Bitwarden Inc.\r\n    <br> {{'versionNumber' | i18n : version}}\r\n</div>\r\n","import {\r\n    Component,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\nconst BroadcasterSubscriptionId = 'OrganizationLayoutComponent';\r\n\r\n@Component({\r\n    selector: 'app-organization-layout',\r\n    templateUrl: 'organization-layout.component.html',\r\n})\r\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\r\n    organization: Organization;\r\n    enterpriseTokenPromise: Promise<any>;\r\n    private organizationId: string;\r\n    private enterpriseUrl: string;\r\n\r\n    constructor(private route: ActivatedRoute, private userService: UserService,\r\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\r\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\r\n        private environmentService: EnvironmentService) { }\r\n\r\n    ngOnInit() {\r\n        this.enterpriseUrl = 'https://portal.bitwarden.com';\r\n        if (this.environmentService.enterpriseUrl != null) {\r\n            this.enterpriseUrl = this.environmentService.enterpriseUrl;\r\n        } else if (this.environmentService.baseUrl != null) {\r\n            this.enterpriseUrl = this.environmentService.baseUrl + '/portal';\r\n        }\r\n\r\n        document.body.classList.remove('layout_frontend');\r\n        this.route.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            await this.load();\r\n        });\r\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\r\n            this.ngZone.run(async () => {\r\n                switch (message.command) {\r\n                    case 'updatedOrgLicense':\r\n                        await this.load();\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\r\n    }\r\n\r\n    async load() {\r\n        this.organization = await this.userService.getOrganization(this.organizationId);\r\n    }\r\n\r\n    async goToEnterprisePortal() {\r\n        if (this.enterpriseTokenPromise != null) {\r\n            return;\r\n        }\r\n        try {\r\n            this.enterpriseTokenPromise = this.apiService.getEnterprisePortalSignInToken();\r\n            const token = await this.enterpriseTokenPromise;\r\n            if (token != null) {\r\n                const userId = await this.userService.getUserId();\r\n                this.platformUtilsService.launchUri(this.enterpriseUrl + '/login?userId=' + userId +\r\n                    '&token=' + (window as any).encodeURIComponent(token) + '&organizationId=' + this.organization.id);\r\n            }\r\n        } catch { }\r\n        this.enterpriseTokenPromise = null;\r\n    }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"org-nav\" *ngIf=\"organization\">\r\n    <div class=\"container d-flex\">\r\n        <div class=\"d-flex flex-column\">\r\n            <div class=\"my-auto d-flex align-items-center pl-1\">\r\n                <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar>\r\n                <div class=\"org-name ml-3\">\r\n                    <span>{{organization.name}}</span>\r\n                    <small class=\"text-muted\">{{'organization' | i18n}}</small>\r\n                </div>\r\n                <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!organization.enabled\">\r\n                    <div class=\"card-body py-2\">\r\n                        <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\r\n                        {{'organizationIsDisabled' | i18n}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ul class=\"nav nav-tabs\" *ngIf=\"organization.isManager\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\r\n                        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                        {{'vault' | i18n}}\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"manage\" routerLinkActive=\"active\">\r\n                        <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i>\r\n                        {{'manage' | i18n}}\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"organization.isAdmin\">\r\n                    <a class=\"nav-link\" routerLink=\"tools\" routerLinkActive=\"active\">\r\n                        <i class=\"fa fa-wrench\" aria-hidden=\"true\"></i>\r\n                        {{'tools' | i18n}}\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"organization.isOwner\">\r\n                    <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\r\n                        <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i>\r\n                        {{'settings' | i18n}}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"ml-auto d-flex align-items-center\">\r\n            <button class=\"btn btn-primary\" (click)=\"goToEnterprisePortal()\" #enterpriseBtn\r\n                [appApiAction]=\"enterpriseTokenPromise\" *ngIf=\"organization.useBusinessPortal\">\r\n                <i class=\"fa fa-bank fa-fw\" [hidden]=\"enterpriseBtn.loading\" aria-hidden=\"true\"></i>\r\n                <i class=\"fa fa-spinner fa-spin fa-fw\" [hidden]=\"!enterpriseBtn.loading\" title=\"{{'loading' | i18n}}\"\r\n                    aria-hidden=\"true\"></i>\r\n                {{'businessPortal' | i18n}} →\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-user-layout',\r\n    templateUrl: 'user-layout.component.html',\r\n})\r\nexport class UserLayoutComponent implements OnInit {\r\n    ngOnInit() {\r\n        document.body.classList.remove('layout_frontend');\r\n    }\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport {\r\n    Toast,\r\n    ToasterService,\r\n} from 'angular2-toaster';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { OrganizationUserAcceptRequest } from 'jslib/models/request/organizationUserAcceptRequest';\r\n\r\n@Component({\r\n    selector: 'app-accept-organization',\r\n    templateUrl: 'accept-organization.component.html',\r\n})\r\nexport class AcceptOrganizationComponent implements OnInit {\r\n    loading = true;\r\n    authed = false;\r\n    orgName: string;\r\n    email: string;\r\n    actionPromise: Promise<any>;\r\n\r\n    constructor(private router: Router, private toasterService: ToasterService,\r\n        private i18nService: I18nService, private route: ActivatedRoute,\r\n        private apiService: ApiService, private userService: UserService,\r\n        private stateService: StateService) { }\r\n\r\n    ngOnInit() {\r\n        let fired = false;\r\n        this.route.queryParams.subscribe(async (qParams) => {\r\n            if (fired) {\r\n                return;\r\n            }\r\n            fired = true;\r\n            await this.stateService.remove('orgInvitation');\r\n            let error = qParams.organizationId == null || qParams.organizationUserId == null || qParams.token == null;\r\n            let errorMessage: string = null;\r\n            if (!error) {\r\n                this.authed = await this.userService.isAuthenticated();\r\n                if (this.authed) {\r\n                    const request = new OrganizationUserAcceptRequest();\r\n                    request.token = qParams.token;\r\n                    try {\r\n                        this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\r\n                            qParams.organizationUserId, request);\r\n                        await this.actionPromise;\r\n                        const toast: Toast = {\r\n                            type: 'success',\r\n                            title: this.i18nService.t('inviteAccepted'),\r\n                            body: this.i18nService.t('inviteAcceptedDesc'),\r\n                            timeout: 10000,\r\n                        };\r\n                        this.toasterService.popAsync(toast);\r\n                        this.router.navigate(['/vault']);\r\n                    } catch (e) {\r\n                        error = true;\r\n                        errorMessage = e.message;\r\n                    }\r\n                } else {\r\n                    await this.stateService.save('orgInvitation', qParams);\r\n                    this.email = qParams.email;\r\n                    this.orgName = qParams.organizationName;\r\n                    if (this.orgName != null) {\r\n                        // Fix URL encoding of space issue with Angular\r\n                        this.orgName = this.orgName.replace(/\\+/g, ' ');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (error) {\r\n                const toast: Toast = {\r\n                    type: 'error',\r\n                    title: null,\r\n                    body: errorMessage != null ? this.i18nService.t('inviteAcceptFailedShort', errorMessage) :\r\n                        this.i18nService.t('inviteAcceptFailed'),\r\n                    timeout: 10000,\r\n                };\r\n                this.toasterService.popAsync(toast);\r\n                this.router.navigate(['/']);\r\n            }\r\n\r\n            this.loading = false;\r\n        });\r\n    }\r\n}\r\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\r\n    <div>\r\n        <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\">\r\n        <p class=\"text-center\">\r\n            <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </p>\r\n    </div>\r\n</div>\r\n<div class=\"container\" *ngIf=\"!loading && !authed\">\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"lead text-center mb-4\">{{'joinOrganization' | i18n}}</p>\r\n            <div class=\"card d-block\">\r\n                <div class=\"card-body\">\r\n                    <p class=\"text-center\">\r\n                        {{orgName}}\r\n                        <strong class=\"d-block mt-2\">{{email}}</strong>\r\n                    </p>\r\n                    <p>{{'joinOrganizationDesc' | i18n}}</p>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\">\r\n                            {{'logIn' | i18n}}\r\n                        </a>\r\n                        <a routerLink=\"/register\" [queryParams]=\"{email: email}\"\r\n                            class=\"btn btn-primary btn-block ml-2 mt-0\">\r\n                            {{'createAccount' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { HintComponent as BaseHintComponent } from 'jslib/angular/components/hint.component';\r\n\r\n@Component({\r\n    selector: 'app-hint',\r\n    templateUrl: 'hint.component.html',\r\n})\r\nexport class HintComponent extends BaseHintComponent {\r\n    constructor(router: Router, i18nService: I18nService,\r\n        apiService: ApiService, platformUtilsService: PlatformUtilsService) {\r\n        super(router, i18nService, apiService, platformUtilsService);\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"lead text-center mb-4\">{{'passwordHint' | i18n}}</p>\r\n            <div class=\"card d-block\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\r\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\r\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\r\n                        <small class=\"form-text text-muted\">{{'enterEmailToGetHint' | i18n}}</small>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span [hidden]=\"form.loading\">{{'submit' | i18n}}</span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                            {{'cancel' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\r\n\r\nimport { RouterService } from '../services/router.service';\r\n\r\nimport { LockComponent as BaseLockComponent } from 'jslib/angular/components/lock.component';\r\n\r\n@Component({\r\n    selector: 'app-lock',\r\n    templateUrl: 'lock.component.html',\r\n})\r\nexport class LockComponent extends BaseLockComponent {\r\n    constructor(router: Router, i18nService: I18nService,\r\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\r\n        userService: UserService, cryptoService: CryptoService,\r\n        storageService: StorageService, vaultTimeoutService: VaultTimeoutService,\r\n        environmentService: EnvironmentService, private routerService: RouterService,\r\n        stateService: StateService, apiService: ApiService) {\r\n        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService,\r\n            storageService, vaultTimeoutService, environmentService, stateService, apiService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await super.ngOnInit();\r\n        const authed = await this.userService.isAuthenticated();\r\n        if (!authed) {\r\n            this.router.navigate(['/']);\r\n        } else if (await this.cryptoService.hasKey()) {\r\n            this.router.navigate(['vault']);\r\n        }\r\n\r\n        this.onSuccessfulSubmit = () => {\r\n            const previousUrl = this.routerService.getPreviousUrl();\r\n            if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\r\n                this.successRoute = previousUrl;\r\n            }\r\n            this.router.navigate([this.successRoute]);\r\n        };\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"text-center mb-4\">\r\n                <i class=\"fa fa-lock fa-4x text-muted\" aria-hidden=\"true\"></i>\r\n            </p>\r\n            <p class=\"lead text-center mx-4 mb-4\">{{'yourVaultIsLocked' | i18n}}</p>\r\n            <div class=\"card d-block\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                        <div class=\"d-flex\">\r\n                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\r\n                                name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\"\r\n                                required appAutofocus appInputVerbatim>\r\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\r\n                                (click)=\"togglePassword()\">\r\n                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <small class=\"text-muted form-text\">\r\n                            {{'loggedInAsEmailOn' | i18n : email : webVaultHostname}}\r\n                        </small>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span>\r\n                                <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> {{'unlock' | i18n}}\r\n                            </span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\">\r\n                            {{'logOut' | i18n}}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\r\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\n\r\nimport { LoginComponent as BaseLoginComponent } from 'jslib/angular/components/login.component';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: 'login.component.html',\r\n})\r\nexport class LoginComponent extends BaseLoginComponent {\r\n    constructor(authService: AuthService, router: Router,\r\n        i18nService: I18nService, private route: ActivatedRoute,\r\n        storageService: StorageService, stateService: StateService,\r\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\r\n        passwordGenerationService: PasswordGenerationService, cryptoFunctionService: CryptoFunctionService) {\r\n        super(authService, router,\r\n            platformUtilsService, i18nService,\r\n            stateService, environmentService,\r\n            passwordGenerationService, cryptoFunctionService,\r\n            storageService);\r\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\r\n    }\r\n\r\n    async ngOnInit() {\r\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\r\n                this.email = qParams.email;\r\n            }\r\n            if (qParams.premium != null) {\r\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\r\n            } else if (qParams.org != null) {\r\n                this.stateService.save('loginRedirect',\r\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\r\n            }\r\n            await super.ngOnInit();\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    async goAfterLogIn() {\r\n        const invite = await this.stateService.get<any>('orgInvitation');\r\n        if (invite != null) {\r\n            this.router.navigate(['accept-organization'], { queryParams: invite });\r\n        } else {\r\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\r\n            if (loginRedirect != null) {\r\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\r\n                await this.stateService.remove('loginRedirect');\r\n            } else {\r\n                this.router.navigate([this.successRoute]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\">\r\n            <p class=\"lead text-center mx-4 mb-4\">{{'loginOrCreateNewAccount' | i18n}}</p>\r\n            <div class=\"card d-block\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\r\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\r\n                            inputmode=\"email\" appInputVerbatim=\"false\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                        <div class=\"d-flex\">\r\n                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\r\n                                name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\"\r\n                                required appInputVerbatim>\r\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\r\n                                (click)=\"togglePassword()\">\r\n                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <small class=\"form-text\">\r\n                            <a routerLink=\"/hint\">{{'getMasterPasswordHint' | i18n}}</a>\r\n                        </small>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberEmail\" name=\"RememberEmail\"\r\n                            [(ngModel)]=\"rememberEmail\">\r\n                        <label class=\"form-check-label\" for=\"rememberEmail\">{{'rememberEmail' | i18n}}</label>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span>\r\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}}\r\n                            </span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <a routerLink=\"/register\" [queryParams]=\"{email: email}\"\r\n                            class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                            <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'createAccount' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"d-flex\">\r\n                        <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\r\n                            <i class=\"fa fa-bank\" aria-hidden=\"true\"></i> {{'enterpriseSingleSignOn' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { DeleteRecoverRequest } from 'jslib/models/request/deleteRecoverRequest';\r\n\r\n@Component({\r\n    selector: 'app-recover-delete',\r\n    templateUrl: 'recover-delete.component.html',\r\n})\r\nexport class RecoverDeleteComponent {\r\n    email: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private router: Router, private apiService: ApiService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private i18nService: I18nService) {\r\n    }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new DeleteRecoverRequest();\r\n            request.email = this.email.trim().toLowerCase();\r\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Started Delete Recovery' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\r\n            this.router.navigate(['/']);\r\n        } catch { }\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <p>{{'deleteRecoverDesc' | i18n}}</p>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\r\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\r\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span>{{'submit' | i18n}}</span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                            {{'cancel' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { TwoFactorRecoveryRequest } from 'jslib/models/request/twoFactorRecoveryRequest';\r\n\r\n@Component({\r\n    selector: 'app-recover-two-factor',\r\n    templateUrl: 'recover-two-factor.component.html',\r\n})\r\nexport class RecoverTwoFactorComponent {\r\n    email: string;\r\n    masterPassword: string;\r\n    recoveryCode: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private router: Router, private apiService: ApiService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private i18nService: I18nService, private cryptoService: CryptoService,\r\n        private authService: AuthService) { }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new TwoFactorRecoveryRequest();\r\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\r\n            request.email = this.email.trim().toLowerCase();\r\n            const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\r\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\r\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Recovered 2FA' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\r\n            this.router.navigate(['/']);\r\n        } catch { }\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"lead text-center mb-4\">{{'recoverAccountTwoStep' | i18n}}</p>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <p>{{'recoverAccountTwoStepDesc' | i18n}}\r\n                        <a href=\"https://help.bitwarden.com/article/lost-two-step-device/\" target=\"_blank\"\r\n                            rel=\"noopener\">{{'learnMore' | i18n}}</a>\r\n                    </p>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\r\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\r\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                        <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\"\r\n                            [(ngModel)]=\"masterPassword\" required appInputVerbatim>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"recoveryCode\">{{'recoveryCodeTitle' | i18n}}</label>\r\n                        <input id=\"recoveryCode\" class=\"text-monospace form-control\" type=\"text\" name=\"RecoveryCode\"\r\n                            [(ngModel)]=\"recoveryCode\" required appInputVerbatim>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span>{{'submit' | i18n}}</span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                            {{'cancel' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { PolicyService } from 'jslib/abstractions/policy.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\n\r\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib/angular/components/register.component';\r\n\r\nimport { MasterPasswordPolicyOptions } from 'jslib/models/domain/masterPasswordPolicyOptions';\r\nimport { Policy } from 'jslib/models/domain/policy';\r\n\r\nimport { PolicyData } from 'jslib/models/data/policyData';\r\nimport { ReferenceEventRequest } from 'jslib/models/request/referenceEventRequest';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: 'register.component.html',\r\n})\r\nexport class RegisterComponent extends BaseRegisterComponent {\r\n    showCreateOrgMessage = false;\r\n    layout = '';\r\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\r\n\r\n    private policies: Policy[];\r\n\r\n    constructor(authService: AuthService, router: Router,\r\n        i18nService: I18nService, cryptoService: CryptoService,\r\n        apiService: ApiService, private route: ActivatedRoute,\r\n        stateService: StateService, platformUtilsService: PlatformUtilsService,\r\n        passwordGenerationService: PasswordGenerationService, private policyService: PolicyService) {\r\n        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService,\r\n            passwordGenerationService);\r\n    }\r\n\r\n    getPasswordScoreAlertDisplay() {\r\n        if (this.enforcedPolicyOptions == null) {\r\n            return '';\r\n        }\r\n\r\n        let str: string;\r\n        switch (this.enforcedPolicyOptions.minComplexity) {\r\n            case 4:\r\n                str = this.i18nService.t('strong');\r\n                break;\r\n            case 3:\r\n                str = this.i18nService.t('good');\r\n                break;\r\n            default:\r\n                str = this.i18nService.t('weak');\r\n                break;\r\n        }\r\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\r\n    }\r\n\r\n    async ngOnInit() {\r\n        const queryParamsSub = this.route.queryParams.subscribe((qParams) => {\r\n            this.referenceData = new ReferenceEventRequest();\r\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\r\n                this.email = qParams.email;\r\n            }\r\n            if (qParams.premium != null) {\r\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\r\n            } else if (qParams.org != null) {\r\n                this.showCreateOrgMessage = true;\r\n                this.referenceData.flow = qParams.org;\r\n                this.stateService.save('loginRedirect',\r\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\r\n            }\r\n            if (qParams.layout != null) {\r\n                this.layout = this.referenceData.layout = qParams.layout;\r\n            }\r\n            if (qParams.reference != null) {\r\n                this.referenceData.id = qParams.reference;\r\n            } else {\r\n                this.referenceData.id = ('; ' + document.cookie).split('; reference=').pop().split(';').shift();\r\n            }\r\n            if (this.referenceData.id === '') {\r\n                this.referenceData.id = null;\r\n            }\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n        const invite = await this.stateService.get<any>('orgInvitation');\r\n        if (invite != null) {\r\n            try {\r\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\r\n                    invite.email, invite.organizationUserId);\r\n                if (policies.data != null) {\r\n                    const policiesData = policies.data.map((p) => new PolicyData(p));\r\n                    this.policies = policiesData.map((p) => new Policy(p));\r\n                }\r\n            } catch { }\r\n        }\r\n\r\n        if (this.policies != null) {\r\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(this.policies);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.enforcedPolicyOptions != null &&\r\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.masterPassword,\r\n                this.enforcedPolicyOptions)) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\r\n            return;\r\n        }\r\n\r\n        await super.submit();\r\n    }\r\n}\r\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\r\n    <header class=\"header\" *ngIf=\"layout === 'enterprise2'\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-7\">\r\n                    <img alt=\"Bitwarden\" class=\"logo mb-2\" src=\"images/logo-horizontal-white.png\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n        <div class=\"row\">\r\n            <div class=\"col-7\" *ngIf=\"layout\">\r\n                <div class=\"mt-5\">\r\n                    <div *ngIf=\"layout === 'enterprise2'\">\r\n                        <h2>Companies globally trust Bitwarden for password management.</h2>\r\n                        <p>Start your 7-day free trial!</p>\r\n                        <p class=\"highlight\">Quickly deploy your <b>organization</b></p>\r\n                        <p>Use Bitwarden across all platforms</p>\r\n                        <p>Collaborate and share securely</p>\r\n                        <figure>\r\n                            <figcaption>\r\n                                <cite>\r\n                                    <img src=\"images/wired-logo.png\" alt=\"Wired\">\r\n                                </cite>\r\n                            </figcaption>\r\n                            <blockquote>\r\n                                \"Bitwarden has become a popular choice among open-source software advocates. After using\r\n                                it for a few months, I can see why.\" - February 2020\r\n                            </blockquote>\r\n                        </figure>\r\n                    </div>\r\n                    <div *ngIf=\"layout === 'enterprise3'\">\r\n                        <p>Enterprise 3 layout</p>\r\n                    </div>\r\n                    <div *ngIf=\"layout === 'enterprise4'\">\r\n                        <p>Enterprise 4 layout</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div [ngClass]=\"{'col-5': layout, 'col-12': !layout}\">\r\n                <div class=\"row justify-content-md-center mt-5\">\r\n                    <div [ngClass]=\"{'col-5': !layout, 'col-12': layout}\">\r\n                        <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{'createAccount' | i18n}}</p>\r\n                        <div class=\"card d-block\">\r\n                            <div class=\"card-body\">\r\n                                <app-callout title=\"{{'createOrganizationStep1' | i18n}}\" type=\"info\"\r\n                                    icon=\"fa-thumb-tack\" *ngIf=\"showCreateOrgMessage\">\r\n                                    {{'createOrganizationCreatePersonalAccount' | i18n}}\r\n                                </app-callout>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">{{'emailAddress' | i18n}}</label>\r\n                                    <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\"\r\n                                        required [appAutofocus]=\"email === ''\" inputmode=\"email\"\r\n                                        appInputVerbatim=\"false\">\r\n                                    <small class=\"form-text text-muted\">{{'emailAddressDesc' | i18n}}</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\">{{'yourName' | i18n}}</label>\r\n                                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\"\r\n                                        [appAutofocus]=\"email !== ''\">\r\n                                    <small class=\"form-text text-muted\">{{'yourNameDesc' | i18n}}</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\">\r\n                                        {{'masterPasswordPolicyInEffect' | i18n}}\r\n                                        <ul class=\"mb-0\">\r\n                                            <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\r\n                                                {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}}\r\n                                            </li>\r\n                                            <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\r\n                                                {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}}\r\n                                            </li>\r\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\r\n                                                {{'policyInEffectUppercase' | i18n}}</li>\r\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\r\n                                                {{'policyInEffectLowercase' | i18n}}</li>\r\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\r\n                                                {{'policyInEffectNumbers' | i18n}}</li>\r\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\r\n                                                {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li>\r\n                                        </ul>\r\n                                    </app-callout>\r\n                                    <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                                    <div class=\"d-flex\">\r\n                                        <div class=\"w-100\">\r\n                                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\r\n                                                name=\"MasterPassword\" class=\"text-monospace form-control mb-1\"\r\n                                                [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required\r\n                                                appInputVerbatim>\r\n                                            <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\r\n                                            </app-password-strength>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button type=\"button\" class=\"ml-1 btn btn-link\"\r\n                                                appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\r\n                                                (click)=\"togglePassword(false)\">\r\n                                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\r\n                                            </button>\r\n                                            <div class=\"progress-bar invisible\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label>\r\n                                    <div class=\"d-flex\">\r\n                                        <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\"\r\n                                            name=\"MasterPasswordRetype\" class=\"text-monospace form-control\"\r\n                                            [(ngModel)]=\"confirmMasterPassword\" required appInputVerbatim>\r\n                                        <button type=\"button\" class=\"ml-1 btn btn-link\"\r\n                                            appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\">\r\n                                            <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                                [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"hint\">{{'masterPassHint' | i18n}}</label>\r\n                                    <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\">\r\n                                    <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small>\r\n                                </div>\r\n                                <div class=\"form-group\" *ngIf=\"showTerms\">\r\n                                    <div class=\"form-check\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"acceptPolicies\"\r\n                                            [(ngModel)]=\"acceptPolicies\" name=\"AcceptPolicies\">\r\n                                        <label class=\"form-check-label small text-muted\" for=\"acceptPolicies\">\r\n                                            {{'acceptPolicies' | i18n}}<br>\r\n                                            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\"\r\n                                                rel=\"noopener\">{{'termsOfService' | i18n}}</a>,\r\n                                            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\"\r\n                                                rel=\"noopener\">{{'privacyPolicy' | i18n}}</a>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n                                <div class=\"d-flex mb-2\">\r\n                                    <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\"\r\n                                        [disabled]=\"form.loading\">\r\n                                        <span>{{'submit' | i18n}}</span>\r\n                                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"\r\n                                            aria-hidden=\"true\"></i>\r\n                                    </button>\r\n                                    <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                                        {{'cancel' | i18n}}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { PolicyData } from '../data/policyData';\r\n\r\nimport Domain from './domainBase';\r\n\r\nimport { PolicyType } from '../../enums/policyType';\r\n\r\nexport class Policy extends Domain {\r\n    id: string;\r\n    organizationId: string;\r\n    type: PolicyType;\r\n    data: any;\r\n    enabled: boolean;\r\n\r\n    constructor(obj?: PolicyData) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.id = obj.id;\r\n        this.organizationId = obj.organizationId;\r\n        this.type = obj.type;\r\n        this.data = obj.data;\r\n        this.enabled = obj.enabled;\r\n    }\r\n}\r\n","import { PolicyResponse } from '../response/policyResponse';\r\n\r\nimport { PolicyType } from '../../enums/policyType';\r\n\r\nexport class PolicyData {\r\n    id: string;\r\n    organizationId: string;\r\n    type: PolicyType;\r\n    data: any;\r\n    enabled: boolean;\r\n\r\n    constructor(response: PolicyResponse) {\r\n        this.id = response.id;\r\n        this.organizationId = response.organizationId;\r\n        this.type = response.type;\r\n        this.data = response.data;\r\n        this.enabled = response.enabled;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { PolicyService } from 'jslib/abstractions/policy.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport {\r\n    SetPasswordComponent as BaseSetPasswordComponent,\r\n} from 'jslib/angular/components/set-password.component';\r\n\r\n@Component({\r\n    selector: 'app-set-password',\r\n    templateUrl: 'set-password.component.html',\r\n})\r\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\r\n    constructor(apiService: ApiService, i18nService: I18nService,\r\n        cryptoService: CryptoService, messagingService: MessagingService,\r\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\r\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, router: Router,\r\n        syncService: SyncService, route: ActivatedRoute) {\r\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\r\n            platformUtilsService, policyService, router, apiService, syncService, route);\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"lead text-center mb-4\">{{'setMasterPassword' | i18n}}</p>\r\n            <div class=\"card d-block\">\r\n                <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    {{'loading' | i18n}}\r\n                </div>\r\n                <div class=\"card-body\" *ngIf=\"!syncLoading\">\r\n                    <app-callout type=\"info\">{{'ssoCompleteRegistration' | i18n}}</app-callout>\r\n                    <div class=\"form-group\">\r\n                        <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\">\r\n                            {{'masterPasswordPolicyInEffect' | i18n}}\r\n                            <ul class=\"mb-0\">\r\n                                <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\r\n                                    {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}}\r\n                                </li>\r\n                                <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\r\n                                    {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}}\r\n                                </li>\r\n                                <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\r\n                                    {{'policyInEffectUppercase' | i18n}}</li>\r\n                                <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\r\n                                    {{'policyInEffectLowercase' | i18n}}</li>\r\n                                <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\r\n                                    {{'policyInEffectNumbers' | i18n}}</li>\r\n                                <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\r\n                                    {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li>\r\n                            </ul>\r\n                        </app-callout>\r\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                        <div class=\"d-flex\">\r\n                            <div class=\"w-100\">\r\n                                <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\r\n                                    name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\"\r\n                                    [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required\r\n                                    appInputVerbatim>\r\n                                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\r\n                                </app-password-strength>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"button\" class=\"ml-1 btn btn-link\"\r\n                                    appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\">\r\n                                    <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                        [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\r\n                                </button>\r\n                                <div class=\"progress-bar invisible\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label>\r\n                        <div class=\"d-flex\">\r\n                            <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\"\r\n                                name=\"MasterPasswordRetype\" class=\"text-monospace form-control\"\r\n                                [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim>\r\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\r\n                                (click)=\"togglePassword(true)\">\r\n                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"hint\">{{'masterPassHint' | i18n}}</label>\r\n                        <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\">\r\n                        <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span>{{'submit' | i18n}}</span>\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\">\r\n                            {{'logOut' | i18n}}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { OnInit } from '@angular/core';\r\n\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { MessagingService } from '../../abstractions/messaging.service';\r\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { PolicyService } from '../../abstractions/policy.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\n\r\nimport { CipherString } from '../../models/domain/cipherString';\r\nimport { MasterPasswordPolicyOptions } from '../../models/domain/masterPasswordPolicyOptions';\r\nimport { SymmetricCryptoKey } from '../../models/domain/symmetricCryptoKey';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class ChangePasswordComponent implements OnInit {\r\n    masterPassword: string;\r\n    masterPasswordRetype: string;\r\n    formPromise: Promise<any>;\r\n    masterPasswordScore: number;\r\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\r\n\r\n    protected kdf: KdfType;\r\n    protected kdfIterations: number;\r\n\r\n    private masterPasswordStrengthTimeout: any;\r\n    private email: string;\r\n\r\n    constructor(protected i18nService: I18nService, protected cryptoService: CryptoService,\r\n        protected messagingService: MessagingService, protected userService: UserService,\r\n        protected passwordGenerationService: PasswordGenerationService,\r\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService) { }\r\n\r\n    async ngOnInit() {\r\n        this.email = await this.userService.getEmail();\r\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\r\n    }\r\n\r\n    getPasswordScoreAlertDisplay() {\r\n        if (this.enforcedPolicyOptions == null) {\r\n            return '';\r\n        }\r\n\r\n        let str: string;\r\n        switch (this.enforcedPolicyOptions.minComplexity) {\r\n            case 4:\r\n                str = this.i18nService.t('strong');\r\n                break;\r\n            case 3:\r\n                str = this.i18nService.t('good');\r\n                break;\r\n            default:\r\n                str = this.i18nService.t('weak');\r\n                break;\r\n        }\r\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\r\n    }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n        if (this.masterPassword.length < 8) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassLength'));\r\n            return;\r\n        }\r\n        if (this.masterPassword !== this.masterPasswordRetype) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassDoesntMatch'));\r\n            return;\r\n        }\r\n\r\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\r\n            this.getPasswordStrengthUserInput());\r\n\r\n        if (this.enforcedPolicyOptions != null &&\r\n            !this.policyService.evaluateMasterPassword(\r\n                strengthResult.score,\r\n                this.masterPassword,\r\n                this.enforcedPolicyOptions)) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\r\n            return;\r\n        }\r\n\r\n        if (strengthResult != null && strengthResult.score < 3) {\r\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\r\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\r\n                'warning');\r\n            if (!result) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!await this.setupSubmitActions()) {\r\n            return;\r\n        }\r\n\r\n        const email = await this.userService.getEmail();\r\n        if (this.kdf == null) {\r\n            this.kdf = await this.userService.getKdf();\r\n        }\r\n        if (this.kdfIterations == null) {\r\n            this.kdfIterations = await this.userService.getKdfIterations();\r\n        }\r\n        const key = await this.cryptoService.makeKey(this.masterPassword, email.trim().toLowerCase(),\r\n            this.kdf, this.kdfIterations);\r\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\r\n\r\n        let encKey: [SymmetricCryptoKey, CipherString] = null;\r\n        const existingEncKey = await this.cryptoService.getEncKey();\r\n        if (existingEncKey == null) {\r\n            encKey = await this.cryptoService.makeEncKey(key);\r\n        } else {\r\n            encKey = await this.cryptoService.remakeEncKey(key);\r\n        }\r\n\r\n        await this.performSubmitActions(masterPasswordHash, key, encKey);\r\n    }\r\n\r\n    async setupSubmitActions(): Promise<boolean> {\r\n        // Override in sub-class\r\n        // Can be used for additional validation and/or other processes the should occur before changing passwords\r\n        return true;\r\n    }\r\n\r\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\r\n        encKey: [SymmetricCryptoKey, CipherString]) {\r\n        // Override in sub-class\r\n    }\r\n\r\n    updatePasswordStrength() {\r\n        if (this.masterPasswordStrengthTimeout != null) {\r\n            clearTimeout(this.masterPasswordStrengthTimeout);\r\n        }\r\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\r\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\r\n                this.getPasswordStrengthUserInput());\r\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\r\n        }, 300);\r\n    }\r\n\r\n    async logOut() {\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\r\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\r\n        if (confirmed) {\r\n            this.messagingService.send('logout');\r\n        }\r\n    }\r\n\r\n    private getPasswordStrengthUserInput() {\r\n        let userInput: string[] = [];\r\n        const atPosition = this.email.indexOf('@');\r\n        if (atPosition > -1) {\r\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\r\n        }\r\n        return userInput;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\n\r\nimport { SsoComponent as BaseSsoComponent } from 'jslib/angular/components/sso.component';\r\n\r\nconst IdentifierStorageKey = 'ssoOrgIdentifier';\r\n\r\n@Component({\r\n    selector: 'app-sso',\r\n    templateUrl: 'sso.component.html',\r\n})\r\nexport class SsoComponent extends BaseSsoComponent {\r\n    constructor(authService: AuthService, router: Router,\r\n        i18nService: I18nService, route: ActivatedRoute,\r\n        storageService: StorageService, stateService: StateService,\r\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\r\n        cryptoFunctionService: CryptoFunctionService,\r\n        passwordGenerationService: PasswordGenerationService) {\r\n        super(authService, router, i18nService, route, storageService, stateService, platformUtilsService,\r\n            apiService, cryptoFunctionService, passwordGenerationService);\r\n        this.redirectUri = window.location.origin + '/sso-connector.html';\r\n        this.clientId = 'web';\r\n    }\r\n\r\n    async ngOnInit() {\r\n        super.ngOnInit();\r\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n            if (qParams.identifier != null) {\r\n                this.identifier = qParams.identifier;\r\n            } else {\r\n                const storedIdentifier = await this.storageService.get<string>(IdentifierStorageKey);\r\n                if (storedIdentifier != null) {\r\n                    this.identifier = storedIdentifier;\r\n                }\r\n            }\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    async submit() {\r\n        await this.storageService.save(IdentifierStorageKey, this.identifier);\r\n        if (this.clientId === 'browser') {\r\n            document.cookie = `ssoHandOffMessage=${this.i18nService.t('ssoHandOff')};SameSite=strict`\r\n        }\r\n        super.submit();\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" class=\"container\" [appApiAction]=\"initiateSsoFormPromise\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\">\r\n            <div class=\"card d-block mt-4\">\r\n                <div class=\"card-body\" *ngIf=\"loggingIn\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    {{'loading' | i18n}}\r\n                </div>\r\n                <div class=\"card-body\" *ngIf=\"!loggingIn\">\r\n                    <p>{{'ssoLogInWithOrgIdentifier' | i18n}}</p>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"identifier\">{{'organizationIdentifier' | i18n}}</label>\r\n                        <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\"\r\n                            [(ngModel)]=\"identifier\" required appAutofocus>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span>\r\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}}\r\n                            </span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                            {{'cancel' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ApiService } from '../../abstractions/api.service';\r\nimport { AuthService } from '../../abstractions/auth.service';\r\nimport { CryptoFunctionService } from '../../abstractions/cryptoFunction.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { StateService } from '../../abstractions/state.service';\r\nimport { StorageService } from '../../abstractions/storage.service';\r\n\r\nimport { ConstantsService } from '../../services/constants.service';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nimport { AuthResult } from '../../models/domain/authResult';\r\n\r\nexport class SsoComponent {\r\n    identifier: string;\r\n    loggingIn = false;\r\n\r\n    formPromise: Promise<AuthResult>;\r\n    initiateSsoFormPromise: Promise<any>;\r\n    onSuccessfulLogin: () => Promise<any>;\r\n    onSuccessfulLoginNavigate: () => Promise<any>;\r\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\r\n    onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\r\n\r\n    protected twoFactorRoute = '2fa';\r\n    protected successRoute = 'lock';\r\n    protected changePasswordRoute = 'set-password';\r\n    protected clientId: string;\r\n    protected redirectUri: string;\r\n    protected state: string;\r\n    protected codeChallenge: string;\r\n\r\n    constructor(protected authService: AuthService, protected router: Router,\r\n        protected i18nService: I18nService, protected route: ActivatedRoute,\r\n        protected storageService: StorageService, protected stateService: StateService,\r\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\r\n        protected cryptoFunctionService: CryptoFunctionService,\r\n        protected passwordGenerationService: PasswordGenerationService) { }\r\n\r\n    async ngOnInit() {\r\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n            if (qParams.code != null && qParams.state != null) {\r\n                const codeVerifier = await this.storageService.get<string>(ConstantsService.ssoCodeVerifierKey);\r\n                const state = await this.storageService.get<string>(ConstantsService.ssoStateKey);\r\n                await this.storageService.remove(ConstantsService.ssoCodeVerifierKey);\r\n                await this.storageService.remove(ConstantsService.ssoStateKey);\r\n                if (qParams.code != null && codeVerifier != null && state != null && this.checkState(state, qParams.state)) {\r\n                    await this.logIn(qParams.code, codeVerifier, this.getOrgIdentiferFromState(qParams.state));\r\n                }\r\n            } else if (qParams.clientId != null && qParams.redirectUri != null && qParams.state != null &&\r\n                qParams.codeChallenge != null) {\r\n                this.redirectUri = qParams.redirectUri;\r\n                this.state = qParams.state;\r\n                this.codeChallenge = qParams.codeChallenge;\r\n                this.clientId = qParams.clientId;\r\n            }\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    async submit(returnUri?: string, includeUserIdentifier?: boolean) {\r\n        this.initiateSsoFormPromise = this.preValidate();\r\n        if (await this.initiateSsoFormPromise) {\r\n            const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\r\n            this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\r\n        }\r\n    }\r\n\r\n    async preValidate(): Promise<boolean> {\r\n        if (this.identifier == null || this.identifier === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('ssoValidationFailed'),\r\n                this.i18nService.t('ssoIdentifierRequired'));\r\n            return false;\r\n        }\r\n        return await this.apiService.preValidateSso(this.identifier);\r\n    }\r\n\r\n    protected async buildAuthorizeUrl(returnUri?: string, includeUserIdentifier?: boolean): Promise<string> {\r\n        let codeChallenge = this.codeChallenge;\r\n        let state = this.state;\r\n\r\n        const passwordOptions: any = {\r\n            type: 'password',\r\n            length: 64,\r\n            uppercase: true,\r\n            lowercase: true,\r\n            numbers: true,\r\n            special: false,\r\n        };\r\n\r\n        if (codeChallenge == null) {\r\n            const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\r\n            const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, 'sha256');\r\n            codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\r\n            await this.storageService.save(ConstantsService.ssoCodeVerifierKey, codeVerifier);\r\n        }\r\n\r\n        if (state == null) {\r\n            state = await this.passwordGenerationService.generatePassword(passwordOptions);\r\n            if (returnUri) {\r\n                state += `_returnUri='${returnUri}'`;\r\n            }\r\n        }\r\n\r\n        // Add Organization Identifier to state\r\n        state += `_identifier=${this.identifier}`;\r\n\r\n        // Save state (regardless of new or existing)\r\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\r\n\r\n        let authorizeUrl = this.apiService.identityBaseUrl + '/connect/authorize?' +\r\n            'client_id=' + this.clientId + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&' +\r\n            'response_type=code&scope=api offline_access&' +\r\n            'state=' + state + '&code_challenge=' + codeChallenge + '&' +\r\n            'code_challenge_method=S256&response_mode=query&' +\r\n            'domain_hint=' + encodeURIComponent(this.identifier);\r\n\r\n        if (includeUserIdentifier) {\r\n            const userIdentifier = await this.apiService.getSsoUserIdentifier();\r\n            authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\r\n        }\r\n\r\n        return authorizeUrl;\r\n    }\r\n\r\n    private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\r\n        this.loggingIn = true;\r\n        try {\r\n            this.formPromise = this.authService.logInSso(code, codeVerifier, this.redirectUri);\r\n            const response = await this.formPromise;\r\n            if (response.twoFactor) {\r\n                this.platformUtilsService.eventTrack('SSO Logged In To Two-step');\r\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\r\n                    this.onSuccessfulLoginTwoFactorNavigate();\r\n                } else {\r\n                    this.router.navigate([this.twoFactorRoute], {\r\n                        queryParams: {\r\n                            identifier: orgIdFromState,\r\n                        },\r\n                    });\r\n                }\r\n            } else if (response.resetMasterPassword) {\r\n                this.platformUtilsService.eventTrack('SSO - routing to complete registration');\r\n                if (this.onSuccessfulLoginChangePasswordNavigate != null) {\r\n                    this.onSuccessfulLoginChangePasswordNavigate();\r\n                } else {\r\n                    this.router.navigate([this.changePasswordRoute], {\r\n                        queryParams: {\r\n                            identifier: orgIdFromState,\r\n                        },\r\n                    });\r\n                }\r\n            } else {\r\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\r\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\r\n                if (this.onSuccessfulLogin != null) {\r\n                    this.onSuccessfulLogin();\r\n                }\r\n                this.platformUtilsService.eventTrack('SSO Logged In');\r\n                if (this.onSuccessfulLoginNavigate != null) {\r\n                    this.onSuccessfulLoginNavigate();\r\n                } else {\r\n                    this.router.navigate([this.successRoute]);\r\n                }\r\n            }\r\n        } catch { }\r\n        this.loggingIn = false;\r\n    }\r\n\r\n    private getOrgIdentiferFromState(state: string): string {\r\n        if (state === null || state === undefined) {\r\n            return null;\r\n        }\r\n\r\n        const stateSplit = state.split('_identifier=');\r\n        return stateSplit.length > 1 ? stateSplit[1] : null;\r\n    }\r\n\r\n    private checkState(state: string, checkState: string): boolean {\r\n        if (state === null || state === undefined) {\r\n            return false;\r\n        }\r\n        if (checkState === null || checkState === undefined) {\r\n            return false;\r\n        }\r\n\r\n        const stateSplit = state.split('_identifier=');\r\n        const checkStateSplit = checkState.split('_identifier=');\r\n        return stateSplit[0] === checkStateSplit[0];\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\n\r\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib/angular/components/two-factor.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor',\r\n    templateUrl: 'two-factor.component.html',\r\n})\r\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\r\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef, static: true }) twoFactorOptionsModal: ViewContainerRef;\r\n\r\n    constructor(authService: AuthService, router: Router,\r\n        i18nService: I18nService, apiService: ApiService,\r\n        platformUtilsService: PlatformUtilsService, stateService: StateService,\r\n        environmentService: EnvironmentService, private componentFactoryResolver: ComponentFactoryResolver,\r\n        storageService: StorageService, route: ActivatedRoute) {\r\n        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService,\r\n            stateService, storageService, route);\r\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\r\n    }\r\n\r\n    anotherMethod() {\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        const modal = this.twoFactorOptionsModal.createComponent(factory).instance;\r\n        const childComponent = modal.show<TwoFactorOptionsComponent>(TwoFactorOptionsComponent,\r\n            this.twoFactorOptionsModal);\r\n\r\n        childComponent.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\r\n            modal.close();\r\n            this.selectedProviderType = provider;\r\n            await this.init();\r\n        });\r\n        childComponent.onRecoverSelected.subscribe(() => {\r\n            modal.close();\r\n        });\r\n    }\r\n\r\n    async goAfterLogIn() {\r\n        const invite = await this.stateService.get<any>('orgInvitation');\r\n        if (invite != null) {\r\n            this.router.navigate(['accept-organization'], { queryParams: invite });\r\n        } else {\r\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\r\n            if (loginRedirect != null) {\r\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\r\n                await this.stateService.remove('loginRedirect');\r\n            } else {\r\n                this.router.navigate([this.successRoute], {\r\n                    queryParams: {\r\n                        identifier: this.identifier,\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate autocomplete=\"off\">\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\"\r\n            [ngClass]=\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\">\r\n            <p class=\"lead text-center mb-4\">{{title}}</p>\r\n            <div class=\"card d-block\">\r\n                <div class=\"card-body\">\r\n                    <ng-container\r\n                        *ngIf=\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\">\r\n                        <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\r\n                            {{'enterVerificationCodeApp' | i18n}}</p>\r\n                        <p *ngIf=\"selectedProviderType === providerType.Email\">\r\n                            {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}}\r\n                        </p>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label>\r\n                            <input id=\"code\" type=\"text\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required\r\n                                appAutofocus inputmode=\"tel\" appInputVerbatim>\r\n                            <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\r\n                                <a href=\"#\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\"\r\n                                    *ngIf=\"selectedProviderType === providerType.Email\">\r\n                                    {{'sendVerificationCodeEmailAgain' | i18n}}\r\n                                </a>\r\n                            </small>\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\r\n                        <p class=\"text-center\">{{'insertYubiKey' | i18n}}</p>\r\n                        <img src=\"images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label>\r\n                            <input id=\"code\" type=\"password\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\"\r\n                                required appAutofocus appInputVerbatim autocomplete=\"new-password\">\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"selectedProviderType === providerType.U2f\">\r\n                        <p class=\"text-center\" *ngIf=\"!u2fReady\">\r\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n                        </p>\r\n                        <ng-container *ngIf=\"u2fReady\">\r\n                            <p class=\"text-center\">{{'insertU2f' | i18n}}</p>\r\n                            <img src=\"images/u2fkey.jpg\" alt=\"\" class=\"rounded img-fluid mb-3\">\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"selectedProviderType === providerType.Duo ||\r\n                        selectedProviderType === providerType.OrganizationDuo\">\r\n                        <div id=\"duo-frame\" class=\"mb-3\">\r\n                            <iframe id=\"duo_iframe\"></iframe>\r\n                        </div>\r\n                    </ng-container>\r\n                    <i class=\"fa fa-spinner text-muted fa-spin pull-right\" title=\"{{'loading' | i18n}}\"\r\n                        *ngIf=\"form.loading && selectedProviderType === providerType.U2f\" aria-hidden=\"true\"></i>\r\n                    <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\r\n                        <input id=\"remember\" type=\"checkbox\" name=\"Remember\" class=\"form-check-input\"\r\n                            [(ngModel)]=\"remember\">\r\n                        <label for=\"remember\" class=\"form-check-label\">{{'rememberMe' | i18n}}</label>\r\n                    </div>\r\n                    <ng-container *ngIf=\"selectedProviderType == null\">\r\n                        <p>{{'noTwoStepProviders' | i18n}}</p>\r\n                        <p>{{'noTwoStepProviders2' | i18n}}</p>\r\n                    </ng-container>\r\n                    <hr>\r\n                    <div class=\"d-flex mb-3\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"\r\n                            *ngIf=\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \r\n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.U2f\">\r\n                            <span>\r\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}}\r\n                            </span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                            {{'cancel' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"text-center\">\r\n                        <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{'useAnotherTwoStepMethod' | i18n}}</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<ng-template #twoFactorOptions></ng-template>\r\n<iframe id=\"u2f_iframe\" hidden></iframe>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport {\r\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\r\n} from 'jslib/angular/components/two-factor-options.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-options',\r\n    templateUrl: 'two-factor-options.component.html',\r\n})\r\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\r\n    constructor(authService: AuthService, router: Router,\r\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\r\n        super(authService, router, i18nService, platformUtilsService, window);\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{'twoStepOptions' | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"list-group list-group-flush\">\r\n                <a href=\"#\" appStopClick *ngFor=\"let p of providers\" (click)=\"choose(p)\"\r\n                    class=\"list-group-item list-group-item-action\">\r\n                    <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\" class=\"pull-right\">\r\n                    <h3>{{p.name}}</h3>\r\n                    {{p.description}}\r\n                </a>\r\n                <a href=\"#\" appStopClick class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\r\n                    <h3>{{'recoveryCodeTitle' | i18n}}</h3>\r\n                    {{'recoveryCodeDesc' | i18n}}\r\n                </a>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class TwoFactorEmailRequest extends PasswordVerificationRequest {\r\n    email: string;\r\n\r\n    constructor(email: string, masterPasswordHash: string) {\r\n        super();\r\n        this.masterPasswordHash = masterPasswordHash;\r\n        this.email = email;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { VerifyEmailRequest } from 'jslib/models/request/verifyEmailRequest';\r\n\r\n@Component({\r\n    selector: 'app-verify-email-token',\r\n    templateUrl: 'verify-email-token.component.html',\r\n})\r\nexport class VerifyEmailTokenComponent implements OnInit {\r\n    constructor(private router: Router, private toasterService: ToasterService,\r\n        private i18nService: I18nService, private route: ActivatedRoute,\r\n        private apiService: ApiService, private userService: UserService) { }\r\n\r\n    ngOnInit() {\r\n        let fired = false;\r\n        this.route.queryParams.subscribe(async (qParams) => {\r\n            if (fired) {\r\n                return;\r\n            }\r\n            fired = true;\r\n            if (qParams.userId != null && qParams.token != null) {\r\n                try {\r\n                    await this.apiService.postAccountVerifyEmailToken(\r\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\r\n                    const authed = await this.userService.isAuthenticated();\r\n                    if (authed) {\r\n                        await this.apiService.refreshIdentityToken();\r\n                    }\r\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\r\n                    this.router.navigate(['/']);\r\n                    return;\r\n                } catch { }\r\n            }\r\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\r\n            this.router.navigate(['/']);\r\n        });\r\n    }\r\n}\r\n","<div class=\"mt-5 d-flex justify-content-center\">\r\n    <div>\r\n        <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\">\r\n        <p class=\"text-center\">\r\n            <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </p>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { VerifyDeleteRecoverRequest } from 'jslib/models/request/verifyDeleteRecoverRequest';\r\n\r\n@Component({\r\n    selector: 'app-verify-recover-delete',\r\n    templateUrl: 'verify-recover-delete.component.html',\r\n})\r\nexport class VerifyRecoverDeleteComponent implements OnInit {\r\n    email: string;\r\n    formPromise: Promise<any>;\r\n\r\n    private userId: string;\r\n    private token: string;\r\n\r\n    constructor(private router: Router, private apiService: ApiService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private i18nService: I18nService, private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        let fired = false;\r\n        this.route.queryParams.subscribe(async (qParams) => {\r\n            if (fired) {\r\n                return;\r\n            }\r\n            fired = true;\r\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\r\n                this.userId = qParams.userId;\r\n                this.token = qParams.token;\r\n                this.email = qParams.email;\r\n            } else {\r\n                this.router.navigate(['/']);\r\n            }\r\n        });\r\n    }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\r\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Recovered Delete' });\r\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\r\n                this.i18nService.t('accountDeletedDesc'));\r\n            this.router.navigate(['/']);\r\n        } catch { }\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout>\r\n                    <p class=\"text-center\">\r\n                        <strong>{{email}}</strong>\r\n                    </p>\r\n                    <p>{{'deleteRecoverConfirmDesc' | i18n}}</p>\r\n                    <hr>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-danger btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span>{{'deleteAccount' | i18n}}</span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\r\n                            {{'cancel' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SearchService } from 'jslib/abstractions/search.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CollectionData } from 'jslib/models/data/collectionData';\r\nimport { Collection } from 'jslib/models/domain/collection';\r\nimport {\r\n    CollectionDetailsResponse,\r\n    CollectionResponse,\r\n} from 'jslib/models/response/collectionResponse';\r\nimport { ListResponse } from 'jslib/models/response/listResponse';\r\nimport { CollectionView } from 'jslib/models/view/collectionView';\r\n\r\nimport { ModalComponent } from '../../modal.component';\r\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\r\nimport { EntityUsersComponent } from './entity-users.component';\r\n\r\n@Component({\r\n    selector: 'app-org-manage-collections',\r\n    templateUrl: 'collections.component.html',\r\n})\r\nexport class CollectionsComponent implements OnInit {\r\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\r\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\r\n\r\n    loading = true;\r\n    organizationId: string;\r\n    collections: CollectionView[];\r\n    pagedCollections: CollectionView[];\r\n    searchText: string;\r\n\r\n    protected didScroll = false;\r\n    protected pageSize = 100;\r\n\r\n    private pagedCollectionsCount = 0;\r\n    private modal: ModalComponent = null;\r\n\r\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\r\n        private collectionService: CollectionService, private componentFactoryResolver: ComponentFactoryResolver,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private i18nService: I18nService, private platformUtilsService: PlatformUtilsService,\r\n        private userService: UserService, private searchService: SearchService) { }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            await this.load();\r\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n                this.searchText = qParams.search;\r\n                if (queryParamsSub != null) {\r\n                    queryParamsSub.unsubscribe();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async load() {\r\n        const organization = await this.userService.getOrganization(this.organizationId);\r\n        let response: ListResponse<CollectionResponse>;\r\n        if (organization.isAdmin) {\r\n            response = await this.apiService.getCollections(this.organizationId);\r\n        } else {\r\n            response = await this.apiService.getUserCollections();\r\n        }\r\n        const collections = response.data.filter((c) => c.organizationId === this.organizationId).map((r) =>\r\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\r\n        this.collections = await this.collectionService.decryptMany(collections);\r\n        this.resetPaging();\r\n        this.loading = false;\r\n    }\r\n\r\n    loadMore() {\r\n        if (!this.collections || this.collections.length <= this.pageSize) {\r\n            return;\r\n        }\r\n        const pagedLength = this.pagedCollections.length;\r\n        let pagedSize = this.pageSize;\r\n        if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\r\n            pagedSize = this.pagedCollectionsCount;\r\n        }\r\n        if (this.collections.length > pagedLength) {\r\n            this.pagedCollections =\r\n                this.pagedCollections.concat(this.collections.slice(pagedLength, pagedLength + pagedSize));\r\n        }\r\n        this.pagedCollectionsCount = this.pagedCollections.length;\r\n        this.didScroll = this.pagedCollections.length > this.pageSize;\r\n    }\r\n\r\n    edit(collection: CollectionView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<CollectionAddEditComponent>(\r\n            CollectionAddEditComponent, this.addEditModalRef);\r\n\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.collectionId = collection != null ? collection.id : null;\r\n        childComponent.onSavedCollection.subscribe(() => {\r\n            this.modal.close();\r\n            this.load();\r\n        });\r\n        childComponent.onDeletedCollection.subscribe(() => {\r\n            this.modal.close();\r\n            this.removeCollection(collection);\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    add() {\r\n        this.edit(null);\r\n    }\r\n\r\n    async delete(collection: CollectionView) {\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\r\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\r\n            this.removeCollection(collection);\r\n        } catch { }\r\n    }\r\n\r\n    users(collection: CollectionView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.usersModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<EntityUsersComponent>(\r\n            EntityUsersComponent, this.usersModalRef);\r\n\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.entity = 'collection';\r\n        childComponent.entityId = collection.id;\r\n        childComponent.entityName = collection.name;\r\n\r\n        childComponent.onEditedUsers.subscribe(() => {\r\n            this.load();\r\n            this.modal.close();\r\n        });\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async resetPaging() {\r\n        this.pagedCollections = [];\r\n        this.loadMore();\r\n    }\r\n\r\n    isSearching() {\r\n        return this.searchService.isSearchable(this.searchText);\r\n    }\r\n\r\n    isPaging() {\r\n        const searching = this.isSearching();\r\n        if (searching && this.didScroll) {\r\n            this.resetPaging();\r\n        }\r\n        return !searching && this.collections && this.collections.length > this.pageSize;\r\n    }\r\n\r\n    private removeCollection(collection: CollectionView) {\r\n        const index = this.collections.indexOf(collection);\r\n        if (index > -1) {\r\n            this.collections.splice(index, 1);\r\n            this.resetPaging();\r\n        }\r\n    }\r\n}\r\n","<div class=\"page-header d-flex\">\r\n    <h1>{{'collections' | i18n}}</h1>\r\n    <div class=\"ml-auto d-flex\">\r\n        <div>\r\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\r\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\r\n                [(ngModel)]=\"searchText\">\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\r\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\r\n            {{'newCollection' | i18n}}\r\n        </button>\r\n    </div>\r\n</div>\r\n<ng-container *ngIf=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<ng-container\r\n    *ngIf=\"!loading && (isPaging() ? pagedCollections : collections | search:searchText:'name':'id') as searchedCollections\">\r\n    <p *ngIf=\"!searchedCollections.length\">{{'noCollectionsInList' | i18n}}</p>\r\n    <table class=\"table table-hover table-list\" *ngIf=\"searchedCollections.length\" infiniteScroll\r\n        [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\r\n        <tbody>\r\n            <tr *ngFor=\"let c of searchedCollections\">\r\n                <td>\r\n                    <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.name}}</a>\r\n                </td>\r\n                <td class=\"table-list-options\">\r\n                    <div class=\"dropdown\" appListDropdown>\r\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                            aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\r\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div class=\"dropdown-menu dropdown-menu-right\">\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(c)\">\r\n                                <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i>\r\n                                {{'users' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\r\n                                <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\r\n                                {{'delete' | i18n}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</ng-container>\r\n<ng-template #addEdit></ng-template>\r\n<ng-template #usersTemplate></ng-template>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherString } from 'jslib/models/domain/cipherString';\r\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\r\nimport { CollectionRequest } from 'jslib/models/request/collectionRequest';\r\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\r\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\n@Component({\r\n    selector: 'app-collection-add-edit',\r\n    templateUrl: 'collection-add-edit.component.html',\r\n})\r\nexport class CollectionAddEditComponent implements OnInit {\r\n    @Input() collectionId: string;\r\n    @Input() organizationId: string;\r\n    @Output() onSavedCollection = new EventEmitter();\r\n    @Output() onDeletedCollection = new EventEmitter();\r\n\r\n    loading = true;\r\n    editMode: boolean = false;\r\n    accessGroups: boolean = false;\r\n    title: string;\r\n    name: string;\r\n    externalId: string;\r\n    groups: GroupResponse[] = [];\r\n    formPromise: Promise<any>;\r\n    deletePromise: Promise<any>;\r\n\r\n    private orgKey: SymmetricCryptoKey;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService,\r\n        private userService: UserService) { }\r\n\r\n    async ngOnInit() {\r\n        const organization = await this.userService.getOrganization(this.organizationId);\r\n        this.accessGroups = organization.useGroups;\r\n        this.editMode = this.loading = this.collectionId != null;\r\n        if (this.accessGroups) {\r\n            const groupsResponse = await this.apiService.getGroups(this.organizationId);\r\n            this.groups = groupsResponse.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\r\n        }\r\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\r\n\r\n        if (this.editMode) {\r\n            this.editMode = true;\r\n            this.title = this.i18nService.t('editCollection');\r\n            try {\r\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\r\n                this.name = await this.cryptoService.decryptToUtf8(new CipherString(collection.name), this.orgKey);\r\n                this.externalId = collection.externalId;\r\n                if (collection.groups != null && this.groups.length > 0) {\r\n                    collection.groups.forEach((s) => {\r\n                        const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\r\n                        if (group != null && group.length > 0) {\r\n                            (group[0] as any).checked = true;\r\n                            (group[0] as any).readOnly = s.readOnly;\r\n                            (group[0] as any).hidePasswords = s.hidePasswords;\r\n                        }\r\n                    });\r\n                }\r\n            } catch { }\r\n        } else {\r\n            this.title = this.i18nService.t('addCollection');\r\n        }\r\n\r\n        this.groups.forEach((g) => {\r\n            if (g.accessAll) {\r\n                (g as any).checked = true;\r\n            }\r\n        });\r\n\r\n        this.loading = false;\r\n    }\r\n\r\n    check(g: GroupResponse, select?: boolean) {\r\n        if (g.accessAll) {\r\n            return;\r\n        }\r\n        (g as any).checked = select == null ? !(g as any).checked : select;\r\n        if (!(g as any).checked) {\r\n            (g as any).readOnly = false;\r\n            (g as any).hidePasswords = false;\r\n        }\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        this.groups.forEach((g) => this.check(g, select));\r\n    }\r\n\r\n    async submit() {\r\n        if (this.orgKey == null) {\r\n            throw new Error('No encryption key for this organization.');\r\n        }\r\n\r\n        const request = new CollectionRequest();\r\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\r\n        request.externalId = this.externalId;\r\n        request.groups = this.groups.filter((g) => (g as any).checked && !g.accessAll)\r\n            .map((g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords));\r\n\r\n        try {\r\n            if (this.editMode) {\r\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\r\n            } else {\r\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\r\n            }\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Collection' : 'Created Collection' });\r\n            this.toasterService.popAsync('success', null,\r\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\r\n            this.onSavedCollection.emit();\r\n        } catch { }\r\n    }\r\n\r\n    async delete() {\r\n        if (!this.editMode) {\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\r\n            await this.deletePromise;\r\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\r\n            this.onDeletedCollection.emit();\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{title}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"loading\">\r\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!loading\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">{{'name' | i18n}}</label>\r\n                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required\r\n                        appAutofocus>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"externalId\">{{'externalId' | i18n}}</label>\r\n                    <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\">\r\n                    <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small>\r\n                </div>\r\n                <ng-container *ngIf=\"accessGroups\">\r\n                    <h3 class=\"mt-4 d-flex mb-0\">\r\n                        {{'groupAccess' | i18n}}\r\n                        <div class=\"ml-auto\" *ngIf=\"groups && groups.length\">\r\n                            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\r\n                                {{'selectAll' | i18n}}\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\r\n                                {{'unselectAll' | i18n}}\r\n                            </button>\r\n                        </div>\r\n                    </h3>\r\n                    <div *ngIf=\"!groups || !groups.length\">\r\n                        {{'noGroupsInList' | i18n}}\r\n                    </div>\r\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>&nbsp;</th>\r\n                                <th>{{'name' | i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let g of groups; let i = index\">\r\n                                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\"\r\n                                        [disabled]=\"g.accessAll\" appStopProp>\r\n                                </td>\r\n                                <td (click)=\"check(g)\">\r\n                                    {{g.name}}\r\n                                    <ng-container *ngIf=\"g.accessAll\">\r\n                                        <i class=\"fa fa-th text-muted fa-fw\" title=\"{{'groupAccessAllItems' | i18n}}\"\r\n                                            aria-hidden=\"true\"></i>\r\n                                        <span class=\"sr-only\">{{'groupAccessAllItems' | i18n}}</span>\r\n                                    </ng-container>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.hidePasswords\"\r\n                                        name=\"Groups[{{i}}].HidePasswords\" [disabled]=\"!g.checked || g.accessAll\">\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.readOnly\" name=\"Groups[{{i}}].ReadOnly\"\r\n                                        [disabled]=\"!g.checked || g.accessAll\">\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n                <div class=\"ml-auto\">\r\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\r\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\r\n                        [appApiAction]=\"deletePromise\">\r\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\r\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\r\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Collection } from '../domain/collection';\r\n\r\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\r\n\r\nexport class CollectionRequest {\r\n    name: string;\r\n    externalId: string;\r\n    groups: SelectionReadOnlyRequest[] = [];\r\n\r\n    constructor(collection?: Collection) {\r\n        if (collection == null) {\r\n            return;\r\n        }\r\n        this.name = collection.name ? collection.name.encryptedString : null;\r\n        this.externalId = collection.externalId;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { EventService } from '../../services/event.service';\r\n\r\nimport { EventResponse } from 'jslib/models/response/eventResponse';\r\nimport { ListResponse } from 'jslib/models/response/listResponse';\r\n\r\n@Component({\r\n    selector: 'app-org-events',\r\n    templateUrl: 'events.component.html',\r\n})\r\nexport class EventsComponent implements OnInit {\r\n    loading = true;\r\n    loaded = false;\r\n    organizationId: string;\r\n    events: any[];\r\n    start: string;\r\n    end: string;\r\n    continuationToken: string;\r\n    refreshPromise: Promise<any>;\r\n    morePromise: Promise<any>;\r\n\r\n    private orgUsersUserIdMap = new Map<string, any>();\r\n    private orgUsersIdMap = new Map<string, any>();\r\n\r\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\r\n        private eventService: EventService, private i18nService: I18nService,\r\n        private toasterService: ToasterService, private userService: UserService,\r\n        private router: Router) { }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            const organization = await this.userService.getOrganization(this.organizationId);\r\n            if (organization == null || !organization.useEvents) {\r\n                this.router.navigate(['/organizations', this.organizationId]);\r\n                return;\r\n            }\r\n            const defaultDates = this.eventService.getDefaultDateFilters();\r\n            this.start = defaultDates[0];\r\n            this.end = defaultDates[1];\r\n            await this.load();\r\n        });\r\n    }\r\n\r\n    async load() {\r\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\r\n        response.data.forEach((u) => {\r\n            const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\r\n            this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\r\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\r\n        });\r\n        await this.loadEvents(true);\r\n        this.loaded = true;\r\n    }\r\n\r\n    async loadEvents(clearExisting: boolean) {\r\n        if (this.refreshPromise != null || this.morePromise != null) {\r\n            return;\r\n        }\r\n\r\n        let dates: string[] = null;\r\n        try {\r\n            dates = this.eventService.formatDateFilters(this.start, this.end);\r\n        } catch (e) {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('invalidDateRange'));\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        let response: ListResponse<EventResponse>;\r\n        try {\r\n            const promise = this.apiService.getEventsOrganization(this.organizationId, dates[0], dates[1],\r\n                clearExisting ? null : this.continuationToken);\r\n            if (clearExisting) {\r\n                this.refreshPromise = promise;\r\n            } else {\r\n                this.morePromise = promise;\r\n            }\r\n            response = await promise;\r\n        } catch { }\r\n\r\n        this.continuationToken = response.continuationToken;\r\n        const events = response.data.map((r) => {\r\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\r\n            const eventInfo = this.eventService.getEventInfo(r);\r\n            const user = userId != null && this.orgUsersUserIdMap.has(userId) ?\r\n                this.orgUsersUserIdMap.get(userId) : null;\r\n            return {\r\n                message: eventInfo.message,\r\n                appIcon: eventInfo.appIcon,\r\n                appName: eventInfo.appName,\r\n                userId: userId,\r\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\r\n                userEmail: user != null ? user.email : '',\r\n                date: r.date,\r\n                ip: r.ipAddress,\r\n                type: r.type,\r\n            };\r\n        });\r\n\r\n        if (!clearExisting && this.events != null && this.events.length > 0) {\r\n            this.events = this.events.concat(events);\r\n        } else {\r\n            this.events = events;\r\n        }\r\n\r\n        this.loading = false;\r\n        this.morePromise = null;\r\n        this.refreshPromise = null;\r\n    }\r\n}\r\n","<div class=\"page-header d-flex\">\r\n    <h1>{{'eventLogs' | i18n}}</h1>\r\n    <div class=\"ml-auto d-flex\">\r\n        <div class=\"form-inline\">\r\n            <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label>\r\n            <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\"\r\n                placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\">\r\n            <span class=\"mx-2\">-</span>\r\n            <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label>\r\n            <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\"\r\n                placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\">\r\n        </div>\r\n        <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\"\r\n            (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshBtn.loading\">\r\n            <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\"></i>\r\n            {{'refresh' | i18n}}\r\n        </button>\r\n    </div>\r\n</div>\r\n<ng-container *ngIf=\"!loaded\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<ng-container *ngIf=\"loaded\">\r\n    <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p>\r\n    <table class=\"table table-hover\" *ngIf=\"events && events.length\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th>\r\n                <th class=\"border-top-0\" width=\"40\">\r\n                    <span class=\"sr-only\">{{'device' | i18n}}</span>\r\n                </th>\r\n                <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th>\r\n                <th class=\"border-top-0\">{{'event' | i18n}}</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let e of events\">\r\n                <td>{{e.date | date:'medium'}}</td>\r\n                <td>\r\n                    <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i>\r\n                    <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span>\r\n                </td>\r\n                <td>\r\n                    <span title=\"{{e.userEmail}}\">{{e.userName}}</span>\r\n                </td>\r\n                <td [innerHTML]=\"e.message\"></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\"\r\n        (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'loadMore' | i18n}}</span>\r\n    </button>\r\n</ng-container>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SearchService } from 'jslib/abstractions/search.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\nimport { ModalComponent } from '../../modal.component';\r\nimport { EntityUsersComponent } from './entity-users.component';\r\nimport { GroupAddEditComponent } from './group-add-edit.component';\r\n\r\n@Component({\r\n    selector: 'app-org-groups',\r\n    templateUrl: 'groups.component.html',\r\n})\r\nexport class GroupsComponent implements OnInit {\r\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\r\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\r\n\r\n    loading = true;\r\n    organizationId: string;\r\n    groups: GroupResponse[];\r\n    pagedGroups: GroupResponse[];\r\n    searchText: string;\r\n\r\n    protected didScroll = false;\r\n    protected pageSize = 100;\r\n\r\n    private pagedGroupsCount = 0;\r\n    private modal: ModalComponent = null;\r\n\r\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\r\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\r\n        private router: Router, private searchService: SearchService) { }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            const organization = await this.userService.getOrganization(this.organizationId);\r\n            if (organization == null || !organization.useGroups) {\r\n                this.router.navigate(['/organizations', this.organizationId]);\r\n                return;\r\n            }\r\n            await this.load();\r\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n                this.searchText = qParams.search;\r\n                if (queryParamsSub != null) {\r\n                    queryParamsSub.unsubscribe();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async load() {\r\n        const response = await this.apiService.getGroups(this.organizationId);\r\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\r\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\r\n        this.groups = groups;\r\n        this.resetPaging();\r\n        this.loading = false;\r\n    }\r\n\r\n    loadMore() {\r\n        if (!this.groups || this.groups.length <= this.pageSize) {\r\n            return;\r\n        }\r\n        const pagedLength = this.pagedGroups.length;\r\n        let pagedSize = this.pageSize;\r\n        if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\r\n            pagedSize = this.pagedGroupsCount;\r\n        }\r\n        if (this.groups.length > pagedLength) {\r\n            this.pagedGroups = this.pagedGroups.concat(this.groups.slice(pagedLength, pagedLength + pagedSize));\r\n        }\r\n        this.pagedGroupsCount = this.pagedGroups.length;\r\n        this.didScroll = this.pagedGroups.length > this.pageSize;\r\n    }\r\n\r\n    edit(group: GroupResponse) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<GroupAddEditComponent>(\r\n            GroupAddEditComponent, this.addEditModalRef);\r\n\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.groupId = group != null ? group.id : null;\r\n        childComponent.onSavedGroup.subscribe(() => {\r\n            this.modal.close();\r\n            this.load();\r\n        });\r\n        childComponent.onDeletedGroup.subscribe(() => {\r\n            this.modal.close();\r\n            this.removeGroup(group);\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    add() {\r\n        this.edit(null);\r\n    }\r\n\r\n    async delete(group: GroupResponse) {\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            await this.apiService.deleteGroup(this.organizationId, group.id);\r\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\r\n            this.removeGroup(group);\r\n        } catch { }\r\n    }\r\n\r\n    users(group: GroupResponse) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.usersModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<EntityUsersComponent>(\r\n            EntityUsersComponent, this.usersModalRef);\r\n\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.entity = 'group';\r\n        childComponent.entityId = group.id;\r\n        childComponent.entityName = group.name;\r\n\r\n        childComponent.onEditedUsers.subscribe(() => {\r\n            this.modal.close();\r\n        });\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async resetPaging() {\r\n        this.pagedGroups = [];\r\n        this.loadMore();\r\n    }\r\n\r\n    isSearching() {\r\n        return this.searchService.isSearchable(this.searchText);\r\n    }\r\n\r\n    isPaging() {\r\n        const searching = this.isSearching();\r\n        if (searching && this.didScroll) {\r\n            this.resetPaging();\r\n        }\r\n        return !searching && this.groups && this.groups.length > this.pageSize;\r\n    }\r\n\r\n    private removeGroup(group: GroupResponse) {\r\n        const index = this.groups.indexOf(group);\r\n        if (index > -1) {\r\n            this.groups.splice(index, 1);\r\n            this.resetPaging();\r\n        }\r\n    }\r\n}\r\n","<div class=\"page-header d-flex\">\r\n    <h1>{{'groups' | i18n}}</h1>\r\n    <div class=\"ml-auto d-flex\">\r\n        <div>\r\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\r\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\r\n                [(ngModel)]=\"searchText\">\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\r\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\r\n            {{'newGroup' | i18n}}\r\n        </button>\r\n    </div>\r\n</div>\r\n<ng-container *ngIf=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<ng-container *ngIf=\"!loading && (isPaging() ? pagedGroups : groups | search:searchText:'name':'id') as searchedGroups\">\r\n    <p *ngIf=\"!searchedGroups.length\">{{'noGroupsInList' | i18n}}</p>\r\n    <table class=\"table table-hover table-list\" *ngIf=\"searchedGroups.length\" infiniteScroll\r\n        [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\r\n        <tbody>\r\n            <tr *ngFor=\"let g of searchedGroups\">\r\n                <td>\r\n                    <a href=\"#\" appStopClick (click)=\"edit(g)\">{{g.name}}</a>\r\n                </td>\r\n                <td class=\"table-list-options\">\r\n                    <div class=\"dropdown\" appListDropdown>\r\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                            aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\r\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div class=\"dropdown-menu dropdown-menu-right\">\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\r\n                                <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i>\r\n                                {{'users' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\r\n                                <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\r\n                                {{'delete' | i18n}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</ng-container>\r\n<ng-template #addEdit></ng-template>\r\n<ng-template #usersTemplate></ng-template>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { CollectionData } from 'jslib/models/data/collectionData';\r\nimport { Collection } from 'jslib/models/domain/collection';\r\nimport { GroupRequest } from 'jslib/models/request/groupRequest';\r\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\r\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\r\nimport { CollectionView } from 'jslib/models/view/collectionView';\r\n\r\n@Component({\r\n    selector: 'app-group-add-edit',\r\n    templateUrl: 'group-add-edit.component.html',\r\n})\r\nexport class GroupAddEditComponent implements OnInit {\r\n    @Input() groupId: string;\r\n    @Input() organizationId: string;\r\n    @Output() onSavedGroup = new EventEmitter();\r\n    @Output() onDeletedGroup = new EventEmitter();\r\n\r\n    loading = true;\r\n    editMode: boolean = false;\r\n    title: string;\r\n    name: string;\r\n    externalId: string;\r\n    access: 'all' | 'selected' = 'selected';\r\n    collections: CollectionView[] = [];\r\n    formPromise: Promise<any>;\r\n    deletePromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async ngOnInit() {\r\n        this.editMode = this.loading = this.groupId != null;\r\n        await this.loadCollections();\r\n\r\n        if (this.editMode) {\r\n            this.editMode = true;\r\n            this.title = this.i18nService.t('editGroup');\r\n            try {\r\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\r\n                this.access = group.accessAll ? 'all' : 'selected';\r\n                this.name = group.name;\r\n                this.externalId = group.externalId;\r\n                if (group.collections != null && this.collections != null) {\r\n                    group.collections.forEach((s) => {\r\n                        const collection = this.collections.filter((c) => c.id === s.id);\r\n                        if (collection != null && collection.length > 0) {\r\n                            (collection[0] as any).checked = true;\r\n                            collection[0].readOnly = s.readOnly;\r\n                            collection[0].hidePasswords = s.hidePasswords;\r\n                        }\r\n                    });\r\n                }\r\n            } catch { }\r\n        } else {\r\n            this.title = this.i18nService.t('addGroup');\r\n        }\r\n\r\n        this.loading = false;\r\n    }\r\n\r\n    async loadCollections() {\r\n        const response = await this.apiService.getCollections(this.organizationId);\r\n        const collections = response.data.map((r) =>\r\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\r\n        this.collections = await this.collectionService.decryptMany(collections);\r\n    }\r\n\r\n    check(c: CollectionView, select?: boolean) {\r\n        (c as any).checked = select == null ? !(c as any).checked : select;\r\n        if (!(c as any).checked) {\r\n            c.readOnly = false;\r\n        }\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        this.collections.forEach((c) => this.check(c, select));\r\n    }\r\n\r\n    async submit() {\r\n        const request = new GroupRequest();\r\n        request.name = this.name;\r\n        request.externalId = this.externalId;\r\n        request.accessAll = this.access === 'all';\r\n        if (!request.accessAll) {\r\n            request.collections = this.collections.filter((c) => (c as any).checked)\r\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\r\n        }\r\n\r\n        try {\r\n            if (this.editMode) {\r\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\r\n            } else {\r\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\r\n            }\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Group' : 'Created Group' });\r\n            this.toasterService.popAsync('success', null,\r\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\r\n            this.onSavedGroup.emit();\r\n        } catch { }\r\n    }\r\n\r\n    async delete() {\r\n        if (!this.editMode) {\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\r\n            await this.deletePromise;\r\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\r\n            this.onDeletedGroup.emit();\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{title}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"loading\">\r\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!loading\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">{{'name' | i18n}}</label>\r\n                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"externalId\">{{'externalId' | i18n}}</label>\r\n                    <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\">\r\n                    <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small>\r\n                </div>\r\n                <h3 class=\"mt-4 d-flex\">\r\n                    <div class=\"mb-2\">\r\n                        {{'accessControl' | i18n}}\r\n                        <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\r\n                            href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\">\r\n                            <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\r\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'selectAll' | i18n}}\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'unselectAll' | i18n}}\r\n                        </button>\r\n                    </div>\r\n                </h3>\r\n                <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\"\r\n                            [(ngModel)]=\"access\">\r\n                        <label class=\"form-check-label\" for=\"accessAll\">\r\n                            {{'groupAccessAllItems' | i18n}}\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\"\r\n                            [(ngModel)]=\"access\">\r\n                        <label class=\"form-check-label\" for=\"accessSelected\">\r\n                            {{'groupAccessSelectedCollections' | i18n}}\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"access === 'selected'\">\r\n                    <div *ngIf=\"!collections || !collections.length\">\r\n                        {{'noCollectionsInList' | i18n}}\r\n                    </div>\r\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>&nbsp;</th>\r\n                                <th>{{'name' | i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let c of collections; let i = index\">\r\n                                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\r\n                                        appStopProp>\r\n                                </td>\r\n                                <td (click)=\"check(c)\">\r\n                                    {{c.name}}\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\"\r\n                                        name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\">\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\"\r\n                                        [disabled]=\"!c.checked\">\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n                <div class=\"ml-auto\">\r\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\r\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\r\n                        [appApiAction]=\"deletePromise\">\r\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\r\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" aria-hidden=\"true\"\r\n                            title=\"{{'loading' | i18n}}\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-org-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    organization: Organization;\n    accessPolicies = false;\n    accessGroups = false;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.accessPolicies = this.organization.usePolicies;\n            this.accessEvents = this.organization.useEvents;\n            this.accessGroups = this.organization.useGroups;\n        });\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card\" *ngIf=\"organization\">\n                <div class=\"card-header\">{{'manage' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin\">\n                        {{'people' | i18n}}\n                    </a>\n                    <a routerLink=\"collections\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'collections' | i18n}}\n                    </a>\n                    <a routerLink=\"groups\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessGroups\">\n                        {{'groups' | i18n}}\n                    </a>\n                    <a routerLink=\"policies\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessPolicies\">\n                        {{'policies' | i18n}}\n                    </a>\n                    <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessEvents\">\n                        {{'eventLogs' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ConstantsService } from 'jslib/services/constants.service';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SearchService } from 'jslib/abstractions/search.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { OrganizationUserConfirmRequest } from 'jslib/models/request/organizationUserConfirmRequest';\r\n\r\nimport { OrganizationUserUserDetailsResponse } from 'jslib/models/response/organizationUserResponse';\r\n\r\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\r\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\nimport { ModalComponent } from '../../modal.component';\r\nimport { EntityEventsComponent } from './entity-events.component';\r\nimport { UserAddEditComponent } from './user-add-edit.component';\r\nimport { UserConfirmComponent } from './user-confirm.component';\r\nimport { UserGroupsComponent } from './user-groups.component';\r\n\r\n@Component({\r\n    selector: 'app-org-people',\r\n    templateUrl: 'people.component.html',\r\n})\r\nexport class PeopleComponent implements OnInit {\r\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\r\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\r\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\r\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\r\n\r\n    loading = true;\r\n    organizationId: string;\r\n    users: OrganizationUserUserDetailsResponse[];\r\n    pagedUsers: OrganizationUserUserDetailsResponse[];\r\n    searchText: string;\r\n    status: OrganizationUserStatusType = null;\r\n    statusMap = new Map<OrganizationUserStatusType, OrganizationUserUserDetailsResponse[]>();\r\n    organizationUserType = OrganizationUserType;\r\n    organizationUserStatusType = OrganizationUserStatusType;\r\n    actionPromise: Promise<any>;\r\n    accessEvents = false;\r\n    accessGroups = false;\r\n\r\n    protected didScroll = false;\r\n    protected pageSize = 100;\r\n\r\n    private pagedUsersCount = 0;\r\n    private modal: ModalComponent = null;\r\n    private allUsers: OrganizationUserUserDetailsResponse[];\r\n\r\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\r\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\r\n        private platformUtilsService: PlatformUtilsService, private analytics: Angulartics2,\r\n        private toasterService: ToasterService, private cryptoService: CryptoService,\r\n        private userService: UserService, private router: Router,\r\n        private storageService: StorageService, private searchService: SearchService) { }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            const organization = await this.userService.getOrganization(this.organizationId);\r\n            if (!organization.isAdmin) {\r\n                this.router.navigate(['../collections'], { relativeTo: this.route });\r\n                return;\r\n            }\r\n            this.accessEvents = organization.useEvents;\r\n            this.accessGroups = organization.useGroups;\r\n            await this.load();\r\n\r\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n                this.searchText = qParams.search;\r\n                if (qParams.viewEvents != null) {\r\n                    const user = this.users.filter((u) => u.id === qParams.viewEvents);\r\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\r\n                        this.events(user[0]);\r\n                    }\r\n                }\r\n                if (queryParamsSub != null) {\r\n                    queryParamsSub.unsubscribe();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async load() {\r\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\r\n        this.statusMap.clear();\r\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\r\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\r\n        this.allUsers.forEach((u) => {\r\n            if (!this.statusMap.has(u.status)) {\r\n                this.statusMap.set(u.status, [u]);\r\n            } else {\r\n                this.statusMap.get(u.status).push(u);\r\n            }\r\n        });\r\n        this.filter(this.status);\r\n        this.loading = false;\r\n    }\r\n\r\n    filter(status: OrganizationUserStatusType) {\r\n        this.status = status;\r\n        if (this.status != null) {\r\n            this.users = this.statusMap.get(this.status);\r\n        } else {\r\n            this.users = this.allUsers;\r\n        }\r\n        this.resetPaging();\r\n    }\r\n\r\n    loadMore() {\r\n        if (!this.users || this.users.length <= this.pageSize) {\r\n            return;\r\n        }\r\n        const pagedLength = this.pagedUsers.length;\r\n        let pagedSize = this.pageSize;\r\n        if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\r\n            pagedSize = this.pagedUsersCount;\r\n        }\r\n        if (this.users.length > pagedLength) {\r\n            this.pagedUsers = this.pagedUsers.concat(this.users.slice(pagedLength, pagedLength + pagedSize));\r\n        }\r\n        this.pagedUsersCount = this.pagedUsers.length;\r\n        this.didScroll = this.pagedUsers.length > this.pageSize;\r\n    }\r\n\r\n    get allCount() {\r\n        return this.allUsers != null ? this.allUsers.length : 0;\r\n    }\r\n\r\n    get invitedCount() {\r\n        return this.statusMap.has(OrganizationUserStatusType.Invited) ?\r\n            this.statusMap.get(OrganizationUserStatusType.Invited).length : 0;\r\n    }\r\n\r\n    get acceptedCount() {\r\n        return this.statusMap.has(OrganizationUserStatusType.Accepted) ?\r\n            this.statusMap.get(OrganizationUserStatusType.Accepted).length : 0;\r\n    }\r\n\r\n    get confirmedCount() {\r\n        return this.statusMap.has(OrganizationUserStatusType.Confirmed) ?\r\n            this.statusMap.get(OrganizationUserStatusType.Confirmed).length : 0;\r\n    }\r\n\r\n    get showConfirmUsers(): boolean {\r\n        return this.allUsers != null && this.statusMap != null && this.allUsers.length > 1 &&\r\n            this.confirmedCount > 0 && this.confirmedCount < 3 && this.acceptedCount > 0;\r\n    }\r\n\r\n    edit(user: OrganizationUserUserDetailsResponse) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<UserAddEditComponent>(\r\n            UserAddEditComponent, this.addEditModalRef);\r\n\r\n        childComponent.name = user != null ? user.name || user.email : null;\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.organizationUserId = user != null ? user.id : null;\r\n        childComponent.onSavedUser.subscribe(() => {\r\n            this.modal.close();\r\n            this.load();\r\n        });\r\n        childComponent.onDeletedUser.subscribe(() => {\r\n            this.modal.close();\r\n            this.removeUser(user);\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    invite() {\r\n        this.edit(null);\r\n    }\r\n\r\n    groups(user: OrganizationUserUserDetailsResponse) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.groupsModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<UserGroupsComponent>(\r\n            UserGroupsComponent, this.groupsModalRef);\r\n\r\n        childComponent.name = user != null ? user.name || user.email : null;\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.organizationUserId = user != null ? user.id : null;\r\n        childComponent.onSavedUser.subscribe(() => {\r\n            this.modal.close();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async remove(user: OrganizationUserUserDetailsResponse) {\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('removeUserConfirmation'), user.name || user.email,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            await this.apiService.deleteOrganizationUser(this.organizationId, user.id);\r\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', user.name || user.email));\r\n            this.removeUser(user);\r\n        } catch { }\r\n    }\r\n\r\n    async reinvite(user: OrganizationUserUserDetailsResponse) {\r\n        if (this.actionPromise != null) {\r\n            return;\r\n        }\r\n        this.actionPromise = this.apiService.postOrganizationUserReinvite(this.organizationId, user.id);\r\n        await this.actionPromise;\r\n        this.analytics.eventTrack.next({ action: 'Reinvited User' });\r\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', user.name || user.email));\r\n        this.actionPromise = null;\r\n    }\r\n\r\n    async confirm(user: OrganizationUserUserDetailsResponse) {\r\n        function updateUser(self: PeopleComponent) {\r\n            user.status = OrganizationUserStatusType.Confirmed;\r\n            const mapIndex = self.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\r\n            if (mapIndex > -1) {\r\n                self.statusMap.get(OrganizationUserStatusType.Accepted).splice(mapIndex, 1);\r\n                self.statusMap.get(OrganizationUserStatusType.Confirmed).push(user);\r\n            }\r\n        }\r\n\r\n        if (this.actionPromise != null) {\r\n            return;\r\n        }\r\n\r\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\r\n        if (autoConfirm == null || !autoConfirm) {\r\n            if (this.modal != null) {\r\n                this.modal.close();\r\n            }\r\n\r\n            const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n            this.modal = this.confirmModalRef.createComponent(factory).instance;\r\n            const childComponent = this.modal.show<UserConfirmComponent>(\r\n                UserConfirmComponent, this.confirmModalRef);\r\n\r\n            childComponent.name = user != null ? user.name || user.email : null;\r\n            childComponent.organizationId = this.organizationId;\r\n            childComponent.organizationUserId = user != null ? user.id : null;\r\n            childComponent.userId = user != null ? user.userId : null;\r\n            childComponent.onConfirmedUser.subscribe(() => {\r\n                this.modal.close();\r\n                updateUser(this);\r\n            });\r\n\r\n            this.modal.onClosed.subscribe(() => {\r\n                this.modal = null;\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.actionPromise = this.doConfirmation(user);\r\n        await this.actionPromise;\r\n        updateUser(this);\r\n        this.analytics.eventTrack.next({ action: 'Confirmed User' });\r\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', user.name || user.email));\r\n        this.actionPromise = null;\r\n    }\r\n\r\n    async events(user: OrganizationUserUserDetailsResponse) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<EntityEventsComponent>(\r\n            EntityEventsComponent, this.eventsModalRef);\r\n\r\n        childComponent.name = user.name || user.email;\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.entityId = user.id;\r\n        childComponent.showUser = false;\r\n        childComponent.entity = 'user';\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async resetPaging() {\r\n        this.pagedUsers = [];\r\n        this.loadMore();\r\n    }\r\n\r\n    isSearching() {\r\n        return this.searchService.isSearchable(this.searchText);\r\n    }\r\n\r\n    isPaging() {\r\n        const searching = this.isSearching();\r\n        if (searching && this.didScroll) {\r\n            this.resetPaging();\r\n        }\r\n        return !searching && this.users && this.users.length > this.pageSize;\r\n    }\r\n\r\n    private async doConfirmation(user: OrganizationUserUserDetailsResponse) {\r\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\r\n        const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\r\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\r\n        try {\r\n            // tslint:disable-next-line\r\n            console.log('User\\'s fingerprint: ' +\r\n                (await this.cryptoService.getFingerprint(user.userId, publicKey.buffer)).join('-'));\r\n        } catch { }\r\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\r\n        const request = new OrganizationUserConfirmRequest();\r\n        request.key = key.encryptedString;\r\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\r\n    }\r\n\r\n    private removeUser(user: OrganizationUserUserDetailsResponse) {\r\n        let index = this.users.indexOf(user);\r\n        if (index > -1) {\r\n            this.users.splice(index, 1);\r\n            this.resetPaging();\r\n        }\r\n        if (this.statusMap.has(OrganizationUserStatusType.Accepted)) {\r\n            index = this.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\r\n            if (index > -1) {\r\n                this.statusMap.get(OrganizationUserStatusType.Accepted).splice(index, 1);\r\n            }\r\n        }\r\n        if (this.statusMap.has(OrganizationUserStatusType.Invited)) {\r\n            index = this.statusMap.get(OrganizationUserStatusType.Invited).indexOf(user);\r\n            if (index > -1) {\r\n                this.statusMap.get(OrganizationUserStatusType.Invited).splice(index, 1);\r\n            }\r\n        }\r\n        if (this.statusMap.has(OrganizationUserStatusType.Confirmed)) {\r\n            index = this.statusMap.get(OrganizationUserStatusType.Confirmed).indexOf(user);\r\n            if (index > -1) {\r\n                this.statusMap.get(OrganizationUserStatusType.Confirmed).splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"page-header d-flex\">\r\n    <h1>{{'people' | i18n}}</h1>\r\n    <div class=\"ml-auto d-flex\">\r\n        <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\"\r\n                (click)=\"filter(null)\">\r\n                {{'all' | i18n}}\r\n                <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span>\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                [ngClass]=\"{active: status == organizationUserStatusType.Invited}\"\r\n                (click)=\"filter(organizationUserStatusType.Invited)\">\r\n                {{'invited' | i18n}}\r\n                <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span>\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                [ngClass]=\"{active: status == organizationUserStatusType.Accepted}\"\r\n                (click)=\"filter(organizationUserStatusType.Accepted)\">\r\n                {{'accepted' | i18n}}\r\n                <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"ml-3\">\r\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\r\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\r\n                [(ngModel)]=\"searchText\">\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\r\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\r\n            {{'inviteUser' | i18n}}\r\n        </button>\r\n    </div>\r\n</div>\r\n<ng-container *ngIf=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<ng-container\r\n    *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\">\r\n    <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p>\r\n    <ng-container *ngIf=\"searchedUsers.length\">\r\n        <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\">\r\n            {{'usersNeedConfirmed' | i18n}}\r\n        </app-callout>\r\n        <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\"\r\n            [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\r\n            <tbody>\r\n                <tr *ngFor=\"let u of searchedUsers\">\r\n                    <td width=\"30\">\r\n                        <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\"\r\n                            [fontSize]=\"14\"></app-avatar>\r\n                    </td>\r\n                    <td>\r\n                        <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a>\r\n                        <span class=\"badge badge-secondary\"\r\n                            *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span>\r\n                        <span class=\"badge badge-warning\"\r\n                            *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span>\r\n                        <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small>\r\n                    </td>\r\n                    <td>\r\n                        <ng-container *ngIf=\"u.twoFactorEnabled\">\r\n                            <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span>\r\n                        </ng-container>\r\n                    </td>\r\n                    <td>\r\n                        <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span>\r\n                        <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span>\r\n                        <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span>\r\n                        <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span>\r\n                    </td>\r\n                    <td class=\"table-list-options\">\r\n                        <div class=\"dropdown\" appListDropdown>\r\n                            <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n                                appA11yTitle=\"{{'options' | i18n}}\">\r\n                                <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                            <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\"\r\n                                    *ngIf=\"u.status === organizationUserStatusType.Invited\">\r\n                                    <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i>\r\n                                    {{'resendInvitation' | i18n}}\r\n                                </a>\r\n                                <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\"\r\n                                    *ngIf=\"u.status === organizationUserStatusType.Accepted\">\r\n                                    <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i>\r\n                                    {{'confirm' | i18n}}\r\n                                </a>\r\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\">\r\n                                    <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i>\r\n                                    {{'groups' | i18n}}\r\n                                </a>\r\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\"\r\n                                    *ngIf=\"accessEvents && u.status === organizationUserStatusType.Confirmed\">\r\n                                    <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i>\r\n                                    {{'eventLogs' | i18n}}\r\n                                </a>\r\n                                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\r\n                                    <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i>\r\n                                    {{'remove' | i18n}}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </ng-container>\r\n</ng-container>\r\n<ng-template #addEdit></ng-template>\r\n<ng-template #groupsTemplate></ng-template>\r\n<ng-template #eventsTemplate></ng-template>\r\n<ng-template #confirmTemplate></ng-template>\r\n","export class OrganizationUserConfirmRequest {\r\n    key: string;\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { CollectionData } from 'jslib/models/data/collectionData';\r\nimport { Collection } from 'jslib/models/domain/collection';\r\nimport { OrganizationUserInviteRequest } from 'jslib/models/request/organizationUserInviteRequest';\r\nimport { OrganizationUserUpdateRequest } from 'jslib/models/request/organizationUserUpdateRequest';\r\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\r\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\r\nimport { CollectionView } from 'jslib/models/view/collectionView';\r\n\r\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\r\n\r\n@Component({\r\n    selector: 'app-user-add-edit',\r\n    templateUrl: 'user-add-edit.component.html',\r\n})\r\nexport class UserAddEditComponent implements OnInit {\r\n    @Input() name: string;\r\n    @Input() organizationUserId: string;\r\n    @Input() organizationId: string;\r\n    @Output() onSavedUser = new EventEmitter();\r\n    @Output() onDeletedUser = new EventEmitter();\r\n\r\n    loading = true;\r\n    editMode: boolean = false;\r\n    title: string;\r\n    emails: string;\r\n    type: OrganizationUserType = OrganizationUserType.User;\r\n    access: 'all' | 'selected' = 'selected';\r\n    collections: CollectionView[] = [];\r\n    formPromise: Promise<any>;\r\n    deletePromise: Promise<any>;\r\n    organizationUserType = OrganizationUserType;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async ngOnInit() {\r\n        this.editMode = this.loading = this.organizationUserId != null;\r\n        await this.loadCollections();\r\n\r\n        if (this.editMode) {\r\n            this.editMode = true;\r\n            this.title = this.i18nService.t('editUser');\r\n            try {\r\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\r\n                this.access = user.accessAll ? 'all' : 'selected';\r\n                this.type = user.type;\r\n                if (user.collections != null && this.collections != null) {\r\n                    user.collections.forEach((s) => {\r\n                        const collection = this.collections.filter((c) => c.id === s.id);\r\n                        if (collection != null && collection.length > 0) {\r\n                            (collection[0] as any).checked = true;\r\n                            collection[0].readOnly = s.readOnly;\r\n                            collection[0].hidePasswords = s.hidePasswords;\r\n                        }\r\n                    });\r\n                }\r\n            } catch { }\r\n        } else {\r\n            this.title = this.i18nService.t('inviteUser');\r\n        }\r\n\r\n        this.loading = false;\r\n    }\r\n\r\n    async loadCollections() {\r\n        const response = await this.apiService.getCollections(this.organizationId);\r\n        const collections = response.data.map((r) =>\r\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\r\n        this.collections = await this.collectionService.decryptMany(collections);\r\n    }\r\n\r\n    check(c: CollectionView, select?: boolean) {\r\n        (c as any).checked = select == null ? !(c as any).checked : select;\r\n        if (!(c as any).checked) {\r\n            c.readOnly = false;\r\n        }\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        this.collections.forEach((c) => this.check(c, select));\r\n    }\r\n\r\n    async submit() {\r\n        let collections: SelectionReadOnlyRequest[] = null;\r\n        if (this.access !== 'all') {\r\n            collections = this.collections.filter((c) => (c as any).checked)\r\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\r\n        }\r\n\r\n        try {\r\n            if (this.editMode) {\r\n                const request = new OrganizationUserUpdateRequest();\r\n                request.accessAll = this.access === 'all';\r\n                request.type = this.type;\r\n                request.collections = collections;\r\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\r\n                    request);\r\n            } else {\r\n                const request = new OrganizationUserInviteRequest();\r\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\r\n                request.accessAll = this.access === 'all';\r\n                request.type = this.type;\r\n                request.collections = collections;\r\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\r\n            }\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited User' : 'Invited User' });\r\n            this.toasterService.popAsync('success', null,\r\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\r\n            this.onSavedUser.emit();\r\n        } catch { }\r\n    }\r\n\r\n    async delete() {\r\n        if (!this.editMode) {\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('removeUserConfirmation'), this.name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\r\n            await this.deletePromise;\r\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\r\n            this.onDeletedUser.emit();\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"userAddEditTitle\">\r\n                    {{title}}\r\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"loading\">\r\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!loading\">\r\n                <ng-container *ngIf=\"!editMode\">\r\n                    <p>{{'inviteUserDesc' | i18n}}</p>\r\n                    <div class=\"form-group mb-4\">\r\n                        <label for=\"emails\">{{'email' | i18n}}</label>\r\n                        <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required\r\n                            appAutoFocus>\r\n                        <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small>\r\n                    </div>\r\n                </ng-container>\r\n                <h3>\r\n                    {{'userType' | i18n}}\r\n                    <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\r\n                        href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\">\r\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                </h3>\r\n                <div class=\"form-check mt-2 form-check-block\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeUser\"\r\n                        [value]=\"organizationUserType.User\" [(ngModel)]=\"type\">\r\n                    <label class=\"form-check-label\" for=\"userTypeUser\">\r\n                        {{'user' | i18n}}\r\n                        <small>{{'userDesc' | i18n}}</small>\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check mt-2 form-check-block\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeManager\"\r\n                        [value]=\"organizationUserType.Manager\" [(ngModel)]=\"type\">\r\n                    <label class=\"form-check-label\" for=\"userTypeManager\">\r\n                        {{'manager' | i18n}}\r\n                        <small>{{'managerDesc' | i18n}}</small>\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check mt-2 form-check-block\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeAdmin\"\r\n                        [value]=\"organizationUserType.Admin\" [(ngModel)]=\"type\">\r\n                    <label class=\"form-check-label\" for=\"userTypeAdmin\">\r\n                        {{'admin' | i18n}}\r\n                        <small>{{'adminDesc' | i18n}}</small>\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check mt-2 form-check-block\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeOwner\"\r\n                        [value]=\"organizationUserType.Owner\" [(ngModel)]=\"type\">\r\n                    <label class=\"form-check-label\" for=\"userTypeOwner\">\r\n                        {{'owner' | i18n}}\r\n                        <small>{{'ownerDesc' | i18n}}</small>\r\n                    </label>\r\n                </div>\r\n                <h3 class=\"mt-4 d-flex\">\r\n                    <div class=\"mb-2\">\r\n                        {{'accessControl' | i18n}}\r\n                        <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\r\n                            href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\">\r\n                            <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\r\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'selectAll' | i18n}}\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'unselectAll' | i18n}}\r\n                        </button>\r\n                    </div>\r\n                </h3>\r\n                <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\"\r\n                            [(ngModel)]=\"access\">\r\n                        <label class=\"form-check-label\" for=\"accessAll\">\r\n                            {{'userAccessAllItems' | i18n}}\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\"\r\n                            [(ngModel)]=\"access\">\r\n                        <label class=\"form-check-label\" for=\"accessSelected\">\r\n                            {{'userAccessSelectedCollections' | i18n}}\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"access === 'selected'\">\r\n                    <div *ngIf=\"!collections || !collections.length\">\r\n                        {{'noCollectionsInList' | i18n}}\r\n                    </div>\r\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>&nbsp;</th>\r\n                                <th>{{'name' | i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th>\r\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let c of collections; let i = index\">\r\n                                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\r\n                                        appStopProp>\r\n                                </td>\r\n                                <td (click)=\"check(c)\">\r\n                                    {{c.name}}\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\"\r\n                                        name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\">\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\"\r\n                                        [disabled]=\"!c.checked\">\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n                <div class=\"ml-auto\">\r\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\r\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\r\n                        [appApiAction]=\"deletePromise\">\r\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\r\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\r\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ConstantsService } from 'jslib/services/constants.service';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\n\r\nimport { OrganizationUserConfirmRequest } from 'jslib/models/request/organizationUserConfirmRequest';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\n@Component({\r\n    selector: 'app-user-confirm',\r\n    templateUrl: 'user-confirm.component.html',\r\n})\r\nexport class UserConfirmComponent implements OnInit {\r\n    @Input() name: string;\r\n    @Input() userId: string;\r\n    @Input() organizationUserId: string;\r\n    @Input() organizationId: string;\r\n    @Output() onConfirmedUser = new EventEmitter();\r\n\r\n    dontAskAgain = false;\r\n    loading = true;\r\n    fingerprint: string;\r\n    formPromise: Promise<any>;\r\n\r\n    private publicKey: Uint8Array = null;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private storageService: StorageService) { }\r\n\r\n    async ngOnInit() {\r\n        try {\r\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\r\n            if (publicKeyResponse != null) {\r\n                this.publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\r\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, this.publicKey.buffer);\r\n                if (fingerprint != null) {\r\n                    this.fingerprint = fingerprint.join('-');\r\n                }\r\n            }\r\n        } catch { }\r\n        this.loading = false;\r\n    }\r\n\r\n    async submit() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        if (this.dontAskAgain) {\r\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.doConfirmation();\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Confirmed User' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.name));\r\n            this.onConfirmedUser.emit();\r\n        } catch { }\r\n    }\r\n\r\n    private async doConfirmation() {\r\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\r\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, this.publicKey.buffer);\r\n        const request = new OrganizationUserConfirmRequest();\r\n        request.key = key.encryptedString;\r\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, this.organizationUserId, request);\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"confirmUserTitle\">\r\n                    {{'confirmUser' | i18n}}\r\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    {{'fingerprintEnsureIntegrityVerify' | i18n}}\r\n                    <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\r\n                        {{'learnMore' | i18n}}</a>\r\n                </p>\r\n                <p><code>{{fingerprint}}</code></p>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\"\r\n                        [(ngModel)]=\"dontAskAgain\">\r\n                    <label class=\"form-check-label\" for=\"dontAskAgain\">\r\n                        {{'dontAskFingerprintAgain' | i18n}}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'confirm' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib/models/request/organizationUserUpdateGroupsRequest';\r\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\n@Component({\r\n    selector: 'app-user-groups',\r\n    templateUrl: 'user-groups.component.html',\r\n})\r\nexport class UserGroupsComponent implements OnInit {\r\n    @Input() name: string;\r\n    @Input() organizationUserId: string;\r\n    @Input() organizationId: string;\r\n    @Output() onSavedUser = new EventEmitter();\r\n\r\n    loading = true;\r\n    groups: GroupResponse[] = [];\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\r\n\r\n    async ngOnInit() {\r\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\r\n        const groups = groupsResponse.data.map((r) => r);\r\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\r\n        this.groups = groups;\r\n\r\n        try {\r\n            const userGroups = await this.apiService.getOrganizationUserGroups(\r\n                this.organizationId, this.organizationUserId);\r\n            if (userGroups != null && this.groups != null) {\r\n                userGroups.forEach((ug) => {\r\n                    const group = this.groups.filter((g) => g.id === ug);\r\n                    if (group != null && group.length > 0) {\r\n                        (group[0] as any).checked = true;\r\n                    }\r\n                });\r\n            }\r\n        } catch { }\r\n\r\n        this.loading = false;\r\n    }\r\n\r\n    check(g: GroupResponse, select?: boolean) {\r\n        (g as any).checked = select == null ? !(g as any).checked : select;\r\n        if (!(g as any).checked) {\r\n            (g as any).readOnly = false;\r\n        }\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        this.groups.forEach((g) => this.check(g, select));\r\n    }\r\n\r\n    async submit() {\r\n        const request = new OrganizationUserUpdateGroupsRequest();\r\n        request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\r\n\r\n        try {\r\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\r\n                request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Edited User Groups' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\r\n            this.onSavedUser.emit();\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"groupAccessTitle\">\r\n                    {{'groupAccess' | i18n}}\r\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"loading\">\r\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!loading\">\r\n                <p>{{'groupAccessUserDesc' | i18n}}</p>\r\n                <div *ngIf=\"!groups || !groups.length\">\r\n                    {{'noGroupsInList' | i18n}}\r\n                </div>\r\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\r\n                    <tbody>\r\n                        <tr *ngFor=\"let g of groups; let i = index\">\r\n                            <td class=\"table-list-checkbox\" (click)=\"check(g)\">\r\n                                <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" appStopProp>\r\n                            </td>\r\n                            <td (click)=\"check(g)\">\r\n                                {{g.name}}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { PolicyType } from 'jslib/enums/policyType';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { EnvironmentService } from 'jslib/abstractions';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { PolicyResponse } from 'jslib/models/response/policyResponse';\r\n\r\nimport { ModalComponent } from '../../modal.component';\r\n\r\nimport { PolicyEditComponent } from './policy-edit.component';\r\n\r\n@Component({\r\n    selector: 'app-org-policies',\r\n    templateUrl: 'policies.component.html',\r\n})\r\nexport class PoliciesComponent implements OnInit {\r\n    @ViewChild('editTemplate', { read: ViewContainerRef, static: true }) editModalRef: ViewContainerRef;\r\n\r\n    loading = true;\r\n    organizationId: string;\r\n    policies: any[];\r\n\r\n    // Remove when removing deprecation warning\r\n    enterpriseTokenPromise: Promise<any>;\r\n    private enterpriseUrl: string;\r\n\r\n    private modal: ModalComponent = null;\r\n    private orgPolicies: PolicyResponse[];\r\n    private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\r\n\r\n\r\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\r\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\r\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\r\n        private router: Router, private environmentService: EnvironmentService) { }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            const organization = await this.userService.getOrganization(this.organizationId);\r\n            if (organization == null || !organization.usePolicies) {\r\n                this.router.navigate(['/organizations', this.organizationId]);\r\n                return;\r\n            }\r\n            this.policies = [\r\n                {\r\n                    name: this.i18nService.t('twoStepLogin'),\r\n                    description: this.i18nService.t('twoStepLoginPolicyDesc'),\r\n                    type: PolicyType.TwoFactorAuthentication,\r\n                    enabled: false,\r\n                    display: true,\r\n                },\r\n                {\r\n                    name: this.i18nService.t('masterPass'),\r\n                    description: this.i18nService.t('masterPassPolicyDesc'),\r\n                    type: PolicyType.MasterPassword,\r\n                    enabled: false,\r\n                    display: true,\r\n                },\r\n                {\r\n                    name: this.i18nService.t('passwordGenerator'),\r\n                    description: this.i18nService.t('passwordGeneratorPolicyDesc'),\r\n                    type: PolicyType.PasswordGenerator,\r\n                    enabled: false,\r\n                    display: true,\r\n                },\r\n                {\r\n                    name: this.i18nService.t('singleOrg'),\r\n                    description: this.i18nService.t('singleOrgDesc'),\r\n                    type: PolicyType.SingleOrg,\r\n                    enabled: false,\r\n                    display: true,\r\n                },\r\n                {\r\n                    name: this.i18nService.t('requireSso'),\r\n                    description: this.i18nService.t('requireSsoPolicyDesc'),\r\n                    type: PolicyType.RequireSso,\r\n                    enabled: false,\r\n                    display: organization.useSso,\r\n                },\r\n            ];\r\n            await this.load();\r\n        });\r\n\r\n        // Remove when removing deprecation warning\r\n        this.enterpriseUrl = 'https://portal.bitwarden.com';\r\n        if (this.environmentService.enterpriseUrl != null) {\r\n            this.enterpriseUrl = this.environmentService.enterpriseUrl;\r\n        } else if (this.environmentService.baseUrl != null) {\r\n            this.enterpriseUrl = this.environmentService.baseUrl + '/portal';\r\n        }\r\n    }\r\n\r\n    async load() {\r\n        const response = await this.apiService.getPolicies(this.organizationId);\r\n        this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\r\n        this.orgPolicies.forEach((op) => {\r\n            this.policiesEnabledMap.set(op.type, op.enabled);\r\n        });\r\n        this.policies.forEach((p) => {\r\n            p.enabled = this.policiesEnabledMap.has(p.type) && this.policiesEnabledMap.get(p.type);\r\n        });\r\n        this.loading = false;\r\n    }\r\n\r\n    edit(p: any) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.editModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<PolicyEditComponent>(\r\n            PolicyEditComponent, this.editModalRef);\r\n\r\n        childComponent.name = p.name;\r\n        childComponent.description = p.description;\r\n        childComponent.type = p.type;\r\n        childComponent.organizationId = this.organizationId;\r\n        childComponent.policiesEnabledMap = this.policiesEnabledMap;\r\n        childComponent.onSavedPolicy.subscribe(() => {\r\n            this.modal.close();\r\n            this.load();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n\r\n    // Remove when removing deprecation warning\r\n    async goToEnterprisePortal() {\r\n        if (this.enterpriseTokenPromise != null) {\r\n            return;\r\n        }\r\n        try {\r\n            this.enterpriseTokenPromise = this.apiService.getEnterprisePortalSignInToken();\r\n            const token = await this.enterpriseTokenPromise;\r\n            if (token != null) {\r\n                const userId = await this.userService.getUserId();\r\n                this.platformUtilsService.launchUri(this.enterpriseUrl + '/login?userId=' + userId +\r\n                    '&token=' + (window as any).encodeURIComponent(token) + '&organizationId=' + this.organizationId);\r\n            }\r\n        } catch { }\r\n        this.enterpriseTokenPromise = null;\r\n    }\r\n}\r\n","<app-callout [type]=\"'warning'\">\r\n    <p>{{'webPoliciesDeprecationWarning' | i18n}}</p>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n        (click)=\"goToEnterprisePortal()\">{{'businessPortal' | i18n}}</button>\r\n</app-callout>\r\n<div class=\"page-header d-flex\">\r\n    <h1>{{'policies' | i18n}}</h1>\r\n</div>\r\n<ng-container *ngIf=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\r\n    <tbody>\r\n        <tr *ngFor=\"let p of policies\">\r\n            <td *ngIf=\"p.display\">\r\n                <a href=\"#\" appStopClick (click)=\"edit(p)\">{{p.name}}</a>\r\n                <span class=\"badge badge-success\" *ngIf=\"p.enabled\">{{'enabled' | i18n}}</span>\r\n                <small class=\"text-muted d-block\">{{p.description}}</small>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<ng-template #editTemplate></ng-template>\r\n","// Using index.ts is deprecated, please do not extend\r\nexport { ApiService } from './api.service';\r\nexport { AppIdService } from './appId.service';\r\nexport { AuditService } from './audit.service';\r\nexport { AuthService } from './auth.service';\r\nexport { CipherService } from './cipher.service';\r\nexport { CollectionService } from './collection.service';\r\nexport { CryptoService } from './crypto.service';\r\nexport { EnvironmentService } from './environment.service';\r\nexport { FolderService } from './folder.service';\r\nexport { I18nService } from './i18n.service';\r\nexport { LogService } from './log.service';\r\nexport { MessagingService } from './messaging.service';\r\nexport { PasswordGenerationService } from './passwordGeneration.service';\r\nexport { PlatformUtilsService } from './platformUtils.service';\r\nexport { SearchService } from './search.service';\r\nexport { SettingsService } from './settings.service';\r\nexport { StorageService } from './storage.service';\r\nexport { StateService } from './state.service';\r\nexport { SyncService } from './sync.service';\r\nexport { TokenService } from './token.service';\r\nexport { TotpService } from './totp.service';\r\nexport { UserService } from './user.service';\r\nexport { VaultTimeoutService } from './vaultTimeout.service';\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { PolicyType } from 'jslib/enums/policyType';\r\n\r\nimport { PolicyRequest } from 'jslib/models/request/policyRequest';\r\n\r\nimport { PolicyResponse } from 'jslib/models/response/policyResponse';\r\n\r\n@Component({\r\n    selector: 'app-policy-edit',\r\n    templateUrl: 'policy-edit.component.html',\r\n})\r\nexport class PolicyEditComponent implements OnInit {\r\n    @Input() name: string;\r\n    @Input() description: string;\r\n    @Input() type: PolicyType;\r\n    @Input() organizationId: string;\r\n    @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\r\n    @Output() onSavedPolicy = new EventEmitter();\r\n\r\n    policyType = PolicyType;\r\n    loading = true;\r\n    enabled = false;\r\n    formPromise: Promise<any>;\r\n    passwordScores: any[];\r\n    defaultTypes: any[];\r\n\r\n    // Master password\r\n\r\n    masterPassMinComplexity?: number = null;\r\n    masterPassMinLength?: number;\r\n    masterPassRequireUpper?: number;\r\n    masterPassRequireLower?: number;\r\n    masterPassRequireNumbers?: number;\r\n    masterPassRequireSpecial?: number;\r\n\r\n    // Password generator\r\n\r\n    passGenDefaultType?: string;\r\n    passGenMinLength?: number;\r\n    passGenUseUpper?: boolean;\r\n    passGenUseLower?: boolean;\r\n    passGenUseNumbers?: boolean;\r\n    passGenUseSpecial?: boolean;\r\n    passGenMinNumbers?: number;\r\n    passGenMinSpecial?: number;\r\n    passGenMinNumberWords?: number;\r\n    passGenCapitalize?: boolean;\r\n    passGenIncludeNumber?: boolean;\r\n\r\n    private policy: PolicyResponse;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService) {\r\n        this.passwordScores = [\r\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\r\n            { name: i18nService.t('weak') + ' (0)', value: 0 },\r\n            { name: i18nService.t('weak') + ' (1)', value: 1 },\r\n            { name: i18nService.t('weak') + ' (2)', value: 2 },\r\n            { name: i18nService.t('good') + ' (3)', value: 3 },\r\n            { name: i18nService.t('strong') + ' (4)', value: 4 },\r\n        ];\r\n        this.defaultTypes = [\r\n            { name: i18nService.t('userPreference'), value: null },\r\n            { name: i18nService.t('password'), value: 'password' },\r\n            { name: i18nService.t('passphrase'), value: 'passphrase' },\r\n        ];\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await this.load();\r\n        this.loading = false;\r\n    }\r\n\r\n    async load() {\r\n        try {\r\n            this.policy = await this.apiService.getPolicy(this.organizationId, this.type);\r\n\r\n            if (this.policy != null) {\r\n                this.enabled = this.policy.enabled;\r\n                if (this.policy.data != null) {\r\n                    switch (this.type) {\r\n                        case PolicyType.PasswordGenerator:\r\n                            this.passGenDefaultType = this.policy.data.defaultType;\r\n                            this.passGenMinLength = this.policy.data.minLength;\r\n                            this.passGenUseUpper = this.policy.data.useUpper;\r\n                            this.passGenUseLower = this.policy.data.useLower;\r\n                            this.passGenUseNumbers = this.policy.data.useNumbers;\r\n                            this.passGenUseSpecial = this.policy.data.useSpecial;\r\n                            this.passGenMinNumbers = this.policy.data.minNumbers;\r\n                            this.passGenMinSpecial = this.policy.data.minSpecial;\r\n                            this.passGenMinNumberWords = this.policy.data.minNumberWords;\r\n                            this.passGenCapitalize = this.policy.data.capitalize;\r\n                            this.passGenIncludeNumber = this.policy.data.includeNumber;\r\n                            break;\r\n                        case PolicyType.MasterPassword:\r\n                            this.masterPassMinComplexity = this.policy.data.minComplexity;\r\n                            this.masterPassMinLength = this.policy.data.minLength;\r\n                            this.masterPassRequireUpper = this.policy.data.requireUpper;\r\n                            this.masterPassRequireLower = this.policy.data.requireLower;\r\n                            this.masterPassRequireNumbers = this.policy.data.requireNumbers;\r\n                            this.masterPassRequireSpecial = this.policy.data.requireSpecial;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n            if (e.statusCode === 404) {\r\n                this.enabled = false;\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.preValidate()) {\r\n            const request = new PolicyRequest();\r\n            request.enabled = this.enabled;\r\n            request.type = this.type;\r\n            request.data = null;\r\n            switch (this.type) {\r\n                case PolicyType.PasswordGenerator:\r\n                    request.data = {\r\n                        defaultType: this.passGenDefaultType,\r\n                        minLength: this.passGenMinLength || null,\r\n                        useUpper: this.passGenUseUpper,\r\n                        useLower: this.passGenUseLower,\r\n                        useNumbers: this.passGenUseNumbers,\r\n                        useSpecial: this.passGenUseSpecial,\r\n                        minNumbers: this.passGenMinNumbers || null,\r\n                        minSpecial: this.passGenMinSpecial || null,\r\n                        minNumberWords: this.passGenMinNumberWords || null,\r\n                        capitalize: this.passGenCapitalize,\r\n                        includeNumber: this.passGenIncludeNumber,\r\n                    };\r\n                    break;\r\n                case PolicyType.MasterPassword:\r\n                    request.data = {\r\n                        minComplexity: this.masterPassMinComplexity || null,\r\n                        minLength: this.masterPassMinLength || null,\r\n                        requireUpper: this.masterPassRequireUpper,\r\n                        requireLower: this.masterPassRequireLower,\r\n                        requireNumbers: this.masterPassRequireNumbers,\r\n                        requireSpecial: this.masterPassRequireSpecial,\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            try {\r\n                this.formPromise = this.apiService.putPolicy(this.organizationId, this.type, request);\r\n                await this.formPromise;\r\n                this.analytics.eventTrack.next({ action: 'Edited Policy' });\r\n                this.toasterService.popAsync('success', null, this.i18nService.t('editedPolicyId', this.name));\r\n                this.onSavedPolicy.emit();\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    private preValidate(): boolean {\r\n        switch (this.type) {\r\n            case PolicyType.RequireSso:\r\n                if (!this.enabled) { // Don't need prevalidation checks if submitting to disable\r\n                    return true;\r\n                }\r\n                // Have SingleOrg policy enabled?\r\n                if (!(this.policiesEnabledMap.has(PolicyType.SingleOrg)\r\n                    && this.policiesEnabledMap.get(PolicyType.SingleOrg))) {\r\n                    this.toasterService.popAsync('error', null, this.i18nService.t('requireSsoPolicyReqError'));\r\n                    return false;\r\n                }\r\n                return true;\r\n\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"policiesEditTitle\">{{'editPolicy' | i18n}} - {{name}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"loading\">\r\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!loading\">\r\n                <p>{{description}}</p>\r\n                <app-callout type=\"warning\" *ngIf=\"type === policyType.TwoFactorAuthentication\"\r\n                    title=\"{{'warning' | i18n}}\" icon=\"fa-warning\">\r\n                    {{'twoStepLoginPolicyWarning' | i18n}}\r\n                </app-callout>\r\n                <app-callout type=\"warning\" *ngIf=\"type === policyType.SingleOrg\" title=\"{{'warning' | i18n}}\"\r\n                    icon=\"fa-warning\">\r\n                    {{'singleOrgPolicyWarning' | i18n}}\r\n                </app-callout>\r\n                <ng-container *ngIf=\"type === policyType.RequireSso\">\r\n                    <app-callout type=\"tip\" title=\"{{'prerequisite' | i18n}}\">\r\n                        {{'requireSsoPolicyReq' | i18n}}\r\n                    </app-callout>\r\n                    <app-callout type=\"warning\">\r\n                        {{'requireSsoExemption' | i18n}}\r\n                    </app-callout>\r\n                </ng-container>\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [(ngModel)]=\"enabled\"\r\n                            name=\"Enabled\">\r\n                        <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"type === policyType.MasterPassword\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"masterPassMinComplexity\">{{'minComplexityScore' | i18n}}</label>\r\n                            <select id=\"masterPassMinComplexity\" name=\"MasterPassMinComplexity\"\r\n                                [(ngModel)]=\"masterPassMinComplexity\" class=\"form-control\">\r\n                                <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"masterPassMinLength\">{{'minLength' | i18n}}</label>\r\n                            <input id=\"masterPassMinLength\" class=\"form-control\" type=\"number\" min=\"8\"\r\n                                name=\"MasterPassMinLength\" [(ngModel)]=\"masterPassMinLength\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireUpper\"\r\n                            [(ngModel)]=\"masterPassRequireUpper\" name=\"MasterPassRequireUpper\">\r\n                        <label class=\"form-check-label\" for=\"masterPassRequireUpper\">A-Z</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireLower\"\r\n                            [(ngModel)]=\"masterPassRequireLower\" name=\"MasterPassRequireLower\">\r\n                        <label class=\"form-check-label\" for=\"masterPassRequireLower\">a-z</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireNumbers\"\r\n                            [(ngModel)]=\"masterPassRequireNumbers\" name=\"MasterPassRequireNumbers\">\r\n                        <label class=\"form-check-label\" for=\"masterPassRequireNumbers\">0-9</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireSpecial\"\r\n                            [(ngModel)]=\"masterPassRequireSpecial\" name=\"MasterPassRequireSpecial\">\r\n                        <label class=\"form-check-label\" for=\"masterPassRequireSpecial\">!@#$%^&amp;*</label>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"type === policyType.PasswordGenerator\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group  mb-0\">\r\n                            <label for=\"passGenDefaultType\">{{'defaultType' | i18n}}</label>\r\n                            <select id=\"passGenDefaultType\" name=\"PassGenDefaultType\" [(ngModel)]=\"passGenDefaultType\"\r\n                                class=\"form-control\">\r\n                                <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <h3 class=\"mt-4\">{{'password' | i18n}}</h3>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"passGenMinLength\">{{'minLength' | i18n}}</label>\r\n                            <input id=\"passGenMinLength\" class=\"form-control\" type=\"number\" name=\"PassGenMinLength\"\r\n                                min=\"5\" max=\"128\" [(ngModel)]=\"passGenMinLength\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"passGenMinNumbers\">{{'minNumbers' | i18n}}</label>\r\n                            <input id=\"passGenMinNumbers\" class=\"form-control\" type=\"number\" name=\"PassGenMinNumbers\"\r\n                                min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinNumbers\">\r\n                        </div>\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"passGenMinSpecial\">{{'minSpecial' | i18n}}</label>\r\n                            <input id=\"passGenMinSpecial\" class=\"form-control\" type=\"number\" name=\"PassGenMinSpecial\"\r\n                                min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinSpecial\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseUpper\"\r\n                            [(ngModel)]=\"passGenUseUpper\" name=\"PassGenUseUpper\">\r\n                        <label class=\"form-check-label\" for=\"passGenUseUpper\">A-Z</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseLower\"\r\n                            [(ngModel)]=\"passGenUseLower\" name=\"PassGenUseLower\">\r\n                        <label class=\"form-check-label\" for=\"passGenUseLower\">a-z</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseNumbers\"\r\n                            [(ngModel)]=\"passGenUseNumbers\" name=\"PassGenUseNumbers\">\r\n                        <label class=\"form-check-label\" for=\"passGenUseNumbers\">0-9</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseSpecial\"\r\n                            [(ngModel)]=\"passGenUseSpecial\" name=\"PassGenUseSpecial\">\r\n                        <label class=\"form-check-label\" for=\"passGenUseSpecial\">!@#$%^&amp;*</label>\r\n                    </div>\r\n                    <h3 class=\"mt-4\">{{'passphrase' | i18n}}</h3>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <label for=\"passGenMinNumberWords\">{{'minimumNumberOfWords' | i18n}}</label>\r\n                            <input id=\"passGenMinNumberWords\" class=\"form-control\" type=\"number\"\r\n                                name=\"PassGenMinNumberWords\" min=\"3\" max=\"20\" [(ngModel)]=\"passGenMinNumberWords\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenCapitalize\"\r\n                            [(ngModel)]=\"passGenCapitalize\" name=\"PassGenCapitalize\">\r\n                        <label class=\"form-check-label\" for=\"passGenCapitalize\">{{'capitalize' | i18n}}</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenIncludeNumber\"\r\n                            [(ngModel)]=\"passGenIncludeNumber\" name=\"PassGenIncludeNumber\">\r\n                        <label class=\"form-check-label\" for=\"passGenIncludeNumber\">{{'includeNumber' | i18n}}</label>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\n\r\nimport { OrganizationUpdateRequest } from 'jslib/models/request/organizationUpdateRequest';\r\nimport { OrganizationResponse } from 'jslib/models/response/organizationResponse';\r\n\r\nimport { ModalComponent } from '../../modal.component';\r\nimport { ApiKeyComponent } from '../../settings/api-key.component';\r\nimport { PurgeVaultComponent } from '../../settings/purge-vault.component';\r\nimport { TaxInfoComponent } from '../../settings/tax-info.component';\r\nimport { DeleteOrganizationComponent } from './delete-organization.component';\r\n\r\n@Component({\r\n    selector: 'app-org-account',\r\n    templateUrl: 'account.component.html',\r\n})\r\nexport class AccountComponent {\r\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\r\n    @ViewChild('purgeOrganizationTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\r\n    @ViewChild('apiKeyTemplate', { read: ViewContainerRef, static: true }) apiKeyModalRef: ViewContainerRef;\r\n    @ViewChild('rotateApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateApiKeyModalRef: ViewContainerRef;\r\n    @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\r\n\r\n    selfHosted = false;\r\n    loading = true;\r\n    canUseApi = false;\r\n    org: OrganizationResponse;\r\n    formPromise: Promise<any>;\r\n    taxFormPromise: Promise<any>;\r\n\r\n    private organizationId: string;\r\n    private modal: ModalComponent = null;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n        private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private route: ActivatedRoute, private syncService: SyncService,\r\n        private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async ngOnInit() {\r\n        this.selfHosted = this.platformUtilsService.isSelfHost();\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            try {\r\n                this.org = await this.apiService.getOrganization(this.organizationId);\r\n                this.canUseApi = this.org.useApi;\r\n            } catch { }\r\n        });\r\n        this.loading = false;\r\n    }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new OrganizationUpdateRequest();\r\n            request.name = this.org.name;\r\n            request.businessName = this.org.businessName;\r\n            request.billingEmail = this.org.billingEmail;\r\n            request.identifier = this.org.identifier;\r\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\r\n                return this.syncService.fullSync(true);\r\n            });\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Updated Organization Settings' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\r\n        } catch { }\r\n    }\r\n\r\n    async submitTaxInfo() {\r\n        this.taxFormPromise = this.taxInfo.submitTaxInfo();\r\n        await this.taxFormPromise;\r\n        this.analytics.eventTrack.next({ action: 'Updated Organization Tax Info' });\r\n        this.toasterService.popAsync('success', null, this.i18nService.t('taxInfoUpdated'));\r\n    }\r\n\r\n    deleteOrganization() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<DeleteOrganizationComponent>(\r\n            DeleteOrganizationComponent, this.deleteModalRef);\r\n        childComponent.organizationId = this.organizationId;\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    purgeVault() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\r\n        childComponent.organizationId = this.organizationId;\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    viewApiKey() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.apiKeyModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.apiKeyModalRef);\r\n        childComponent.keyType = 'organization';\r\n        childComponent.entityId = this.organizationId;\r\n        childComponent.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\r\n        childComponent.scope = 'api.organization';\r\n        childComponent.grantType = 'client_credentials';\r\n        childComponent.apiKeyTitle = 'apiKey';\r\n        childComponent.apiKeyWarning = 'apiKeyWarning';\r\n        childComponent.apiKeyDescription = 'apiKeyDesc';\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    rotateApiKey() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.rotateApiKeyModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.rotateApiKeyModalRef);\r\n        childComponent.keyType = 'organization';\r\n        childComponent.isRotation = true;\r\n        childComponent.entityId = this.organizationId;\r\n        childComponent.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\r\n        childComponent.scope = 'api.organization';\r\n        childComponent.grantType = 'client_credentials';\r\n        childComponent.apiKeyTitle = 'apiKey';\r\n        childComponent.apiKeyWarning = 'apiKeyWarning';\r\n        childComponent.apiKeyDescription = 'apiKeyRotateDesc';\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'myOrganization' | i18n}}</h1>\r\n</div>\r\n<div *ngIf=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</div>\r\n<form *ngIf=\"org && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"name\">{{'organizationName' | i18n}}</label>\r\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"org.name\"\r\n                    [disabled]=\"selfHosted\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label>\r\n                <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\"\r\n                    [(ngModel)]=\"org.billingEmail\" [disabled]=\"selfHosted\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"businessName\">{{'businessName' | i18n}}</label>\r\n                <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\"\r\n                    [(ngModel)]=\"org.businessName\" [disabled]=\"selfHosted\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"identifier\">{{'identifier' | i18n}}</label>\r\n                <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\"\r\n                    [(ngModel)]=\"org.identifier\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <app-avatar data=\"{{org.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'save' | i18n}}</span>\r\n    </button>\r\n</form>\r\n<ng-container *ngIf=\"canUseApi\">\r\n    <div class=\"secondary-header border-0 mb-0\">\r\n        <h1>{{'apiKey' | i18n}}</h1>\r\n    </div>\r\n    <p>\r\n        {{'apiKeyDesc' | i18n}}\r\n        <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\r\n            {{'learnMore' | i18n}}\r\n        </a>\r\n    </p>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">{{'viewApiKey' | i18n}}</button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">{{'rotateApiKey' | i18n}}</button>\r\n</ng-container>\r\n<div class=\"secondary-header border-0 mb-0\">\r\n    <h1>{{'taxInformation' | i18n}}</h1>\r\n</div>\r\n<p>{{'taxInformationDesc' | i18n}}</p>\r\n<div *ngIf=\"!org || loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</div>\r\n<form *ngIf=\"org && !loading\" #formTax (ngSubmit)=\"submitTaxInfo()\" [appApiAction]=\"taxFormPromise\" ngNativeValidate>\r\n    <app-tax-info></app-tax-info>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'save' | i18n}}</span>\r\n    </button>\r\n</form>\r\n<div class=\"secondary-header text-danger border-0 mb-0\">\r\n    <h1>{{'dangerZone' | i18n}}</h1>\r\n</div>\r\n<div class=\"card border-danger\">\r\n    <div class=\"card-body\">\r\n        <p>{{'dangerZoneDesc' | i18n}}</p>\r\n        <button type=\"button\" class=\"btn btn-outline-danger\"\r\n            (click)=\"deleteOrganization()\">{{'deleteOrganization' | i18n}}</button>\r\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button>\r\n    </div>\r\n</div>\r\n<ng-template #deleteOrganizationTemplate></ng-template>\r\n<ng-template #purgeOrganizationTemplate></ng-template>\r\n<ng-template #apiKeyTemplate></ng-template>\r\n<ng-template #rotateApiKeyTemplate></ng-template>\r\n","import { TaxInfoUpdateRequest } from './taxInfoUpdateRequest';\r\n\r\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\r\n    taxId: string;\r\n    line1: string;\r\n    line2: string;\r\n    city: string;\r\n    state: string;\r\n}\r\n","export class TaxInfoUpdateRequest {\r\n    country: string;\r\n    postalCode: string;\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\r\n\r\n@Component({\r\n    selector: 'app-delete-organization',\r\n    templateUrl: 'delete-organization.component.html',\r\n})\r\nexport class DeleteOrganizationComponent {\r\n    organizationId: string;\r\n\r\n    masterPassword: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private router: Router) { }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        const request = new PasswordVerificationRequest();\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n        try {\r\n            this.formPromise = this.apiService.deleteOrganization(this.organizationId, request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Deleted Organization' });\r\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\r\n                this.i18nService.t('organizationDeletedDesc'));\r\n            this.router.navigate(['/']);\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{'deleteOrganization' | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{'deleteOrganizationDesc' | i18n}}</p>\r\n                <app-callout type=\"warning\">{{'deleteOrganizationWarning' | i18n}}</app-callout>\r\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'deleteOrganization' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { UserBillingComponent } from '../../settings/user-billing.component';\r\n\r\n@Component({\r\n    selector: 'app-org-billing',\r\n    templateUrl: '../../settings/user-billing.component.html',\r\n})\r\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\r\n    constructor(apiService: ApiService, i18nService: I18nService,\r\n        analytics: Angulartics2, toasterService: ToasterService,\r\n        private route: ActivatedRoute, platformUtilsService: PlatformUtilsService) {\r\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            await this.load();\r\n            this.firstLoaded = true;\r\n        });\r\n    }\r\n}\r\n","export class WebConstants {\r\n    static readonly stripeTestKey = 'pk_test_KPoCfZXu7mznb9uSCPZ2JpTD';\r\n    static readonly stripeLiveKey = 'pk_live_bpN0P37nMxrMQkcaHXtAybJk';\r\n    static readonly btSandboxKey = 'sandbox_r72q8jq6_9pnxkwm75f87sdc2';\r\n    static readonly btProductionKey = 'production_qfbsv8kc_njj2zjtyngtjmbjd';\r\n    static readonly paypal = {\r\n        businessIdProduction: '4ZDA7DLUUJGMN',\r\n        businessIdSandbox: 'AD3LAUZSNVPJY',\r\n        buttonActionProduction: 'https://www.paypal.com/cgi-bin/webscr',\r\n        buttonActionSandbox: 'https://www.sandbox.paypal.com/cgi-bin/webscr',\r\n    };\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { OrganizationSubscriptionResponse } from 'jslib/models/response/organizationSubscriptionResponse';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { PlanType } from 'jslib/enums/planType';\r\n\r\n@Component({\r\n    selector: 'app-org-subscription',\r\n    templateUrl: 'organization-subscription.component.html',\r\n})\r\nexport class OrganizationSubscriptionComponent implements OnInit {\r\n    loading = false;\r\n    firstLoaded = false;\r\n    organizationId: string;\r\n    adjustSeatsAdd = true;\r\n    showAdjustSeats = false;\r\n    adjustStorageAdd = true;\r\n    showAdjustStorage = false;\r\n    showUpdateLicense = false;\r\n    showDownloadLicense = false;\r\n    showChangePlan = false;\r\n    sub: OrganizationSubscriptionResponse;\r\n    selfHosted = false;\r\n\r\n    cancelPromise: Promise<any>;\r\n    reinstatePromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\r\n        private i18nService: I18nService, private analytics: Angulartics2,\r\n        private toasterService: ToasterService, private messagingService: MessagingService,\r\n        private route: ActivatedRoute) {\r\n        this.selfHosted = platformUtilsService.isSelfHost();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            await this.load();\r\n            this.firstLoaded = true;\r\n        });\r\n    }\r\n\r\n    async load() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n        this.loading = true;\r\n        this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\r\n        this.loading = false;\r\n    }\r\n\r\n    async reinstate() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\r\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\r\n            await this.reinstatePromise;\r\n            this.analytics.eventTrack.next({ action: 'Reinstated Plan' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\r\n            this.load();\r\n        } catch { }\r\n    }\r\n\r\n    async cancel() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\r\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\r\n            await this.cancelPromise;\r\n            this.analytics.eventTrack.next({ action: 'Canceled Plan' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\r\n            this.load();\r\n        } catch { }\r\n    }\r\n\r\n    async changePlan() {\r\n        if (this.subscription == null && this.sub.planType === PlanType.Free) {\r\n            this.showChangePlan = !this.showChangePlan;\r\n            return;\r\n        }\r\n        const contactSupport = await this.platformUtilsService.showDialog(this.i18nService.t('changeBillingPlanDesc'),\r\n            this.i18nService.t('changeBillingPlan'), this.i18nService.t('contactSupport'), this.i18nService.t('close'));\r\n        if (contactSupport) {\r\n            this.platformUtilsService.launchUri('https://bitwarden.com/contact');\r\n        }\r\n    }\r\n\r\n    closeChangePlan(changed: boolean) {\r\n        this.showChangePlan = false;\r\n    }\r\n\r\n    downloadLicense() {\r\n        this.showDownloadLicense = !this.showDownloadLicense;\r\n    }\r\n\r\n    closeDownloadLicense() {\r\n        this.showDownloadLicense = false;\r\n    }\r\n\r\n    updateLicense() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n        this.showUpdateLicense = true;\r\n    }\r\n\r\n    closeUpdateLicense(updated: boolean) {\r\n        this.showUpdateLicense = false;\r\n        if (updated) {\r\n            this.load();\r\n            this.messagingService.send('updatedOrgLicense');\r\n        }\r\n    }\r\n\r\n    adjustSeats(add: boolean) {\r\n        this.adjustSeatsAdd = add;\r\n        this.showAdjustSeats = true;\r\n    }\r\n\r\n    closeSeats(load: boolean) {\r\n        this.showAdjustSeats = false;\r\n        if (load) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    adjustStorage(add: boolean) {\r\n        this.adjustStorageAdd = add;\r\n        this.showAdjustStorage = true;\r\n    }\r\n\r\n    closeStorage(load: boolean) {\r\n        this.showAdjustStorage = false;\r\n        if (load) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    get isExpired() {\r\n        return this.sub != null && this.sub.expiration != null &&\r\n            new Date(this.sub.expiration) < new Date();\r\n    }\r\n\r\n    get subscriptionMarkedForCancel() {\r\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\r\n    }\r\n\r\n    get subscription() {\r\n        return this.sub != null ? this.sub.subscription : null;\r\n    }\r\n\r\n    get nextInvoice() {\r\n        return this.sub != null ? this.sub.upcomingInvoice : null;\r\n    }\r\n\r\n    get storagePercentage() {\r\n        return this.sub != null && this.sub.maxStorageGb ?\r\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\r\n    }\r\n\r\n    get storageProgressWidth() {\r\n        return this.storagePercentage < 5 ? 5 : 0;\r\n    }\r\n\r\n    get billingInterval() {\r\n        const monthly = !this.sub.plan.isAnnual;\r\n        return monthly ? 'month' : 'year';\r\n    }\r\n\r\n    get storageGbPrice() {\r\n        return this.sub.plan.additionalStoragePricePerGb;\r\n    }\r\n\r\n    get seatPrice() {\r\n        return this.sub.plan.seatPrice;\r\n    }\r\n\r\n    get canAdjustSeats() {\r\n        return this.sub.plan.hasAdditionalSeatsOption;\r\n    }\r\n\r\n    get canDownloadLicense() {\r\n        return (this.sub.planType !== PlanType.Free && this.subscription == null) ||\r\n            (this.subscription != null && !this.subscription.cancelled);\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>\r\n        {{'subscription' | i18n}}\r\n        <small *ngIf=\"firstLoaded && loading\">\r\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </small>\r\n    </h1>\r\n</div>\r\n<ng-container *ngIf=\"!firstLoaded && loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<ng-container *ngIf=\"sub\">\r\n    <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\">\r\n        {{'subscriptionCanceled' | i18n}}</app-callout>\r\n    <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\">\r\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\r\n        <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\"\r\n            [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'reinstateSubscription' | i18n}}</span>\r\n        </button>\r\n    </app-callout>\r\n    <dl *ngIf=\"selfHosted\">\r\n        <dt>{{'billingPlan' | i18n}}</dt>\r\n        <dd>{{sub.plan.name}}</dd>\r\n        <dt>{{'expiration' | i18n}}</dt>\r\n        <dd *ngIf=\"sub.expiration\">\r\n            {{sub.expiration | date:'mediumDate'}}\r\n            <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\r\n                <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\r\n                {{'licenseIsExpired' | i18n}}\r\n            </span>\r\n        </dd>\r\n        <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd>\r\n    </dl>\r\n    <div class=\"row\" *ngIf=\"!selfHosted\">\r\n        <div class=\"col-4\">\r\n            <dl>\r\n                <dt>{{'billingPlan' | i18n}}</dt>\r\n                <dd>{{sub.plan.name}}</dd>\r\n                <ng-container *ngIf=\"subscription\">\r\n                    <dt>{{'status' | i18n}}</dt>\r\n                    <dd>\r\n                        <span class=\"text-capitalize\">{{subscription.status || '-'}}</span>\r\n                        <span class=\"badge badge-warning\"\r\n                            *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span>\r\n                    </dd>\r\n                    <dt>{{'nextCharge' | i18n}}</dt>\r\n                    <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$'))\r\n                        : '-'}}\r\n                    </dd>\r\n                </ng-container>\r\n            </dl>\r\n        </div>\r\n        <div class=\"col-8\" *ngIf=\"subscription\">\r\n            <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong>\r\n            <table class=\"table\">\r\n                <tbody>\r\n                    <tr *ngFor=\"let i of subscription.items\">\r\n                        <td>\r\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\r\n                        </td>\r\n                        <td>\r\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngIf=\"selfHosted\">\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\r\n                {{'updateLicense' | i18n}}\r\n            </button>\r\n            <a href=\"https://vault.bitwarden.com\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\">\r\n                {{'manageSubscription' | i18n}}\r\n            </a>\r\n        </div>\r\n        <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\r\n            <div class=\"card-body\">\r\n                <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\"\r\n                    (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button>\r\n                <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3>\r\n                <app-update-license [organizationId]=\"organizationId\" (onUpdated)=\"closeUpdateLicense(true)\"\r\n                    (onCanceled)=\"closeUpdateLicense(false)\"></app-update-license>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!selfHosted\">\r\n        <div class=\"d-flex\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePlan()\" *ngIf=\"!showChangePlan\">\r\n                {{'changeBillingPlan' | i18n}}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"downloadLicense()\"\r\n                *ngIf=\"canDownloadLicense\" [disabled]=\"showDownloadLicense\">\r\n                {{'downloadLicense' | i18n}}\r\n            </button>\r\n            <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\"\r\n                [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\"\r\n                *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\r\n                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span>{{'cancelSubscription' | i18n}}</span>\r\n            </button>\r\n        </div>\r\n        <app-change-plan [organizationId]=\"organizationId\" (onChanged)=\"closeChangePlan(true)\"\r\n            (onCanceled)=\"closeChangePlan(false)\" *ngIf=\"showChangePlan\"></app-change-plan>\r\n        <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\r\n            <app-download-license [organizationId]=\"organizationId\" (onDownloaded)=\"closeDownloadLicense()\"\r\n                (onCanceled)=\"closeDownloadLicense()\"></app-download-license>\r\n        </div>\r\n        <h2 class=\"spaced-header\">{{'userSeats' | i18n}}</h2>\r\n        <p>{{'subscriptionUserSeats' | i18n : sub.seats}}</p>\r\n        <ng-container *ngIf=\"subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\">\r\n            <div class=\"mt-3\">\r\n                <div class=\"d-flex\" *ngIf=\"!showAdjustSeats\">\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustSeats(true)\">\r\n                        {{'addSeats' | i18n}}\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustSeats(false)\">\r\n                        {{'removeSeats' | i18n}}\r\n                    </button>\r\n                </div>\r\n                <app-adjust-seats [seatPrice]=\"seatPrice\" [add]=\"adjustSeatsAdd\" [organizationId]=\"organizationId\"\r\n                    [interval]=\"billingInterval\" (onAdjusted)=\"closeSeats(true)\" (onCanceled)=\"closeSeats(false)\"\r\n                    *ngIf=\"showAdjustSeats\"></app-adjust-seats>\r\n            </div>\r\n        </ng-container>\r\n        <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2>\r\n        <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p>\r\n        <div class=\"progress\">\r\n            <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\"\r\n                [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                {{(storagePercentage / 100) | percent}}</div>\r\n        </div>\r\n        <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\r\n            <div class=\"mt-3\">\r\n                <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\r\n                        {{'addStorage' | i18n}}\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustStorage(false)\">\r\n                        {{'removeStorage' | i18n}}\r\n                    </button>\r\n                </div>\r\n                <app-adjust-storage [storageGbPrice]=\"storageGbPrice\" [add]=\"adjustStorageAdd\"\r\n                    [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeStorage(true)\"\r\n                    (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { PlanType } from 'jslib/enums/planType';\r\nimport { ProductType } from 'jslib/enums/productType';\r\n\r\n@Component({\r\n    selector: 'app-change-plan',\r\n    templateUrl: 'change-plan.component.html',\r\n})\r\nexport class ChangePlanComponent {\r\n    @Input() organizationId: string;\r\n    @Output() onChanged = new EventEmitter();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    formPromise: Promise<any>;\r\n    defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\r\n    defaultUpgradeProduct: ProductType = ProductType.Families;\r\n\r\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async submit() {\r\n        try {\r\n            this.platformUtilsService.eventTrack('Changed Plan');\r\n            this.onChanged.emit();\r\n        } catch { }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n}\r\n","<div class=\"card card-org-plans\">\r\n    <div class=\"card-body\">\r\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\r\n                aria-hidden=\"true\">&times;</span></button>\r\n        <h2 class=\"card-body-header\">{{'changeBillingPlan' | i18n}}</h2>\r\n        <p class=\"mb-0\">{{'changeBillingPlanUpgrade' | i18n}}</p>\r\n        <app-organization-plans [showFree]=\"false\" [showCancel]=\"true\" [plan]=\"defaultUpgradePlan\"\r\n            [product]=\"defaultUpgradeProduct\" [organizationId]=\"organizationId\" (onCanceled)=\"cancel()\">\r\n        </app-organization-plans>\r\n    </div>\r\n</div>\r\n","export enum ProductType {\r\n    Free = 0,\r\n    Families = 1,\r\n    Teams = 2,\r\n    Enterprise = 3,\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\n@Component({\r\n    selector: 'app-download-license',\r\n    templateUrl: 'download-license.component.html',\r\n})\r\nexport class DownloadLicenseComponent {\r\n    @Input() organizationId: string;\r\n    @Output() onDownloaded = new EventEmitter();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    installationId: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async submit() {\r\n        if (this.installationId == null || this.installationId === '') {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.apiService.getOrganizationLicense(this.organizationId, this.installationId);\r\n            const license = await this.formPromise;\r\n            const licenseString = JSON.stringify(license, null, 2);\r\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\r\n            this.platformUtilsService.eventTrack('Downloaded License');\r\n            this.onDownloaded.emit();\r\n        } catch { }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n}\r\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"card-body\">\r\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\r\n                aria-hidden=\"true\">&times;</span></button>\r\n        <h3 class=\"card-body-header\">{{'downloadLicense' | i18n}}</h3>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-6\">\r\n                <div class=\"d-flex\">\r\n                    <label for=\"installationId\">{{'enterInstallationId' | i18n}}</label>\r\n                    <a class=\"ml-auto\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\r\n                        href=\"https://help.bitwarden.com/article/licensing-on-premise/#organization-account-sharing\">\r\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                </div>\r\n                <input id=\"installationId\" class=\"form-control\" type=\"text\" name=\"InstallationId\"\r\n                    [(ngModel)]=\"installationId\" required>\r\n            </div>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\r\n            {{'cancel' | i18n}}\r\n        </button>\r\n    </div>\r\n</form>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\n\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { SeatRequest } from 'jslib/models/request/seatRequest';\r\n\r\nimport { PaymentComponent } from '../../settings/payment.component';\r\n\r\n@Component({\r\n    selector: 'app-adjust-seats',\r\n    templateUrl: 'adjust-seats.component.html',\r\n})\r\nexport class AdjustSeatsComponent {\r\n    @Input() seatPrice = 0;\r\n    @Input() add = true;\r\n    @Input() organizationId: string;\r\n    @Input() interval = 'year';\r\n    @Output() onAdjusted = new EventEmitter<number>();\r\n    @Output() onCanceled = new EventEmitter();\r\n\r\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\r\n\r\n    seatAdjustment = 0;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new SeatRequest();\r\n            request.seatAdjustment = this.seatAdjustment;\r\n            if (!this.add) {\r\n                request.seatAdjustment *= -1;\r\n            }\r\n\r\n            let paymentFailed = false;\r\n            const action = async () => {\r\n                const result = await this.apiService.postOrganizationSeat(this.organizationId, request);\r\n                if (result != null && result.paymentIntentClientSecret != null) {\r\n                    try {\r\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\r\n                    } catch {\r\n                        paymentFailed = true;\r\n                    }\r\n                }\r\n            };\r\n            this.formPromise = action();\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Seats' : 'Removed Seats' });\r\n            this.onAdjusted.emit(this.seatAdjustment);\r\n            if (paymentFailed) {\r\n                this.toasterService.popAsync({\r\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\r\n                    type: 'warning',\r\n                    timeout: 10000,\r\n                });\r\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\r\n            } else {\r\n                this.toasterService.popAsync('success', null,\r\n                    this.i18nService.t('adjustedSeats', request.seatAdjustment.toString()));\r\n            }\r\n        } catch { }\r\n    }\r\n\r\n    cancel() {\r\n        this.onCanceled.emit();\r\n    }\r\n\r\n    get adjustedSeatTotal(): number {\r\n        return this.seatAdjustment * this.seatPrice;\r\n    }\r\n}\r\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"card-body\">\r\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\r\n                aria-hidden=\"true\">&times;</span></button>\r\n        <h3 class=\"card-body-header\">{{(add ? 'addSeats' : 'removeSeats') | i18n}}</h3>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-6\">\r\n                <label for=\"seatAdjustment\">{{(add ? 'seatsToAdd' : 'seatsToRemove') | i18n}}</label>\r\n                <input id=\"seatAdjustment\" class=\"form-control\" type=\"number\" name=\"SeatAdjustment\"\r\n                    [(ngModel)]=\"seatAdjustment\" min=\"0\" step=\"1\" required>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"add\" class=\"mb-3\">\r\n            <strong>{{'total' | i18n}}:</strong> {{seatAdjustment || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal\r\n            | currency:'$'}} /{{interval | i18n}}\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\r\n            {{'cancel' | i18n}}\r\n        </button>\r\n        <small class=\"d-block text-muted mt-3\">\r\n            {{(add ? 'seatsAddNote' : 'seatsRemoveNote') | i18n}}\r\n        </small>\r\n    </div>\r\n</form>\r\n<app-payment [showMethods]=\"false\"></app-payment>\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\n@Component({\r\n    selector: 'app-org-settings',\r\n    templateUrl: 'settings.component.html',\r\n})\r\nexport class SettingsComponent {\r\n    access2fa = false;\r\n    selfHosted: boolean;\r\n\r\n    constructor(private route: ActivatedRoute, private userService: UserService,\r\n        private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    ngOnInit() {\r\n        this.route.parent.params.subscribe(async (params) => {\r\n            this.selfHosted = await this.platformUtilsService.isSelfHost();\r\n            const organization = await this.userService.getOrganization(params.organizationId);\r\n            this.access2fa = organization.use2fa;\r\n        });\r\n    }\r\n}\r\n","<div class=\"container page-content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">{{'settings' | i18n}}</div>\r\n                <div class=\"list-group list-group-flush\">\r\n                    <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'myOrganization' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'subscription' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\">\r\n                        {{'billing' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"access2fa\">\r\n                        {{'twoStepLogin' | i18n}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PolicyService } from 'jslib/abstractions/policy.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\r\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-setup',\r\n    templateUrl: '../../settings/two-factor-setup.component.html',\r\n})\r\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\r\n    constructor(apiService: ApiService, userService: UserService,\r\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\r\n        policyService: PolicyService, private route: ActivatedRoute) {\r\n        super(apiService, userService, componentFactoryResolver, messagingService, policyService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            await super.ngOnInit();\r\n        });\r\n    }\r\n\r\n    manage(type: TwoFactorProviderType) {\r\n        switch (type) {\r\n            case TwoFactorProviderType.OrganizationDuo:\r\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\r\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\r\n                duoComp.organizationId = this.organizationId;\r\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\r\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected getTwoFactorProviders() {\r\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\r\n    }\r\n\r\n    protected filterProvider(type: TwoFactorProviderType) {\r\n        return type !== TwoFactorProviderType.OrganizationDuo;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib/models/request/updateTwoFactorAuthenticatorRequest';\r\nimport { TwoFactorAuthenticatorResponse } from 'jslib/models/response/twoFactorAuthenticatorResponse';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-authenticator',\r\n    templateUrl: 'two-factor-authenticator.component.html',\r\n})\r\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\r\n    type = TwoFactorProviderType.Authenticator;\r\n    key: string;\r\n    token: string;\r\n    formPromise: Promise<any>;\r\n\r\n    private qrScript: HTMLScriptElement;\r\n\r\n    constructor(apiService: ApiService, i18nService: I18nService,\r\n        analytics: Angulartics2, toasterService: ToasterService,\r\n        private userService: UserService, platformUtilsService: PlatformUtilsService) {\r\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\r\n        this.qrScript = window.document.createElement('script');\r\n        this.qrScript.src = 'scripts/qrious.min.js';\r\n        this.qrScript.async = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        window.document.body.appendChild(this.qrScript);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        window.document.body.removeChild(this.qrScript);\r\n    }\r\n\r\n    auth(authResponse: any) {\r\n        super.auth(authResponse);\r\n        return this.processResponse(authResponse.response);\r\n    }\r\n\r\n    submit() {\r\n        if (this.enabled) {\r\n            return super.disable(this.formPromise);\r\n        } else {\r\n            return this.enable();\r\n        }\r\n    }\r\n\r\n    protected enable() {\r\n        const request = new UpdateTwoFactorAuthenticatorRequest();\r\n        request.masterPasswordHash = this.masterPasswordHash;\r\n        request.token = this.token;\r\n        request.key = this.key;\r\n\r\n        return super.enable(async () => {\r\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\r\n            const response = await this.formPromise;\r\n            await this.processResponse(response);\r\n        });\r\n    }\r\n\r\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\r\n        this.token = null;\r\n        this.enabled = response.enabled;\r\n        this.key = response.key;\r\n        const email = await this.userService.getEmail();\r\n        window.setTimeout(() => {\r\n            const qr = new (window as any).QRious({\r\n                element: document.getElementById('qr'),\r\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\r\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\r\n                size: 160,\r\n            });\r\n        }, 100);\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\r\n                    {{'twoStepLogin' | i18n}}\r\n                    <small>{{'authenticatorAppTitle' | i18n}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\r\n                *ngIf=\"!authed\">\r\n            </app-two-factor-verify>\r\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\r\n                <div class=\"modal-body\">\r\n                    <ng-container *ngIf=\"!enabled\">\r\n                        <img src=\"images/0.png\" class=\"float-right\" alt=\"\">\r\n                        <p>{{'twoStepAuthenticatorDesc' | i18n}}</p>\r\n                        <p>\r\n                            <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong>\r\n                        </p>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"enabled\">\r\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\r\n                            <p>{{'twoStepLoginProviderEnabled' | i18n}}</p>\r\n                            {{'twoStepAuthenticatorReaddDesc' | i18n}}\r\n                        </app-callout>\r\n                        <img src=\"images/0.png\" class=\"float-right\" alt=\"\">\r\n                        <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p>\r\n                    </ng-container>\r\n                    <ul class=\"fa-ul\">\r\n                        <li>\r\n                            <i class=\"fa-li fa fa-apple\"></i>{{'iosDevices' | i18n}}:\r\n                            <a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\" target=\"_blank\"\r\n                                rel=\"noopener\">Authy</a>\r\n                        </li>\r\n                        <li>\r\n                            <i class=\"fa-li fa fa-android\"></i>{{'androidDevices' | i18n}}:\r\n                            <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy\" target=\"_blank\"\r\n                                rel=\"noopener\">Authy</a>\r\n                        </li>\r\n                        <li>\r\n                            <i class=\"fa-li fa fa-windows\"></i>{{'windowsDevices' | i18n}}:\r\n                            <a href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\" target=\"_blank\"\r\n                                rel=\"noopener\">Microsoft Authenticator</a>\r\n                        </li>\r\n                    </ul>\r\n                    <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p>\r\n                    <p *ngIf=\"!enabled\">\r\n                        <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong>\r\n                    </p>\r\n                    <hr *ngIf=\"enabled\">\r\n                    <p class=\"text-center\" [ngClass]=\"{'mb-0': enabled}\">\r\n                        <canvas id=\"qr\"></canvas><br>\r\n                        <code appA11yTitle=\"{{'key' | i18n}}\">{{key}}</code>\r\n                    </p>\r\n                    <ng-container *ngIf=\"!enabled\">\r\n                        <label for=\"token\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label>\r\n                        <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required\r\n                            appInputVerbatim>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\r\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { TwoFactorEmailRequest } from 'jslib/models/request/twoFactorEmailRequest';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\nimport { UpdateTwoFactorEmailRequest } from 'jslib/models/request/updateTwoFactorEmailRequest';\r\nimport { TwoFactorEmailResponse } from 'jslib/models/response/twoFactorEmailResponse';\r\n\r\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-email',\r\n    templateUrl: 'two-factor-email.component.html',\r\n})\r\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\r\n    type = TwoFactorProviderType.Email;\r\n    email: string;\r\n    token: string;\r\n    sentEmail: string;\r\n    formPromise: Promise<any>;\r\n    emailPromise: Promise<any>;\r\n\r\n    constructor(apiService: ApiService, i18nService: I18nService,\r\n        analytics: Angulartics2, toasterService: ToasterService,\r\n        platformUtilsService: PlatformUtilsService, private userService: UserService) {\r\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\r\n    }\r\n\r\n    auth(authResponse: any) {\r\n        super.auth(authResponse);\r\n        return this.processResponse(authResponse.response);\r\n    }\r\n\r\n    submit() {\r\n        if (this.enabled) {\r\n            return super.disable(this.formPromise);\r\n        } else {\r\n            return this.enable();\r\n        }\r\n    }\r\n\r\n    async sendEmail() {\r\n        try {\r\n            const request = new TwoFactorEmailRequest(this.email, this.masterPasswordHash);\r\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\r\n            await this.emailPromise;\r\n            this.sentEmail = this.email;\r\n        } catch { }\r\n    }\r\n\r\n    protected enable() {\r\n        const request = new UpdateTwoFactorEmailRequest();\r\n        request.masterPasswordHash = this.masterPasswordHash;\r\n        request.email = this.email;\r\n        request.token = this.token;\r\n\r\n        return super.enable(async () => {\r\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\r\n            const response = await this.formPromise;\r\n            await this.processResponse(response);\r\n        });\r\n    }\r\n\r\n    private async processResponse(response: TwoFactorEmailResponse) {\r\n        this.token = null;\r\n        this.email = response.email;\r\n        this.enabled = response.enabled;\r\n        if (!this.enabled && (this.email == null || this.email === '')) {\r\n            this.email = await this.userService.getEmail();\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"2faEmailTitle\">\r\n                    {{'twoStepLogin' | i18n}}\r\n                    <small>{{'emailTitle' | i18n}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\r\n                *ngIf=\"!authed\">\r\n            </app-two-factor-verify>\r\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\r\n                <div class=\"modal-body\">\r\n                    <ng-container *ngIf=\"enabled\">\r\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\r\n                            {{'twoStepLoginProviderEnabled' | i18n}}\r\n                        </app-callout>\r\n                        <strong>{{'email' | i18n}}:</strong> {{email}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!enabled\">\r\n                        <p class=\"d-flex\">\r\n                            <span class=\"mr-3\">{{'twoFactorEmailDesc' | i18n}}</span>\r\n                            <img src=\"images/1.png\" class=\"float-right ml-auto\" alt=\"\">\r\n                        </p>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"email\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label>\r\n                            <input id=\"email\" type=\"text\" name=\"Email\" class=\"form-control\" [(ngModel)]=\"email\" required\r\n                                inputmode=\"email\" appInputVerbatim=\"false\">\r\n                        </div>\r\n                        <div class=\"mb-3 d-flex\">\r\n                            <button #sendBtn type=\"button\"\r\n                                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\" (click)=\"sendEmail()\"\r\n                                [appApiAction]=\"emailPromise\" [disabled]=\"sendBtn.loading\">\r\n                                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                                <span>{{'sendEmail' | i18n}}</span>\r\n                            </button>\r\n                            <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\r\n                                {{'verificationCodeEmailSent' | i18n : sentEmail}}\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"token\">2. {{'twoFactorEmailEnterCode' | i18n}}</label>\r\n                            <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required\r\n                                appInputVerbatim>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\r\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { TwoFactorRecoverResponse } from 'jslib/models/response/twoFactorRescoverResponse';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-recovery',\r\n    templateUrl: 'two-factor-recovery.component.html',\r\n})\r\nexport class TwoFactorRecoveryComponent {\r\n    type = -1;\r\n    code: string;\r\n    authed: boolean;\r\n    twoFactorProviderType = TwoFactorProviderType;\r\n\r\n    constructor(private i18nService: I18nService) { }\r\n\r\n    auth(authResponse: any) {\r\n        this.authed = true;\r\n        this.processResponse(authResponse.response);\r\n    }\r\n\r\n    print() {\r\n        const w = window.open();\r\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\r\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\r\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\r\n            this.code + '</code></div>' +\r\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\r\n        w.print();\r\n        w.close();\r\n    }\r\n\r\n    private formatString(s: string) {\r\n        if (s == null) {\r\n            return null;\r\n        }\r\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\r\n    }\r\n\r\n    private processResponse(response: TwoFactorRecoverResponse) {\r\n        this.code = this.formatString(response.code);\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\r\n                    {{'twoStepLogin' | i18n}}\r\n                    <small>{{'recoveryCodeTitle' | i18n}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\r\n                *ngIf=\"!authed\">\r\n            </app-two-factor-verify>\r\n            <ng-container *ngIf=\"authed\">\r\n                <div class=\"modal-body text-center\">\r\n                    <ng-container *ngIf=\"code\">\r\n                        <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p>\r\n                        <code class=\"text-lg\">{{code}}</code>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!code\">\r\n                        {{'twoFactorRecoveryNoCode' | i18n}}\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\"\r\n                        *ngIf=\"code\">{{'printCode' | i18n}}</button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\r\nimport { UpdateTwoFactorU2fDeleteRequest } from 'jslib/models/request/updateTwoFactorU2fDeleteRequest';\r\nimport { UpdateTwoFactorU2fRequest } from 'jslib/models/request/updateTwoFactorU2fRequest';\r\nimport {\r\n    ChallengeResponse,\r\n    TwoFactorU2fResponse,\r\n} from 'jslib/models/response/twoFactorU2fResponse';\r\n\r\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-u2f',\r\n    templateUrl: 'two-factor-u2f.component.html',\r\n})\r\nexport class TwoFactorU2fComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\r\n    type = TwoFactorProviderType.U2f;\r\n    name: string;\r\n    keys: any[];\r\n    keyIdAvailable: number = null;\r\n    keysConfiguredCount = 0;\r\n    u2fError: boolean;\r\n    u2fListening: boolean;\r\n    u2fResponse: string;\r\n    challengePromise: Promise<ChallengeResponse>;\r\n    formPromise: Promise<any>;\r\n\r\n    private u2fScript: HTMLScriptElement;\r\n\r\n    constructor(apiService: ApiService, i18nService: I18nService,\r\n        analytics: Angulartics2, toasterService: ToasterService,\r\n        platformUtilsService: PlatformUtilsService, private ngZone: NgZone) {\r\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\r\n        this.u2fScript = window.document.createElement('script');\r\n        this.u2fScript.src = 'scripts/u2f.js';\r\n        this.u2fScript.async = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        window.document.body.appendChild(this.u2fScript);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        window.document.body.removeChild(this.u2fScript);\r\n    }\r\n\r\n    auth(authResponse: any) {\r\n        super.auth(authResponse);\r\n        this.processResponse(authResponse.response);\r\n    }\r\n\r\n    submit() {\r\n        if (this.u2fResponse == null || this.keyIdAvailable == null) {\r\n            // Should never happen.\r\n            return Promise.reject();\r\n        }\r\n        const request = new UpdateTwoFactorU2fRequest();\r\n        request.masterPasswordHash = this.masterPasswordHash;\r\n        request.deviceResponse = this.u2fResponse;\r\n        request.id = this.keyIdAvailable;\r\n        request.name = this.name;\r\n\r\n        return super.enable(async () => {\r\n            this.formPromise = this.apiService.putTwoFactorU2f(request);\r\n            const response = await this.formPromise;\r\n            await this.processResponse(response);\r\n        });\r\n    }\r\n\r\n    disable() {\r\n        return super.disable(this.formPromise);\r\n    }\r\n\r\n    async remove(key: any) {\r\n        if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\r\n            return;\r\n        }\r\n        const name = key.name != null ? key.name : this.i18nService.t('u2fkeyX', key.id);\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('removeU2fConfirmation'), name,\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n        const request = new UpdateTwoFactorU2fDeleteRequest();\r\n        request.id = key.id;\r\n        request.masterPasswordHash = this.masterPasswordHash;\r\n        try {\r\n            key.removePromise = this.apiService.deleteTwoFactorU2f(request);\r\n            const response = await key.removePromise;\r\n            key.removePromise = null;\r\n            await this.processResponse(response);\r\n        } catch { }\r\n    }\r\n\r\n    async readKey() {\r\n        if (this.keyIdAvailable == null) {\r\n            return;\r\n        }\r\n        const request = new PasswordVerificationRequest();\r\n        request.masterPasswordHash = this.masterPasswordHash;\r\n        try {\r\n            this.challengePromise = this.apiService.getTwoFactorU2fChallenge(request);\r\n            const challenge = await this.challengePromise;\r\n            this.readDevice(challenge);\r\n        } catch { }\r\n    }\r\n\r\n    private readDevice(u2fChallenge: ChallengeResponse) {\r\n        // tslint:disable-next-line\r\n        console.log('listening for key...');\r\n        this.resetU2f(true);\r\n        (window as any).u2f.register(u2fChallenge.appId, [{\r\n            version: u2fChallenge.version,\r\n            challenge: u2fChallenge.challenge,\r\n        }], [], (data: any) => {\r\n            this.ngZone.run(() => {\r\n                this.u2fListening = false;\r\n                if (data.errorCode) {\r\n                    this.u2fError = true;\r\n                    // tslint:disable-next-line\r\n                    console.log('error: ' + data.errorCode);\r\n                    return;\r\n                }\r\n                this.u2fResponse = JSON.stringify(data);\r\n            });\r\n        }, 15);\r\n    }\r\n\r\n    private resetU2f(listening = false) {\r\n        this.u2fResponse = null;\r\n        this.u2fError = false;\r\n        this.u2fListening = listening;\r\n    }\r\n\r\n    private processResponse(response: TwoFactorU2fResponse) {\r\n        this.resetU2f();\r\n        this.keys = [];\r\n        this.keyIdAvailable = null;\r\n        this.name = null;\r\n        this.keysConfiguredCount = 0;\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (response.keys != null) {\r\n                const key = response.keys.filter((k) => k.id === i);\r\n                if (key.length > 0) {\r\n                    this.keysConfiguredCount++;\r\n                    this.keys.push({\r\n                        id: i, name: key[0].name,\r\n                        configured: true,\r\n                        compromised: key[0].compromised,\r\n                        removePromise: null,\r\n                    });\r\n                    continue;\r\n                }\r\n            }\r\n            this.keys.push({ id: i, name: null, configured: false, compromised: false, removePromise: null });\r\n            if (this.keyIdAvailable == null) {\r\n                this.keyIdAvailable = i;\r\n            }\r\n        }\r\n        this.enabled = response.enabled;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"2faU2fTitle\">\r\n                    {{'twoStepLogin' | i18n}}\r\n                    <small>FIDO U2F</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\r\n                *ngIf=\"!authed\">\r\n            </app-two-factor-verify>\r\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\r\n                <div class=\"modal-body\">\r\n                    <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\">\r\n                        {{'twoStepLoginProviderEnabled' | i18n}}\r\n                    </app-callout>\r\n                    <app-callout type=\"warning\">\r\n                        <p>{{'twoFactorU2fWarning' | i18n}}</p>\r\n                        <ul class=\"mb-0\">\r\n                            <li>{{'twoFactorU2fSupportWeb' | i18n}}</li>\r\n                        </ul>\r\n                    </app-callout>\r\n                    <img src=\"images/4.png\" class=\"float-right ml-5\" alt=\"\">\r\n                    <ul class=\"fa-ul\">\r\n                        <li *ngFor=\"let k of keys; let i = index\" #removeKeyBtn [appApiAction]=\"k.removePromise\">\r\n                            <i class=\"fa-li fa fa-key\"></i>\r\n                            <strong *ngIf=\"!k.configured || !k.name\">{{'u2fkeyX' | i18n : i + 1}}</strong>\r\n                            <strong *ngIf=\"k.configured && k.name\">{{k.name}}</strong>\r\n                            <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\r\n                                <ng-container *ngIf=\"k.compromised\">\r\n                                    <i class=\"fa fa-fw fa-exclamation-triangle text-warning\" aria-hidden=\"true\"\r\n                                        title=\"{{'keyCompromised' | i18n}}\"></i>\r\n                                    <span class=\"sr-only\">{{'keyCompromised' | i18n}}</span>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"!k.compromised\">\r\n                                    <i class=\"fa fa-fw fa-check text-success\" aria-hidden=\"true\"\r\n                                        title=\"{{'enabled' | i18n}}\"></i>\r\n                                    <span class=\"sr-only\">{{'enabled' | i18n}}</span>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\r\n                                <i class=\"fa fa-spin fa-spinner text-muted fa-fw\" title=\"{{'loading' | i18n}}\"\r\n                                    *ngIf=\"removeKeyBtn.loading\" aria-hidden=\"true\"></i>\r\n                                -\r\n                                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{'remove' | i18n}}</a>\r\n                            </ng-container>\r\n                        </li>\r\n                    </ul>\r\n                    <hr>\r\n                    <p>{{'twoFactorU2fAdd' | i18n}}:</p>\r\n                    <ol>\r\n                        <li>{{'twoFactorU2fGiveName' | i18n}}</li>\r\n                        <li>{{'twoFactorU2fPlugInReadKey' | i18n}}</li>\r\n                        <li>{{'twoFactorU2fTouchButton' | i18n}}</li>\r\n                        <li>{{'twoFactorU2fSaveForm' | i18n}}</li>\r\n                    </ol>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-6\">\r\n                            <label for=\"name\">{{'name' | i18n}}</label>\r\n                            <input id=\"name\" type=\"text\" name=\"Name\" class=\"form-control\" [(ngModel)]=\"name\"\r\n                                [disabled]=\"!keyIdAvailable\">\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"readKey()\" class=\"btn btn-outline-secondary mr-2\"\r\n                        [disabled]=\"readKeyBtn.loading || u2fListening || !keyIdAvailable\" #readKeyBtn\r\n                        [appApiAction]=\"challengePromise\">\r\n                        {{'readKey' | i18n}}\r\n                    </button>\r\n                    <ng-container *ngIf=\"readKeyBtn.loading\">\r\n                        <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!readKeyBtn.loading\">\r\n                        <ng-container *ngIf=\"u2fListening\">\r\n                            <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i>\r\n                            {{'twoFactorU2fWaiting' | i18n}}...\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"u2fResponse\">\r\n                            <i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i>\r\n                            {{'twoFactorU2fClickSave' | i18n}}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"u2fError\">\r\n                            <i class=\"fa fa-warning text-danger\" aria-hidden=\"true\"></i>\r\n                            {{'twoFactorU2fProblemReadingTryAgain' | i18n}}\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || !u2fResponse\">\r\n                        <i class=\"fa fa-spinner fa-spin\" *ngIf=\"form.loading\" title=\"{{'loading' | i18n}}\"\r\n                            aria-hidden=\"true\"></i>\r\n                        <span *ngIf=\"!form.loading\">{{'save' | i18n}}</span>\r\n                    </button>\r\n                    <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\"\r\n                        [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\"\r\n                        *ngIf=\"enabled\">\r\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span>{{'disableAllKeys' | i18n}}</span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib/models/request/updateTwoFactorYubioOtpRequest';\r\nimport { TwoFactorYubiKeyResponse } from 'jslib/models/response/twoFactorYubiKeyResponse';\r\n\r\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\r\n\r\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\r\n\r\n@Component({\r\n    selector: 'app-two-factor-yubikey',\r\n    templateUrl: 'two-factor-yubikey.component.html',\r\n})\r\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\r\n    type = TwoFactorProviderType.Yubikey;\r\n    keys: any[];\r\n    nfc = false;\r\n\r\n    formPromise: Promise<any>;\r\n    disablePromise: Promise<any>;\r\n\r\n    constructor(apiService: ApiService, i18nService: I18nService,\r\n        analytics: Angulartics2, toasterService: ToasterService,\r\n        platformUtilsService: PlatformUtilsService) {\r\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\r\n    }\r\n\r\n    auth(authResponse: any) {\r\n        super.auth(authResponse);\r\n        this.processResponse(authResponse.response);\r\n    }\r\n\r\n    submit() {\r\n        const request = new UpdateTwoFactorYubioOtpRequest();\r\n        request.masterPasswordHash = this.masterPasswordHash;\r\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\r\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\r\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\r\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\r\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\r\n        request.nfc = this.nfc;\r\n\r\n        return super.enable(async () => {\r\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\r\n            const response = await this.formPromise;\r\n            await this.processResponse(response);\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\r\n        });\r\n    }\r\n\r\n    disable() {\r\n        return super.disable(this.disablePromise);\r\n    }\r\n\r\n    remove(key: any) {\r\n        key.existingKey = null;\r\n        key.key = null;\r\n    }\r\n\r\n    private processResponse(response: TwoFactorYubiKeyResponse) {\r\n        this.enabled = response.enabled;\r\n        this.keys = [\r\n            { key: response.key1, existingKey: this.padRight(response.key1) },\r\n            { key: response.key2, existingKey: this.padRight(response.key2) },\r\n            { key: response.key3, existingKey: this.padRight(response.key3) },\r\n            { key: response.key4, existingKey: this.padRight(response.key4) },\r\n            { key: response.key5, existingKey: this.padRight(response.key5) },\r\n        ];\r\n        this.nfc = response.nfc || !response.enabled;\r\n    }\r\n\r\n    private padRight(str: string, character = '•', size = 44) {\r\n        if (str == null || character == null || str.length >= size) {\r\n            return str;\r\n        }\r\n        const max = (size - str.length) / character.length;\r\n        for (let i = 0; i < max; i++) {\r\n            str += character;\r\n        }\r\n        return str;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\r\n                    {{'twoStepLogin' | i18n}}\r\n                    <small>YubiKey</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\r\n                *ngIf=\"!authed\">\r\n            </app-two-factor-verify>\r\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"\r\n                autocomplete=\"off\">\r\n                <div class=\"modal-body\">\r\n                    <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\">\r\n                        {{'twoStepLoginProviderEnabled' | i18n}}\r\n                    </app-callout>\r\n                    <app-callout type=\"warning\">\r\n                        <p>{{'twoFactorYubikeyWarning' | i18n}}</p>\r\n                        <ul class=\"mb-0\">\r\n                            <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li>\r\n                            <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li>\r\n                        </ul>\r\n                    </app-callout>\r\n                    <img src=\"images/3.png\" class=\"float-right\" alt=\"\">\r\n                    <p>{{'twoFactorYubikeyAdd' | i18n}}:</p>\r\n                    <ol>\r\n                        <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li>\r\n                        <li>{{'twoFactorYubikeySelectKey' | i18n}}</li>\r\n                        <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li>\r\n                        <li>{{'twoFactorYubikeySaveForm' | i18n}}</li>\r\n                    </ol>\r\n                    <hr>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\r\n                            <label for=\"key{{i + 1}}\">{{'yubikeyX' | i18n : i + 1}}</label>\r\n                            <input id=\"key{{i + 1}}\" type=\"password\" name=\"Key{{i + 1}}\" class=\"form-control\"\r\n                                [(ngModel)]=\"k.key\" *ngIf=\"!k.existingKey\" appInputVerbatim autocomplete=\"new-password\">\r\n                            <div class=\"d-flex\" *ngIf=\"k.existingKey\">\r\n                                <span class=\"mr-2\">{{k.existingKey}}</span>\r\n                                <button type=\"button\" class=\"btn btn-link text-danger ml-auto\" (click)=\"remove(k)\"\r\n                                    appA11yTitle=\"{{'remove' | i18n}}\">\r\n                                    <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <strong class=\"d-block mb-2\">{{'nfcSupport' | i18n}}</strong>\r\n                    <div class=\"form-check\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\">\r\n                        <label class=\"form-check-label\" for=\"nfc\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label>\r\n                    </div>\r\n                    <small class=\"form-text text-muted\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span>{{'save' | i18n}}</span>\r\n                    </button>\r\n                    <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\"\r\n                        [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\"\r\n                        *ngIf=\"enabled\">\r\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        <span>{{'disableAllKeys' | i18n}}</span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { EventService } from 'jslib/abstractions/event.service';\r\nimport { ExportService } from 'jslib/abstractions/export.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\r\n\r\nimport { EventType } from 'jslib/enums/eventType';\r\n\r\n@Component({\r\n    selector: 'app-org-export',\r\n    templateUrl: '../../tools/export.component.html',\r\n})\r\nexport class ExportComponent extends BaseExportComponent {\r\n    organizationId: string;\r\n\r\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\r\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\r\n        eventService: EventService, private route: ActivatedRoute) {\r\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n        });\r\n    }\r\n\r\n    getExportData() {\r\n        return this.exportService.getOrganizationExport(this.organizationId, this.format);\r\n    }\r\n\r\n    getFileName() {\r\n        return super.getFileName('org');\r\n    }\r\n\r\n    async collectEvent(): Promise<any> {\r\n        // TODO\r\n        // await this.eventService.collect(EventType.Organization_ClientExportedVault);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { AuditService } from 'jslib/abstractions/audit.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport {\r\n    ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent,\r\n} from '../../tools/exposed-passwords-report.component';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\n@Component({\r\n    selector: 'app-exposed-passwords-report',\r\n    templateUrl: '../../tools/exposed-passwords-report.component.html',\r\n})\r\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\r\n    constructor(cipherService: CipherService, auditService: AuditService,\r\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\r\n        userService: UserService, private route: ActivatedRoute) {\r\n        super(cipherService, auditService, componentFactoryResolver, messagingService, userService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organization = await this.userService.getOrganization(params.organizationId);\r\n            super.ngOnInit();\r\n        });\r\n    }\r\n\r\n    getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\r\n    }\r\n}\r\n","import { AttachmentResponse } from '../response/attachmentResponse';\r\n\r\nexport class AttachmentData {\r\n    id: string;\r\n    url: string;\r\n    fileName: string;\r\n    key: string;\r\n    size: string;\r\n    sizeName: string;\r\n\r\n    constructor(response?: AttachmentResponse) {\r\n        if (response == null) {\r\n            return;\r\n        }\r\n        this.id = response.id;\r\n        this.url = response.url;\r\n        this.fileName = response.fileName;\r\n        this.key = response.key;\r\n        this.size = response.size;\r\n        this.sizeName = response.sizeName;\r\n    }\r\n}\r\n","import { CardApi } from '../api/cardApi';\r\n\r\nexport class CardData {\r\n    cardholderName: string;\r\n    brand: string;\r\n    number: string;\r\n    expMonth: string;\r\n    expYear: string;\r\n    code: string;\r\n\r\n    constructor(data?: CardApi) {\r\n        if (data == null) {\r\n            return;\r\n        }\r\n\r\n        this.cardholderName = data.cardholderName;\r\n        this.brand = data.brand;\r\n        this.number = data.number;\r\n        this.expMonth = data.expMonth;\r\n        this.expYear = data.expYear;\r\n        this.code = data.code;\r\n    }\r\n}\r\n","import { FieldType } from '../../enums/fieldType';\r\n\r\nimport { FieldApi } from '../api/fieldApi';\r\n\r\nexport class FieldData {\r\n    type: FieldType;\r\n    name: string;\r\n    value: string;\r\n\r\n    constructor(response?: FieldApi) {\r\n        if (response == null) {\r\n            return;\r\n        }\r\n        this.type = response.type;\r\n        this.name = response.name;\r\n        this.value = response.value;\r\n    }\r\n}\r\n","import { IdentityApi } from '../api/identityApi';\r\n\r\nexport class IdentityData {\r\n    title: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    address1: string;\r\n    address2: string;\r\n    address3: string;\r\n    city: string;\r\n    state: string;\r\n    postalCode: string;\r\n    country: string;\r\n    company: string;\r\n    email: string;\r\n    phone: string;\r\n    ssn: string;\r\n    username: string;\r\n    passportNumber: string;\r\n    licenseNumber: string;\r\n\r\n    constructor(data?: IdentityApi) {\r\n        if (data == null) {\r\n            return;\r\n        }\r\n\r\n        this.title = data.title;\r\n        this.firstName = data.firstName;\r\n        this.middleName = data.middleName;\r\n        this.lastName = data.lastName;\r\n        this.address1 = data.address1;\r\n        this.address2 = data.address2;\r\n        this.address3 = data.address3;\r\n        this.city = data.city;\r\n        this.state = data.state;\r\n        this.postalCode = data.postalCode;\r\n        this.country = data.country;\r\n        this.company = data.company;\r\n        this.email = data.email;\r\n        this.phone = data.phone;\r\n        this.ssn = data.ssn;\r\n        this.username = data.username;\r\n        this.passportNumber = data.passportNumber;\r\n        this.licenseNumber = data.licenseNumber;\r\n    }\r\n}\r\n","import { LoginApi } from '../api/loginApi';\r\n\r\nimport { LoginUriData } from './loginUriData';\r\n\r\nexport class LoginData {\r\n    uris: LoginUriData[];\r\n    username: string;\r\n    password: string;\r\n    passwordRevisionDate: string;\r\n    totp: string;\r\n\r\n    constructor(data?: LoginApi) {\r\n        if (data == null) {\r\n            return;\r\n        }\r\n\r\n        this.username = data.username;\r\n        this.password = data.password;\r\n        this.passwordRevisionDate = data.passwordRevisionDate;\r\n        this.totp = data.totp;\r\n\r\n        if (data.uris) {\r\n            this.uris = data.uris.map((u) => new LoginUriData(u));\r\n        }\r\n    }\r\n}\r\n","import { UriMatchType } from '../../enums/uriMatchType';\r\n\r\nimport { LoginUriApi } from '../api/loginUriApi';\r\n\r\nexport class LoginUriData {\r\n    uri: string;\r\n    match: UriMatchType = null;\r\n\r\n    constructor(data?: LoginUriApi) {\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.uri = data.uri;\r\n        this.match = data.match;\r\n    }\r\n}\r\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\r\n\r\nexport class PasswordHistoryData {\r\n    password: string;\r\n    lastUsedDate: string;\r\n\r\n    constructor(response?: PasswordHistoryResponse) {\r\n        if (response == null) {\r\n            return;\r\n        }\r\n\r\n        this.password = response.password;\r\n        this.lastUsedDate = response.lastUsedDate;\r\n    }\r\n}\r\n","import { SecureNoteType } from '../../enums/secureNoteType';\r\n\r\nimport { SecureNoteApi } from '../api/secureNoteApi';\r\n\r\nexport class SecureNoteData {\r\n    type: SecureNoteType;\r\n\r\n    constructor(data?: SecureNoteApi) {\r\n        if (data == null) {\r\n            return;\r\n        }\r\n\r\n        this.type = data.type;\r\n    }\r\n}\r\n","import { AttachmentData } from '../data/attachmentData';\r\n\r\nimport { AttachmentView } from '../view/attachmentView';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\r\n\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nexport class Attachment extends Domain {\r\n    id: string;\r\n    url: string;\r\n    size: string;\r\n    sizeName: string;\r\n    key: CipherString;\r\n    fileName: CipherString;\r\n\r\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.size = obj.size;\r\n        this.buildDomainModel(this, obj, {\r\n            id: null,\r\n            url: null,\r\n            sizeName: null,\r\n            fileName: null,\r\n            key: null,\r\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\r\n    }\r\n\r\n    async decrypt(orgId: string): Promise<AttachmentView> {\r\n        const view = await this.decryptObj(new AttachmentView(this), {\r\n            fileName: null,\r\n        }, orgId);\r\n\r\n        if (this.key != null) {\r\n            let cryptoService: CryptoService;\r\n            const containerService = (Utils.global as any).bitwardenContainerService;\r\n            if (containerService) {\r\n                cryptoService = containerService.getCryptoService();\r\n            } else {\r\n                throw new Error('global bitwardenContainerService not initialized.');\r\n            }\r\n\r\n            try {\r\n                const orgKey = await cryptoService.getOrgKey(orgId);\r\n                const decValue = await cryptoService.decryptToBytes(this.key, orgKey);\r\n                view.key = new SymmetricCryptoKey(decValue);\r\n            } catch (e) {\r\n                // TODO: error?\r\n            }\r\n        }\r\n\r\n        return view;\r\n    }\r\n\r\n    toAttachmentData(): AttachmentData {\r\n        const a = new AttachmentData();\r\n        a.size = this.size;\r\n        this.buildDataModel(this, a, {\r\n            id: null,\r\n            url: null,\r\n            sizeName: null,\r\n            fileName: null,\r\n            key: null,\r\n        }, ['id', 'url', 'sizeName']);\r\n        return a;\r\n    }\r\n}\r\n","import { View } from './view';\r\n\r\nimport { Attachment } from '../domain/attachment';\r\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\r\n\r\nexport class AttachmentView implements View {\r\n    id: string = null;\r\n    url: string = null;\r\n    size: string = null;\r\n    sizeName: string = null;\r\n    fileName: string = null;\r\n    key: SymmetricCryptoKey = null;\r\n\r\n    constructor(a?: Attachment) {\r\n        if (!a) {\r\n            return;\r\n        }\r\n\r\n        this.id = a.id;\r\n        this.url = a.url;\r\n        this.size = a.size;\r\n        this.sizeName = a.sizeName;\r\n    }\r\n\r\n    get fileSize(): number {\r\n        try {\r\n            if (this.size != null) {\r\n                return parseInt(this.size, null);\r\n            }\r\n        } catch { }\r\n        return 0;\r\n    }\r\n}\r\n","import { EncryptionType } from '../../enums/encryptionType';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nexport class SymmetricCryptoKey {\r\n    key: ArrayBuffer;\r\n    encKey?: ArrayBuffer;\r\n    macKey?: ArrayBuffer;\r\n    encType: EncryptionType;\r\n\r\n    keyB64: string;\r\n    encKeyB64: string;\r\n    macKeyB64: string;\r\n\r\n    meta: any;\r\n\r\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\r\n        if (key == null) {\r\n            throw new Error('Must provide key');\r\n        }\r\n\r\n        if (encType == null) {\r\n            if (key.byteLength === 32) {\r\n                encType = EncryptionType.AesCbc256_B64;\r\n            } else if (key.byteLength === 64) {\r\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\r\n            } else {\r\n                throw new Error('Unable to determine encType.');\r\n            }\r\n        }\r\n\r\n        this.key = key;\r\n        this.encType = encType;\r\n\r\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\r\n            this.encKey = key;\r\n            this.macKey = null;\r\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\r\n            this.encKey = key.slice(0, 16);\r\n            this.macKey = key.slice(16, 32);\r\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\r\n            this.encKey = key.slice(0, 32);\r\n            this.macKey = key.slice(32, 64);\r\n        } else {\r\n            throw new Error('Unsupported encType/key length.');\r\n        }\r\n\r\n        if (this.key != null) {\r\n            this.keyB64 = Utils.fromBufferToB64(this.key);\r\n        }\r\n        if (this.encKey != null) {\r\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\r\n        }\r\n        if (this.macKey != null) {\r\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\r\n        }\r\n    }\r\n}\r\n","import { CardData } from '../data/cardData';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nimport { CardView } from '../view/cardView';\r\n\r\nexport class Card extends Domain {\r\n    cardholderName: CipherString;\r\n    brand: CipherString;\r\n    number: CipherString;\r\n    expMonth: CipherString;\r\n    expYear: CipherString;\r\n    code: CipherString;\r\n\r\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            cardholderName: null,\r\n            brand: null,\r\n            number: null,\r\n            expMonth: null,\r\n            expYear: null,\r\n            code: null,\r\n        }, alreadyEncrypted, []);\r\n    }\r\n\r\n    decrypt(orgId: string): Promise<CardView> {\r\n        return this.decryptObj(new CardView(this), {\r\n            cardholderName: null,\r\n            brand: null,\r\n            number: null,\r\n            expMonth: null,\r\n            expYear: null,\r\n            code: null,\r\n        }, orgId);\r\n    }\r\n\r\n    toCardData(): CardData {\r\n        const c = new CardData();\r\n        this.buildDataModel(this, c, {\r\n            cardholderName: null,\r\n            brand: null,\r\n            number: null,\r\n            expMonth: null,\r\n            expYear: null,\r\n            code: null,\r\n        });\r\n        return c;\r\n    }\r\n}\r\n","import { FieldType } from '../../enums/fieldType';\r\n\r\nimport { FieldData } from '../data/fieldData';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nimport { FieldView } from '../view/fieldView';\r\n\r\nexport class Field extends Domain {\r\n    name: CipherString;\r\n    value: CipherString;\r\n    type: FieldType;\r\n\r\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.type = obj.type;\r\n        this.buildDomainModel(this, obj, {\r\n            name: null,\r\n            value: null,\r\n        }, alreadyEncrypted, []);\r\n    }\r\n\r\n    decrypt(orgId: string): Promise<FieldView> {\r\n        return this.decryptObj(new FieldView(this), {\r\n            name: null,\r\n            value: null,\r\n        }, orgId);\r\n    }\r\n\r\n    toFieldData(): FieldData {\r\n        const f = new FieldData();\r\n        this.buildDataModel(this, f, {\r\n            name: null,\r\n            value: null,\r\n            type: null,\r\n        }, ['type']);\r\n        return f;\r\n    }\r\n}\r\n","import { IdentityData } from '../data/identityData';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nimport { IdentityView } from '../view/identityView';\r\n\r\nexport class Identity extends Domain {\r\n    title: CipherString;\r\n    firstName: CipherString;\r\n    middleName: CipherString;\r\n    lastName: CipherString;\r\n    address1: CipherString;\r\n    address2: CipherString;\r\n    address3: CipherString;\r\n    city: CipherString;\r\n    state: CipherString;\r\n    postalCode: CipherString;\r\n    country: CipherString;\r\n    company: CipherString;\r\n    email: CipherString;\r\n    phone: CipherString;\r\n    ssn: CipherString;\r\n    username: CipherString;\r\n    passportNumber: CipherString;\r\n    licenseNumber: CipherString;\r\n\r\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            title: null,\r\n            firstName: null,\r\n            middleName: null,\r\n            lastName: null,\r\n            address1: null,\r\n            address2: null,\r\n            address3: null,\r\n            city: null,\r\n            state: null,\r\n            postalCode: null,\r\n            country: null,\r\n            company: null,\r\n            email: null,\r\n            phone: null,\r\n            ssn: null,\r\n            username: null,\r\n            passportNumber: null,\r\n            licenseNumber: null,\r\n        }, alreadyEncrypted, []);\r\n    }\r\n\r\n    decrypt(orgId: string): Promise<IdentityView> {\r\n        return this.decryptObj(new IdentityView(this), {\r\n            title: null,\r\n            firstName: null,\r\n            middleName: null,\r\n            lastName: null,\r\n            address1: null,\r\n            address2: null,\r\n            address3: null,\r\n            city: null,\r\n            state: null,\r\n            postalCode: null,\r\n            country: null,\r\n            company: null,\r\n            email: null,\r\n            phone: null,\r\n            ssn: null,\r\n            username: null,\r\n            passportNumber: null,\r\n            licenseNumber: null,\r\n        }, orgId);\r\n    }\r\n\r\n    toIdentityData(): IdentityData {\r\n        const i = new IdentityData();\r\n        this.buildDataModel(this, i, {\r\n            title: null,\r\n            firstName: null,\r\n            middleName: null,\r\n            lastName: null,\r\n            address1: null,\r\n            address2: null,\r\n            address3: null,\r\n            city: null,\r\n            state: null,\r\n            postalCode: null,\r\n            country: null,\r\n            company: null,\r\n            email: null,\r\n            phone: null,\r\n            ssn: null,\r\n            username: null,\r\n            passportNumber: null,\r\n            licenseNumber: null,\r\n        });\r\n        return i;\r\n    }\r\n}\r\n","import { LoginUri } from './loginUri';\r\n\r\nimport { LoginData } from '../data/loginData';\r\n\r\nimport { LoginView } from '../view/loginView';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nexport class Login extends Domain {\r\n    uris: LoginUri[];\r\n    username: CipherString;\r\n    password: CipherString;\r\n    passwordRevisionDate?: Date;\r\n    totp: CipherString;\r\n\r\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.passwordRevisionDate = obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\r\n        this.buildDomainModel(this, obj, {\r\n            username: null,\r\n            password: null,\r\n            totp: null,\r\n        }, alreadyEncrypted, []);\r\n\r\n        if (obj.uris) {\r\n            this.uris = [];\r\n            obj.uris.forEach((u) => {\r\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\r\n            });\r\n        }\r\n    }\r\n\r\n    async decrypt(orgId: string): Promise<LoginView> {\r\n        const view = await this.decryptObj(new LoginView(this), {\r\n            username: null,\r\n            password: null,\r\n            totp: null,\r\n        }, orgId);\r\n\r\n        if (this.uris != null) {\r\n            view.uris = [];\r\n            for (let i = 0; i < this.uris.length; i++) {\r\n                const uri = await this.uris[i].decrypt(orgId);\r\n                view.uris.push(uri);\r\n            }\r\n        }\r\n\r\n        return view;\r\n    }\r\n\r\n    toLoginData(): LoginData {\r\n        const l = new LoginData();\r\n        l.passwordRevisionDate = this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\r\n        this.buildDataModel(this, l, {\r\n            username: null,\r\n            password: null,\r\n            totp: null,\r\n        });\r\n\r\n        if (this.uris != null && this.uris.length > 0) {\r\n            l.uris = [];\r\n            this.uris.forEach((u) => {\r\n                l.uris.push(u.toLoginUriData());\r\n            });\r\n        }\r\n\r\n        return l;\r\n    }\r\n}\r\n","import { UriMatchType } from '../../enums/uriMatchType';\r\n\r\nimport { LoginUriData } from '../data/loginUriData';\r\n\r\nimport { LoginUriView } from '../view/loginUriView';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nexport class LoginUri extends Domain {\r\n    uri: CipherString;\r\n    match: UriMatchType;\r\n\r\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.match = obj.match;\r\n        this.buildDomainModel(this, obj, {\r\n            uri: null,\r\n        }, alreadyEncrypted, []);\r\n    }\r\n\r\n    decrypt(orgId: string): Promise<LoginUriView> {\r\n        return this.decryptObj(new LoginUriView(this), {\r\n            uri: null,\r\n        }, orgId);\r\n    }\r\n\r\n    toLoginUriData(): LoginUriData {\r\n        const u = new LoginUriData();\r\n        this.buildDataModel(this, u, {\r\n            uri: null,\r\n        }, ['match']);\r\n        return u;\r\n    }\r\n}\r\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\r\n\r\nexport class Password extends Domain {\r\n    password: CipherString;\r\n    lastUsedDate: Date;\r\n\r\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            password: null,\r\n        }, alreadyEncrypted);\r\n        this.lastUsedDate = new Date(obj.lastUsedDate);\r\n    }\r\n\r\n    decrypt(orgId: string): Promise<PasswordHistoryView> {\r\n         return this.decryptObj(new PasswordHistoryView(this), {\r\n            password: null,\r\n        }, orgId);\r\n    }\r\n\r\n    toPasswordHistoryData(): PasswordHistoryData {\r\n        const ph = new PasswordHistoryData();\r\n        ph.lastUsedDate = this.lastUsedDate.toISOString();\r\n        this.buildDataModel(this, ph, {\r\n            password: null,\r\n        });\r\n        return ph;\r\n    }\r\n}\r\n","import { SecureNoteType } from '../../enums/secureNoteType';\r\n\r\nimport { SecureNoteData } from '../data/secureNoteData';\r\n\r\nimport Domain from './domainBase';\r\n\r\nimport { SecureNoteView } from '../view/secureNoteView';\r\n\r\nexport class SecureNote extends Domain {\r\n    type: SecureNoteType;\r\n\r\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.type = obj.type;\r\n    }\r\n\r\n    decrypt(orgId: string): Promise<SecureNoteView> {\r\n        return Promise.resolve(new SecureNoteView(this));\r\n    }\r\n\r\n    toSecureNoteData(): SecureNoteData {\r\n        const n = new SecureNoteData();\r\n        n.type = this.type;\r\n        return n;\r\n    }\r\n}\r\n","import { CipherRequest } from './cipherRequest';\r\n\r\nimport { Cipher } from '../domain/cipher';\r\n\r\nexport class CipherCreateRequest {\r\n    cipher: CipherRequest;\r\n    collectionIds: string[];\r\n\r\n    constructor(cipher: Cipher) {\r\n        this.cipher = new CipherRequest(cipher);\r\n        this.collectionIds = cipher.collectionIds;\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nexport class CardApi extends BaseResponse {\r\n    cardholderName: string;\r\n    brand: string;\r\n    number: string;\r\n    expMonth: string;\r\n    expYear: string;\r\n    code: string;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.cardholderName = this.getResponseProperty('CardholderName');\r\n        this.brand = this.getResponseProperty('Brand');\r\n        this.number = this.getResponseProperty('Number');\r\n        this.expMonth = this.getResponseProperty('ExpMonth');\r\n        this.expYear = this.getResponseProperty('ExpYear');\r\n        this.code = this.getResponseProperty('Code');\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nimport { FieldType } from '../../enums/fieldType';\r\n\r\nexport class FieldApi extends BaseResponse {\r\n    name: string;\r\n    value: string;\r\n    type: FieldType;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.type = this.getResponseProperty('Type');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.value = this.getResponseProperty('Value');\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nexport class IdentityApi extends BaseResponse {\r\n    title: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    address1: string;\r\n    address2: string;\r\n    address3: string;\r\n    city: string;\r\n    state: string;\r\n    postalCode: string;\r\n    country: string;\r\n    company: string;\r\n    email: string;\r\n    phone: string;\r\n    ssn: string;\r\n    username: string;\r\n    passportNumber: string;\r\n    licenseNumber: string;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.title = this.getResponseProperty('Title');\r\n        this.firstName = this.getResponseProperty('FirstName');\r\n        this.middleName = this.getResponseProperty('MiddleName');\r\n        this.lastName = this.getResponseProperty('LastName');\r\n        this.address1 = this.getResponseProperty('Address1');\r\n        this.address2 = this.getResponseProperty('Address2');\r\n        this.address3 = this.getResponseProperty('Address3');\r\n        this.city = this.getResponseProperty('City');\r\n        this.state = this.getResponseProperty('State');\r\n        this.postalCode = this.getResponseProperty('PostalCode');\r\n        this.country = this.getResponseProperty('Country');\r\n        this.company = this.getResponseProperty('Company');\r\n        this.email = this.getResponseProperty('Email');\r\n        this.phone = this.getResponseProperty('Phone');\r\n        this.ssn = this.getResponseProperty('SSN');\r\n        this.username = this.getResponseProperty('Username');\r\n        this.passportNumber = this.getResponseProperty('PassportNumber');\r\n        this.licenseNumber = this.getResponseProperty('LicenseNumber');\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nimport { LoginUriApi } from './loginUriApi';\r\n\r\nexport class LoginApi extends BaseResponse {\r\n    uris: LoginUriApi[];\r\n    username: string;\r\n    password: string;\r\n    passwordRevisionDate: string;\r\n    totp: string;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.username = this.getResponseProperty('Username');\r\n        this.password = this.getResponseProperty('Password');\r\n        this.passwordRevisionDate = this.getResponseProperty('PasswordRevisionDate');\r\n        this.totp = this.getResponseProperty('Totp');\r\n\r\n        const uris = this.getResponseProperty('Uris');\r\n        if (uris != null) {\r\n            this.uris = uris.map((u: any) => new LoginUriApi(u));\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nimport { UriMatchType } from '../../enums/uriMatchType';\r\n\r\nexport class LoginUriApi extends BaseResponse {\r\n    uri: string;\r\n    match: UriMatchType = null;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.uri = this.getResponseProperty('Uri');\r\n        const match = this.getResponseProperty('Match');\r\n        this.match = match != null ? match : null;\r\n    }\r\n}\r\n","import { BaseResponse } from '../response/baseResponse';\r\n\r\nimport { SecureNoteType } from '../../enums/secureNoteType';\r\n\r\nexport class SecureNoteApi extends BaseResponse {\r\n    type: SecureNoteType;\r\n\r\n    constructor(data: any = null) {\r\n        super(data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        this.type = this.getResponseProperty('Type');\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appFallbackSrc]',\r\n})\r\nexport class FallbackSrcDirective {\r\n    @Input('appFallbackSrc') appFallbackSrc: string;\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    @HostListener('error') onError() {\r\n        this.el.nativeElement.src = this.appFallbackSrc;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { ImportService } from 'jslib/abstractions/import.service';\r\n\r\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\r\n\r\n@Component({\r\n    selector: 'app-org-import',\r\n    templateUrl: '../../tools/import.component.html',\r\n})\r\nexport class ImportComponent extends BaseImportComponent {\r\n    constructor(i18nService: I18nService, analytics: Angulartics2,\r\n        toasterService: ToasterService, importService: ImportService,\r\n        router: Router, private route: ActivatedRoute) {\r\n        super(i18nService, analytics, toasterService, importService, router);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organizationId = params.organizationId;\r\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\r\n            super.ngOnInit();\r\n        });\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport {\r\n    InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent,\r\n} from '../../tools/inactive-two-factor-report.component';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\n@Component({\r\n    selector: 'app-inactive-two-factor-report',\r\n    templateUrl: '../../tools/inactive-two-factor-report.component.html',\r\n})\r\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\r\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\r\n        messagingService: MessagingService, userService: UserService,\r\n        private route: ActivatedRoute) {\r\n        super(cipherService, componentFactoryResolver, messagingService, userService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organization = await this.userService.getOrganization(params.organizationId);\r\n            await super.ngOnInit();\r\n        });\r\n    }\r\n\r\n    getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport {\r\n    ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent,\r\n} from '../../tools/reused-passwords-report.component';\r\n\r\n@Component({\r\n    selector: 'app-reused-passwords-report',\r\n    templateUrl: '../../tools/reused-passwords-report.component.html',\r\n})\r\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\r\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\r\n        messagingService: MessagingService, userService: UserService,\r\n        private route: ActivatedRoute) {\r\n        super(cipherService, componentFactoryResolver, messagingService, userService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organization = await this.userService.getOrganization(params.organizationId);\r\n            await super.ngOnInit();\r\n        });\r\n    }\r\n\r\n    getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\n@Component({\r\n    selector: 'app-org-tools',\r\n    templateUrl: 'tools.component.html',\r\n})\r\nexport class ToolsComponent {\r\n    organization: Organization;\r\n    accessReports = false;\r\n\r\n    constructor(private route: ActivatedRoute, private userService: UserService,\r\n        private messagingService: MessagingService) { }\r\n\r\n    ngOnInit() {\r\n        this.route.parent.params.subscribe(async (params) => {\r\n            this.organization = await this.userService.getOrganization(params.organizationId);\r\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\r\n            // since all paid plans include useTotp\r\n            this.accessReports = this.organization.useTotp;\r\n        });\r\n    }\r\n\r\n    upgradeOrganization() {\r\n        this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\r\n    }\r\n}\r\n","<div class=\"container page-content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <div class=\"card mb-4\">\r\n                <div class=\"card-header\">{{'tools' | i18n}}</div>\r\n                <div class=\"list-group list-group-flush\">\r\n                    <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'importData' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'exportVault' | i18n}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-header d-flex\">\r\n                    {{'reports' | i18n}}\r\n                    <div class=\"ml-auto\">\r\n                        <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!accessReports\"\r\n                            (click)=\"upgradeOrganization()\">\r\n                            {{'upgrade' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"list-group list-group-flush\">\r\n                    <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'exposedPasswordsReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'reusedPasswordsReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'weakPasswordsReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'unsecuredWebsitesReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'inactive2faReport' | i18n}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport {\r\n    UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent,\r\n} from '../../tools/unsecured-websites-report.component';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\n@Component({\r\n    selector: 'app-unsecured-websites-report',\r\n    templateUrl: '../../tools/unsecured-websites-report.component.html',\r\n})\r\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\r\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\r\n        messagingService: MessagingService, userService: UserService,\r\n        private route: ActivatedRoute) {\r\n        super(cipherService, componentFactoryResolver, messagingService, userService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organization = await this.userService.getOrganization(params.organizationId);\r\n            await super.ngOnInit();\r\n        });\r\n    }\r\n\r\n    getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport {\r\n    WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent,\r\n} from '../../tools/weak-passwords-report.component';\r\n\r\n@Component({\r\n    selector: 'app-weak-passwords-report',\r\n    templateUrl: '../../tools/weak-passwords-report.component.html',\r\n})\r\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\r\n    constructor(cipherService: CipherService, passwordGenerationService: PasswordGenerationService,\r\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\r\n        userService: UserService, private route: ActivatedRoute) {\r\n        super(cipherService, passwordGenerationService, componentFactoryResolver, messagingService, userService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.route.parent.parent.params.subscribe(async (params) => {\r\n            this.organization = await this.userService.getOrganization(params.organizationId);\r\n            await super.ngOnInit();\r\n        });\r\n    }\r\n\r\n    getAllCiphers(): Promise<CipherView[]> {\r\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\n\r\nimport { ModalComponent } from '../../modal.component';\r\n\r\nimport { EntityEventsComponent } from '../manage/entity-events.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport { AttachmentsComponent } from './attachments.component';\r\nimport { CiphersComponent } from './ciphers.component';\r\nimport { CollectionsComponent } from './collections.component';\r\nimport { GroupingsComponent } from './groupings.component';\r\n\r\nconst BroadcasterSubscriptionId = 'OrgVaultComponent';\r\n\r\n@Component({\r\n    selector: 'app-org-vault',\r\n    templateUrl: 'vault.component.html',\r\n})\r\nexport class VaultComponent implements OnInit, OnDestroy {\r\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\r\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\r\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\r\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\r\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\r\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\r\n\r\n    organization: Organization;\r\n    collectionId: string = null;\r\n    type: CipherType = null;\r\n    deleted: boolean = false;\r\n\r\n    modal: ModalComponent = null;\r\n\r\n    constructor(private route: ActivatedRoute, private userService: UserService,\r\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\r\n        private syncService: SyncService, private i18nService: I18nService,\r\n        private componentFactoryResolver: ComponentFactoryResolver, private messagingService: MessagingService,\r\n        private broadcasterService: BroadcasterService, private ngZone: NgZone) { }\r\n\r\n    ngOnInit() {\r\n        const queryParams = this.route.parent.params.subscribe(async (params) => {\r\n            this.organization = await this.userService.getOrganization(params.organizationId);\r\n            this.groupingsComponent.organization = this.organization;\r\n            this.ciphersComponent.organization = this.organization;\r\n\r\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\r\n                if (!this.organization.isAdmin) {\r\n                    await this.syncService.fullSync(false);\r\n                    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\r\n                        this.ngZone.run(async () => {\r\n                            switch (message.command) {\r\n                                case 'syncCompleted':\r\n                                    if (message.successfully) {\r\n                                        await Promise.all([\r\n                                            this.groupingsComponent.load(),\r\n                                            this.ciphersComponent.refresh(),\r\n                                        ]);\r\n                                        this.changeDetectorRef.detectChanges();\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                await this.groupingsComponent.load();\r\n\r\n                if (qParams == null) {\r\n                    this.groupingsComponent.selectedAll = true;\r\n                    await this.ciphersComponent.reload();\r\n                } else {\r\n                    if (qParams.deleted) {\r\n                        this.groupingsComponent.selectedTrash = true;\r\n                        await this.filterDeleted(true);\r\n                    } else if (qParams.type) {\r\n                        const t = parseInt(qParams.type, null);\r\n                        this.groupingsComponent.selectedType = t;\r\n                        await this.filterCipherType(t, true);\r\n                    } else if (qParams.collectionId) {\r\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\r\n                        await this.filterCollection(qParams.collectionId, true);\r\n                    } else {\r\n                        this.groupingsComponent.selectedAll = true;\r\n                        await this.ciphersComponent.reload();\r\n                    }\r\n                }\r\n\r\n                if (qParams.viewEvents != null) {\r\n                    const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\r\n                    if (cipher.length > 0) {\r\n                        this.viewEvents(cipher[0]);\r\n                    }\r\n                }\r\n\r\n                if (queryParamsSub != null) {\r\n                    queryParamsSub.unsubscribe();\r\n                }\r\n            });\r\n\r\n            if (queryParams != null) {\r\n                queryParams.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\r\n    }\r\n\r\n    async clearGroupingFilters() {\r\n        this.ciphersComponent.showAddNew = true;\r\n        this.ciphersComponent.deleted = false;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\r\n        await this.ciphersComponent.applyFilter();\r\n        this.clearFilters();\r\n        this.go();\r\n    }\r\n\r\n    async filterCipherType(type: CipherType, load = false) {\r\n        this.ciphersComponent.showAddNew = true;\r\n        this.ciphersComponent.deleted = false;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\r\n        const filter = (c: CipherView) => c.type === type;\r\n        if (load) {\r\n            await this.ciphersComponent.reload(filter);\r\n        } else {\r\n            await this.ciphersComponent.applyFilter(filter);\r\n        }\r\n        this.clearFilters();\r\n        this.type = type;\r\n        this.go();\r\n    }\r\n\r\n    async filterCollection(collectionId: string, load = false) {\r\n        this.ciphersComponent.showAddNew = true;\r\n        this.ciphersComponent.deleted = false;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\r\n        const filter = (c: CipherView) => {\r\n            if (collectionId === 'unassigned') {\r\n                return c.collectionIds == null || c.collectionIds.length === 0;\r\n            } else {\r\n                return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\r\n            }\r\n        };\r\n        if (load) {\r\n            await this.ciphersComponent.reload(filter);\r\n        } else {\r\n            await this.ciphersComponent.applyFilter(filter);\r\n        }\r\n        this.clearFilters();\r\n        this.collectionId = collectionId;\r\n        this.go();\r\n    }\r\n\r\n    async filterDeleted(load: boolean = false) {\r\n        this.ciphersComponent.showAddNew = false;\r\n        this.ciphersComponent.deleted = true;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\r\n        if (load) {\r\n            await this.ciphersComponent.reload(null, true);\r\n        } else {\r\n            await this.ciphersComponent.applyFilter(null);\r\n        }\r\n        this.clearFilters();\r\n        this.deleted = true;\r\n        this.go();\r\n    }\r\n\r\n    filterSearchText(searchText: string) {\r\n        this.ciphersComponent.searchText = searchText;\r\n        this.ciphersComponent.search(200);\r\n    }\r\n\r\n    editCipherAttachments(cipher: CipherView) {\r\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\r\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\r\n            return;\r\n        }\r\n\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\r\n\r\n        childComponent.organization = this.organization;\r\n        childComponent.cipherId = cipher.id;\r\n        let madeAttachmentChanges = false;\r\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\r\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n            if (madeAttachmentChanges) {\r\n                await this.ciphersComponent.refresh();\r\n            }\r\n            madeAttachmentChanges = false;\r\n        });\r\n    }\r\n\r\n    editCipherCollections(cipher: CipherView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\r\n\r\n        if (this.organization.isAdmin) {\r\n            childComponent.collectionIds = cipher.collectionIds;\r\n            childComponent.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\r\n        }\r\n        childComponent.organization = this.organization;\r\n        childComponent.cipherId = cipher.id;\r\n        childComponent.onSavedCollections.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    addCipher() {\r\n        const component = this.editCipher(null);\r\n        component.organizationId = this.organization.id;\r\n        component.type = this.type;\r\n        if (this.organization.isAdmin) {\r\n            component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\r\n        }\r\n        if (this.collectionId != null) {\r\n            component.collectionIds = [this.collectionId];\r\n        }\r\n    }\r\n\r\n    editCipher(cipher: CipherView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\r\n\r\n        childComponent.organization = this.organization;\r\n        childComponent.cipherId = cipher == null ? null : cipher.id;\r\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n\r\n        return childComponent;\r\n    }\r\n\r\n    cloneCipher(cipher: CipherView) {\r\n        const component = this.editCipher(cipher);\r\n        component.cloneMode = true;\r\n        component.organizationId = this.organization.id;\r\n        if (this.organization.isAdmin) {\r\n            component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\r\n        }\r\n        // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\r\n        // in the add-edit componenet\r\n        component.collectionIds = cipher.collectionIds;\r\n    }\r\n\r\n    async viewEvents(cipher: CipherView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<EntityEventsComponent>(\r\n            EntityEventsComponent, this.eventsModalRef);\r\n\r\n        childComponent.name = cipher.name;\r\n        childComponent.organizationId = this.organization.id;\r\n        childComponent.entityId = cipher.id;\r\n        childComponent.showUser = true;\r\n        childComponent.entity = 'cipher';\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    private clearFilters() {\r\n        this.collectionId = null;\r\n        this.type = null;\r\n        this.deleted = false;\r\n    }\r\n\r\n    private go(queryParams: any = null) {\r\n        if (queryParams == null) {\r\n            queryParams = {\r\n                type: this.type,\r\n                collectionId: this.collectionId,\r\n                deleted: this.deleted ? true : null,\r\n            };\r\n        }\r\n\r\n        this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams: queryParams,\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n}\r\n","<div class=\"container page-content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <app-org-vault-groupings [showFolders]=\"false\" [showFavorites]=\"false\" [showTrash]=\"true\"\r\n                (onAllClicked)=\"clearGroupingFilters()\" (onCipherTypeClicked)=\"filterCipherType($event)\"\r\n                (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\"\r\n                (onTrashClicked)=\"filterDeleted()\">\r\n            </app-org-vault-groupings>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <div class=\"page-header d-flex\">\r\n                <h1>\r\n                    {{'vault' | i18n}}\r\n                    <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\r\n                        <ng-container *ngIf=\"actionSpinner.loading\">\r\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n                        </ng-container>\r\n                    </small>\r\n                </h1>\r\n                <div class=\"ml-auto d-flex\">\r\n                    <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\"\r\n                        [organization]=\"organization\">\r\n                    </app-vault-bulk-actions>\r\n                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm ml-auto\" (click)=\"addCipher()\"\r\n                        *ngIf=\"!deleted\">\r\n                        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <app-org-vault-ciphers (onCipherClicked)=\"editCipher($event)\"\r\n                (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\"\r\n                (onCollectionsClicked)=\"editCipherCollections($event)\" (onEventsClicked)=\"viewEvents($event)\"\r\n                (onCloneClicked)=\"cloneCipher($event)\">\r\n            </app-org-vault-ciphers>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #attachments></ng-template>\r\n<ng-template #cipherAddEdit></ng-template>\r\n<ng-template #collections></ng-template>\r\n<ng-template #eventsTemplate></ng-template>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherData } from 'jslib/models/data/cipherData';\r\nimport { Cipher } from 'jslib/models/domain/cipher';\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\nimport { AttachmentView } from 'jslib/models/view/attachmentView';\r\n\r\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\r\n\r\n@Component({\r\n    selector: 'app-org-vault-attachments',\r\n    templateUrl: '../../vault/attachments.component.html',\r\n})\r\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\r\n    organization: Organization;\r\n\r\n    constructor(cipherService: CipherService, i18nService: I18nService,\r\n        cryptoService: CryptoService, userService: UserService,\r\n        platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\r\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService);\r\n    }\r\n\r\n    protected async reupload(attachment: AttachmentView) {\r\n        if (this.organization.isAdmin && this.showFixOldAttachments(attachment)) {\r\n            await super.reuploadCipherAttachment(attachment, true);\r\n        }\r\n    }\r\n\r\n    protected async loadCipher() {\r\n        if (!this.organization.isAdmin) {\r\n            return await super.loadCipher();\r\n        }\r\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\r\n        return new Cipher(new CipherData(response));\r\n    }\r\n\r\n    protected saveCipherAttachment(file: File) {\r\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.isAdmin);\r\n    }\r\n\r\n    protected deleteCipherAttachment(attachmentId: string) {\r\n        if (!this.organization.isAdmin) {\r\n            return super.deleteCipherAttachment(attachmentId);\r\n        }\r\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\r\n    }\r\n\r\n    protected showFixOldAttachments(attachment: AttachmentView) {\r\n        return attachment.key == null && this.organization.isAdmin;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { CipherData } from 'jslib/models/data/cipherData';\r\nimport { Cipher } from 'jslib/models/domain/cipher';\r\nimport { Organization } from 'jslib/models/domain/organization';\r\nimport { CipherCollectionsRequest } from 'jslib/models/request/cipherCollectionsRequest';\r\n\r\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\r\n\r\n@Component({\r\n    selector: 'app-org-vault-collections',\r\n    templateUrl: '../../vault/collections.component.html',\r\n})\r\nexport class CollectionsComponent extends BaseCollectionsComponent {\r\n    organization: Organization;\r\n\r\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\r\n        i18nService: I18nService, cipherService: CipherService,\r\n        private apiService: ApiService) {\r\n        super(collectionService, platformUtilsService, i18nService, cipherService);\r\n        this.allowSelectNone = true;\r\n    }\r\n\r\n    protected async loadCipher() {\r\n        if (!this.organization.isAdmin) {\r\n            return await super.loadCipher();\r\n        }\r\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\r\n        return new Cipher(new CipherData(response));\r\n    }\r\n\r\n    protected loadCipherCollections() {\r\n        if (!this.organization.isAdmin) {\r\n            return super.loadCipherCollections();\r\n        }\r\n        return this.collectionIds;\r\n    }\r\n\r\n    protected loadCollections() {\r\n        if (!this.organization.isAdmin) {\r\n            return super.loadCollections();\r\n        }\r\n        return Promise.resolve(this.collections);\r\n    }\r\n\r\n    protected saveCollections() {\r\n        if (this.organization.isAdmin) {\r\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\r\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\r\n        } else {\r\n            return super.saveCollections();\r\n        }\r\n    }\r\n}\r\n","export class CipherCollectionsRequest {\r\n    collectionIds: string[];\r\n\r\n    constructor(collectionIds: string[]) {\r\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\nimport { CipherBulkDeleteRequest } from 'jslib/models/request/cipherBulkDeleteRequest';\r\n\r\n@Component({\r\n    selector: 'app-vault-bulk-delete',\r\n    templateUrl: 'bulk-delete.component.html',\r\n})\r\nexport class BulkDeleteComponent {\r\n    @Input() cipherIds: string[] = [];\r\n    @Input() permanent: boolean = false;\r\n    @Input() organization: Organization;\r\n    @Output() onDeleted = new EventEmitter();\r\n\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\r\n        private toasterService: ToasterService, private i18nService: I18nService,\r\n        private apiService: ApiService) { }\r\n\r\n    async submit() {\r\n        if (!this.organization || !this.organization.isAdmin) {\r\n            await this.deleteCiphers();\r\n        } else {\r\n            await this.deleteCiphersAdmin();\r\n        }\r\n\r\n        await this.formPromise;\r\n\r\n        this.onDeleted.emit();\r\n        this.analytics.eventTrack.next({ action: 'Bulk Deleted Items' });\r\n        this.toasterService.popAsync('success', null, this.i18nService.t(this.permanent ? 'permanentlyDeletedItems'\r\n            : 'deletedItems'));\r\n    }\r\n\r\n    private async deleteCiphers() {\r\n        if (this.permanent) {\r\n            this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\r\n        } else {\r\n            this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\r\n        }\r\n    }\r\n\r\n    private async deleteCiphersAdmin() {\r\n        const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\r\n        if (this.permanent) {\r\n            this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\r\n        } else {\r\n            this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\r\n        }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\r\n                    {{(permanent ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}}\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                {{(permanent ? 'permanentlyDeleteSelectedItemsDesc' : 'deleteSelectedItemsDesc') | i18n: cipherIds.length}}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button appAutoFocus type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{(permanent ? 'permanentlyDelete' : 'delete') | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","export class CipherBulkDeleteRequest {\r\n    ids: string[];\r\n    organizationId: string;\r\n\r\n    constructor(ids: string[], organizationId?: string) {\r\n        this.ids = ids == null ? [] : ids;\r\n        this.organizationId = organizationId;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { FolderView } from 'jslib/models/view/folderView';\r\n\r\n@Component({\r\n    selector: 'app-vault-bulk-move',\r\n    templateUrl: 'bulk-move.component.html',\r\n})\r\nexport class BulkMoveComponent implements OnInit {\r\n    @Input() cipherIds: string[] = [];\r\n    @Output() onMoved = new EventEmitter();\r\n\r\n    folderId: string = null;\r\n    folders: FolderView[] = [];\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\r\n        private toasterService: ToasterService, private i18nService: I18nService,\r\n        private folderService: FolderService) { }\r\n\r\n    async ngOnInit() {\r\n        this.folders = await this.folderService.getAllDecrypted();\r\n        this.folderId = this.folders[0].id;\r\n    }\r\n\r\n    async submit() {\r\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\r\n        await this.formPromise;\r\n        this.onMoved.emit();\r\n        this.analytics.eventTrack.next({ action: 'Bulk Moved Items' });\r\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\r\n                    {{'moveSelected' | i18n}}\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p>\r\n                <div class=\"form-group\">\r\n                    <label for=\"folder\">{{'folder' | i18n}}</label>\r\n                    <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\r\n                        <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\n@Component({\r\n    selector: 'app-vault-bulk-restore',\r\n    templateUrl: 'bulk-restore.component.html',\r\n})\r\nexport class BulkRestoreComponent {\r\n    @Input() cipherIds: string[] = [];\r\n    @Output() onRestored = new EventEmitter();\r\n\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\r\n        private toasterService: ToasterService, private i18nService: I18nService) { }\r\n\r\n    async submit() {\r\n        this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\r\n        await this.formPromise;\r\n        this.onRestored.emit();\r\n        this.analytics.eventTrack.next({ action: 'Bulk Restored Items' });\r\n        this.toasterService.popAsync('success', null, this.i18nService.t('restoredItems'));\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\r\n                    {{'restoreSelected' | i18n}}\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                {{'restoreSelectedItemsDesc' | i18n: cipherIds.length}}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button appAutoFocus type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'restore' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CipherView } from 'jslib/models/view';\r\nimport { CollectionView } from 'jslib/models/view/collectionView';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\n@Component({\r\n    selector: 'app-vault-bulk-share',\r\n    templateUrl: 'bulk-share.component.html',\r\n})\r\nexport class BulkShareComponent implements OnInit {\r\n    @Input() ciphers: CipherView[] = [];\r\n    @Input() organizationId: string;\r\n    @Output() onShared = new EventEmitter();\r\n\r\n    nonShareableCount = 0;\r\n    collections: CollectionView[] = [];\r\n    organizations: Organization[] = [];\r\n    shareableCiphers: CipherView[] = [];\r\n    formPromise: Promise<any>;\r\n\r\n    private writeableCollections: CollectionView[] = [];\r\n\r\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\r\n        private toasterService: ToasterService, private i18nService: I18nService,\r\n        private collectionService: CollectionService, private userService: UserService) { }\r\n\r\n    async ngOnInit() {\r\n        this.shareableCiphers = this.ciphers.filter((c) => !c.hasOldAttachments && c.organizationId == null);\r\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\r\n        const allCollections = await this.collectionService.getAllDecrypted();\r\n        this.writeableCollections = allCollections.filter((c) => !c.readOnly);\r\n        this.organizations = await this.userService.getAllOrganizations();\r\n        if (this.organizationId == null && this.organizations.length > 0) {\r\n            this.organizationId = this.organizations[0].id;\r\n        }\r\n        this.filterCollections();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.selectAll(false);\r\n    }\r\n\r\n    filterCollections() {\r\n        this.selectAll(false);\r\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\r\n            this.collections = [];\r\n        } else {\r\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        const checkedCollectionIds = this.collections.filter((c) => (c as any).checked).map((c) => c.id);\r\n        try {\r\n            this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\r\n                checkedCollectionIds);\r\n            await this.formPromise;\r\n            this.onShared.emit();\r\n            this.analytics.eventTrack.next({ action: 'Bulk Shared Items' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('sharedItems'));\r\n        } catch { }\r\n    }\r\n\r\n    check(c: CollectionView, select?: boolean) {\r\n        (c as any).checked = select == null ? !(c as any).checked : select;\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        const collections = select ? this.collections : this.writeableCollections;\r\n        collections.forEach((c) => this.check(c, select));\r\n    }\r\n\r\n    get canSave() {\r\n        if (this.shareableCiphers != null && this.shareableCiphers.length > 0 && this.collections != null) {\r\n            for (let i = 0; i < this.collections.length; i++) {\r\n                if ((this.collections[i] as any).checked) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareSelectedTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"shareSelectedTitle\">\r\n                    {{'shareSelected' | i18n}}\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{'shareManyDesc' | i18n}}</p>\r\n                <p>{{'shareSelectedItemsCountDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}}\r\n                </p>\r\n                <div class=\"form-group\">\r\n                    <label for=\"organization\">{{'organization' | i18n}}</label>\r\n                    <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\"\r\n                        (change)=\"filterCollections()\">\r\n                        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                    <h3>{{'collections' | i18n}}</h3>\r\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\r\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'selectAll' | i18n}}\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'unselectAll' | i18n}}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!collections || !collections.length\">\r\n                    {{'noCollectionsInList' | i18n}}\r\n                </div>\r\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\r\n                    <tbody>\r\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\r\n                            <td class=\"table-list-checkbox\">\r\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\r\n                                    appStopProp>\r\n                            </td>\r\n                            <td>\r\n                                {{c.name}}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\"\r\n                    [ngClass]=\"{loading:form.loading}\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\nimport { SendAccess } from 'jslib/models/domain/sendAccess';\n\nimport { SendAccessView } from 'jslib/models/view/sendAccessView';\n\nimport { SendType } from 'jslib/enums/sendType';\nimport { SendAccessRequest } from 'jslib/models/request/sendAccessRequest';\nimport { ErrorResponse } from 'jslib/models/response/errorResponse';\n\nimport { SendAccessResponse } from 'jslib/models/response/sendAccessResponse';\n\n@Component({\n    selector: 'app-send-access',\n    templateUrl: 'access.component.html',\n})\nexport class AccessComponent implements OnInit {\n    send: SendAccessView;\n    sendType = SendType;\n    downloading = false;\n    loading = true;\n    passwordRequired = false;\n    formPromise: Promise<SendAccessResponse>;\n    password: string;\n    showText = false;\n\n    private id: string;\n    private key: string;\n    private decKey: SymmetricCryptoKey;\n\n    constructor(private i18nService: I18nService, private cryptoFunctionService: CryptoFunctionService,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private route: ActivatedRoute, private cryptoService: CryptoService) {\n    }\n\n    get sendText() {\n        if (this.send == null || this.send.text == null) {\n            return null;\n        }\n        return this.showText ? this.send.text.text : this.send.text.maskedText;\n    }\n\n    ngOnInit() {\n        this.route.params.subscribe(async (params) => {\n            this.id = params.sendId;\n            this.key = params.key;\n            if (this.key == null || this.id == null) {\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async download() {\n        if (this.send == null || this.decKey == null) {\n            return;\n        }\n\n        if (this.downloading) {\n            return;\n        }\n\n        this.downloading = true;\n        const response = await fetch(new Request(this.send.file.url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            this.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n            this.platformUtilsService.saveFile(window, decBuf, null, this.send.file.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        this.downloading = false;\n    }\n\n    selectText() {\n        (document.getElementById('text') as HTMLInputElement).select();\n    }\n\n    copyText() {\n        this.platformUtilsService.copyToClipboard(this.send.text.text);\n        this.platformUtilsService.showToast('success', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('sendTypeText')));\n    }\n\n    toggleText() {\n        this.showText = !this.showText;\n    }\n\n    async load() {\n        const keyArray = Utils.fromUrlB64ToArray(this.key);\n        const accessRequest = new SendAccessRequest();\n        if (this.password != null) {\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(this.password, keyArray, 'sha256', 100000);\n            accessRequest.password = Utils.fromBufferToB64(passwordHash);\n        }\n        try {\n            let sendResponse: SendAccessResponse = null;\n            if (this.loading) {\n                sendResponse = await this.apiService.postSendAccess(this.id, accessRequest);\n            } else {\n                this.formPromise = this.apiService.postSendAccess(this.id, accessRequest);\n                sendResponse = await this.formPromise;\n            }\n            this.passwordRequired = false;\n            const sendAccess = new SendAccess(sendResponse);\n            this.decKey = await this.cryptoService.makeSendKey(keyArray);\n            this.send = await sendAccess.decrypt(this.decKey);\n            this.showText = this.send.text != null ? !this.send.text.hidden : true;\n        } catch (e) {\n            if (e instanceof ErrorResponse) {\n                if (e.statusCode === 401) {\n                    this.passwordRequired = true;\n                }\n            }\n        }\n        this.loading = false;\n    }\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-5\">\r\n            <p class=\"lead text-center mb-4\">Bitwarden Send</p>\r\n            <div class=\"card d-block\">\r\n                <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\r\n                    <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\"\r\n                        aria-hidden=\"true\"></i>\r\n                    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n                </div>\r\n                <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\r\n                    <p>{{'sendProtectedPassword' | i18n}}</p>\r\n                    <p>{{'sendProtectedPasswordDontKnow' | i18n}}</p>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">{{'password' | i18n}}</label>\r\n                        <input id=\"password\" type=\"password\" name=\"Password\" class=\"text-monospace form-control\"\r\n                            [(ngModel)]=\"password\" required appInputVerbatim appAutofocus>\r\n                    </div>\r\n                    <div class=\"d-flex\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\r\n                            <span>\r\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}}\r\n                            </span>\r\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\r\n                    <p class=\"text-center\"><b>{{send.name}}</b></p>\r\n                    <hr>\r\n                    <!-- Text -->\r\n                    <ng-container *ngIf=\"send.type === sendType.Text\">\r\n                        <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{'sendHiddenByDefault' | i18n}}</app-callout>\r\n                        <div class=\"form-group\">\r\n                            <textarea id=\"text\" rows=\"8\" name=\"Text\" [(ngModel)]=\"sendText\" class=\"form-control\"\r\n                                readonly (click)=\"selectText()\"></textarea>\r\n                        </div>\r\n                        <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"toggleText()\"\r\n                            *ngIf=\"send.text.hidden\">\r\n                            <i class=\"fa fa-lg\" aria-hidden=\"true\"\r\n                                [ngClass]=\"{'fa-eye': !showText, 'fa-eye-slash': showText}\"></i>\r\n                            {{'toggleVisibility' | i18n}}\r\n                        </button>\r\n                        <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\r\n                            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i> {{'copyValue' | i18n}}\r\n                        </button>\r\n                    </ng-container>\r\n                    <!-- File -->\r\n                    <ng-container *ngIf=\"send.type === sendType.File\">\r\n                        <p>{{send.file.fileName}}</p>\r\n                        <button class=\"btn btn-primary btn-block\" type=\"button\" (click)=\"download()\">\r\n                            <i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n                            {{'downloadFile' | i18n}} ({{send.file.sizeName}})</button>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { SendFileApi } from '../api/sendFileApi';\r\n\r\nexport class SendFileData {\r\n    id: string;\r\n    url: string;\r\n    fileName: string;\r\n    key: string;\r\n    size: string;\r\n    sizeName: string;\r\n\r\n    constructor(data?: SendFileApi) {\r\n        if (data == null) {\r\n            return;\r\n        }\r\n\r\n        this.id = data.id;\r\n        this.url = data.url;\r\n        this.fileName = data.fileName;\r\n        this.key = data.key;\r\n        this.size = data.size;\r\n        this.sizeName = data.sizeName;\r\n    }\r\n}\r\n","import { SendTextApi } from '../api/sendTextApi';\r\n\r\nexport class SendTextData {\r\n    text: string;\r\n    hidden: boolean;\r\n\r\n    constructor(data?: SendTextApi) {\r\n        if (data == null) {\r\n            return;\r\n        }\r\n\r\n        this.text = data.text;\r\n        this.hidden = data.hidden;\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class ErrorResponse extends BaseResponse {\r\n    message: string;\r\n    validationErrors: { [key: string]: string[]; };\r\n    statusCode: number;\r\n\r\n    constructor(response: any, status: number, identityResponse?: boolean) {\r\n        super(response);\r\n        let errorModel = null;\r\n        if (response != null) {\r\n            const responseErrorModel = this.getResponseProperty('ErrorModel');\r\n            if (responseErrorModel && identityResponse) {\r\n                errorModel = responseErrorModel;\r\n            } else {\r\n                errorModel = response;\r\n            }\r\n        }\r\n\r\n        if (errorModel) {\r\n            this.message = this.getResponseProperty('Message', errorModel);\r\n            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);\r\n        } else {\r\n            if (status === 429) {\r\n                this.message = 'Rate limit exceeded. Try again later.';\r\n            }\r\n        }\r\n        this.statusCode = status;\r\n    }\r\n\r\n    getSingleMessage(): string {\r\n        if (this.validationErrors == null) {\r\n            return this.message;\r\n        }\r\n        for (const key in this.validationErrors) {\r\n            if (!this.validationErrors.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (this.validationErrors[key].length) {\r\n                return this.validationErrors[key][0];\r\n            }\r\n        }\r\n        return this.message;\r\n    }\r\n\r\n    getAllMessages(): string[] {\r\n        const messages: string[] = [];\r\n        if (this.validationErrors == null) {\r\n            return messages;\r\n        }\r\n        for (const key in this.validationErrors) {\r\n            if (!this.validationErrors.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            this.validationErrors[key].forEach((item: string) => {\r\n                let prefix = '';\r\n                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {\r\n                    const lastSep = key.lastIndexOf('.');\r\n                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';\r\n                }\r\n                messages.push(prefix + item);\r\n            });\r\n        }\r\n        return messages;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport { SendType } from 'jslib/enums/sendType';\r\n\r\nimport { SendView } from 'jslib/models/view/sendView';\r\n\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SendService } from 'jslib/abstractions/send.service';\r\n\r\n@Component({\r\n    selector: 'app-send',\r\n    templateUrl: 'send.component.html',\r\n})\r\nexport class SendComponent implements OnInit {\r\n    @ViewChild('sendAddEdit', { read: ViewContainerRef, static: true }) sendAddEditModalRef: ViewContainerRef;\r\n\r\n    sendType = SendType;\r\n    loaded = false;\r\n    loading = true;\r\n    refreshing = false;\r\n    expired: boolean = false;\r\n    type: SendType = null;\r\n    sends: SendView[] = [];\r\n    filteredSends: SendView[] = [];\r\n    searchText: string;\r\n    selectedType: SendType;\r\n    selectedAll: boolean;\r\n    searchPlaceholder: string;\r\n    filter: (cipher: SendView) => boolean;\r\n    searchPending = false;\r\n\r\n    modal: ModalComponent = null;\r\n    actionPromise: any;\r\n\r\n    private searchTimeout: any;\r\n\r\n    constructor(private apiService: ApiService, private sendService: SendService,\r\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\r\n        private platformUtilsService: PlatformUtilsService, private environmentService: EnvironmentService) { }\r\n\r\n    async ngOnInit() {\r\n        await this.load();\r\n    }\r\n    async load(filter: (send: SendView) => boolean = null) {\r\n        this.loading = true;\r\n        const sends = await this.sendService.getAllDecrypted();\r\n        this.sends = sends;\r\n        this.selectAll();\r\n        this.loading = false;\r\n        this.loaded = true;\r\n    }\r\n\r\n    async reload(filter: (send: SendView) => boolean = null) {\r\n        this.loaded = false;\r\n        this.sends = [];\r\n        await this.load(filter);\r\n    }\r\n\r\n    async refresh() {\r\n        try {\r\n            this.refreshing = true;\r\n            await this.reload(this.filter);\r\n        } finally {\r\n            this.refreshing = false;\r\n        }\r\n    }\r\n\r\n    async applyFilter(filter: (send: SendView) => boolean = null) {\r\n        this.filter = filter;\r\n        await this.search(null);\r\n    }\r\n\r\n    async search(timeout: number = null) {\r\n        this.searchPending = false;\r\n        if (this.searchTimeout != null) {\r\n            clearTimeout(this.searchTimeout);\r\n        }\r\n        if (timeout == null) {\r\n            this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\r\n            return;\r\n        }\r\n        this.searchPending = true;\r\n        this.searchTimeout = setTimeout(async () => {\r\n            this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\r\n            this.searchPending = false;\r\n        }, timeout);\r\n    }\r\n\r\n    addSend() {\r\n        const component = this.editSend(null);\r\n        component.type = this.type;\r\n    }\r\n\r\n    editSend(send: SendView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.sendAddEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<AddEditComponent>(\r\n            AddEditComponent, this.sendAddEditModalRef);\r\n\r\n        childComponent.sendId = send == null ? null : send.id;\r\n        childComponent.onSavedSend.subscribe(async (s: SendView) => {\r\n            this.modal.close();\r\n            await this.load();\r\n        });\r\n        childComponent.onDeletedSend.subscribe(async (s: SendView) => {\r\n            this.modal.close();\r\n            await this.load();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n\r\n        return childComponent;\r\n    }\r\n\r\n    async removePassword(s: SendView): Promise<boolean> {\r\n        if (this.actionPromise != null || s.password == null) {\r\n            return;\r\n        }\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('removePasswordConfirmation'),\r\n            this.i18nService.t('removePassword'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.actionPromise = this.apiService.putSendRemovePassword(s.id);\r\n            await this.actionPromise;\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('removedPassword'));\r\n            await this.load();\r\n        } catch { }\r\n        this.actionPromise = null;\r\n    }\r\n\r\n    async delete(s: SendView): Promise<boolean> {\r\n        if (this.actionPromise != null) {\r\n            return false;\r\n        }\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteSendConfirmation'),\r\n            this.i18nService.t('deleteSend'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.actionPromise = this.apiService.deleteSend(s.id);\r\n            await this.actionPromise;\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\r\n            await this.load();\r\n        } catch { }\r\n        this.actionPromise = null;\r\n        return true;\r\n    }\r\n\r\n    copy(s: SendView) {\r\n        let webVaultUrl = this.environmentService.getWebVaultUrl();\r\n        if (webVaultUrl == null) {\r\n            webVaultUrl = 'https://vault.bitwarden.com';\r\n        }\r\n        const link = webVaultUrl + '/#/send/' + s.accessId + '/' + s.urlB64Key;\r\n        this.platformUtilsService.copyToClipboard(link);\r\n        this.platformUtilsService.showToast('success', null,\r\n            this.i18nService.t('valueCopied', this.i18nService.t('sendLink')));\r\n    }\r\n\r\n    searchTextChanged() {\r\n        this.search(200);\r\n    }\r\n\r\n    selectAll() {\r\n        this.clearSelections();\r\n        this.selectedAll = true;\r\n        this.applyFilter(null);\r\n    }\r\n\r\n    selectType(type: SendType) {\r\n        this.clearSelections();\r\n        this.selectedType = type;\r\n        this.applyFilter((s) => s.type === type);\r\n    }\r\n\r\n    clearSelections() {\r\n        this.selectedAll = false;\r\n        this.selectedType = null;\r\n    }\r\n}\r\n","<div class=\"container page-content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3 groupings\">\r\n            <div class=\"card vault-filters\">\r\n                <div class=\"card-header d-flex\">\r\n                    {{'filters' | i18n}}\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchSends' | i18n)}}\" id=\"search\"\r\n                        class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\"\r\n                        appAutofocus>\r\n                    <ul class=\"fa-ul card-ul\">\r\n                        <li [ngClass]=\"{active: selectedAll}\">\r\n                            <a href=\"#\" appStopClick (click)=\"selectAll()\">\r\n                                <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allSends' | i18n}}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    <h3>{{'types' | i18n}}</h3>\r\n                    <ul class=\"fa-ul card-ul\">\r\n                        <li [ngClass]=\"{active: selectedType === sendType.Text}\">\r\n                            <a href=\"#\" appStopClick (click)=\"selectType(sendType.Text)\">\r\n                                <i class=\"fa-li fa fa-fw fa-file-text-o\"></i>{{'sendTypeText' | i18n}}\r\n                            </a>\r\n                        </li>\r\n                        <li [ngClass]=\"{active: selectedType === sendType.File}\">\r\n                            <a href=\"#\" appStopClick (click)=\"selectType(sendType.File)\">\r\n                                <i class=\"fa-li fa fa-fw fa-file-o\"></i>{{'sendTypeFile' | i18n}}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <div class=\"page-header d-flex\">\r\n                <h1>\r\n                    Send\r\n                    <small #actionSpinner [appApiAction]=\"actionPromise\">\r\n                        <ng-container *ngIf=\"actionSpinner.loading\">\r\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n                        </ng-container>\r\n                    </small>\r\n                </h1>\r\n                <div class=\"ml-auto d-flex\">\r\n                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addSend()\">\r\n                        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'createSend' | i18n}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <!--Listing Table-->\r\n            <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\r\n                <tbody>\r\n                    <tr *ngFor=\"let s of filteredSends\">\r\n                        <td class=\"table-list-icon\">\r\n                            <div class=\"icon\" aria-hidden=\"true\">\r\n                                <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"s.type == sendType.File\"></i>\r\n                                <i class=\"fa fa-fw fa-lg fa-file-text-o\" *ngIf=\"s.type == sendType.Text\"></i>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"reduced-lh wrap\">\r\n                            <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{s.name}}</a>\r\n                            <ng-container *ngIf=\"s.password\">\r\n                                <i class=\"fa fa-key\" appStopProp title=\"{{'password' | i18n}}\" aria-hidden=\"true\"></i>\r\n                                <span class=\"sr-only\">{{'password' | i18n}}</span>\r\n                            </ng-container>\r\n                            <br>\r\n                            <small appStopProp>{{s.deletionDate | date:'medium'}}</small>\r\n                        </td>\r\n                        <td class=\"table-list-options\">\r\n                            <div class=\"dropdown\" appListDropdown>\r\n                                <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\r\n                                    id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\r\n                                    <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"copy(s)\">\r\n                                        <i class=\"fa fa-fw fa-copy\" aria-hidden=\"true\"></i>\r\n                                        {{'copySendLink' | i18n}}\r\n                                    </a>\r\n                                    <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"removePassword(s)\"\r\n                                        *ngIf=\"s.password\">\r\n                                        <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i>\r\n                                        {{'removePassword' | i18n}}\r\n                                    </a>\r\n                                    <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(s)\">\r\n                                        <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\r\n                                        {{'delete' | i18n}}\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\r\n                <ng-container *ngIf=\"!loaded\">\r\n                    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"loaded\">\r\n                    <p>{{'noSendsInList' | i18n}}</p>\r\n                    <button (click)=\"addSend()\" class=\"btn btn-outline-primary\">\r\n                        <i class=\"fa fa-plus fa-fw\"></i>{{'createSend' | i18n}}</button>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #sendAddEdit></ng-template>\r\n","import { DatePipe } from '@angular/common';\r\n\r\nimport {\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { Component } from '@angular/core';\r\n\r\nimport { SendType } from 'jslib/enums/sendType';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SendService } from 'jslib/abstractions/send.service';\r\n\r\nimport { SendView } from 'jslib/models/view/sendView';\r\nimport { SendFileView } from 'jslib/models/view/sendFileView';\r\nimport { SendTextView } from 'jslib/models/view/sendTextView';\r\n\r\nimport { Send } from 'jslib/models/domain/send';\r\n\r\nimport { SendData } from 'jslib/models/data/sendData';\r\n\r\n@Component({\r\n    selector: 'app-send-add-edit',\r\n    templateUrl: 'add-edit.component.html',\r\n})\r\nexport class AddEditComponent {\r\n    @Input() sendId: string;\r\n    @Input() type: SendType;\r\n\r\n    @Output() onSavedSend = new EventEmitter<SendView>();\r\n    @Output() onDeletedSend = new EventEmitter<SendView>();\r\n    @Output() onCancelled = new EventEmitter<SendView>();\r\n\r\n    editMode: boolean = false;\r\n    send: SendView;\r\n    link: string;\r\n    title: string;\r\n    deletionDate: string;\r\n    expirationDate: string;\r\n    hasPassword: boolean;\r\n    password: string;\r\n    formPromise: Promise<any>;\r\n    deletePromise: Promise<any>;\r\n    sendType = SendType;\r\n    typeOptions: any[];\r\n\r\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService,\r\n        private apiService: ApiService, private environmentService: EnvironmentService,\r\n        private datePipe: DatePipe, private sendService: SendService) {\r\n        this.typeOptions = [\r\n            { name: i18nService.t('sendTypeFile'), value: SendType.File },\r\n            { name: i18nService.t('sendTypeText'), value: SendType.Text },\r\n        ];\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await this.load();\r\n    }\r\n\r\n    async load() {\r\n        this.editMode = this.sendId != null;\r\n        if (this.editMode) {\r\n            this.editMode = true;\r\n            this.title = this.i18nService.t('editSend');\r\n        } else {\r\n            this.title = this.i18nService.t('createSend');\r\n        }\r\n\r\n        if (this.send == null) {\r\n            if (this.editMode) {\r\n                const send = await this.loadSend();\r\n                this.send = await send.decrypt();\r\n            } else {\r\n                this.send = new SendView();\r\n                this.send.type = this.type == null ? SendType.File : this.type;\r\n                this.send.file = new SendFileView();\r\n                this.send.text = new SendTextView();\r\n                this.send.deletionDate = new Date();\r\n                this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\r\n            }\r\n        }\r\n\r\n        this.hasPassword = this.send.password != null && this.send.password.trim() !== '';\r\n\r\n        // Parse dates\r\n        this.deletionDate = this.send.deletionDate == null ? null :\r\n            this.datePipe.transform(this.send.deletionDate, 'yyyy-MM-ddTHH:mm');\r\n        this.expirationDate = this.send.expirationDate == null ? null :\r\n            this.datePipe.transform(this.send.expirationDate, 'yyyy-MM-ddTHH:mm');\r\n\r\n        if (this.editMode) {\r\n            let webVaultUrl = this.environmentService.getWebVaultUrl();\r\n            if (webVaultUrl == null) {\r\n                webVaultUrl = 'https://vault.bitwarden.com';\r\n            }\r\n            this.link = webVaultUrl + '/#/send/' + this.send.accessId + '/' + this.send.urlB64Key;\r\n        }\r\n    }\r\n\r\n    async submit(): Promise<boolean> {\r\n        if (this.send.name == null || this.send.name === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('nameRequired'));\r\n            return false;\r\n        }\r\n\r\n        let file: File = null;\r\n        if (this.send.type === SendType.File && !this.editMode) {\r\n            const fileEl = document.getElementById('file') as HTMLInputElement;\r\n            const files = fileEl.files;\r\n            if (files == null || files.length === 0) {\r\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                    this.i18nService.t('selectFile'));\r\n                return;\r\n            }\r\n\r\n            file = files[0];\r\n            if (file.size > 104857600) { // 100 MB\r\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                    this.i18nService.t('maxFileSize'));\r\n                return;\r\n            }\r\n        }\r\n\r\n        const encSend = await this.encryptSend(file);\r\n        try {\r\n            this.formPromise = this.sendService.saveWithServer(encSend);\r\n            await this.formPromise;\r\n            this.send.id = encSend[0].id;\r\n            this.platformUtilsService.showToast('success', null,\r\n                this.i18nService.t(this.editMode ? 'editedSend' : 'createdSend'));\r\n            this.onSavedSend.emit(this.send);\r\n            return true;\r\n        } catch { }\r\n\r\n        return false;\r\n    }\r\n\r\n    clearExpiration() {\r\n        this.expirationDate = null;\r\n    }\r\n\r\n    async delete(): Promise<void> {\r\n        if (this.deletePromise != null) {\r\n            return;\r\n        }\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteSendConfirmation'),\r\n            this.i18nService.t('deleteSend'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.deletePromise = this.apiService.deleteSend(this.send.id);\r\n            await this.deletePromise;\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedSend'));\r\n            await this.load();\r\n            this.onDeletedSend.emit(this.send);\r\n        } catch { }\r\n    }\r\n\r\n    protected async loadSend(): Promise<Send> {\r\n        const response = await this.apiService.getSend(this.sendId);\r\n        const data = new SendData(response);\r\n        return new Send(data);\r\n    }\r\n\r\n    protected async encryptSend(file: File): Promise<[Send, ArrayBuffer]> {\r\n        const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\r\n\r\n        // Parse dates\r\n        try {\r\n            sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\r\n        } catch {\r\n            sendData[0].deletionDate = null;\r\n        }\r\n        try {\r\n            sendData[0].expirationDate = this.expirationDate == null ? null : new Date(this.expirationDate);\r\n        } catch {\r\n            sendData[0].expirationDate = null;\r\n        }\r\n\r\n        return sendData;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate\r\n            autocomplete=\"off\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{title}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"send\">\r\n                <div class=\"row\" *ngIf=\"!editMode\">\r\n                    <div class=\"col-6 form-group\">\r\n                        <label for=\"type\">{{'whatTypeOfSend' | i18n}}</label>\r\n                        <select id=\"type\" name=\"Type\" [(ngModel)]=\"send.type\" class=\"form-control\" appAutofocus>\r\n                            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 form-group\">\r\n                        <label for=\"name\">{{'name' | i18n}}</label>\r\n                        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"send.name\" required>\r\n                    </div>\r\n                </div>\r\n                <!-- Text -->\r\n                <ng-container *ngIf=\"send.type === sendType.Text\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">{{'sendTypeText' | i18n}}</label>\r\n                        <textarea id=\"text\" name=\"Text.Text\" rows=\"6\" [(ngModel)]=\"send.text.text\"\r\n                            class=\"form-control\"></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.text.hidden\"\r\n                                id=\"text-hidden\" name=\"Text.Hidden\">\r\n                            <label class=\"form-check-label\" for=\"text-hidden\">{{'cfTypeHidden' | i18n}}</label>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <!-- File -->\r\n                <ng-container *ngIf=\"send.type === sendType.File\">\r\n                    <div class=\"form-group\">\r\n                        <div *ngIf=\"editMode\">\r\n                            <strong class=\"d-block\">{{'file' | i18n}}</strong>\r\n                            {{send.file.fileName}} ({{send.file.sizeName}})\r\n                        </div>\r\n                        <div *ngIf=\"!editMode\">\r\n                            <label for=\"file\">{{'file' | i18n}}</label>\r\n                            <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\r\n                            <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <h3 class=\"mt-4\">{{'options' | i18n}}</h3>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 form-group\">\r\n                        <label for=\"deletionDate\">{{'deletionDate' | i18n}}</label>\r\n                        <input id=\"deletionDate\" class=\"form-control\" type=\"datetime-local\" name=\"DeletionDate\"\r\n                            [(ngModel)]=\"deletionDate\" required>\r\n                    </div>\r\n                    <div class=\"col-6 form-group\">\r\n                        <div class=\"d-flex\">\r\n                            <label for=\"expirationDate\">{{'expirationDate' | i18n}}</label>\r\n                            <a href=\"#\" appStopClick (click)=\"clearExpiration()\" class=\"ml-auto\">\r\n                                {{'clear' | i18n}}\r\n                            </a>\r\n                        </div>\r\n                        <input id=\"expirationDate\" class=\"form-control\" type=\"datetime-local\" name=\"ExpirationDate\"\r\n                            [(ngModel)]=\"expirationDate\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 form-group\">\r\n                        <label for=\"maxAccessCount\">{{'maxAccessCount' | i18n}}</label>\r\n                        <input id=\"maxAccessCount\" class=\"form-control\" type=\"number\" name=\"MaxAccessCount\"\r\n                            [(ngModel)]=\"send.maxAccessCount\">\r\n                    </div>\r\n                    <div class=\"col-6 form-group\" *ngIf=\"editMode\">\r\n                        <label for=\"accessCount\">{{'currentAccessCount' | i18n}}</label>\r\n                        <input id=\"accessCount\" class=\"form-control\" type=\"number\" name=\"AccessCount\" readonly\r\n                            [(ngModel)]=\"send.accessCount\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 form-group\">\r\n                        <label for=\"password\" *ngIf=\"!hasPassword\">{{'password' | i18n}}</label>\r\n                        <label for=\"password\" *ngIf=\"hasPassword\">{{'newPassword' | i18n}}</label>\r\n                        <input id=\"password\" class=\"form-control\" type=\"password\" name=\"Password\"\r\n                            [(ngModel)]=\"password\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"notes\">{{'notes' | i18n}}</label>\r\n                    <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"send.notes\" class=\"form-control\"></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"send.disabled\" id=\"disabled\"\r\n                            name=\"Disabled\">\r\n                        <label class=\"form-check-label\" for=\"disabled\">{{'disabled' | i18n}}</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" *ngIf=\"link\">\r\n                    <label for=\"link\">{{'sendLink' | i18n}}</label>\r\n                    <input type=\"text\" readonly id=\"link\" name=\"Link\" [(ngModel)]=\"link\" class=\"form-control\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\r\n                    {{'cancel' | i18n}}\r\n                </button>\r\n                <div class=\"ml-auto\" *ngIf=\"send\">\r\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\r\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\r\n                        [appApiAction]=\"deletePromise\">\r\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\r\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\r\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { SendType } from '../../enums/sendType';\r\nimport { Utils } from '../../misc/utils';\r\n\r\nimport { Send } from '../domain/send';\r\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\r\n\r\nimport { SendFileView } from './sendFileView';\r\nimport { SendTextView } from './sendTextView';\r\nimport { View } from './view';\r\n\r\nexport class SendView implements View {\r\n    id: string = null;\r\n    accessId: string = null;\r\n    name: string = null;\r\n    notes: string = null;\r\n    key: ArrayBuffer;\r\n    cryptoKey: SymmetricCryptoKey;\r\n    type: SendType = null;\r\n    text = new SendTextView();\r\n    file = new SendFileView();\r\n    maxAccessCount?: number = null;\r\n    accessCount: number = 0;\r\n    revisionDate: Date = null;\r\n    deletionDate: Date = null;\r\n    expirationDate: Date = null;\r\n    password: string = null;\r\n    disabled: boolean = false;\r\n\r\n    constructor(s?: Send) {\r\n        if (!s) {\r\n            return;\r\n        }\r\n\r\n        this.id = s.id;\r\n        this.accessId = s.accessId;\r\n        this.type = s.type;\r\n        this.maxAccessCount = s.maxAccessCount;\r\n        this.accessCount = s.accessCount;\r\n        this.revisionDate = s.revisionDate;\r\n        this.deletionDate = s.deletionDate;\r\n        this.expirationDate = s.expirationDate;\r\n        this.disabled = s.disabled;\r\n        this.password = s.password;\r\n    }\r\n\r\n    get urlB64Key(): string {\r\n        return Utils.fromBufferToUrlB64(this.key);\r\n    }\r\n}\r\n","import { CryptoService } from '../../abstractions/crypto.service';\r\n\r\nimport { SendType } from '../../enums/sendType';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nimport { SendData } from '../data/sendData';\r\n\r\nimport { SendView } from '../view/sendView';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\nimport { SendFile } from './sendFile';\r\nimport { SendText } from './sendText';\r\n\r\nexport class Send extends Domain {\r\n    id: string;\r\n    accessId: string;\r\n    userId: string;\r\n    type: SendType;\r\n    name: CipherString;\r\n    notes: CipherString;\r\n    file: SendFile;\r\n    text: SendText;\r\n    key: CipherString;\r\n    maxAccessCount?: number;\r\n    accessCount: number;\r\n    revisionDate: Date;\r\n    expirationDate: Date;\r\n    deletionDate: Date;\r\n    password: string;\r\n    disabled: boolean;\r\n\r\n    constructor(obj?: SendData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            id: null,\r\n            accessId: null,\r\n            userId: null,\r\n            name: null,\r\n            notes: null,\r\n            key: null,\r\n        }, alreadyEncrypted, ['id', 'accessId', 'userId']);\r\n\r\n        this.type = obj.type;\r\n        this.maxAccessCount = obj.maxAccessCount;\r\n        this.accessCount = obj.accessCount;\r\n        this.password = obj.password;\r\n        this.disabled = obj.disabled;\r\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\r\n        this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\r\n        this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\r\n\r\n        switch (this.type) {\r\n            case SendType.Text:\r\n                this.text = new SendText(obj.text, alreadyEncrypted);\r\n                break;\r\n            case SendType.File:\r\n                this.file = new SendFile(obj.file, alreadyEncrypted);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async decrypt(): Promise<SendView> {\r\n        const model = new SendView(this);\r\n\r\n        let cryptoService: CryptoService;\r\n        const containerService = (Utils.global as any).bitwardenContainerService;\r\n        if (containerService) {\r\n            cryptoService = containerService.getCryptoService();\r\n        } else {\r\n            throw new Error('global bitwardenContainerService not initialized.');\r\n        }\r\n\r\n        try {\r\n            model.key = await cryptoService.decryptToBytes(this.key, null);\r\n            model.cryptoKey = await cryptoService.makeSendKey(model.key);\r\n        } catch (e) {\r\n            // TODO: error?\r\n        }\r\n\r\n        await this.decryptObj(model, {\r\n            name: null,\r\n            notes: null,\r\n        }, null, model.cryptoKey);\r\n\r\n        switch (this.type) {\r\n            case SendType.File:\r\n                model.file = await this.file.decrypt(model.cryptoKey);\r\n                break;\r\n            case SendType.Text:\r\n                model.text = await this.text.decrypt(model.cryptoKey);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return model;\r\n    }\r\n\r\n    toSendData(userId: string): SendData {\r\n        const s = new SendData();\r\n        s.id = this.id;\r\n        s.accessId = this.accessId;\r\n        s.userId = userId;\r\n        s.maxAccessCount = this.maxAccessCount;\r\n        s.accessCount = this.accessCount;\r\n        s.disabled = this.disabled;\r\n        s.password = this.password;\r\n        s.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\r\n        s.deletionDate = this.deletionDate != null ? this.deletionDate.toISOString() : null;\r\n        s.expirationDate = this.expirationDate != null ? this.expirationDate.toISOString() : null;\r\n        s.type = this.type;\r\n\r\n        this.buildDataModel(this, s, {\r\n            name: null,\r\n            notes: null,\r\n            key: null,\r\n        });\r\n\r\n        switch (s.type) {\r\n            case SendType.File:\r\n                s.text = this.text.toSendTextData();\r\n                break;\r\n            case SendType.Text:\r\n                s.file = this.file.toSendFileData();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return s;\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\nimport { ApiKeyComponent } from './api-key.component';\r\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\r\nimport { DeleteAccountComponent } from './delete-account.component';\r\nimport { PurgeVaultComponent } from './purge-vault.component';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\n@Component({\r\n    selector: 'app-account',\r\n    templateUrl: 'account.component.html',\r\n})\r\nexport class AccountComponent {\r\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef, static: true }) deauthModalRef: ViewContainerRef;\r\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\r\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\r\n    @ViewChild('viewUserApiKeyTemplate', { read: ViewContainerRef, static: true }) viewUserApiKeyModalRef: ViewContainerRef;\r\n    @ViewChild('rotateUserApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateUserApiKeyModalRef: ViewContainerRef;\r\n\r\n    private modal: ModalComponent = null;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private apiService: ApiService,\r\n        private userService: UserService) { }\r\n\r\n    deauthorizeSessions() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.deauthModalRef.createComponent(factory).instance;\r\n        this.modal.show<DeauthorizeSessionsComponent>(DeauthorizeSessionsComponent, this.deauthModalRef);\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    purgeVault() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\r\n        this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    deleteAccount() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\r\n        this.modal.show<DeleteAccountComponent>(DeleteAccountComponent, this.deleteModalRef);\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async viewUserApiKey() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.viewUserApiKeyModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.viewUserApiKeyModalRef);\r\n        childComponent.keyType = 'user';\r\n        childComponent.entityId = await this.userService.getUserId();\r\n        childComponent.postKey = this.apiService.postUserApiKey.bind(this.apiService);\r\n        childComponent.scope = 'api';\r\n        childComponent.grantType = 'client_credentials';\r\n        childComponent.apiKeyTitle = 'apiKey';\r\n        childComponent.apiKeyWarning = 'userApiKeyWarning';\r\n        childComponent.apiKeyDescription = 'userApiKeyDesc';\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async rotateUserApiKey() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.rotateUserApiKeyModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.rotateUserApiKeyModalRef);\r\n        childComponent.keyType = 'user';\r\n        childComponent.isRotation = true;\r\n        childComponent.entityId = await this.userService.getUserId();\r\n        childComponent.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\r\n        childComponent.scope = 'api';\r\n        childComponent.grantType = 'client_credentials';\r\n        childComponent.apiKeyTitle = 'apiKey';\r\n        childComponent.apiKeyWarning = 'userApiKeyWarning';\r\n        childComponent.apiKeyDescription = 'apiKeyRotateDesc';\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'myAccount' | i18n}}</h1>\r\n</div>\r\n<app-profile></app-profile>\r\n<div class=\"secondary-header\">\r\n    <h1>{{'changeEmail' | i18n}}</h1>\r\n</div>\r\n<app-change-email></app-change-email>\r\n<div class=\"secondary-header\">\r\n    <h1>{{'changeMasterPassword' | i18n}}</h1>\r\n</div>\r\n<app-change-password></app-change-password>\r\n<div class=\"secondary-header\">\r\n    <h1>{{'encKeySettings' | i18n}}</h1>\r\n</div>\r\n<app-change-kdf></app-change-kdf>\r\n<div class=\"secondary-header border-0 mb-0\">\r\n    <h1>{{'apiKey' | i18n}}</h1>\r\n</div>\r\n<p>\r\n    {{'userApiKeyDesc' | i18n}}\r\n</p>\r\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewUserApiKey()\">{{'viewApiKey' | i18n}}</button>\r\n<button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateUserApiKey()\">{{'rotateApiKey' | i18n}}</button>\r\n<div class=\"secondary-header text-danger border-0 mb-0\">\r\n    <h1>{{'dangerZone' | i18n}}</h1>\r\n</div>\r\n<div class=\"card border-danger\">\r\n    <div class=\"card-body\">\r\n        <p>{{'dangerZoneDesc' | i18n}}</p>\r\n        <button type=\"button\" class=\"btn btn-outline-danger\"\r\n            (click)=\"deauthorizeSessions()\">{{'deauthorizeSessions' | i18n}}</button>\r\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button>\r\n        <button type=\"button\" class=\"btn btn-outline-danger\"\r\n            (click)=\"deleteAccount()\">{{'deleteAccount' | i18n}}</button>\r\n    </div>\r\n</div>\r\n<ng-template #deauthorizeSessionsTemplate></ng-template>\r\n<ng-template #purgeVaultTemplate></ng-template>\r\n<ng-template #deleteAccountTemplate></ng-template>\r\n<ng-template #viewUserApiKeyTemplate></ng-template>\r\n<ng-template #rotateUserApiKeyTemplate></ng-template>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\n\r\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\r\n\r\n@Component({\r\n    selector: 'app-deauthorize-sessions',\r\n    templateUrl: 'deauthorize-sessions.component.html',\r\n})\r\nexport class DeauthorizeSessionsComponent {\r\n    masterPassword: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        const request = new PasswordVerificationRequest();\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n        try {\r\n            this.formPromise = this.apiService.postSecurityStamp(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Deauthorized Sessions' });\r\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\r\n                this.i18nService.t('logBackIn'));\r\n            this.messagingService.send('logout');\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"deAuthTitle\">{{'deauthorizeSessions' | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{'deauthorizeSessionsDesc' | i18n}}</p>\r\n                <app-callout type=\"warning\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout>\r\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'deauthorizeSessions' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\n\r\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\r\n\r\n@Component({\r\n    selector: 'app-delete-account',\r\n    templateUrl: 'delete-account.component.html',\r\n})\r\nexport class DeleteAccountComponent {\r\n    masterPassword: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        const request = new PasswordVerificationRequest();\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n        try {\r\n            this.formPromise = this.apiService.deleteAccount(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Deleted Account' });\r\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\r\n                this.i18nService.t('accountDeletedDesc'));\r\n            this.messagingService.send('logout');\r\n        } catch { }\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{'deleteAccount' | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{'deleteAccountDesc' | i18n}}</p>\r\n                <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout>\r\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'deleteAccount' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { UpdateProfileRequest } from 'jslib/models/request/updateProfileRequest';\r\n\r\nimport { ProfileResponse } from 'jslib/models/response/profileResponse';\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: 'profile.component.html',\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    loading = true;\r\n    profile: ProfileResponse;\r\n    fingerprint: string;\r\n\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private userService: UserService, private cryptoService: CryptoService) { }\r\n\r\n    async ngOnInit() {\r\n        this.profile = await this.apiService.getProfile();\r\n        this.loading = false;\r\n        const fingerprint = await this.cryptoService.getFingerprint(await this.userService.getUserId());\r\n        if (fingerprint != null) {\r\n            this.fingerprint = fingerprint.join('-');\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        try {\r\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\r\n            this.formPromise = this.apiService.putProfile(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Updated Profile' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\r\n        } catch { }\r\n    }\r\n}\r\n","<div *ngIf=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</div>\r\n<form *ngIf=\"profile && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"name\">{{'name' | i18n}}</label>\r\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">{{'email' | i18n}}</label>\r\n                <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"profile.email\" readonly>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"masterPasswordHint\">{{'masterPassHintLabel' | i18n}}</label>\r\n                <input id=\"masterPasswordHint\" class=\"form-control\" type=\"text\" name=\"MasterPasswordHint\"\r\n                    [(ngModel)]=\"profile.masterPasswordHint\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"mb-3\">\r\n                <app-avatar data=\"{{profile.name || profile.email}}\" [email]=\"profile.email\" dynamic=\"true\" size=\"75\"\r\n                    fontSize=\"35\"></app-avatar>\r\n            </div>\r\n            <hr>\r\n            <p *ngIf=\"fingerprint\">\r\n                {{'yourAccountsFingerprint' | i18n}}:\r\n                <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"\r\n                    appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i></a><br>\r\n                <code>{{fingerprint}}</code>\r\n            </p>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'save' | i18n}}</span>\r\n    </button>\r\n</form>\r\n","import {\r\n    Component,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { EmailRequest } from 'jslib/models/request/emailRequest';\r\nimport { EmailTokenRequest } from 'jslib/models/request/emailTokenRequest';\r\n\r\n@Component({\r\n    selector: 'app-change-email',\r\n    templateUrl: 'change-email.component.html',\r\n})\r\nexport class ChangeEmailComponent {\r\n    masterPassword: string;\r\n    newEmail: string;\r\n    token: string;\r\n    tokenSent = false;\r\n\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private messagingService: MessagingService,\r\n        private userService: UserService) { }\r\n\r\n    async submit() {\r\n        const hasEncKey = await this.cryptoService.hasEncKey();\r\n        if (!hasEncKey) {\r\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\r\n            return;\r\n        }\r\n\r\n        this.newEmail = this.newEmail.trim().toLowerCase();\r\n        if (!this.tokenSent) {\r\n            const request = new EmailTokenRequest();\r\n            request.newEmail = this.newEmail;\r\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n            try {\r\n                this.formPromise = this.apiService.postEmailToken(request);\r\n                await this.formPromise;\r\n                this.tokenSent = true;\r\n            } catch { }\r\n        } else {\r\n            const request = new EmailRequest();\r\n            request.token = this.token;\r\n            request.newEmail = this.newEmail;\r\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n            const kdf = await this.userService.getKdf();\r\n            const kdfIterations = await this.userService.getKdfIterations();\r\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail, kdf, kdfIterations);\r\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\r\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey);\r\n            request.key = newEncKey[1].encryptedString;\r\n            try {\r\n                this.formPromise = this.apiService.postEmail(request);\r\n                await this.formPromise;\r\n                this.reset();\r\n                this.analytics.eventTrack.next({ action: 'Changed Email' });\r\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\r\n                    this.i18nService.t('logBackIn'));\r\n                this.messagingService.send('logout');\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.token = this.newEmail = this.masterPassword = null;\r\n        this.tokenSent = false;\r\n    }\r\n}\r\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"masterPassword\" required [readonly]=\"tokenSent\" appInputVerbatim>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"newEmail\">{{'newEmail' | i18n}}</label>\r\n                <input id=\"newEmail\" class=\"form-control\" type=\"text\" name=\"NewEmail\" [(ngModel)]=\"newEmail\" required\r\n                    [readonly]=\"tokenSent\" inputmode=\"email\" appInputVerbatim=\"false\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngIf=\"tokenSent\">\r\n        <hr>\r\n        <p>{{'changeEmailDesc' | i18n : newEmail}}</p>\r\n        <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"token\">{{'code' | i18n}}</label>\r\n                    <input id=\"token\" class=\"form-control\" type=\"text\" name=\"Token\" [(ngModel)]=\"token\" required\r\n                        appInputVerbatim>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span *ngIf=\"!tokenSent\">{{'continue' | i18n}}</span>\r\n        <span *ngIf=\"tokenSent\">{{'changeEmail' | i18n}}</span>\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\r\n        {{'cancel' | i18n}}\r\n    </button>\r\n</form>\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class EmailTokenRequest extends PasswordVerificationRequest {\r\n    newEmail: string;\r\n    masterPasswordHash: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { PolicyService } from 'jslib/abstractions/policy.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport {\r\n    ChangePasswordComponent as BaseChangePasswordComponent,\r\n} from 'jslib/angular/components/change-password.component';\r\n\r\nimport { CipherString } from 'jslib/models/domain/cipherString';\r\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\r\n\r\nimport { CipherWithIdRequest } from 'jslib/models/request/cipherWithIdRequest';\r\nimport { FolderWithIdRequest } from 'jslib/models/request/folderWithIdRequest';\r\nimport { PasswordRequest } from 'jslib/models/request/passwordRequest';\r\nimport { UpdateKeyRequest } from 'jslib/models/request/updateKeyRequest';\r\n\r\n@Component({\r\n    selector: 'app-change-password',\r\n    templateUrl: 'change-password.component.html',\r\n})\r\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\r\n    rotateEncKey = false;\r\n    currentMasterPassword: string;\r\n\r\n    constructor(i18nService: I18nService,\r\n        cryptoService: CryptoService, messagingService: MessagingService,\r\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\r\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\r\n        private folderService: FolderService, private cipherService: CipherService,\r\n        private syncService: SyncService, private apiService: ApiService, ) {\r\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\r\n            platformUtilsService, policyService);\r\n    }\r\n\r\n    async rotateEncKeyClicked() {\r\n        if (this.rotateEncKey) {\r\n            const ciphers = await this.cipherService.getAllDecrypted();\r\n            let hasOldAttachments = false;\r\n            if (ciphers != null) {\r\n                for (let i = 0; i < ciphers.length; i++) {\r\n                    if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\r\n                        hasOldAttachments = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (hasOldAttachments) {\r\n                const learnMore = await this.platformUtilsService.showDialog(\r\n                    this.i18nService.t('oldAttachmentsNeedFixDesc'), null,\r\n                    this.i18nService.t('learnMore'), this.i18nService.t('close'), 'warning');\r\n                if (learnMore) {\r\n                    this.platformUtilsService.launchUri(\r\n                        'https://help.bitwarden.com/article/attachments/#fixing-old-attachments');\r\n                }\r\n                this.rotateEncKey = false;\r\n                return;\r\n            }\r\n\r\n            const result = await this.platformUtilsService.showDialog(\r\n                this.i18nService.t('updateEncryptionKeyWarning') + ' ' +\r\n                this.i18nService.t('rotateEncKeyConfirmation'), this.i18nService.t('rotateEncKeyTitle'),\r\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n            if (!result) {\r\n                this.rotateEncKey = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        const hasEncKey = await this.cryptoService.hasEncKey();\r\n        if (!hasEncKey) {\r\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('updateKey'));\r\n            return;\r\n        }\r\n\r\n        await super.submit();\r\n    }\r\n\r\n    async setupSubmitActions() {\r\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return false;\r\n        }\r\n\r\n        if (this.rotateEncKey) {\r\n            await this.syncService.fullSync(true);\r\n        }\r\n\r\n        return super.setupSubmitActions();\r\n    }\r\n\r\n    async performSubmitActions(newMasterPasswordHash: string, newKey: SymmetricCryptoKey,\r\n        newEncKey: [SymmetricCryptoKey, CipherString]) {\r\n        const request = new PasswordRequest();\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\r\n        request.newMasterPasswordHash = newMasterPasswordHash;\r\n        request.key = newEncKey[1].encryptedString;\r\n\r\n        try {\r\n            if (this.rotateEncKey) {\r\n                this.formPromise = this.apiService.postPassword(request).then(() => {\r\n                    return this.updateKey(newKey, request.newMasterPasswordHash);\r\n                });\r\n            } else {\r\n                this.formPromise = this.apiService.postPassword(request);\r\n            }\r\n\r\n            await this.formPromise;\r\n\r\n            this.platformUtilsService.showToast('success', this.i18nService.t('masterPasswordChanged'),\r\n                this.i18nService.t('logBackIn'));\r\n            this.messagingService.send('logout');\r\n        } catch {\r\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\r\n        }\r\n    }\r\n\r\n    private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\r\n        const encKey = await this.cryptoService.makeEncKey(key);\r\n        const privateKey = await this.cryptoService.getPrivateKey();\r\n        let encPrivateKey: CipherString = null;\r\n        if (privateKey != null) {\r\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\r\n        }\r\n        const request = new UpdateKeyRequest();\r\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\r\n        request.key = encKey[1].encryptedString;\r\n        request.masterPasswordHash = masterPasswordHash;\r\n\r\n        const folders = await this.folderService.getAllDecrypted();\r\n        for (let i = 0; i < folders.length; i++) {\r\n            if (folders[i].id == null) {\r\n                continue;\r\n            }\r\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\r\n            request.folders.push(new FolderWithIdRequest(folder));\r\n        }\r\n\r\n        const ciphers = await this.cipherService.getAllDecrypted();\r\n        for (let i = 0; i < ciphers.length; i++) {\r\n            if (ciphers[i].organizationId != null) {\r\n                continue;\r\n            }\r\n\r\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\r\n            request.ciphers.push(new CipherWithIdRequest(cipher));\r\n        }\r\n\r\n        await this.apiService.postAccountKey(request);\r\n    }\r\n}\r\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\r\n<app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\">\r\n    {{'masterPasswordPolicyInEffect' | i18n}}\r\n    <ul class=\"mb-0\">\r\n        <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\r\n            {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}}\r\n        </li>\r\n        <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\r\n            {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}}\r\n        </li>\r\n        <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">{{'policyInEffectUppercase' | i18n}}</li>\r\n        <li *ngIf=\"enforcedPolicyOptions?.requireLower\">{{'policyInEffectLowercase' | i18n}}</li>\r\n        <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">{{'policyInEffectNumbers' | i18n}}</li>\r\n        <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">{{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li>\r\n    </ul>\r\n</app-callout>\r\n\r\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"currentMasterPassword\">{{'currentMasterPass' | i18n}}</label>\r\n                <input id=\"currentMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"currentMasterPassword\" required appInputVerbatim>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"masterPassword\">{{'newMasterPass' | i18n}}</label>\r\n                <input id=\"masterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\"\r\n                    [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim\r\n                    autocomplete=\"new-password\">\r\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label>\r\n                <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\"\r\n                    class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim\r\n                    autocomplete=\"new-password\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"rotateEncKey\" name=\"RotateEncKey\"\r\n                [(ngModel)]=\"rotateEncKey\" (change)=\"rotateEncKeyClicked()\">\r\n            <label class=\"form-check-label\" for=\"rotateEncKey\">\r\n                {{'rotateAccountEncKey' | i18n}}\r\n            </label>\r\n            <a href=\"https://help.bitwarden.com/article/change-your-master-password/#rotating-your-accounts-encryption-key\"\r\n                target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'changeMasterPassword' | i18n}}</span>\r\n    </button>\r\n</form>\r\n","import { FolderRequest } from './folderRequest';\r\n\r\nimport { Folder } from '../domain/folder';\r\n\r\nexport class FolderWithIdRequest extends FolderRequest {\r\n    id: string;\r\n\r\n    constructor(folder: Folder) {\r\n        super(folder);\r\n        this.id = folder.id;\r\n    }\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class PasswordRequest extends PasswordVerificationRequest {\r\n    newMasterPasswordHash: string;\r\n    key: string;\r\n}\r\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\r\nimport { FolderWithIdRequest } from './folderWithIdRequest';\r\n\r\nexport class UpdateKeyRequest {\r\n    ciphers: CipherWithIdRequest[] = [];\r\n    folders: FolderWithIdRequest[] = [];\r\n    masterPasswordHash: string;\r\n    privateKey: string;\r\n    key: string;\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { KdfRequest } from 'jslib/models/request/kdfRequest';\r\n\r\nimport { KdfType } from 'jslib/enums/kdfType';\r\n\r\n@Component({\r\n    selector: 'app-change-kdf',\r\n    templateUrl: 'change-kdf.component.html',\r\n})\r\nexport class ChangeKdfComponent implements OnInit {\r\n    masterPassword: string;\r\n    kdfIterations: number;\r\n    kdf = KdfType.PBKDF2_SHA256;\r\n    kdfOptions: any[] = [];\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private messagingService: MessagingService,\r\n        private userService: UserService) {\r\n        this.kdfOptions = [\r\n            { name: 'PBKDF2 SHA-256', value: KdfType.PBKDF2_SHA256 },\r\n        ];\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.kdf = await this.userService.getKdf();\r\n        this.kdfIterations = await this.userService.getKdfIterations();\r\n    }\r\n\r\n    async submit() {\r\n        const hasEncKey = await this.cryptoService.hasEncKey();\r\n        if (!hasEncKey) {\r\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\r\n            return;\r\n        }\r\n\r\n        const request = new KdfRequest();\r\n        request.kdf = this.kdf;\r\n        request.kdfIterations = this.kdfIterations;\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n        const email = await this.userService.getEmail();\r\n        const newKey = await this.cryptoService.makeKey(this.masterPassword, email, this.kdf, this.kdfIterations);\r\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\r\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\r\n        request.key = newEncKey[1].encryptedString;\r\n        try {\r\n            this.formPromise = this.apiService.postAccountKdf(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Changed KDF' });\r\n            this.toasterService.popAsync('success', this.i18nService.t('encKeySettingsChanged'),\r\n                this.i18nService.t('logBackIn'));\r\n            this.messagingService.send('logout');\r\n        } catch { }\r\n    }\r\n}\r\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\r\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kdfMasterPassword\">{{'masterPass' | i18n}}</label>\r\n                <input id=\"kdfMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"masterPassword\" required appInputVerbatim>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group mb-0\">\r\n                <label for=\"kdf\">{{'kdfAlgorithm' | i18n}}</label>\r\n                <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/Key_derivation_function\" target=\"_blank\"\r\n                    rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                </a>\r\n                <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\r\n                    <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group mb-0\">\r\n                <label for=\"kdfIterations\">{{'kdfIterations' | i18n}}</label>\r\n                <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/PBKDF2\" target=\"_blank\" rel=\"noopener\"\r\n                    appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                </a>\r\n                <input id=\"kdfIterations\" type=\"number\" min=\"5000\" max=\"2000000\" name=\"KdfIterations\"\r\n                    class=\"form-control\" [(ngModel)]=\"kdfIterations\" required>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <div class=\"form-group\">\r\n                <div class=\"small form-text text-muted\">\r\n                    <p>{{'kdfIterationsDesc' | i18n : (100000 | number)}}</p>\r\n                    <strong>{{'warning' | i18n}}</strong>: {{'kdfIterationsWarning' | i18n : (50000 | number)}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'changeKdf' | i18n}}</span>\r\n    </button>\r\n</form>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { OrganizationPlansComponent } from './organization-plans.component';\r\n\r\n@Component({\r\n    selector: 'app-create-organization',\r\n    templateUrl: 'create-organization.component.html',\r\n})\r\nexport class CreateOrganizationComponent implements OnInit {\r\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\r\n\r\n    constructor(private route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n            if (qParams.plan === 'families' || qParams.plan === 'teams' || qParams.plan === 'enterprise') {\r\n                this.orgPlansComponent.plan = qParams.plan;\r\n            }\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'newOrganization' | i18n}}</h1>\r\n</div>\r\n<p>{{'newOrganizationDesc' | i18n}}</p>\r\n<app-organization-plans></app-organization-plans>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\nimport { UpdateDomainsRequest } from 'jslib/models/request/updateDomainsRequest';\r\n\r\n@Component({\r\n    selector: 'app-domain-rules',\r\n    templateUrl: 'domain-rules.component.html',\r\n})\r\nexport class DomainRulesComponent implements OnInit {\r\n    loading = true;\r\n    custom: string[] = [];\r\n    global: any[] = [];\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\r\n\r\n    async ngOnInit() {\r\n        const response = await this.apiService.getSettingsDomains();\r\n        this.loading = false;\r\n        if (response.equivalentDomains != null) {\r\n            this.custom = response.equivalentDomains.map((d) => d.join(', '));\r\n        }\r\n        if (response.globalEquivalentDomains != null) {\r\n            this.global = response.globalEquivalentDomains.map((d) => {\r\n                return {\r\n                    domains: d.domains.join(', '),\r\n                    excluded: d.excluded,\r\n                    key: d.type,\r\n                };\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleExcluded(globalDomain: any) {\r\n        globalDomain.excluded = !globalDomain.excluded;\r\n    }\r\n\r\n    customize(globalDomain: any) {\r\n        globalDomain.excluded = true;\r\n        this.custom.push(globalDomain.domains);\r\n    }\r\n\r\n    remove(index: number) {\r\n        this.custom.splice(index, 1);\r\n    }\r\n\r\n    add() {\r\n        this.custom.push('');\r\n    }\r\n\r\n    async submit() {\r\n        const request = new UpdateDomainsRequest();\r\n        request.excludedGlobalEquivalentDomains = this.global.filter((d) => d.excluded)\r\n            .map((d) => d.key);\r\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\r\n            request.excludedGlobalEquivalentDomains = null;\r\n        }\r\n        request.equivalentDomains = this.custom.filter((d) => d != null && d.trim() !== '')\r\n            .map((d) => d.split(',').map((d2) => d2.trim()));\r\n        if (request.equivalentDomains.length === 0) {\r\n            request.equivalentDomains = null;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.apiService.putSettingsDomains(request);\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Saved Equivalent Domains' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\r\n        } catch { }\r\n    }\r\n\r\n    indexTrackBy(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'domainRules' | i18n}}</h1>\r\n</div>\r\n<p>{{'domainRulesDesc' | i18n}}</p>\r\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <h2>{{'customEqDomains' | i18n}}</h2>\r\n    <p *ngIf=\"loading\">\r\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n    </p>\r\n    <ng-container *ngIf=\"!loading\">\r\n        <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\r\n            <div class=\"flex-fill\">\r\n                <label for=\"customDomain_{{i}}\" class=\"sr-only\">{{'customDomainX' | i18n : (i + 1)}}</label>\r\n                <textarea class=\"form-control\" name=\"CustomDomain[{{i}}]\" id=\"customDomain_{{i}}\"\r\n                    [(ngModel)]=\"custom[i]\" placeholder=\"{{'ex' | i18n}} google.com, gmail.com\" required></textarea>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"remove(i)\"\r\n                appA11yTitle=\"{{'remove' | i18n}}\">\r\n                <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\r\n            </button>\r\n        </div>\r\n        <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\r\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCustomDomain' | i18n}}\r\n        </button>\r\n        <small class=\"text-muted d-block mb-3\">{{'newCustomDomainDesc' | i18n}}</small>\r\n    </ng-container>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'save' | i18n}}</span>\r\n    </button>\r\n    <h2 class=\"spaced-header\">{{'globalEqDomains' | i18n}}</h2>\r\n    <p *ngIf=\"loading\">\r\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n    </p>\r\n    <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\r\n        <tbody>\r\n            <tr *ngFor=\"let d of global\">\r\n                <td [ngClass]=\"{'table-list-strike': d.excluded}\">{{d.domains}}</td>\r\n                <td class=\"table-list-options\">\r\n                    <div class=\"dropdown\" appListDropdown>\r\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\r\n                            aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\r\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div class=\"dropdown-menu dropdown-menu-right\">\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\"\r\n                                *ngIf=\"!d.excluded\">\r\n                                <i class=\"fa fa-fw fa-close\" aria-hidden=\"true\"></i>\r\n                                {{'exclude' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\"\r\n                                *ngIf=\"d.excluded\">\r\n                                <i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i>\r\n                                {{'include' | i18n}}\r\n                            </a>\r\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\r\n                                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i>\r\n                                {{'customize' | i18n}}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'save' | i18n}}</span>\r\n    </button>\r\n</form>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\r\n\r\nimport { ConstantsService } from 'jslib/services/constants.service';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\n@Component({\r\n    selector: 'app-options',\r\n    templateUrl: 'options.component.html',\r\n})\r\nexport class OptionsComponent implements OnInit {\r\n    vaultTimeout: number = null;\r\n    vaultTimeoutAction: string = 'lock';\r\n    disableIcons: boolean;\r\n    enableGravatars: boolean;\r\n    enableFullWidth: boolean;\r\n    locale: string;\r\n    vaultTimeouts: any[];\r\n    localeOptions: any[];\r\n\r\n    private startingLocale: string;\r\n\r\n    constructor(private storageService: StorageService, private stateService: StateService,\r\n        private analytics: Angulartics2, private i18nService: I18nService,\r\n        private toasterService: ToasterService, private vaultTimeoutService: VaultTimeoutService,\r\n        private platformUtilsService: PlatformUtilsService, private messagingService: MessagingService) {\r\n        this.vaultTimeouts = [\r\n            { name: i18nService.t('oneMinute'), value: 1 },\r\n            { name: i18nService.t('fiveMinutes'), value: 5 },\r\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\r\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\r\n            { name: i18nService.t('oneHour'), value: 60 },\r\n            { name: i18nService.t('fourHours'), value: 240 },\r\n            { name: i18nService.t('onRefresh'), value: -1 },\r\n        ];\r\n        if (this.platformUtilsService.isDev()) {\r\n            this.vaultTimeouts.push({ name: i18nService.t('never'), value: null });\r\n        }\r\n\r\n        const localeOptions: any[] = [];\r\n        i18nService.supportedTranslationLocales.forEach((locale) => {\r\n            let name = locale;\r\n            if (i18nService.localeNames.has(locale)) {\r\n                name += (' - ' + i18nService.localeNames.get(locale));\r\n            }\r\n            localeOptions.push({ name: name, value: locale });\r\n        });\r\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\r\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\r\n        this.localeOptions = localeOptions;\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\r\n        this.vaultTimeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\r\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\r\n        this.enableGravatars = await this.storageService.get<boolean>('enableGravatars');\r\n        this.enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\r\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\r\n    }\r\n\r\n    async submit() {\r\n        await this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout != null ? this.vaultTimeout : null,\r\n            this.vaultTimeoutAction);\r\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\r\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\r\n        await this.storageService.save('enableGravatars', this.enableGravatars);\r\n        await this.stateService.save('enableGravatars', this.enableGravatars);\r\n        await this.storageService.save('enableFullWidth', this.enableFullWidth);\r\n        this.messagingService.send('setFullWidth');\r\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\r\n        this.analytics.eventTrack.next({ action: 'Saved Options' });\r\n        if (this.locale !== this.startingLocale) {\r\n            window.location.reload();\r\n        } else {\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\r\n        }\r\n    }\r\n\r\n    async vaultTimeoutActionChanged(newValue: string) {\r\n        if (newValue === 'logOut') {\r\n            const confirmed = await this.platformUtilsService.showDialog(\r\n                this.i18nService.t('vaultTimeoutLogOutConfirmation'),\r\n                this.i18nService.t('vaultTimeoutLogOutConfirmationTitle'),\r\n                this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');\r\n            if (!confirmed) {\r\n                this.vaultTimeoutAction = 'lock';\r\n                return;\r\n            }\r\n        }\r\n        this.vaultTimeoutAction = newValue;\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'options' | i18n}}</h1>\r\n</div>\r\n<p>{{'optionsDesc' | i18n}}</p>\r\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label for=\"vaultTimeout\">{{'vaultTimeout' | i18n}}</label>\r\n                <select id=\"vaultTimeout\" name=\"VaultTimeout\" [(ngModel)]=\"vaultTimeout\" class=\"form-control\">\r\n                    <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                </select>\r\n                <small class=\"form-text text-muted\">{{'vaultTimeoutDesc' | i18n}}</small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>{{'vaultTimeoutAction' | i18n}}</label>\r\n        <div class=\"form-check form-check-block\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLock\"\r\n                value=\"lock\" [(ngModel)]=\"vaultTimeoutAction\">\r\n            <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\r\n                {{'lock' | i18n}}\r\n                <small>{{'vaultTimeoutActionLockDesc' | i18n}}</small>\r\n            </label>\r\n        </div>\r\n        <div class=\"form-check mt-2 form-check-block\">\r\n            <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLogOut\"\r\n                value=\"logOut\" [(ngModel)]=\"vaultTimeoutAction\" (ngModelChange)=\"vaultTimeoutActionChanged($event)\">\r\n            <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\r\n                {{'logOut' | i18n}}\r\n                <small>{{'vaultTimeoutActionLogOutDesc' | i18n}}</small>\r\n            </label>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <div class=\"d-flex\">\r\n                    <label for=\"locale\">{{'language' | i18n}}</label>\r\n                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/localization/\" target=\"_blank\"\r\n                        rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                </div>\r\n                <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\r\n                    <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\r\n                </select>\r\n                <small class=\"form-text text-muted\">{{'languageDesc' | i18n}}</small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"disableIcons\" name=\"DisableIcons\"\r\n                [(ngModel)]=\"disableIcons\">\r\n            <label class=\"form-check-label\" for=\"disableIcons\">\r\n                {{'disableIcons' | i18n}}\r\n            </label>\r\n            <a href=\"https://help.bitwarden.com/article/website-icons/\" target=\"_blank\" rel=\"noopener\"\r\n                appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n            </a>\r\n        </div>\r\n        <small class=\"form-text text-muted\">{{'disableIconsDesc' | i18n}}</small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"enableGravatars\" name=\"enableGravatars\"\r\n                [(ngModel)]=\"enableGravatars\">\r\n            <label class=\"form-check-label\" for=\"enableGravatars\">\r\n                {{'enableGravatars' | i18n}}\r\n            </label>\r\n            <a href=\"https://gravatar.com/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n            </a>\r\n        </div>\r\n        <small class=\"form-text text-muted\">{{'enableGravatarsDesc' | i18n}}</small>\r\n    </div>\r\n\t<div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"enableFullWidth\" name=\"enableFullWidth\"\r\n                [(ngModel)]=\"enableFullWidth\">\r\n            <label class=\"form-check-label\" for=\"enableFullWidth\">\r\n                {{'enableFullWidth' | i18n}}\r\n            </label>\r\n        </div>\r\n        <small class=\"form-text text-muted\">{{'enableFullWidthDesc' | i18n}}</small>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">\r\n        {{'save' | i18n}}\r\n    </button>\r\n</form>\r\n","import {\r\n    AfterContentInit,\r\n    Component,\r\n    Input,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\n\r\nimport { SsoComponent } from 'jslib/angular/components/sso.component';\r\n\r\nimport { Organization } from 'jslib/models/domain/organization';\r\n\r\n@Component({\r\n    selector: 'app-link-sso',\r\n    templateUrl: 'link-sso.component.html',\r\n})\r\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\r\n    @Input() organization: Organization;\r\n    returnUri: string = '/settings/organizations'\r\n\r\n    constructor(platformUtilsService: PlatformUtilsService, i18nService: I18nService,\r\n        apiService: ApiService, authService: AuthService,\r\n        router: Router, route: ActivatedRoute,\r\n        cryptoFunctionService: CryptoFunctionService, passwordGenerationService: PasswordGenerationService,\r\n        storageService: StorageService, stateService: StateService) {\r\n        super(authService, router,\r\n            i18nService, route,\r\n            storageService, stateService,\r\n            platformUtilsService, apiService,\r\n            cryptoFunctionService, passwordGenerationService);\r\n\r\n        this.returnUri = '/settings/organizations';\r\n        this.redirectUri = window.location.origin + '/sso-connector.html';\r\n        this.clientId = 'web';\r\n    }\r\n\r\n    async ngAfterContentInit() {\r\n        this.identifier = this.organization.identifier;\r\n    }\r\n}\r\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\">\r\n    <i class=\"fa fa-fw fa-link\" aria-hidden=\"true\"></i>\r\n    {{'linkSso' | i18n}}\r\n</a>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\nimport { TokenService } from 'jslib/abstractions/token.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { PaymentComponent } from './payment.component';\r\nimport { TaxInfoComponent } from './tax-info.component';\r\n\r\n@Component({\r\n    selector: 'app-premium',\r\n    templateUrl: 'premium.component.html',\r\n})\r\nexport class PremiumComponent implements OnInit {\r\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\r\n    @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\r\n\r\n    canAccessPremium = false;\r\n    selfHosted = false;\r\n    premiumPrice = 10;\r\n    storageGbPrice = 4;\r\n    additionalStorage = 0;\r\n\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        platformUtilsService: PlatformUtilsService, private tokenService: TokenService,\r\n        private router: Router, private messagingService: MessagingService,\r\n        private syncService: SyncService, private userService: UserService) {\r\n        this.selfHosted = platformUtilsService.isSelfHost();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.canAccessPremium = await this.userService.canAccessPremium();\r\n        const premium = await this.tokenService.getPremium();\r\n        if (premium) {\r\n            this.router.navigate(['/settings/subscription']);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        let files: FileList = null;\r\n        if (this.selfHosted) {\r\n            const fileEl = document.getElementById('file') as HTMLInputElement;\r\n            files = fileEl.files;\r\n            if (files == null || files.length === 0) {\r\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                    this.i18nService.t('selectFile'));\r\n                return;\r\n            }\r\n        }\r\n\r\n        try {\r\n            if (this.selfHosted) {\r\n                if (!this.tokenService.getEmailVerified()) {\r\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                        this.i18nService.t('verifyEmailFirst'));\r\n                    return;\r\n                }\r\n\r\n                const fd = new FormData();\r\n                fd.append('license', files[0]);\r\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\r\n                    return this.finalizePremium();\r\n                });\r\n            } else {\r\n                this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\r\n                    const fd = new FormData();\r\n                    fd.append('paymentMethodType', result[1].toString());\r\n                    if (result[0] != null) {\r\n                        fd.append('paymentToken', result[0]);\r\n                    }\r\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\r\n                    fd.append('country', this.taxInfoComponent.taxInfo.country);\r\n                    fd.append('postalCode', this.taxInfoComponent.taxInfo.postalCode);\r\n                    return this.apiService.postPremium(fd);\r\n                }).then((paymentResponse) => {\r\n                    if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\r\n                        return this.paymentComponent.handleStripeCardPayment(paymentResponse.paymentIntentClientSecret,\r\n                            () => this.finalizePremium());\r\n                    } else {\r\n                        return this.finalizePremium();\r\n                    }\r\n                });\r\n            }\r\n            await this.formPromise;\r\n        } catch { }\r\n    }\r\n\r\n    async finalizePremium() {\r\n        await this.apiService.refreshIdentityToken();\r\n        await this.syncService.fullSync(true);\r\n        this.analytics.eventTrack.next({ action: 'Signed Up Premium' });\r\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\r\n        this.messagingService.send('purchasedPremium');\r\n        this.router.navigate(['/settings/subscription']);\r\n    }\r\n\r\n    get additionalStorageTotal(): number {\r\n        return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\r\n    }\r\n\r\n    get total(): number {\r\n        return this.additionalStorageTotal + this.premiumPrice;\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'goPremium' | i18n}}</h1>\r\n</div>\r\n<app-callout type=\"info\" *ngIf=\"canAccessPremium\" title=\"{{'youHavePremiumAccess' | i18n}}\" icon=\"fa-star\">\r\n    {{'alreadyPremiumFromOrg' | i18n}}\r\n</app-callout>\r\n<app-callout type=\"success\">\r\n    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\r\n    <ul class=\"fa-ul\">\r\n        <li>\r\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\r\n            {{'premiumSignUpStorage' | i18n}}\r\n        </li>\r\n        <li>\r\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\r\n            {{'premiumSignUpTwoStep' | i18n}}\r\n        </li>\r\n        <li>\r\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\r\n            {{'premiumSignUpReports' | i18n}}\r\n        </li>\r\n        <li>\r\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\r\n            {{'premiumSignUpTotp' | i18n}}\r\n        </li>\r\n        <li>\r\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\r\n            {{'premiumSignUpSupport' | i18n}}\r\n        </li>\r\n        <li>\r\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\r\n            {{'premiumSignUpFuture' | i18n}}\r\n        </li>\r\n    </ul>\r\n    <p class=\"text-lg\" [ngClass]=\"{'mb-0':!selfHosted}\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p>\r\n    <a href=\"https://vault.bitwarden.com/#/settings/premium\" target=\"_blank\" rel=\"noopener\"\r\n        class=\"btn btn-outline-secondary\" *ngIf=\"selfHosted\">\r\n        {{'purchasePremium' | i18n}}\r\n    </a>\r\n</app-callout>\r\n<ng-container *ngIf=\"selfHosted\">\r\n    <p>{{'uploadLicenseFilePremium' | i18n}}</p>\r\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n        <div class=\"form-group\">\r\n            <label for=\"file\">{{'licenseFile' | i18n}}</label>\r\n            <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\r\n            <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'submit' | i18n}}</span>\r\n        </button>\r\n    </form>\r\n</ng-container>\r\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\r\n    <h2 class=\"mt-5\">{{'addons' | i18n}}</h2>\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label>\r\n            <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\"\r\n                [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\"\r\n                placeholder=\"{{'additionalStorageGbDesc' | i18n}}\">\r\n            <small\r\n                class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$') : ('year' | i18n)}}</small>\r\n        </div>\r\n    </div>\r\n    <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2>\r\n    {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}}\r\n    <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal\r\n    | currency:'$'}}\r\n    <hr class=\"my-3\">\r\n    <div class=\"text-lg\">\r\n        <strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}} /{{'year' | i18n}}\r\n    </div>\r\n    <small class=\"text-muted font-italic\">{{'paymentChargedAnnually' | i18n}}</small>\r\n    <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2>\r\n    <app-payment [hideBank]=\"true\"></app-payment>\r\n    <app-tax-info></app-tax-info>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'submit' | i18n}}</span>\r\n    </button>\r\n</form>\r\n","import {\r\n    Component,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { TokenService } from 'jslib/abstractions/token.service';\r\n\r\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\r\n\r\nconst BroadcasterSubscriptionId = 'SettingsComponent';\r\n\r\n@Component({\r\n    selector: 'app-settings',\r\n    templateUrl: 'settings.component.html',\r\n})\r\nexport class SettingsComponent implements OnInit, OnDestroy {\r\n    premium: boolean;\r\n    selfHosted: boolean;\r\n\r\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\r\n        private ngZone: NgZone, private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async ngOnInit() {\r\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\r\n            this.ngZone.run(async () => {\r\n                switch (message.command) {\r\n                    case 'purchasedPremium':\r\n                        await this.load();\r\n                        break;\r\n                    default:\r\n                }\r\n            });\r\n        });\r\n\r\n        this.selfHosted = await this.platformUtilsService.isSelfHost();\r\n        await this.load();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\r\n    }\r\n\r\n    async load() {\r\n        this.premium = await this.tokenService.getPremium();\r\n    }\r\n}\r\n","<div class=\"container page-content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">{{'settings' | i18n}}</div>\r\n                <div class=\"list-group list-group-flush\">\r\n                    <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'myAccount' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'options' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'organizations' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"premium\">\r\n                        {{'premiumMembership' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"premium\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!premium\">\r\n                        {{'goPremium' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\">\r\n                        {{'billing' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'twoStepLogin' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'domainRules' | i18n}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { SubscriptionResponse } from 'jslib/models/response/subscriptionResponse';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { TokenService } from 'jslib/abstractions/token.service';\r\n\r\n@Component({\r\n    selector: 'app-user-subscription',\r\n    templateUrl: 'user-subscription.component.html',\r\n})\r\nexport class UserSubscriptionComponent implements OnInit {\r\n    loading = false;\r\n    firstLoaded = false;\r\n    adjustStorageAdd = true;\r\n    showAdjustStorage = false;\r\n    showUpdateLicense = false;\r\n    sub: SubscriptionResponse;\r\n    selfHosted = false;\r\n\r\n    cancelPromise: Promise<any>;\r\n    reinstatePromise: Promise<any>;\r\n\r\n    constructor(private tokenService: TokenService, private apiService: ApiService,\r\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private router: Router) {\r\n        this.selfHosted = platformUtilsService.isSelfHost();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await this.load();\r\n        this.firstLoaded = true;\r\n    }\r\n\r\n    async load() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        if (this.tokenService.getPremium()) {\r\n            this.loading = true;\r\n            this.sub = await this.apiService.getUserSubscription();\r\n        } else {\r\n            this.router.navigate(['/settings/premium']);\r\n            return;\r\n        }\r\n\r\n        this.loading = false;\r\n    }\r\n\r\n    async reinstate() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        if (this.usingInAppPurchase) {\r\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\r\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\r\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.reinstatePromise = this.apiService.postReinstatePremium();\r\n            await this.reinstatePromise;\r\n            this.analytics.eventTrack.next({ action: 'Reinstated Premium' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\r\n            this.load();\r\n        } catch { }\r\n    }\r\n\r\n    async cancel() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        if (this.usingInAppPurchase) {\r\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\r\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\r\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.cancelPromise = this.apiService.postCancelPremium();\r\n            await this.cancelPromise;\r\n            this.analytics.eventTrack.next({ action: 'Canceled Premium' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\r\n            this.load();\r\n        } catch { }\r\n    }\r\n\r\n    downloadLicense() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        const licenseString = JSON.stringify(this.sub.license, null, 2);\r\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\r\n    }\r\n\r\n    updateLicense() {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n        this.showUpdateLicense = true;\r\n    }\r\n\r\n    closeUpdateLicense(load: boolean) {\r\n        this.showUpdateLicense = false;\r\n        if (load) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    adjustStorage(add: boolean) {\r\n        if (this.usingInAppPurchase) {\r\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\r\n                this.i18nService.t(add ? 'addStorage' : 'removeStorage'), null, null, 'warning');\r\n            return;\r\n        }\r\n        this.adjustStorageAdd = add;\r\n        this.showAdjustStorage = true;\r\n    }\r\n\r\n    closeStorage(load: boolean) {\r\n        this.showAdjustStorage = false;\r\n        if (load) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    get subscriptionMarkedForCancel() {\r\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\r\n    }\r\n\r\n    get subscription() {\r\n        return this.sub != null ? this.sub.subscription : null;\r\n    }\r\n\r\n    get nextInvoice() {\r\n        return this.sub != null ? this.sub.upcomingInvoice : null;\r\n    }\r\n\r\n    get storagePercentage() {\r\n        return this.sub != null && this.sub.maxStorageGb ?\r\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\r\n    }\r\n\r\n    get storageProgressWidth() {\r\n        return this.storagePercentage < 5 ? 5 : 0;\r\n    }\r\n\r\n    get usingInAppPurchase() {\r\n        return this.sub != null ? this.sub.usingInAppPurchase : false;\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>\r\n        {{'premiumMembership' | i18n}}\r\n        <small *ngIf=\"firstLoaded && loading\">\r\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n        </small>\r\n    </h1>\r\n</div>\r\n<ng-container *ngIf=\"!firstLoaded && loading\">\r\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n</ng-container>\r\n<ng-container *ngIf=\"sub\">\r\n    <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\">\r\n        {{'subscriptionCanceled' | i18n}}</app-callout>\r\n    <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\">\r\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\r\n        <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\"\r\n            [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\">\r\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>{{'reinstateSubscription' | i18n}}</span>\r\n        </button>\r\n    </app-callout>\r\n    <dl *ngIf=\"selfHosted\">\r\n        <dt>{{'expiration' | i18n}}</dt>\r\n        <dd *ngIf=\"sub.expiration\">{{sub.expiration | date:'mediumDate'}}</dd>\r\n        <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd>\r\n    </dl>\r\n    <div class=\"row\" *ngIf=\"!selfHosted\">\r\n        <div class=\"col-4\">\r\n            <dl>\r\n                <dt>{{'status' | i18n}}</dt>\r\n                <dd>\r\n                    <span class=\"text-capitalize\">{{(subscription && subscription.status) || '-'}}</span>\r\n                    <span class=\"badge badge-warning\"\r\n                        *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span>\r\n                </dd>\r\n                <dt>{{'nextCharge' | i18n}}</dt>\r\n                <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) :\r\n                    '-'}}\r\n                </dd>\r\n            </dl>\r\n        </div>\r\n        <div class=\"col-8\" *ngIf=\"subscription\">\r\n            <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong>\r\n            <table class=\"table\">\r\n                <tbody>\r\n                    <tr *ngFor=\"let i of subscription.items\">\r\n                        <td>\r\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\r\n                        </td>\r\n                        <td>\r\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngIf=\"selfHosted\">\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\r\n                {{'updateLicense' | i18n}}\r\n            </button>\r\n            <a href=\"https://vault.bitwarden.com/#/settings/subscription\" target=\"_blank\" rel=\"noopener\"\r\n                class=\"btn btn-outline-secondary\">\r\n                {{'manageSubscription' | i18n}}\r\n            </a>\r\n        </div>\r\n        <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\r\n            <div class=\"card-body\">\r\n                <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\"\r\n                    (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button>\r\n                <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3>\r\n                <app-update-license (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\">\r\n                </app-update-license>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!selfHosted\">\r\n        <div class=\"d-flex\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\"\r\n                *ngIf=\"!subscription || !subscription.cancelled\">\r\n                {{'downloadLicense' | i18n}}\r\n            </button>\r\n            <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\"\r\n                [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\"\r\n                *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\r\n                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                <span>{{'cancelSubscription' | i18n}}</span>\r\n            </button>\r\n        </div>\r\n        <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2>\r\n        <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p>\r\n        <div class=\"progress\">\r\n            <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\"\r\n                [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                {{(storagePercentage / 100) | percent}}</div>\r\n        </div>\r\n        <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\r\n            <div class=\"mt-3\">\r\n                <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\r\n                        {{'addStorage' | i18n}}\r\n                    </button>\r\n                    <button type=\"button\" class=\"ml-1 btn btn-outline-secondary\" (click)=\"adjustStorage(false)\">\r\n                        {{'removeStorage' | i18n}}\r\n                    </button>\r\n                </div>\r\n                <app-adjust-storage [storageGbPrice]=\"4\" [add]=\"adjustStorageAdd\" (onAdjusted)=\"closeStorage(true)\"\r\n                    (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { AuditService } from 'jslib/abstractions/audit.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\nimport { BreachAccountResponse } from 'jslib/models/response/breachAccountResponse';\r\n\r\n@Component({\r\n    selector: 'app-breach-report',\r\n    templateUrl: 'breach-report.component.html',\r\n})\r\nexport class BreachReportComponent implements OnInit {\r\n    error = false;\r\n    username: string;\r\n    checkedUsername: string;\r\n    breachedAccounts: BreachAccountResponse[] = [];\r\n    formPromise: Promise<BreachAccountResponse[]>;\r\n\r\n    constructor(private auditService: AuditService, private userService: UserService) { }\r\n\r\n    async ngOnInit() {\r\n        this.username = await this.userService.getEmail();\r\n    }\r\n\r\n    async submit() {\r\n        this.error = false;\r\n        this.username = this.username.toLowerCase();\r\n        try {\r\n            this.formPromise = this.auditService.breachedAccounts(this.username);\r\n            this.breachedAccounts = await this.formPromise;\r\n        } catch {\r\n            this.error = true;\r\n        }\r\n        this.checkedUsername = this.username;\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'dataBreachReport' | i18n}}</h1>\r\n</div>\r\n<p>{{'breachDesc' | i18n}}</p>\r\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-6\">\r\n            <label for=\"username\">{{'username' | i18n}}</label>\r\n            <input id=\"username\" type=\"text\" name=\"Username\" class=\"form-control\" [(ngModel)]=\"username\" required>\r\n            <small class=\"form-text text-muted\">{{'breachCheckUsernameEmail' | i18n}}</small>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n        <span>{{'checkBreaches' | i18n}}</span>\r\n    </button>\r\n</form>\r\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\r\n    <p *ngIf=\"error\">{{'reportError' | i18n}}...</p>\r\n    <ng-container *ngIf=\"!error\">\r\n        <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!breachedAccounts.length\">\r\n            {{'breachUsernameNotFound' | i18n : checkedUsername}}\r\n        </app-callout>\r\n        <app-callout type=\"danger\" title=\"{{'breachFound' | i18n}}\" *ngIf=\"breachedAccounts.length\">\r\n            {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}}\r\n        </app-callout>\r\n        <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\r\n            <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-2 text-center\">\r\n                        <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\">\r\n                    </div>\r\n                    <div class=\"col-7\">\r\n                        <h3 class=\"text-lg\">{{a.title}}</h3>\r\n                        <p [innerHTML]=\"a.description\"></p>\r\n                        <p class=\"mb-1\">{{'compromisedData' | i18n}}:</p>\r\n                        <ul>\r\n                            <li *ngFor=\"let d of a.dataClasses\">{{d}}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                        <dl>\r\n                            <dt>{{'website' | i18n}}</dt>\r\n                            <dd>{{a.domain}}</dd>\r\n                            <dt>{{'affectedUsers' | i18n}}</dt>\r\n                            <dd>{{a.pwnCount | number}}</dd>\r\n                            <dt>{{'breachOccurred' | i18n}}</dt>\r\n                            <dd>{{a.breachDate | date: 'mediumDate'}}</dd>\r\n                            <dt>{{'breachReported' | i18n}}</dt>\r\n                            <dd>{{a.addedDate | date: 'mediumDate'}}</dd>\r\n                        </dl>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </ng-container>\r\n</div>\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport {\r\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\r\n} from 'jslib/angular/components/password-generator.component';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\r\n\r\n@Component({\r\n    selector: 'app-password-generator',\r\n    templateUrl: 'password-generator.component.html',\r\n})\r\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\r\n    @ViewChild('historyTemplate', { read: ViewContainerRef, static: true }) historyModalRef: ViewContainerRef;\r\n\r\n    private modal: ModalComponent = null;\r\n\r\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\r\n        i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver) {\r\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\r\n    }\r\n\r\n    history() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.historyModalRef.createComponent(factory).instance;\r\n        this.modal.show<PasswordGeneratorHistoryComponent>(PasswordGeneratorHistoryComponent, this.historyModalRef);\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    lengthChanged() {\r\n        document.getElementById('length').focus();\r\n    }\r\n\r\n    minNumberChanged() {\r\n        document.getElementById('min-number').focus();\r\n    }\r\n\r\n    minSpecialChanged() {\r\n        document.getElementById('min-special').focus();\r\n    }\r\n}\r\n","<div class=\"page-header\">\r\n    <h1>{{'passwordGenerator' | i18n}}</h1>\r\n</div>\r\n<app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\">\r\n    {{'passwordGeneratorPolicyInEffect' | i18n}}\r\n</app-callout>\r\n<div class=\"card card-password bg-light my-4\">\r\n    <div class=\"card-body\">\r\n        <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <div class=\"form-check form-check-inline\">\r\n        <input id=\"generate-password\" name=\"type\" value=\"password\" class=\"form-check-input\" type=\"radio\"\r\n            (change)=\"saveOptions()\" [(ngModel)]=\"options.type\">\r\n        <label for=\"generate-password\" class=\"form-check-label\">{{'password' | i18n}}</label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline\">\r\n        <input id=\"generate-passphrase\" name=\"type\" value=\"passphrase\" class=\"form-check-input\" type=\"radio\"\r\n            (change)=\"saveOptions()\" [(ngModel)]=\"options.type\">\r\n        <label for=\"generate-passphrase\" class=\"form-check-label\">{{'passphrase' | i18n}}</label>\r\n    </div>\r\n</div>\r\n<ng-container *ngIf=\"options.type === 'passphrase'\">\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-4\">\r\n            <label for=\"num-words\">{{'numWords' | i18n}}</label>\r\n            <input id=\"num-words\" class=\"form-control\" type=\"number\" min=\"3\" max=\"20\" [(ngModel)]=\"options.numWords\"\r\n                (blur)=\"saveOptions()\">\r\n        </div>\r\n        <div class=\"form-group col-4\">\r\n            <label for=\"word-separator\">{{'wordSeparator' | i18n}}</label>\r\n            <input id=\"word-separator\" class=\"form-control\" type=\"text\" maxlength=\"1\"\r\n                [(ngModel)]=\"options.wordSeparator\" (blur)=\"saveOptions()\">\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n            <input id=\"capitalize\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.capitalize\" [disabled]=\"enforcedPolicyOptions?.capitalize\">\r\n            <label for=\"capitalize\" class=\"form-check-label\">{{'capitalize' | i18n}}</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input id=\"include-number\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.includeNumber\" [disabled]=\"enforcedPolicyOptions?.includeNumber\">\r\n            <label for=\"include-number\" class=\"form-check-label\">{{'includeNumber' | i18n}}</label>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-container *ngIf=\"options.type === 'password'\">\r\n    <div class=\"row\">\r\n        <div class=\"form-group col-4\">\r\n            <label for=\"length\">{{'length' | i18n}}</label>\r\n            <input id=\"length\" class=\"form-control\" type=\"number\" min=\"5\" max=\"128\" [(ngModel)]=\"options.length\"\r\n                (blur)=\"saveOptions()\" (change)=\"lengthChanged()\">\r\n        </div>\r\n        <div class=\"form-group col-4\">\r\n            <label for=\"min-number\">{{'minNumbers' | i18n}}</label>\r\n            <input id=\"min-number\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.minNumber\" (change)=\"minNumberChanged()\">\r\n        </div>\r\n        <div class=\"form-group col-4\">\r\n            <label for=\"min-special\">{{'minSpecial' | i18n}}</label>\r\n            <input id=\"min-special\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.minSpecial\" (change)=\"minSpecialChanged()\">\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n            <input id=\"uppercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.uppercase\" [disabled]=\"enforcedPolicyOptions?.useUppercase\">\r\n            <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input id=\"lowercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.lowercase\" [disabled]=\"enforcedPolicyOptions?.useLowercase\">\r\n            <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input id=\"numbers\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.number\" [disabled]=\"enforcedPolicyOptions?.useNumbers\">\r\n            <label for=\"numbers\" class=\"form-check-label\">0-9</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input id=\"special\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\r\n                [(ngModel)]=\"options.special\" [disabled]=\"enforcedPolicyOptions?.useSpecial\">\r\n            <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input id=\"ambiguous\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\r\n                [(ngModel)]=\"avoidAmbiguous\">\r\n            <label for=\"ambiguous\" class=\"form-check-label\">{{'ambiguous' | i18n}}</label>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<div class=\"d-flex\">\r\n    <div>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\r\n            {{'regeneratePassword' | i18n}}\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\r\n            {{'copyPassword' | i18n}}\r\n        </button>\r\n    </div>\r\n    <div class=\"ml-auto\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"history()\"\r\n            appA11yTitle=\"{{'passwordHistory' | i18n}}\">\r\n            <i class=\"fa fa-clock-o fa-lg\" aria-hidden=\"true\"></i>\r\n        </button>\r\n    </div>\r\n</div>\r\n<ng-template #historyTemplate></ng-template>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport {\r\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\r\n} from 'jslib/angular/components/password-generator-history.component';\r\n\r\n@Component({\r\n    selector: 'app-password-generator-history',\r\n    templateUrl: 'password-generator-history.component.html',\r\n})\r\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\r\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\r\n        i18nService: I18nService) {\r\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{'passwordHistory' | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <ul class=\"list-group list-group-flush\" *ngIf=\"history.length\">\r\n                <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\r\n                    <div class=\"password-row\">\r\n                        <div class=\"text-monospace password-wrapper\" [innerHTML]=\"h.password | colorPassword\"\r\n                            appSelectCopy></div>\r\n                        <small class=\"text-muted\">{{h.date | date:'medium'}}</small>\r\n                    </div>\r\n                    <div class=\"ml-auto\">\r\n                        <button class=\"btn btn-link\" appA11yTitle=\"{{'copyPassword' | i18n}}\"\r\n                            (click)=\"copy(h.password)\">\r\n                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <div class=\"modal-body\" *ngIf=\"!history.length\">\r\n                {{'noPasswordsInList' | i18n}}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\r\n                    {{'close' | i18n}}\r\n                </button>\r\n                <div class=\"ml-auto\">\r\n                    <button type=\"button\" (click)=\"clear()\" class=\"btn btn-outline-danger\"\r\n                        appA11yTitle=\"{{'clear' | i18n}}\">\r\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\n@Component({\r\n    selector: 'app-tools',\r\n    templateUrl: 'tools.component.html',\r\n})\r\nexport class ToolsComponent implements OnInit {\r\n    canAccessPremium = false;\r\n\r\n    constructor(private userService: UserService, private messagingService: MessagingService) { }\r\n\r\n    async ngOnInit() {\r\n        this.canAccessPremium = await this.userService.canAccessPremium();\r\n    }\r\n\r\n    premiumRequired() {\r\n        if (!this.canAccessPremium) {\r\n            this.messagingService.send('premiumRequired');\r\n            return;\r\n        }\r\n    }\r\n}\r\n","<div class=\"container page-content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <div class=\"card mb-4\">\r\n                <div class=\"card-header\">{{'tools' | i18n}}</div>\r\n                <div class=\"list-group list-group-flush\">\r\n                    <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'passwordGenerator' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'importData' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'exportVault' | i18n}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-header d-flex\">\r\n                    {{'reports' | i18n}}\r\n                    <div class=\"ml-auto\">\r\n                        <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\"\r\n                            (click)=\"premiumRequired()\">\r\n                            {{'premium' | i18n}}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"list-group list-group-flush\">\r\n                    <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'exposedPasswordsReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'reusedPasswordsReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'weakPasswordsReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'unsecuredWebsitesReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\">\r\n                        {{'inactive2faReport' | i18n}}\r\n                    </a>\r\n                    <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\">\r\n                        {{'dataBreachReport' | i18n}}\r\n                        <div class=\"ml-auto\">\r\n                            <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\">\r\n                                {{'free' | i18n | uppercase}}\r\n                            </span>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-9\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { CipherType } from 'jslib/enums/cipherType';\r\n\r\nimport { CipherView } from 'jslib/models/view/cipherView';\r\n\r\nimport { ModalComponent } from '../modal.component';\r\n\r\nimport { OrganizationsComponent } from '../settings/organizations.component';\r\nimport { UpdateKeyComponent } from '../settings/update-key.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\nimport { AttachmentsComponent } from './attachments.component';\r\nimport { CiphersComponent } from './ciphers.component';\r\nimport { CollectionsComponent } from './collections.component';\r\nimport { FolderAddEditComponent } from './folder-add-edit.component';\r\nimport { GroupingsComponent } from './groupings.component';\r\nimport { ShareComponent } from './share.component';\r\n\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\nimport { TokenService } from 'jslib/abstractions/token.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\r\n\r\nconst BroadcasterSubscriptionId = 'VaultComponent';\r\n\r\n@Component({\r\n    selector: 'app-vault',\r\n    templateUrl: 'vault.component.html',\r\n})\r\nexport class VaultComponent implements OnInit, OnDestroy {\r\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\r\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\r\n    @ViewChild(OrganizationsComponent, { static: true }) organizationsComponent: OrganizationsComponent;\r\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\r\n    @ViewChild('folderAddEdit', { read: ViewContainerRef, static: true }) folderAddEditModalRef: ViewContainerRef;\r\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\r\n    @ViewChild('share', { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\r\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\r\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef, static: true }) updateKeyModalRef: ViewContainerRef;\r\n\r\n    favorites: boolean = false;\r\n    type: CipherType = null;\r\n    folderId: string = null;\r\n    collectionId: string = null;\r\n    showVerifyEmail = false;\r\n    showBrowserOutdated = false;\r\n    showUpdateKey = false;\r\n    showPremiumCallout = false;\r\n    deleted: boolean = false;\r\n\r\n    modal: ModalComponent = null;\r\n\r\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\r\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\r\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\r\n        private tokenService: TokenService, private cryptoService: CryptoService,\r\n        private messagingService: MessagingService, private userService: UserService,\r\n        private platformUtilsService: PlatformUtilsService, private broadcasterService: BroadcasterService,\r\n        private ngZone: NgZone) { }\r\n\r\n    async ngOnInit() {\r\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\r\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\r\n\r\n        const queryParamsSub = this.route.queryParams.subscribe(async (params) => {\r\n            await this.syncService.fullSync(false);\r\n\r\n            this.showUpdateKey = !(await this.cryptoService.hasEncKey());\r\n            const canAccessPremium = await this.userService.canAccessPremium();\r\n            this.showPremiumCallout = !this.showVerifyEmail && !canAccessPremium &&\r\n                !this.platformUtilsService.isSelfHost();\r\n\r\n            await Promise.all([\r\n                this.groupingsComponent.load(),\r\n                this.organizationsComponent.load(),\r\n            ]);\r\n\r\n            if (params == null) {\r\n                this.groupingsComponent.selectedAll = true;\r\n                await this.ciphersComponent.reload();\r\n            } else {\r\n                if (params.deleted) {\r\n                    this.groupingsComponent.selectedTrash = true;\r\n                    await this.filterDeleted();\r\n                } else if (params.favorites) {\r\n                    this.groupingsComponent.selectedFavorites = true;\r\n                    await this.filterFavorites();\r\n                } else if (params.type) {\r\n                    const t = parseInt(params.type, null);\r\n                    this.groupingsComponent.selectedType = t;\r\n                    await this.filterCipherType(t);\r\n                } else if (params.folderId) {\r\n                    this.groupingsComponent.selectedFolder = true;\r\n                    this.groupingsComponent.selectedFolderId = params.folderId;\r\n                    await this.filterFolder(params.folderId);\r\n                } else if (params.collectionId) {\r\n                    this.groupingsComponent.selectedCollectionId = params.collectionId;\r\n                    await this.filterCollection(params.collectionId);\r\n                } else {\r\n                    this.groupingsComponent.selectedAll = true;\r\n                    await this.ciphersComponent.reload();\r\n                }\r\n            }\r\n\r\n            this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\r\n                this.ngZone.run(async () => {\r\n                    switch (message.command) {\r\n                        case 'syncCompleted':\r\n                            if (message.successfully) {\r\n                                await Promise.all([\r\n                                    this.groupingsComponent.load(),\r\n                                    this.organizationsComponent.load(),\r\n                                    this.ciphersComponent.load(this.ciphersComponent.filter),\r\n                                ]);\r\n                                this.changeDetectorRef.detectChanges();\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\r\n    }\r\n\r\n    async clearGroupingFilters() {\r\n        this.ciphersComponent.showAddNew = true;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\r\n        await this.ciphersComponent.reload();\r\n        this.clearFilters();\r\n        this.go();\r\n    }\r\n\r\n    async filterFavorites() {\r\n        this.ciphersComponent.showAddNew = true;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\r\n        await this.ciphersComponent.reload((c) => c.favorite);\r\n        this.clearFilters();\r\n        this.favorites = true;\r\n        this.go();\r\n    }\r\n\r\n    async filterDeleted() {\r\n        this.ciphersComponent.showAddNew = false;\r\n        this.ciphersComponent.deleted = true;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\r\n        await this.ciphersComponent.reload(null, true);\r\n        this.clearFilters();\r\n        this.deleted = true;\r\n        this.go();\r\n    }\r\n\r\n    async filterCipherType(type: CipherType) {\r\n        this.ciphersComponent.showAddNew = true;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\r\n        await this.ciphersComponent.reload((c) => c.type === type);\r\n        this.clearFilters();\r\n        this.type = type;\r\n        this.go();\r\n    }\r\n\r\n    async filterFolder(folderId: string) {\r\n        this.ciphersComponent.showAddNew = true;\r\n        folderId = folderId === 'none' ? null : folderId;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\r\n        await this.ciphersComponent.reload((c) => c.folderId === folderId);\r\n        this.clearFilters();\r\n        this.folderId = folderId == null ? 'none' : folderId;\r\n        this.go();\r\n    }\r\n\r\n    async filterCollection(collectionId: string) {\r\n        this.ciphersComponent.showAddNew = true;\r\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\r\n        await this.ciphersComponent.reload((c) => c.collectionIds != null &&\r\n            c.collectionIds.indexOf(collectionId) > -1);\r\n        this.clearFilters();\r\n        this.collectionId = collectionId;\r\n        this.go();\r\n    }\r\n\r\n    filterSearchText(searchText: string) {\r\n        this.ciphersComponent.searchText = searchText;\r\n        this.ciphersComponent.search(200);\r\n    }\r\n\r\n    async editCipherAttachments(cipher: CipherView) {\r\n        const canAccessPremium = await this.userService.canAccessPremium();\r\n        if (cipher.organizationId == null && !canAccessPremium) {\r\n            this.messagingService.send('premiumRequired');\r\n            return;\r\n        } else if (cipher.organizationId != null) {\r\n            const org = await this.userService.getOrganization(cipher.organizationId);\r\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\r\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\r\n\r\n        childComponent.cipherId = cipher.id;\r\n        let madeAttachmentChanges = false;\r\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\r\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\r\n        childComponent.onReuploadedAttachment.subscribe(() => madeAttachmentChanges = true);\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n            if (madeAttachmentChanges) {\r\n                await this.ciphersComponent.refresh();\r\n            }\r\n            madeAttachmentChanges = false;\r\n        });\r\n    }\r\n\r\n    shareCipher(cipher: CipherView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.shareModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<ShareComponent>(ShareComponent, this.shareModalRef);\r\n\r\n        childComponent.cipherId = cipher.id;\r\n        childComponent.onSharedCipher.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    editCipherCollections(cipher: CipherView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\r\n\r\n        childComponent.cipherId = cipher.id;\r\n        childComponent.onSavedCollections.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(async () => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async addFolder() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<FolderAddEditComponent>(\r\n            FolderAddEditComponent, this.folderAddEditModalRef);\r\n\r\n        childComponent.folderId = null;\r\n        childComponent.onSavedFolder.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.groupingsComponent.loadFolders();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    async editFolder(folderId: string) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<FolderAddEditComponent>(\r\n            FolderAddEditComponent, this.folderAddEditModalRef);\r\n\r\n        childComponent.folderId = folderId;\r\n        childComponent.onSavedFolder.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.groupingsComponent.loadFolders();\r\n        });\r\n        childComponent.onDeletedFolder.subscribe(async () => {\r\n            this.modal.close();\r\n            await this.groupingsComponent.loadFolders();\r\n            await this.filterFolder('none');\r\n            this.groupingsComponent.selectedFolderId = null;\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    addCipher() {\r\n        const component = this.editCipher(null);\r\n        component.type = this.type;\r\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\r\n        if (this.collectionId != null) {\r\n            const collection = this.groupingsComponent.collections.filter((c) => c.id === this.collectionId);\r\n            if (collection.length > 0) {\r\n                component.organizationId = collection[0].organizationId;\r\n                component.collectionIds = [this.collectionId];\r\n            }\r\n        }\r\n    }\r\n\r\n    editCipher(cipher: CipherView) {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\r\n        const childComponent = this.modal.show<AddEditComponent>(\r\n            AddEditComponent, this.cipherAddEditModalRef);\r\n\r\n        childComponent.cipherId = cipher == null ? null : cipher.id;\r\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\r\n            this.modal.close();\r\n            await this.ciphersComponent.refresh();\r\n        });\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n\r\n        return childComponent;\r\n    }\r\n\r\n    cloneCipher(cipher: CipherView) {\r\n        const component = this.editCipher(cipher);\r\n        component.cloneMode = true;\r\n    }\r\n\r\n    updateKey() {\r\n        if (this.modal != null) {\r\n            this.modal.close();\r\n        }\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\r\n        this.modal = this.updateKeyModalRef.createComponent(factory).instance;\r\n        this.modal.show<UpdateKeyComponent>(UpdateKeyComponent, this.updateKeyModalRef);\r\n\r\n        this.modal.onClosed.subscribe(() => {\r\n            this.modal = null;\r\n        });\r\n    }\r\n\r\n    private clearFilters() {\r\n        this.folderId = null;\r\n        this.collectionId = null;\r\n        this.favorites = false;\r\n        this.type = null;\r\n        this.deleted = false;\r\n    }\r\n\r\n    private go(queryParams: any = null) {\r\n        if (queryParams == null) {\r\n            queryParams = {\r\n                favorites: this.favorites ? true : null,\r\n                type: this.type,\r\n                folderId: this.folderId,\r\n                collectionId: this.collectionId,\r\n                deleted: this.deleted ? true : null,\r\n            };\r\n        }\r\n\r\n        this.router.navigate([], {\r\n            relativeTo: this.route,\r\n            queryParams: queryParams,\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n}\r\n","<div class=\"container page-content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-3\">\r\n            <app-vault-groupings (onAllClicked)=\"clearGroupingFilters()\" (onFavoritesClicked)=\"filterFavorites()\"\r\n                (onCipherTypeClicked)=\"filterCipherType($event)\" (onFolderClicked)=\"filterFolder($event.id)\"\r\n                (onAddFolder)=\"addFolder()\" (onEditFolder)=\"editFolder($event.id)\"\r\n                (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\"\r\n                (onTrashClicked)=\"filterDeleted()\">\r\n            </app-vault-groupings>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"page-header d-flex\">\r\n                <h1>\r\n                    {{'myVault' | i18n}}\r\n                    <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\r\n                        <ng-container *ngIf=\"actionSpinner.loading\">\r\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"\r\n                                aria-hidden=\"true\"></i>\r\n                            <span class=\"sr-only\">{{'loading' | i18n}}</span>\r\n                        </ng-container>\r\n                    </small>\r\n                </h1>\r\n                <div class=\"ml-auto d-flex\">\r\n                    <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\">\r\n                    </app-vault-bulk-actions>\r\n                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addCipher()\" *ngIf=\"!deleted\">\r\n                        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <app-vault-ciphers (onCipherClicked)=\"editCipher($event)\"\r\n                (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\"\r\n                (onShareClicked)=\"shareCipher($event)\" (onCollectionsClicked)=\"editCipherCollections($event)\"\r\n                (onCloneClicked)=\"cloneCipher($event)\">\r\n            </app-vault-ciphers>\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\r\n                <div class=\"card-header bg-warning text-white\">\r\n                    <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateKeyTitle' | i18n}}\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p>\r\n                    <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\r\n                        {{'updateEncryptionKey' | i18n}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\r\n            <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\r\n                <div class=\"card-header bg-warning text-white\">\r\n                    <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateBrowser' | i18n}}\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <p>{{'updateBrowserDesc' | i18n}}</p>\r\n                    <a class=\"btn btn-block btn-outline-secondary\" target=\"_blank\"\r\n                        href=\"https://browser-update.org/update-browser.html\" rel=\"noopener\">\r\n                        {{'updateBrowser' | i18n}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\r\n                <div class=\"card-header bg-success text-white\">\r\n                    <i class=\"fa fa-star fa-fw\" aria-hidden=\"true\"></i> {{'goPremium' | i18n}}\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\r\n                    <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\">\r\n                        {{'goPremium' | i18n}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-header d-flex\">\r\n                    {{'organizations' | i18n}}\r\n                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/what-is-an-organization/\"\r\n                        target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\r\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <app-organizations [vault]=\"true\"></app-organizations>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #attachments></ng-template>\r\n<ng-template #folderAddEdit></ng-template>\r\n<ng-template #cipherAddEdit></ng-template>\r\n<ng-template #share></ng-template>\r\n<ng-template #collections></ng-template>\r\n<ng-template #updateKeyTemplate></ng-template>\r\n","import { Component } from '@angular/core';\r\n\r\nimport {\r\n    Toast,\r\n    ToasterService,\r\n} from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\n\r\nimport { CipherString } from 'jslib/models/domain/cipherString';\r\n\r\nimport { CipherWithIdRequest } from 'jslib/models/request/cipherWithIdRequest';\r\nimport { FolderWithIdRequest } from 'jslib/models/request/folderWithIdRequest';\r\nimport { UpdateKeyRequest } from 'jslib/models/request/updateKeyRequest';\r\n\r\n@Component({\r\n    selector: 'app-update-key',\r\n    templateUrl: 'update-key.component.html',\r\n})\r\nexport class UpdateKeyComponent {\r\n    masterPassword: string;\r\n    formPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService,\r\n        private cryptoService: CryptoService, private messagingService: MessagingService,\r\n        private syncService: SyncService, private folderService: FolderService,\r\n        private cipherService: CipherService) { }\r\n\r\n    async submit() {\r\n        const hasEncKey = await this.cryptoService.hasEncKey();\r\n        if (hasEncKey) {\r\n            return;\r\n        }\r\n\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.makeRequest().then((request) => {\r\n                return this.apiService.postAccountKey(request);\r\n            });\r\n            await this.formPromise;\r\n            this.analytics.eventTrack.next({ action: 'Key Updated' });\r\n            const toast: Toast = {\r\n                type: 'success',\r\n                title: this.i18nService.t('keyUpdated'),\r\n                body: this.i18nService.t('logBackInOthersToo'),\r\n                timeout: 15000,\r\n            };\r\n            this.toasterService.popAsync(toast);\r\n            this.messagingService.send('logout');\r\n        } catch { }\r\n    }\r\n\r\n    private async makeRequest(): Promise<UpdateKeyRequest> {\r\n        const key = await this.cryptoService.getKey();\r\n        const encKey = await this.cryptoService.makeEncKey(key);\r\n        const privateKey = await this.cryptoService.getPrivateKey();\r\n        let encPrivateKey: CipherString = null;\r\n        if (privateKey != null) {\r\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\r\n        }\r\n        const request = new UpdateKeyRequest();\r\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\r\n        request.key = encKey[1].encryptedString;\r\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n\r\n        await this.syncService.fullSync(true);\r\n\r\n        const folders = await this.folderService.getAllDecrypted();\r\n        for (let i = 0; i < folders.length; i++) {\r\n            if (folders[i].id == null) {\r\n                continue;\r\n            }\r\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\r\n            request.folders.push(new FolderWithIdRequest(folder));\r\n        }\r\n\r\n        const ciphers = await this.cipherService.getAllDecrypted();\r\n        for (let i = 0; i < ciphers.length; i++) {\r\n            if (ciphers[i].organizationId != null) {\r\n                continue;\r\n            }\r\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\r\n            request.ciphers.push(new CipherWithIdRequest(cipher));\r\n        }\r\n\r\n        return request;\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{'updateEncryptionKey' | i18n}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}}\r\n                    <a href=\"https://help.bitwarden.com/article/update-encryption-key/\" target=\"_blank\"\r\n                        rel=\"noopener\">{{'learnMore' | i18n}}</a>\r\n                </p>\r\n                <app-callout type=\"warning\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout>\r\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\r\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\r\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'updateEncryptionKey' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport {\r\n    FolderAddEditComponent as BaseFolderAddEditComponent,\r\n} from 'jslib/angular/components/folder-add-edit.component';\r\n\r\n@Component({\r\n    selector: 'app-folder-add-edit',\r\n    templateUrl: 'folder-add-edit.component.html',\r\n})\r\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\r\n    constructor(folderService: FolderService, i18nService: I18nService,\r\n        platformUtilsService: PlatformUtilsService) {\r\n        super(folderService, i18nService, platformUtilsService);\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{title}}</h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <label for=\"name\">{{'name' | i18n}}</label>\r\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"folder.name\" required\r\n                    appAutofocus>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n                <div class=\"ml-auto\">\r\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\r\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\r\n                        [appApiAction]=\"deletePromise\">\r\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\r\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\r\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { CollectionView } from 'jslib/models/view/collectionView';\r\n\r\nimport { ShareComponent as BaseShareComponent } from 'jslib/angular/components/share.component';\r\n\r\n@Component({\r\n    selector: 'app-vault-share',\r\n    templateUrl: 'share.component.html',\r\n})\r\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\r\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\r\n        i18nService: I18nService, userService: UserService,\r\n        cipherService: CipherService) {\r\n        super(collectionService, platformUtilsService, i18nService, userService, cipherService);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.selectAll(false);\r\n    }\r\n\r\n    check(c: CollectionView, select?: boolean) {\r\n        (c as any).checked = select == null ? !(c as any).checked : select;\r\n    }\r\n\r\n    selectAll(select: boolean) {\r\n        const collections = select ? this.collections : this.writeableCollections;\r\n        collections.forEach((c) => this.check(c, select));\r\n    }\r\n}\r\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\r\n            <div class=\"modal-header\">\r\n                <h2 class=\"modal-title\" id=\"shareTitle\">\r\n                    {{'share' | i18n}}\r\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\r\n                </h2>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\r\n                {{'noOrganizationsList' | i18n}}\r\n            </div>\r\n            <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\r\n                <p>{{'shareDesc' | i18n}}</p>\r\n                <div class=\"form-group\">\r\n                    <label for=\"organization\">{{'organization' | i18n}}</label>\r\n                    <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\"\r\n                        (change)=\"filterCollections()\">\r\n                        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                    <h3>{{'collections' | i18n}}</h3>\r\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\r\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'selectAll' | i18n}}\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\r\n                            {{'unselectAll' | i18n}}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!collections || !collections.length\">\r\n                    {{'noCollectionsInList' | i18n}}\r\n                </div>\r\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\r\n                    <tbody>\r\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\r\n                            <td class=\"table-list-checkbox\">\r\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\r\n                                    appStopProp>\r\n                            </td>\r\n                            <td>\r\n                                {{c.name}}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\"\r\n                    [ngClass]=\"{loading:form.loading}\" *ngIf=\"organizations && organizations.length\">\r\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n                    <span>{{'save' | i18n}}</span>\r\n                </button>\r\n                <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-primary\"\r\n                    *ngIf=\"!organizations || !organizations.length\">\r\n                    {{'newOrganization' | i18n}}\r\n                </a>\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\n\r\nimport { ApiService } from 'jslib/abstractions/api.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\n\r\n@Component({\r\n    selector: 'app-verify-email',\r\n    templateUrl: 'verify-email.component.html',\r\n})\r\nexport class VerifyEmailComponent {\r\n    actionPromise: Promise<any>;\r\n\r\n    constructor(private apiService: ApiService, private i18nService: I18nService,\r\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\r\n\r\n    async send() {\r\n        if (this.actionPromise != null) {\r\n            return;\r\n        }\r\n        try {\r\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\r\n            await this.actionPromise;\r\n            this.analytics.eventTrack.next({ action: 'Sent Verification Email' });\r\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\r\n        } catch { }\r\n        this.actionPromise = null;\r\n    }\r\n}\r\n","<div class=\"card border-warning\">\r\n    <div class=\"card-header bg-warning text-white\">\r\n        <i class=\"fa fa-envelope-o fa-fw\" aria-hidden=\"true\"></i> {{'verifyEmail' | i18n}}\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <p>{{'verifyEmailDesc' | i18n}}</p>\r\n        <button type=\"button\" class=\"btn btn-block btn-outline-secondary btn-submit\" #sendBtn\r\n            [appApiAction]=\"actionPromise\" [disabled]=\"sendBtn.loading\" (click)=\"send()\">\r\n            <i class=\"fa fa-spin fa-spinner\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\r\n            <span>\r\n                {{'sendEmail' | i18n}}\r\n            </span>\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    ActivatedRouteSnapshot,\r\n    CanActivate,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { ToasterService } from 'angular2-toaster';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\n@Injectable()\r\nexport class OrganizationGuardService implements CanActivate {\r\n    constructor(private userService: UserService, private router: Router,\r\n        private toasterService: ToasterService, private i18nService: I18nService) { }\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot) {\r\n        const org = await this.userService.getOrganization(route.params.organizationId);\r\n        if (org == null) {\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n        if (!org.isOwner && !org.enabled) {\r\n            this.toasterService.popAsync('error', null, this.i18nService.t('organizationIsDisabled'));\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    ActivatedRouteSnapshot,\r\n    CanActivate,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\n\r\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\r\n\r\n@Injectable()\r\nexport class OrganizationTypeGuardService implements CanActivate {\r\n    constructor(private userService: UserService, private router: Router) { }\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot) {\r\n        const org = await this.userService.getOrganization(route.parent.params.organizationId);\r\n        const allowedTypes = route.data == null ? null : route.data.allowedTypes as OrganizationUserType[];\r\n        if (allowedTypes == null || allowedTypes.indexOf(org.type) === -1) {\r\n            this.router.navigate(['/organizations', org.id]);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    CanActivate,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\r\n\r\n@Injectable()\r\nexport class UnauthGuardService implements CanActivate {\r\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\r\n        private router: Router) { }\r\n\r\n    async canActivate() {\r\n        const isAuthed = await this.userService.isAuthenticated();\r\n        if (isAuthed) {\r\n            const locked = await this.vaultTimeoutService.isLocked();\r\n            if (locked) {\r\n                this.router.navigate(['lock']);\r\n            } else {\r\n                this.router.navigate(['vault']);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    ActivatedRouteSnapshot,\r\n    CanActivate,\r\n    Router,\r\n    RouterStateSnapshot,\r\n} from '@angular/router';\r\n\r\nimport { MessagingService } from '../../abstractions/messaging.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\nimport { VaultTimeoutService } from '../../abstractions/vaultTimeout.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\r\n        private router: Router, private messagingService: MessagingService) { }\r\n\r\n    async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\r\n        const isAuthed = await this.userService.isAuthenticated();\r\n        if (!isAuthed) {\r\n            this.messagingService.send('authBlocked');\r\n            return false;\r\n        }\r\n\r\n        const locked = await this.vaultTimeoutService.isLocked();\r\n        if (locked) {\r\n            if (routerState != null) {\r\n                this.messagingService.send('lockedUrl', { url: routerState.url });\r\n            }\r\n            this.router.navigate(['lock'], { queryParams: { promptBiometric: true }});\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { DeviceType } from '../enums/deviceType';\r\nimport { PolicyType } from '../enums/policyType';\r\n\r\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\r\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\r\nimport { TokenService } from '../abstractions/token.service';\r\n\r\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\r\n\r\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\r\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\r\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\r\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\r\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\r\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\r\nimport { CipherRequest } from '../models/request/cipherRequest';\r\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\r\nimport { CollectionRequest } from '../models/request/collectionRequest';\r\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\r\nimport { EmailRequest } from '../models/request/emailRequest';\r\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\r\nimport { EventRequest } from '../models/request/eventRequest';\r\nimport { FolderRequest } from '../models/request/folderRequest';\r\nimport { GroupRequest } from '../models/request/groupRequest';\r\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\r\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\r\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\r\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\r\nimport { KdfRequest } from '../models/request/kdfRequest';\r\nimport { KeysRequest } from '../models/request/keysRequest';\r\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\r\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\r\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\r\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\r\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\r\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\r\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\r\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\r\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\r\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\r\nimport { PasswordRequest } from '../models/request/passwordRequest';\r\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\r\nimport { PaymentRequest } from '../models/request/paymentRequest';\r\nimport { PolicyRequest } from '../models/request/policyRequest';\r\nimport { PreloginRequest } from '../models/request/preloginRequest';\r\nimport { RegisterRequest } from '../models/request/registerRequest';\r\nimport { SeatRequest } from '../models/request/seatRequest';\r\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\r\nimport { SendAccessRequest } from '../models/request/sendAccessRequest';\r\nimport { SendRequest } from '../models/request/sendRequest';\r\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\r\nimport { StorageRequest } from '../models/request/storageRequest';\r\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\r\nimport { TokenRequest } from '../models/request/tokenRequest';\r\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\r\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\r\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\r\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\r\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\r\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\r\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\r\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\r\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\r\nimport { UpdateTwoFactorU2fDeleteRequest } from '../models/request/updateTwoFactorU2fDeleteRequest';\r\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\r\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\r\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\r\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\r\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\r\n\r\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\r\nimport { BillingResponse } from '../models/response/billingResponse';\r\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\r\nimport { CipherResponse } from '../models/response/cipherResponse';\r\nimport {\r\n    CollectionGroupDetailsResponse,\r\n    CollectionResponse,\r\n} from '../models/response/collectionResponse';\r\nimport { DomainsResponse } from '../models/response/domainsResponse';\r\nimport { ErrorResponse } from '../models/response/errorResponse';\r\nimport { EventResponse } from '../models/response/eventResponse';\r\nimport { FolderResponse } from '../models/response/folderResponse';\r\nimport {\r\n    GroupDetailsResponse,\r\n    GroupResponse,\r\n} from '../models/response/groupResponse';\r\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\r\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\r\nimport { ListResponse } from '../models/response/listResponse';\r\nimport { OrganizationResponse } from '../models/response/organizationResponse';\r\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\r\nimport {\r\n    OrganizationUserDetailsResponse,\r\n    OrganizationUserUserDetailsResponse,\r\n} from '../models/response/organizationUserResponse';\r\nimport { PaymentResponse } from '../models/response/paymentResponse';\r\nimport { PlanResponse } from '../models/response/planResponse';\r\nimport { PolicyResponse } from '../models/response/policyResponse';\r\nimport { PreloginResponse } from '../models/response/preloginResponse';\r\nimport { ProfileResponse } from '../models/response/profileResponse';\r\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\r\nimport { SendAccessResponse } from '../models/response/sendAccessResponse';\r\nimport { SendResponse } from '../models/response/sendResponse';\r\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\r\nimport { SyncResponse } from '../models/response/syncResponse';\r\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\r\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\r\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\r\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\r\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\r\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\r\nimport {\r\n    ChallengeResponse,\r\n    TwoFactorU2fResponse,\r\n} from '../models/response/twoFactorU2fResponse';\r\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\r\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\r\n\r\nexport class ApiService implements ApiServiceAbstraction {\r\n    urlsSet: boolean = false;\r\n    apiBaseUrl: string;\r\n    identityBaseUrl: string;\r\n    eventsBaseUrl: string;\r\n\r\n    private device: DeviceType;\r\n    private deviceType: string;\r\n    private isWebClient = false;\r\n    private isDesktopClient = false;\r\n    private usingBaseUrl = false;\r\n\r\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\r\n        private logoutCallback: (expired: boolean) => Promise<void>, private customUserAgent: string = null) {\r\n        this.device = platformUtilsService.getDevice();\r\n        this.deviceType = this.device.toString();\r\n        this.isWebClient = this.device === DeviceType.IEBrowser || this.device === DeviceType.ChromeBrowser ||\r\n            this.device === DeviceType.EdgeBrowser || this.device === DeviceType.FirefoxBrowser ||\r\n            this.device === DeviceType.OperaBrowser || this.device === DeviceType.SafariBrowser ||\r\n            this.device === DeviceType.UnknownBrowser || this.device === DeviceType.VivaldiBrowser;\r\n        this.isDesktopClient = this.device === DeviceType.WindowsDesktop || this.device === DeviceType.MacOsDesktop ||\r\n            this.device === DeviceType.LinuxDesktop;\r\n    }\r\n\r\n    setUrls(urls: EnvironmentUrls): void {\r\n        this.urlsSet = true;\r\n\r\n        if (urls.base != null) {\r\n            this.usingBaseUrl = true;\r\n            this.apiBaseUrl = urls.base + '/api';\r\n            this.identityBaseUrl = urls.base + '/identity';\r\n            this.eventsBaseUrl = urls.base + '/events';\r\n            return;\r\n        }\r\n\r\n        this.apiBaseUrl = urls.api;\r\n        this.identityBaseUrl = urls.identity;\r\n        this.eventsBaseUrl = urls.events;\r\n\r\n        // Production\r\n        if (this.apiBaseUrl == null) {\r\n            this.apiBaseUrl = 'https://api.bitwarden.com';\r\n        }\r\n        if (this.identityBaseUrl == null) {\r\n            this.identityBaseUrl = 'https://identity.bitwarden.com';\r\n        }\r\n        if (this.eventsBaseUrl == null) {\r\n            this.eventsBaseUrl = 'https://events.bitwarden.com';\r\n        }\r\n    }\r\n\r\n    // Auth APIs\r\n\r\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse> {\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\r\n            'Accept': 'application/json',\r\n            'Device-Type': this.deviceType,\r\n        });\r\n        if (this.customUserAgent != null) {\r\n            headers.set('User-Agent', this.customUserAgent);\r\n        }\r\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\r\n            body: this.qsStringify(request.toIdentityToken(request.clientId ?? this.platformUtilsService.identityClientId)),\r\n            credentials: this.getCredentials(),\r\n            cache: 'no-store',\r\n            headers: headers,\r\n            method: 'POST',\r\n        }));\r\n\r\n        let responseJson: any = null;\r\n        if (this.isJsonResponse(response)) {\r\n            responseJson = await response.json();\r\n        }\r\n\r\n        if (responseJson != null) {\r\n            if (response.status === 200) {\r\n                return new IdentityTokenResponse(responseJson);\r\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\r\n                Object.keys(responseJson.TwoFactorProviders2).length) {\r\n                await this.tokenService.clearTwoFactorToken(request.email);\r\n                return new IdentityTwoFactorResponse(responseJson);\r\n            }\r\n        }\r\n\r\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\r\n    }\r\n\r\n    async refreshIdentityToken(): Promise<any> {\r\n        try {\r\n            await this.doRefreshToken();\r\n        } catch (e) {\r\n            return Promise.reject(null);\r\n        }\r\n    }\r\n\r\n    // Account APIs\r\n\r\n    async getProfile(): Promise<ProfileResponse> {\r\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\r\n        return new ProfileResponse(r);\r\n    }\r\n\r\n    async getUserBilling(): Promise<BillingResponse> {\r\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\r\n        return new BillingResponse(r);\r\n    }\r\n\r\n    async getUserSubscription(): Promise<SubscriptionResponse> {\r\n        const r = await this.send('GET', '/accounts/subscription', null, true, true);\r\n        return new SubscriptionResponse(r);\r\n    }\r\n\r\n    async getTaxInfo(): Promise<TaxInfoResponse> {\r\n        const r = await this.send('GET', '/accounts/tax', null, true, true);\r\n        return new TaxInfoResponse(r);\r\n    }\r\n\r\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\r\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\r\n        return new ProfileResponse(r);\r\n    }\r\n\r\n    putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\r\n        return this.send('PUT', '/accounts/tax', request, true, false);\r\n    }\r\n\r\n    async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\r\n        const r = await this.send('POST', '/accounts/prelogin', request, false, true);\r\n        return new PreloginResponse(r);\r\n    }\r\n\r\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/email-token', request, true, false);\r\n    }\r\n\r\n    postEmail(request: EmailRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/email', request, true, false);\r\n    }\r\n\r\n    postPassword(request: PasswordRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/password', request, true, false);\r\n    }\r\n\r\n    setPassword(request: SetPasswordRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/set-password', request, true, false);\r\n    }\r\n\r\n    postSecurityStamp(request: PasswordVerificationRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\r\n    }\r\n\r\n    deleteAccount(request: PasswordVerificationRequest): Promise<any> {\r\n        return this.send('DELETE', '/accounts', request, true, false);\r\n    }\r\n\r\n    async getAccountRevisionDate(): Promise<number> {\r\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\r\n        return r as number;\r\n    }\r\n\r\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/password-hint', request, false, false);\r\n    }\r\n\r\n    postRegister(request: RegisterRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/register', request, false, false);\r\n    }\r\n\r\n    async postPremium(data: FormData): Promise<PaymentResponse> {\r\n        const r = await this.send('POST', '/accounts/premium', data, true, true);\r\n        return new PaymentResponse(r);\r\n    }\r\n\r\n    async postIapCheck(request: IapCheckRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/iap-check', request, true, false);\r\n    }\r\n\r\n    postReinstatePremium(): Promise<any> {\r\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\r\n    }\r\n\r\n    postCancelPremium(): Promise<any> {\r\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\r\n    }\r\n\r\n    async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\r\n        const r = await this.send('POST', '/accounts/storage', request, true, true);\r\n        return new PaymentResponse(r);\r\n    }\r\n\r\n    postAccountPayment(request: PaymentRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/payment', request, true, false);\r\n    }\r\n\r\n    postAccountLicense(data: FormData): Promise<any> {\r\n        return this.send('POST', '/accounts/license', data, true, false);\r\n    }\r\n\r\n    postAccountKeys(request: KeysRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/keys', request, true, false);\r\n    }\r\n\r\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/key', request, true, false);\r\n    }\r\n\r\n    postAccountVerifyEmail(): Promise<any> {\r\n        return this.send('POST', '/accounts/verify-email', null, true, false);\r\n    }\r\n\r\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\r\n    }\r\n\r\n    postAccountVerifyPassword(request: PasswordVerificationRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/verify-password', request, true, false);\r\n    }\r\n\r\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\r\n    }\r\n\r\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\r\n    }\r\n\r\n    postAccountKdf(request: KdfRequest): Promise<any> {\r\n        return this.send('POST', '/accounts/kdf', request, true, false);\r\n    }\r\n\r\n    async getEnterprisePortalSignInToken(): Promise<string> {\r\n        const r = await this.send('GET', '/accounts/enterprise-portal-signin-token', null, true, true);\r\n        return r as string;\r\n    }\r\n\r\n    async deleteSsoUser(organizationId: string): Promise<any> {\r\n        return this.send('DELETE', '/accounts/sso/' + organizationId, null, true, false);\r\n    }\r\n\r\n    async getSsoUserIdentifier(): Promise<string> {\r\n        return this.send('GET', '/accounts/sso/user-identifier', null, true, true);\r\n    }\r\n\r\n    async postUserApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\r\n        const r = await this.send('POST', '/accounts/api-key', request, true, true);\r\n        return new ApiKeyResponse(r);\r\n    }\r\n\r\n    async postUserRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\r\n        const r = await this.send('POST', '/accounts/rotate-api-key', request, true, true);\r\n        return new ApiKeyResponse(r);\r\n    }\r\n\r\n    // Folder APIs\r\n\r\n    async getFolder(id: string): Promise<FolderResponse> {\r\n        const r = await this.send('GET', '/folders/' + id, null, true, true);\r\n        return new FolderResponse(r);\r\n    }\r\n\r\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\r\n        const r = await this.send('POST', '/folders', request, true, true);\r\n        return new FolderResponse(r);\r\n    }\r\n\r\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\r\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\r\n        return new FolderResponse(r);\r\n    }\r\n\r\n    deleteFolder(id: string): Promise<any> {\r\n        return this.send('DELETE', '/folders/' + id, null, true, false);\r\n    }\r\n\r\n    // Send APIs\r\n\r\n    async getSend(id: string): Promise<SendResponse> {\r\n        const r = await this.send('GET', '/sends/' + id, null, true, true);\r\n        return new SendResponse(r);\r\n    }\r\n\r\n    async postSendAccess(id: string, request: SendAccessRequest): Promise<SendAccessResponse> {\r\n        const r = await this.send('POST', '/sends/access/' + id, request, false, true);\r\n        return new SendAccessResponse(r);\r\n    }\r\n\r\n    async getSends(): Promise<ListResponse<SendResponse>> {\r\n        const r = await this.send('GET', '/sends', null, true, true);\r\n        return new ListResponse(r, SendResponse);\r\n    }\r\n\r\n    async postSend(request: SendRequest): Promise<SendResponse> {\r\n        const r = await this.send('POST', '/sends', request, true, true);\r\n        return new SendResponse(r);\r\n    }\r\n\r\n    async postSendFile(data: FormData): Promise<SendResponse> {\r\n        const r = await this.send('POST', '/sends/file', data, true, true);\r\n        return new SendResponse(r);\r\n    }\r\n\r\n    async putSend(id: string, request: SendRequest): Promise<SendResponse> {\r\n        const r = await this.send('PUT', '/sends/' + id, request, true, true);\r\n        return new SendResponse(r);\r\n    }\r\n\r\n    async putSendRemovePassword(id: string): Promise<SendResponse> {\r\n        const r = await this.send('PUT', '/sends/' + id + '/remove-password', null, true, true);\r\n        return new SendResponse(r);\r\n    }\r\n\r\n    deleteSend(id: string): Promise<any> {\r\n        return this.send('DELETE', '/sends/' + id, null, true, false);\r\n    }\r\n\r\n    // Cipher APIs\r\n\r\n    async getCipher(id: string): Promise<CipherResponse> {\r\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\r\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\r\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\r\n            null, true, true);\r\n        return new ListResponse(r, CipherResponse);\r\n    }\r\n\r\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\r\n        const r = await this.send('POST', '/ciphers', request, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\r\n        const r = await this.send('POST', '/ciphers/create', request, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\r\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\r\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\r\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    deleteCipher(id: string): Promise<any> {\r\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\r\n    }\r\n\r\n    deleteCipherAdmin(id: string): Promise<any> {\r\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\r\n    }\r\n\r\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\r\n        return this.send('DELETE', '/ciphers', request, true, false);\r\n    }\r\n\r\n    deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\r\n        return this.send('DELETE', '/ciphers/admin', request, true, false);\r\n    }\r\n\r\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\r\n        return this.send('PUT', '/ciphers/move', request, true, false);\r\n    }\r\n\r\n    async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\r\n        const r = await this.send('PUT', '/ciphers/' + id + '/share', request, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\r\n        return this.send('PUT', '/ciphers/share', request, true, false);\r\n    }\r\n\r\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\r\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\r\n    }\r\n\r\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\r\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\r\n    }\r\n\r\n    postPurgeCiphers(request: PasswordVerificationRequest, organizationId: string = null): Promise<any> {\r\n        let path = '/ciphers/purge';\r\n        if (organizationId != null) {\r\n            path += '?organizationId=' + organizationId;\r\n        }\r\n        return this.send('POST', path, request, true, false);\r\n    }\r\n\r\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\r\n        return this.send('POST', '/ciphers/import', request, true, false);\r\n    }\r\n\r\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\r\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\r\n    }\r\n\r\n    putDeleteCipher(id: string): Promise<any> {\r\n        return this.send('PUT', '/ciphers/' + id + '/delete', null, true, false);\r\n    }\r\n\r\n    putDeleteCipherAdmin(id: string): Promise<any> {\r\n        return this.send('PUT', '/ciphers/' + id + '/delete-admin', null, true, false);\r\n    }\r\n\r\n    putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\r\n        return this.send('PUT', '/ciphers/delete', request, true, false);\r\n    }\r\n\r\n    putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\r\n        return this.send('PUT', '/ciphers/delete-admin', request, true, false);\r\n    }\r\n\r\n    putRestoreCipher(id: string): Promise<any> {\r\n        return this.send('PUT', '/ciphers/' + id + '/restore', null, true, false);\r\n    }\r\n\r\n    putRestoreCipherAdmin(id: string): Promise<any> {\r\n        return this.send('PUT', '/ciphers/' + id + '/restore-admin', null, true, false);\r\n    }\r\n\r\n    putRestoreManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\r\n        return this.send('PUT', '/ciphers/restore', request, true, false);\r\n    }\r\n\r\n    // Attachments APIs\r\n\r\n    async postCipherAttachment(id: string, data: FormData): Promise<CipherResponse> {\r\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    async postCipherAttachmentAdmin(id: string, data: FormData): Promise<CipherResponse> {\r\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\r\n        return new CipherResponse(r);\r\n    }\r\n\r\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\r\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\r\n    }\r\n\r\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\r\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\r\n    }\r\n\r\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\r\n        organizationId: string): Promise<any> {\r\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\r\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\r\n    }\r\n\r\n    // Collections APIs\r\n\r\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\r\n            null, true, true);\r\n        return new CollectionGroupDetailsResponse(r);\r\n    }\r\n\r\n    async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\r\n        const r = await this.send('GET', '/collections', null, true, true);\r\n        return new ListResponse(r, CollectionResponse);\r\n    }\r\n\r\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\r\n        return new ListResponse(r, CollectionResponse);\r\n    }\r\n\r\n    async getCollectionUsers(organizationId: string, id: string): Promise<SelectionReadOnlyResponse[]> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\r\n            null, true, true);\r\n        return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\r\n    }\r\n\r\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\r\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\r\n        return new CollectionResponse(r);\r\n    }\r\n\r\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\r\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\r\n            request, true, true);\r\n        return new CollectionResponse(r);\r\n    }\r\n\r\n    async putCollectionUsers(organizationId: string, id: string, request: SelectionReadOnlyRequest[]): Promise<any> {\r\n        await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id + '/users',\r\n            request, true, false);\r\n    }\r\n\r\n    deleteCollection(organizationId: string, id: string): Promise<any> {\r\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\r\n    }\r\n\r\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\r\n        return this.send('DELETE',\r\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\r\n            null, true, false);\r\n    }\r\n\r\n    // Groups APIs\r\n\r\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\r\n            null, true, true);\r\n        return new GroupDetailsResponse(r);\r\n    }\r\n\r\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\r\n        return new ListResponse(r, GroupResponse);\r\n    }\r\n\r\n    async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\r\n            null, true, true);\r\n        return r;\r\n    }\r\n\r\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\r\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\r\n        return new GroupResponse(r);\r\n    }\r\n\r\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\r\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\r\n        return new GroupResponse(r);\r\n    }\r\n\r\n    async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\r\n        await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id + '/users', request, true, false);\r\n    }\r\n\r\n    deleteGroup(organizationId: string, id: string): Promise<any> {\r\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\r\n    }\r\n\r\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\r\n        return this.send('DELETE',\r\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\r\n    }\r\n\r\n    // Policy APIs\r\n\r\n    async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/' + type, null, true, true);\r\n        return new PolicyResponse(r);\r\n    }\r\n\r\n    async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies', null, true, true);\r\n        return new ListResponse(r, PolicyResponse);\r\n    }\r\n\r\n    async getPoliciesByToken(organizationId: string, token: string, email: string, organizationUserId: string):\r\n        Promise<ListResponse<PolicyResponse>> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/token?' +\r\n            'token=' + encodeURIComponent(token) + '&email=' + encodeURIComponent(email) +\r\n            '&organizationUserId=' + organizationUserId, null, false, true);\r\n        return new ListResponse(r, PolicyResponse);\r\n    }\r\n\r\n    async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<PolicyResponse> {\r\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/policies/' + type, request, true, true);\r\n        return new PolicyResponse(r);\r\n    }\r\n\r\n    // Organization User APIs\r\n\r\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\r\n        return new OrganizationUserDetailsResponse(r);\r\n    }\r\n\r\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\r\n            null, true, true);\r\n        return r;\r\n    }\r\n\r\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\r\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\r\n    }\r\n\r\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\r\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\r\n    }\r\n\r\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\r\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\r\n    }\r\n\r\n    postOrganizationUserAccept(organizationId: string, id: string,\r\n        request: OrganizationUserAcceptRequest): Promise<any> {\r\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\r\n    }\r\n\r\n    postOrganizationUserConfirm(organizationId: string, id: string,\r\n        request: OrganizationUserConfirmRequest): Promise<any> {\r\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\r\n            request, true, false);\r\n    }\r\n\r\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\r\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\r\n    }\r\n\r\n    putOrganizationUserGroups(organizationId: string, id: string,\r\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\r\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\r\n    }\r\n\r\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\r\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\r\n    }\r\n\r\n    // Plan APIs\r\n\r\n    async getPlans(): Promise<ListResponse<PlanResponse>> {\r\n        const r = await this.send('GET', '/plans/', null, true, true);\r\n        return new ListResponse(r, PlanResponse);\r\n    }\r\n\r\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\r\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\r\n    }\r\n\r\n    // Settings APIs\r\n\r\n    async getSettingsDomains(): Promise<DomainsResponse> {\r\n        const r = await this.send('GET', '/settings/domains', null, true, true);\r\n        return new DomainsResponse(r);\r\n    }\r\n\r\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\r\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\r\n        return new DomainsResponse(r);\r\n    }\r\n\r\n    // Sync APIs\r\n\r\n    async getSync(): Promise<SyncResponse> {\r\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\r\n        const r = await this.send('GET', path, null, true, true);\r\n        return new SyncResponse(r);\r\n    }\r\n\r\n    // Two-factor APIs\r\n\r\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\r\n        const r = await this.send('GET', '/two-factor', null, true, true);\r\n        return new ListResponse(r, TwoFactorProviderResponse);\r\n    }\r\n\r\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\r\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\r\n        return new ListResponse(r, TwoFactorProviderResponse);\r\n    }\r\n\r\n    async getTwoFactorAuthenticator(request: PasswordVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\r\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\r\n        return new TwoFactorAuthenticatorResponse(r);\r\n    }\r\n\r\n    async getTwoFactorEmail(request: PasswordVerificationRequest): Promise<TwoFactorEmailResponse> {\r\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\r\n        return new TwoFactorEmailResponse(r);\r\n    }\r\n\r\n    async getTwoFactorDuo(request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\r\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\r\n        return new TwoFactorDuoResponse(r);\r\n    }\r\n\r\n    async getTwoFactorOrganizationDuo(organizationId: string,\r\n        request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\r\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\r\n            request, true, true);\r\n        return new TwoFactorDuoResponse(r);\r\n    }\r\n\r\n    async getTwoFactorYubiKey(request: PasswordVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\r\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\r\n        return new TwoFactorYubiKeyResponse(r);\r\n    }\r\n\r\n    async getTwoFactorU2f(request: PasswordVerificationRequest): Promise<TwoFactorU2fResponse> {\r\n        const r = await this.send('POST', '/two-factor/get-u2f', request, true, true);\r\n        return new TwoFactorU2fResponse(r);\r\n    }\r\n\r\n    async getTwoFactorU2fChallenge(request: PasswordVerificationRequest): Promise<ChallengeResponse> {\r\n        const r = await this.send('POST', '/two-factor/get-u2f-challenge', request, true, true);\r\n        return new ChallengeResponse(r);\r\n    }\r\n\r\n    async getTwoFactorRecover(request: PasswordVerificationRequest): Promise<TwoFactorRecoverResponse> {\r\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\r\n        return new TwoFactorRecoverResponse(r);\r\n    }\r\n\r\n    async putTwoFactorAuthenticator(\r\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\r\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\r\n        return new TwoFactorAuthenticatorResponse(r);\r\n    }\r\n\r\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\r\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\r\n        return new TwoFactorEmailResponse(r);\r\n    }\r\n\r\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\r\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\r\n        return new TwoFactorDuoResponse(r);\r\n    }\r\n\r\n    async putTwoFactorOrganizationDuo(organizationId: string,\r\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\r\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\r\n        return new TwoFactorDuoResponse(r);\r\n    }\r\n\r\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\r\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\r\n        return new TwoFactorYubiKeyResponse(r);\r\n    }\r\n\r\n    async putTwoFactorU2f(request: UpdateTwoFactorU2fRequest): Promise<TwoFactorU2fResponse> {\r\n        const r = await this.send('PUT', '/two-factor/u2f', request, true, true);\r\n        return new TwoFactorU2fResponse(r);\r\n    }\r\n\r\n    async deleteTwoFactorU2f(request: UpdateTwoFactorU2fDeleteRequest): Promise<TwoFactorU2fResponse> {\r\n        const r = await this.send('DELETE', '/two-factor/u2f', request, true, true);\r\n        return new TwoFactorU2fResponse(r);\r\n    }\r\n\r\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\r\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\r\n        return new TwoFactorProviderResponse(r);\r\n    }\r\n\r\n    async putTwoFactorOrganizationDisable(organizationId: string,\r\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\r\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\r\n            request, true, true);\r\n        return new TwoFactorProviderResponse(r);\r\n    }\r\n\r\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\r\n        return this.send('POST', '/two-factor/recover', request, false, false);\r\n    }\r\n\r\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\r\n        return this.send('POST', '/two-factor/send-email', request, true, false);\r\n    }\r\n\r\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\r\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\r\n    }\r\n\r\n    // Organization APIs\r\n\r\n    async getOrganization(id: string): Promise<OrganizationResponse> {\r\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\r\n        return new OrganizationResponse(r);\r\n    }\r\n\r\n    async getOrganizationBilling(id: string): Promise<BillingResponse> {\r\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\r\n        return new BillingResponse(r);\r\n    }\r\n\r\n    async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\r\n        const r = await this.send('GET', '/organizations/' + id + '/subscription', null, true, true);\r\n        return new OrganizationSubscriptionResponse(r);\r\n    }\r\n\r\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\r\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\r\n            null, true, true);\r\n    }\r\n\r\n    async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\r\n        const r = await this.send('GET', '/organizations/' + id + '/tax', null, true, true);\r\n        return new TaxInfoResponse(r);\r\n    }\r\n\r\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\r\n        const r = await this.send('POST', '/organizations', request, true, true);\r\n        return new OrganizationResponse(r);\r\n    }\r\n\r\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\r\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\r\n        return new OrganizationResponse(r);\r\n    }\r\n\r\n    async putOrganizationTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<any> {\r\n        return this.send('PUT', '/organizations/' + id + '/tax', request, true, false);\r\n    }\r\n\r\n    postLeaveOrganization(id: string): Promise<any> {\r\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\r\n    }\r\n\r\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\r\n        const r = await this.send('POST', '/organizations/license', data, true, true);\r\n        return new OrganizationResponse(r);\r\n    }\r\n\r\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\r\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\r\n    }\r\n\r\n    async postOrganizationApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\r\n        const r = await this.send('POST', '/organizations/' + id + '/api-key', request, true, true);\r\n        return new ApiKeyResponse(r);\r\n    }\r\n\r\n    async postOrganizationRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\r\n        const r = await this.send('POST', '/organizations/' + id + '/rotate-api-key', request, true, true);\r\n        return new ApiKeyResponse(r);\r\n    }\r\n\r\n    async postOrganizationUpgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\r\n        const r = await this.send('POST', '/organizations/' + id + '/upgrade', request, true, true);\r\n        return new PaymentResponse(r);\r\n    }\r\n\r\n    async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\r\n        const r = await this.send('POST', '/organizations/' + id + '/seat', request, true, true);\r\n        return new PaymentResponse(r);\r\n    }\r\n\r\n    async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\r\n        const r = await this.send('POST', '/organizations/' + id + '/storage', request, true, true);\r\n        return new PaymentResponse(r);\r\n    }\r\n\r\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\r\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\r\n    }\r\n\r\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\r\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\r\n    }\r\n\r\n    postOrganizationCancel(id: string): Promise<any> {\r\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\r\n    }\r\n\r\n    postOrganizationReinstate(id: string): Promise<any> {\r\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\r\n    }\r\n\r\n    deleteOrganization(id: string, request: PasswordVerificationRequest): Promise<any> {\r\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\r\n    }\r\n\r\n    // Event APIs\r\n\r\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\r\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\r\n        return new ListResponse(r, EventResponse);\r\n    }\r\n\r\n    async getEventsCipher(id: string, start: string, end: string,\r\n        token: string): Promise<ListResponse<EventResponse>> {\r\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\r\n            null, true, true);\r\n        return new ListResponse(r, EventResponse);\r\n    }\r\n\r\n    async getEventsOrganization(id: string, start: string, end: string,\r\n        token: string): Promise<ListResponse<EventResponse>> {\r\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\r\n            null, true, true);\r\n        return new ListResponse(r, EventResponse);\r\n    }\r\n\r\n    async getEventsOrganizationUser(organizationId: string, id: string,\r\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\r\n        const r = await this.send('GET',\r\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\r\n            null, true, true);\r\n        return new ListResponse(r, EventResponse);\r\n    }\r\n\r\n    async postEventsCollect(request: EventRequest[]): Promise<any> {\r\n        const authHeader = await this.getActiveBearerToken();\r\n        const headers = new Headers({\r\n            'Device-Type': this.deviceType,\r\n            'Authorization': 'Bearer ' + authHeader,\r\n            'Content-Type': 'application/json; charset=utf-8',\r\n        });\r\n        if (this.customUserAgent != null) {\r\n            headers.set('User-Agent', this.customUserAgent);\r\n        }\r\n        const response = await this.fetch(new Request(this.eventsBaseUrl + '/collect', {\r\n            cache: 'no-store',\r\n            credentials: this.getCredentials(),\r\n            method: 'POST',\r\n            body: JSON.stringify(request),\r\n            headers: headers,\r\n        }));\r\n        if (response.status !== 200) {\r\n            return Promise.reject('Event post failed.');\r\n        }\r\n    }\r\n\r\n    // User APIs\r\n\r\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\r\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\r\n        return new UserKeyResponse(r);\r\n    }\r\n\r\n    // HIBP APIs\r\n\r\n    async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\r\n        const r = await this.send('GET', '/hibp/breach?username=' + username, null, true, true);\r\n        return r.map((a: any) => new BreachAccountResponse(a));\r\n    }\r\n\r\n    // Misc\r\n\r\n    async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\r\n        const r = await this.send('POST', '/bitpay-invoice', request, true, true);\r\n        return r as string;\r\n    }\r\n\r\n    async postSetupPayment(): Promise<string> {\r\n        const r = await this.send('POST', '/setup-payment', null, true, true);\r\n        return r as string;\r\n    }\r\n\r\n    // Helpers\r\n\r\n    async getActiveBearerToken(): Promise<string> {\r\n        let accessToken = await this.tokenService.getToken();\r\n        if (this.tokenService.tokenNeedsRefresh()) {\r\n            const tokenResponse = await this.doRefreshToken();\r\n            accessToken = tokenResponse.accessToken;\r\n        }\r\n        return accessToken;\r\n    }\r\n\r\n    fetch(request: Request): Promise<Response> {\r\n        if (request.method === 'GET') {\r\n            request.headers.set('Cache-Control', 'no-store');\r\n            request.headers.set('Pragma', 'no-cache');\r\n        }\r\n        return this.nativeFetch(request);\r\n    }\r\n\r\n    nativeFetch(request: Request): Promise<Response> {\r\n        return fetch(request);\r\n    }\r\n\r\n    async preValidateSso(identifier: string): Promise<boolean> {\r\n        if (identifier == null || identifier === '') {\r\n            throw new Error('Organization Identifier was not provided.');\r\n        }\r\n        const headers = new Headers({\r\n            'Accept': 'application/json',\r\n            'Device-Type': this.deviceType,\r\n        });\r\n        if (this.customUserAgent != null) {\r\n            headers.set('User-Agent', this.customUserAgent);\r\n        }\r\n\r\n        const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\r\n        const response = await this.fetch(new Request(this.identityBaseUrl + path, {\r\n            cache: 'no-store',\r\n            credentials: this.getCredentials(),\r\n            headers: headers,\r\n            method: 'GET',\r\n        }));\r\n\r\n        if (response.status === 200) {\r\n            return true;\r\n        } else {\r\n            const error = await this.handleError(response, false, true);\r\n            return Promise.reject(error);\r\n        }\r\n    }\r\n\r\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\r\n        authed: boolean, hasResponse: boolean): Promise<any> {\r\n        const headers = new Headers({\r\n            'Device-Type': this.deviceType,\r\n        });\r\n        if (this.customUserAgent != null) {\r\n            headers.set('User-Agent', this.customUserAgent);\r\n        }\r\n\r\n        const requestInit: RequestInit = {\r\n            cache: 'no-store',\r\n            credentials: this.getCredentials(),\r\n            method: method,\r\n        };\r\n\r\n        if (authed) {\r\n            const authHeader = await this.getActiveBearerToken();\r\n            headers.set('Authorization', 'Bearer ' + authHeader);\r\n        }\r\n        if (body != null) {\r\n            if (typeof body === 'string') {\r\n                requestInit.body = body;\r\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\r\n            } else if (typeof body === 'object') {\r\n                if (body instanceof FormData) {\r\n                    requestInit.body = body;\r\n                } else {\r\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\r\n                    requestInit.body = JSON.stringify(body);\r\n                }\r\n            }\r\n        }\r\n        if (hasResponse) {\r\n            headers.set('Accept', 'application/json');\r\n        }\r\n\r\n        requestInit.headers = headers;\r\n        const response = await this.fetch(new Request(this.apiBaseUrl + path, requestInit));\r\n\r\n        if (hasResponse && response.status === 200) {\r\n            const responseJson = await response.json();\r\n            return responseJson;\r\n        } else if (response.status !== 200) {\r\n            const error = await this.handleError(response, false, authed);\r\n            return Promise.reject(error);\r\n        }\r\n    }\r\n\r\n    private async handleError(response: Response, tokenError: boolean, authed: boolean): Promise<ErrorResponse> {\r\n        if (authed && ((tokenError && response.status === 400) || response.status === 401 || response.status === 403)) {\r\n            await this.logoutCallback(true);\r\n            return null;\r\n        }\r\n\r\n        let responseJson: any = null;\r\n        if (this.isJsonResponse(response)) {\r\n            responseJson = await response.json();\r\n        }\r\n\r\n        return new ErrorResponse(responseJson, response.status, tokenError);\r\n    }\r\n\r\n    private async doRefreshToken(): Promise<IdentityTokenResponse> {\r\n        const refreshToken = await this.tokenService.getRefreshToken();\r\n        if (refreshToken == null || refreshToken === '') {\r\n            throw new Error();\r\n        }\r\n        const headers = new Headers({\r\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\r\n            'Accept': 'application/json',\r\n            'Device-Type': this.deviceType,\r\n        });\r\n        if (this.customUserAgent != null) {\r\n            headers.set('User-Agent', this.customUserAgent);\r\n        }\r\n\r\n        const decodedToken = this.tokenService.decodeToken();\r\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\r\n            body: this.qsStringify({\r\n                grant_type: 'refresh_token',\r\n                client_id: decodedToken.client_id,\r\n                refresh_token: refreshToken,\r\n            }),\r\n            cache: 'no-store',\r\n            credentials: this.getCredentials(),\r\n            headers: headers,\r\n            method: 'POST',\r\n        }));\r\n\r\n        if (response.status === 200) {\r\n            const responseJson = await response.json();\r\n            const tokenResponse = new IdentityTokenResponse(responseJson);\r\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\r\n            return tokenResponse;\r\n        } else {\r\n            const error = await this.handleError(response, true, true);\r\n            return Promise.reject(error);\r\n        }\r\n    }\r\n\r\n    private qsStringify(params: any): string {\r\n        return Object.keys(params).map((key) => {\r\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        }).join('&');\r\n    }\r\n\r\n    private getCredentials(): RequestCredentials {\r\n        if (this.device !== DeviceType.SafariExtension && (!this.isWebClient || this.usingBaseUrl)) {\r\n            return 'include';\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private addEventParameters(base: string, start: string, end: string, token: string) {\r\n        if (start != null) {\r\n            base += ('?start=' + start);\r\n        }\r\n        if (end != null) {\r\n            base += (base.indexOf('?') > -1 ? '&' : '?');\r\n            base += ('end=' + end);\r\n        }\r\n        if (token != null) {\r\n            base += (base.indexOf('?') > -1 ? '&' : '?');\r\n            base += ('continuationToken=' + token);\r\n        }\r\n        return base;\r\n    }\r\n\r\n    private isJsonResponse(response: Response): boolean {\r\n        const typeHeader = response.headers.get('content-type');\r\n        return typeHeader != null && typeHeader.indexOf('application/json') > -1;\r\n    }\r\n}\r\n","import { AttachmentResponse } from './attachmentResponse';\r\nimport { BaseResponse } from './baseResponse';\r\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\r\n\r\nimport { CardApi } from '../api/cardApi';\r\nimport { FieldApi } from '../api/fieldApi';\r\nimport { IdentityApi } from '../api/identityApi';\r\nimport { LoginApi } from '../api/loginApi';\r\nimport { SecureNoteApi } from '../api/secureNoteApi';\r\n\r\nexport class CipherResponse extends BaseResponse {\r\n    id: string;\r\n    organizationId: string;\r\n    folderId: string;\r\n    type: number;\r\n    name: string;\r\n    notes: string;\r\n    fields: FieldApi[];\r\n    login: LoginApi;\r\n    card: CardApi;\r\n    identity: IdentityApi;\r\n    secureNote: SecureNoteApi;\r\n    favorite: boolean;\r\n    edit: boolean;\r\n    viewPassword: boolean;\r\n    organizationUseTotp: boolean;\r\n    revisionDate: string;\r\n    attachments: AttachmentResponse[];\r\n    passwordHistory: PasswordHistoryResponse[];\r\n    collectionIds: string[];\r\n    deletedDate: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.organizationId = this.getResponseProperty('OrganizationId');\r\n        this.folderId = this.getResponseProperty('FolderId') || null;\r\n        this.type = this.getResponseProperty('Type');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.notes = this.getResponseProperty('Notes');\r\n        this.favorite = this.getResponseProperty('Favorite') || false;\r\n        this.edit = !!this.getResponseProperty('Edit');\r\n        if (this.getResponseProperty('ViewPassword') == null) {\r\n            this.viewPassword = true;\r\n        } else {\r\n            this.viewPassword = this.getResponseProperty('ViewPassword');\r\n        }\r\n        this.organizationUseTotp = this.getResponseProperty('OrganizationUseTotp');\r\n        this.revisionDate = this.getResponseProperty('RevisionDate');\r\n        this.collectionIds = this.getResponseProperty('CollectionIds');\r\n        this.deletedDate = this.getResponseProperty('DeletedDate');\r\n\r\n        const login = this.getResponseProperty('Login');\r\n        if (login != null) {\r\n            this.login = new LoginApi(login);\r\n        }\r\n\r\n        const card = this.getResponseProperty('Card');\r\n        if (card != null) {\r\n            this.card = new CardApi(card);\r\n        }\r\n\r\n        const identity = this.getResponseProperty('Identity');\r\n        if (identity != null) {\r\n            this.identity = new IdentityApi(identity);\r\n        }\r\n\r\n        const secureNote = this.getResponseProperty('SecureNote');\r\n        if (secureNote != null) {\r\n            this.secureNote = new SecureNoteApi(secureNote);\r\n        }\r\n\r\n        const fields = this.getResponseProperty('Fields');\r\n        if (fields != null) {\r\n            this.fields = fields.map((f: any) => new FieldApi(f));\r\n        }\r\n\r\n        const attachments = this.getResponseProperty('Attachments');\r\n        if (attachments != null) {\r\n            this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\r\n        }\r\n\r\n        const passwordHistory = this.getResponseProperty('PasswordHistory');\r\n        if (passwordHistory != null) {\r\n            this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\r\n\r\nexport class CollectionResponse extends BaseResponse {\r\n    id: string;\r\n    organizationId: string;\r\n    name: string;\r\n    externalId: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.organizationId = this.getResponseProperty('OrganizationId');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.externalId = this.getResponseProperty('ExternalId');\r\n    }\r\n}\r\n\r\nexport class CollectionDetailsResponse extends CollectionResponse {\r\n    readOnly: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.readOnly = this.getResponseProperty('ReadOnly') || false;\r\n    }\r\n}\r\n\r\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\r\n    groups: SelectionReadOnlyResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        const groups = this.getResponseProperty('Groups');\r\n        if (groups != null) {\r\n            this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\nimport { GlobalDomainResponse } from './globalDomainResponse';\r\n\r\nexport class DomainsResponse extends BaseResponse {\r\n    equivalentDomains: string[][];\r\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.equivalentDomains = this.getResponseProperty('EquivalentDomains');\r\n        const globalEquivalentDomains = this.getResponseProperty('GlobalEquivalentDomains');\r\n        if (globalEquivalentDomains != null) {\r\n            this.globalEquivalentDomains = globalEquivalentDomains.map((d: any) => new GlobalDomainResponse(d));\r\n        } else {\r\n            this.globalEquivalentDomains = [];\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class FolderResponse extends BaseResponse {\r\n    id: string;\r\n    name: string;\r\n    revisionDate: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.revisionDate = this.getResponseProperty('RevisionDate');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\nimport { PlanResponse } from './planResponse';\r\n\r\nimport { PlanType } from '../../enums/planType';\r\n\r\nexport class OrganizationResponse extends BaseResponse {\r\n    id: string;\r\n    identifier: string;\r\n    name: string;\r\n    businessName: string;\r\n    businessAddress1: string;\r\n    businessAddress2: string;\r\n    businessAddress3: string;\r\n    businessCountry: string;\r\n    businessTaxNumber: string;\r\n    billingEmail: string;\r\n    plan: PlanResponse;\r\n    planType: PlanType;\r\n    seats: number;\r\n    maxCollections: number;\r\n    maxStorageGb: number;\r\n    useGroups: boolean;\r\n    useDirectory: boolean;\r\n    useEvents: boolean;\r\n    useTotp: boolean;\r\n    use2fa: boolean;\r\n    useApi: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.identifier = this.getResponseProperty('Identifier');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.businessName = this.getResponseProperty('BusinessName');\r\n        this.businessAddress1 = this.getResponseProperty('BusinessAddress1');\r\n        this.businessAddress2 = this.getResponseProperty('BusinessAddress2');\r\n        this.businessAddress3 = this.getResponseProperty('BusinessAddress3');\r\n        this.businessCountry = this.getResponseProperty('BusinessCountry');\r\n        this.businessTaxNumber = this.getResponseProperty('BusinessTaxNumber');\r\n        this.billingEmail = this.getResponseProperty('BillingEmail');\r\n        const plan = this.getResponseProperty('Plan');\r\n        this.plan = plan == null ? null : new PlanResponse(plan);\r\n        this.planType = this.getResponseProperty('PlanType');\r\n        this.seats = this.getResponseProperty('Seats');\r\n        this.maxCollections = this.getResponseProperty('MaxCollections');\r\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\r\n        this.useGroups = this.getResponseProperty('UseGroups');\r\n        this.useDirectory = this.getResponseProperty('UseDirectory');\r\n        this.useEvents = this.getResponseProperty('UseEvents');\r\n        this.useTotp = this.getResponseProperty('UseTotp');\r\n        this.use2fa = this.getResponseProperty('Use2fa');\r\n        this.useApi = this.getResponseProperty('UseApi');\r\n    }\r\n}\r\n","import { PlanType } from '../../enums/planType';\r\nimport { ProductType } from '../../enums/productType';\r\n\r\nimport { BaseResponse } from './baseResponse';\r\n\r\nexport class PlanResponse extends BaseResponse {\r\n    type: PlanType;\r\n    product: ProductType;\r\n    name: string;\r\n    isAnnual: boolean;\r\n    nameLocalizationKey: string;\r\n    descriptionLocalizationKey: string;\r\n    canBeUsedByBusiness: boolean;\r\n    baseSeats: number;\r\n    baseStorageGb: number;\r\n    maxCollections: number;\r\n    maxUsers: number;\r\n\r\n    hasAdditionalSeatsOption: boolean;\r\n    maxAdditionalSeats: number;\r\n    hasAdditionalStorageOption: boolean;\r\n    maxAdditionalStorage: number;\r\n    hasPremiumAccessOption: boolean;\r\n    trialPeriodDays: number;\r\n\r\n    hasSelfHost: boolean;\r\n    hasPolicies: boolean;\r\n    hasGroups: boolean;\r\n    hasDirectory: boolean;\r\n    hasEvents: boolean;\r\n    hasTotp: boolean;\r\n    has2fa: boolean;\r\n    hasApi: boolean;\r\n    hasSso: boolean;\r\n    usersGetPremium: boolean;\r\n\r\n    upgradeSortOrder: number;\r\n    displaySortOrder: number;\r\n    legacyYear: number;\r\n    disabled: boolean;\r\n\r\n    stripePlanId: string;\r\n    stripeSeatPlanId: string;\r\n    stripeStoragePlanId: string;\r\n    stripePremiumAccessPlanId: string;\r\n    basePrice: number;\r\n    seatPrice: number;\r\n    additionalStoragePricePerGb: number;\r\n    premiumAccessOptionPrice: number;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.type = this.getResponseProperty('Type');\r\n        this.product = this.getResponseProperty('Product');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.isAnnual = this.getResponseProperty('IsAnnual');\r\n        this.nameLocalizationKey = this.getResponseProperty('NameLocalizationKey');\r\n        this.descriptionLocalizationKey = this.getResponseProperty('DescriptionLocalizationKey');\r\n        this.canBeUsedByBusiness = this.getResponseProperty('CanBeUsedByBusiness');\r\n        this.baseSeats = this.getResponseProperty('BaseSeats');\r\n        this.baseStorageGb = this.getResponseProperty('BaseStorageGb');\r\n        this.maxCollections = this.getResponseProperty('MaxCollections');\r\n        this.maxUsers = this.getResponseProperty('MaxUsers');\r\n        this.hasAdditionalSeatsOption = this.getResponseProperty('HasAdditionalSeatsOption');\r\n        this.maxAdditionalSeats = this.getResponseProperty('MaxAdditionalSeats');\r\n        this.hasAdditionalStorageOption = this.getResponseProperty('HasAdditionalStorageOption');\r\n        this.maxAdditionalStorage = this.getResponseProperty('MaxAdditionalStorage');\r\n        this.hasPremiumAccessOption = this.getResponseProperty('HasPremiumAccessOption');\r\n        this.trialPeriodDays = this.getResponseProperty('TrialPeriodDays');\r\n        this.hasSelfHost = this.getResponseProperty('HasSelfHost');\r\n        this.hasPolicies = this.getResponseProperty('HasPolicies');\r\n        this.hasGroups = this.getResponseProperty('HasGroups');\r\n        this.hasDirectory = this.getResponseProperty('HasDirectory');\r\n        this.hasEvents = this.getResponseProperty('HasEvents');\r\n        this.hasTotp = this.getResponseProperty('HasTotp');\r\n        this.has2fa = this.getResponseProperty('Has2fa');\r\n        this.hasApi = this.getResponseProperty('HasApi');\r\n        this.hasSso = this.getResponseProperty('HasSso');\r\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\r\n        this.upgradeSortOrder = this.getResponseProperty('UpgradeSortOrder');\r\n        this.displaySortOrder = this.getResponseProperty('SortOrder');\r\n        this.legacyYear = this.getResponseProperty('LegacyYear');\r\n        this.disabled = this.getResponseProperty('Disabled');\r\n        this.stripePlanId = this.getResponseProperty('StripePlanId');\r\n        this.stripeSeatPlanId = this.getResponseProperty('StripeSeatPlanId');\r\n        this.stripeStoragePlanId = this.getResponseProperty('StripeStoragePlanId');\r\n        this.stripePremiumAccessPlanId = this.getResponseProperty('StripePremiumAccessPlanId');\r\n        this.basePrice = this.getResponseProperty('BasePrice');\r\n        this.seatPrice = this.getResponseProperty('SeatPrice');\r\n        this.additionalStoragePricePerGb = this.getResponseProperty('AdditionalStoragePricePerGb');\r\n        this.premiumAccessOptionPrice = this.getResponseProperty('PremiumAccessOptionPrice');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class SubscriptionResponse extends BaseResponse {\r\n    storageName: string;\r\n    storageGb: number;\r\n    maxStorageGb: number;\r\n    subscription: BillingSubscriptionResponse;\r\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\r\n    license: any;\r\n    expiration: string;\r\n    usingInAppPurchase: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.storageName = this.getResponseProperty('StorageName');\r\n        this.storageGb = this.getResponseProperty('StorageGb');\r\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\r\n        this.license = this.getResponseProperty('License');\r\n        this.expiration = this.getResponseProperty('Expiration');\r\n        this.usingInAppPurchase = this.getResponseProperty('UsingInAppPurchase');\r\n        const subscription = this.getResponseProperty('Subscription');\r\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\r\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\r\n        this.upcomingInvoice = upcomingInvoice == null ? null :\r\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\r\n    }\r\n}\r\n\r\nexport class BillingSubscriptionResponse extends BaseResponse {\r\n    trialStartDate: string;\r\n    trialEndDate: string;\r\n    periodStartDate: string;\r\n    periodEndDate: string;\r\n    cancelledDate: string;\r\n    cancelAtEndDate: boolean;\r\n    status: string;\r\n    cancelled: boolean;\r\n    items: BillingSubscriptionItemResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.trialEndDate = this.getResponseProperty('TrialStartDate');\r\n        this.trialEndDate = this.getResponseProperty('TrialEndDate');\r\n        this.periodStartDate = this.getResponseProperty('PeriodStartDate');\r\n        this.periodEndDate = this.getResponseProperty('PeriodEndDate');\r\n        this.cancelledDate = this.getResponseProperty('CancelledDate');\r\n        this.cancelAtEndDate = this.getResponseProperty('CancelAtEndDate');\r\n        this.status = this.getResponseProperty('Status');\r\n        this.cancelled = this.getResponseProperty('Cancelled');\r\n        const items = this.getResponseProperty('Items');\r\n        if (items != null) {\r\n            this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\r\n        }\r\n    }\r\n}\r\n\r\nexport class BillingSubscriptionItemResponse extends BaseResponse {\r\n    name: string;\r\n    amount: number;\r\n    quantity: number;\r\n    interval: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.name = this.getResponseProperty('Name');\r\n        this.amount = this.getResponseProperty('Amount');\r\n        this.quantity = this.getResponseProperty('Quantity');\r\n        this.interval = this.getResponseProperty('Interval');\r\n    }\r\n}\r\n\r\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\r\n    date: string;\r\n    amount: number;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.date = this.getResponseProperty('Date');\r\n        this.amount = this.getResponseProperty('Amount');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { PolicyType } from '../../enums/policyType';\r\n\r\nexport class PolicyResponse extends BaseResponse {\r\n    id: string;\r\n    organizationId: string;\r\n    type: PolicyType;\r\n    data: any;\r\n    enabled: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.organizationId = this.getResponseProperty('OrganizationId');\r\n        this.type = this.getResponseProperty('Type');\r\n        this.data = this.getResponseProperty('Data');\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { SendType } from '../../enums/sendType';\r\n\r\nimport { SendFileApi } from '../api/sendFileApi';\r\nimport { SendTextApi } from '../api/sendTextApi';\r\n\r\nexport class SendResponse extends BaseResponse {\r\n    id: string;\r\n    accessId: string;\r\n    type: SendType;\r\n    name: string;\r\n    notes: string;\r\n    file: SendFileApi;\r\n    text: SendTextApi;\r\n    key: string;\r\n    maxAccessCount?: number;\r\n    accessCount: number;\r\n    revisionDate: string;\r\n    expirationDate: string;\r\n    deletionDate: string;\r\n    password: string;\r\n    disable: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.accessId = this.getResponseProperty('AccessId');\r\n        this.type = this.getResponseProperty('Type');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.notes = this.getResponseProperty('Notes');\r\n        this.key = this.getResponseProperty('Key');\r\n        this.maxAccessCount = this.getResponseProperty('MaxAccessCount');\r\n        this.accessCount = this.getResponseProperty('AccessCount');\r\n        this.revisionDate = this.getResponseProperty('RevisionDate');\r\n        this.expirationDate = this.getResponseProperty('ExpirationDate');\r\n        this.deletionDate = this.getResponseProperty('DeletionDate');\r\n        this.password = this.getResponseProperty('Password');\r\n        this.disable = this.getResponseProperty('Disabled') || false;\r\n\r\n        const text = this.getResponseProperty('Text');\r\n        if (text != null) {\r\n            this.text = new SendTextApi(text);\r\n        }\r\n\r\n        const file = this.getResponseProperty('File');\r\n        if (file != null) {\r\n            this.file = new SendFileApi(file);\r\n        }\r\n    }\r\n}\r\n","import { Utils } from '../misc/utils';\r\n\r\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\n\r\nexport class AppIdService implements AppIdServiceAbstraction {\r\n    constructor(private storageService: StorageService) {\r\n    }\r\n\r\n    getAppId(): Promise<string> {\r\n        return this.makeAndGetAppId('appId');\r\n    }\r\n\r\n    getAnonymousAppId(): Promise<string> {\r\n        return this.makeAndGetAppId('anonymousAppId');\r\n    }\r\n\r\n    private async makeAndGetAppId(key: string) {\r\n        const existingId = await this.storageService.get<string>(key);\r\n        if (existingId != null) {\r\n            return existingId;\r\n        }\r\n\r\n        const guid = Utils.newGuid();\r\n        await this.storageService.save(key, guid);\r\n        return guid;\r\n    }\r\n}\r\n","import { ApiService } from '../abstractions/api.service';\r\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\r\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\r\n\r\nimport { throttle } from '../misc/throttle';\r\nimport { Utils } from '../misc/utils';\r\n\r\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\r\nimport { ErrorResponse } from '../models/response/errorResponse';\r\n\r\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\r\n\r\nexport class AuditService implements AuditServiceAbstraction {\r\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\r\n\r\n    @throttle(100, () => 'passwordLeaked')\r\n    async passwordLeaked(password: string): Promise<number> {\r\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\r\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\r\n        const hashStart = hash.substr(0, 5);\r\n        const hashEnding = hash.substr(5);\r\n\r\n        const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\r\n        const leakedHashes = await response.text();\r\n        const match = leakedHashes.split(/\\r?\\n/).find((v) => {\r\n            return v.split(':')[0] === hashEnding;\r\n        });\r\n\r\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\r\n    }\r\n\r\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\r\n        try {\r\n            return await this.apiService.getHibpBreach(username);\r\n        } catch (e) {\r\n            const error = e as ErrorResponse;\r\n            if (error.statusCode === 404) {\r\n                return [];\r\n            }\r\n            throw new Error();\r\n        }\r\n    }\r\n}\r\n","import { CipherType } from '../enums/cipherType';\r\nimport { FieldType } from '../enums/fieldType';\r\nimport { UriMatchType } from '../enums/uriMatchType';\r\n\r\nimport { CipherData } from '../models/data/cipherData';\r\n\r\nimport { Attachment } from '../models/domain/attachment';\r\nimport { Card } from '../models/domain/card';\r\nimport { Cipher } from '../models/domain/cipher';\r\nimport { CipherString } from '../models/domain/cipherString';\r\nimport Domain from '../models/domain/domainBase';\r\nimport { Field } from '../models/domain/field';\r\nimport { Identity } from '../models/domain/identity';\r\nimport { Login } from '../models/domain/login';\r\nimport { LoginUri } from '../models/domain/loginUri';\r\nimport { Password } from '../models/domain/password';\r\nimport { SecureNote } from '../models/domain/secureNote';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\r\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\r\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\r\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\r\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\r\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\r\nimport { CipherRequest } from '../models/request/cipherRequest';\r\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\r\n\r\nimport { CipherResponse } from '../models/response/cipherResponse';\r\nimport { ErrorResponse } from '../models/response/errorResponse';\r\n\r\nimport { AttachmentView } from '../models/view/attachmentView';\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { FieldView } from '../models/view/fieldView';\r\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\r\nimport { View } from '../models/view/view';\r\n\r\nimport { SortedCiphersCache } from '../models/domain/sortedCiphersCache';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport { I18nService } from '../abstractions/i18n.service';\r\nimport { SearchService } from '../abstractions/search.service';\r\nimport { SettingsService } from '../abstractions/settings.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { UserService } from '../abstractions/user.service';\r\n\r\nimport { ConstantsService } from './constants.service';\r\n\r\nimport { sequentialize } from '../misc/sequentialize';\r\nimport { Utils } from '../misc/utils';\r\n\r\nconst Keys = {\r\n    ciphersPrefix: 'ciphers_',\r\n    localData: 'sitesLocalData',\r\n    neverDomains: 'neverDomains',\r\n};\r\n\r\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\r\n    ['google.com', new Set(['script.google.com'])],\r\n]);\r\n\r\nexport class CipherService implements CipherServiceAbstraction {\r\n    // tslint:disable-next-line\r\n    _decryptedCipherCache: CipherView[];\r\n\r\n    private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(this.sortCiphersByLastUsed);\r\n\r\n    constructor(private cryptoService: CryptoService, private userService: UserService,\r\n        private settingsService: SettingsService, private apiService: ApiService,\r\n        private storageService: StorageService, private i18nService: I18nService,\r\n        private searchService: () => SearchService) {\r\n    }\r\n\r\n    get decryptedCipherCache() {\r\n        return this._decryptedCipherCache;\r\n    }\r\n    set decryptedCipherCache(value: CipherView[]) {\r\n        this._decryptedCipherCache = value;\r\n        if (this.searchService != null) {\r\n            if (value == null) {\r\n                this.searchService().clearIndex();\r\n            } else {\r\n                this.searchService().indexCiphers();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearCache(): void {\r\n        this.decryptedCipherCache = null;\r\n        this.sortedCiphersCache.clear();\r\n    }\r\n\r\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey, originalCipher: Cipher = null): Promise<Cipher> {\r\n        // Adjust password history\r\n        if (model.id != null) {\r\n            if (originalCipher == null) {\r\n                originalCipher = await this.get(model.id);\r\n            }\r\n            if (originalCipher != null) {\r\n                const existingCipher = await originalCipher.decrypt();\r\n                model.passwordHistory = existingCipher.passwordHistory || [];\r\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\r\n                    if (existingCipher.login.password != null && existingCipher.login.password !== '' &&\r\n                        existingCipher.login.password !== model.login.password) {\r\n                        const ph = new PasswordHistoryView();\r\n                        ph.password = existingCipher.login.password;\r\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\r\n                        model.passwordHistory.splice(0, 0, ph);\r\n                    } else {\r\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\r\n                    }\r\n                }\r\n                if (existingCipher.hasFields) {\r\n                    const existingHiddenFields = existingCipher.fields.filter((f) => f.type === FieldType.Hidden &&\r\n                        f.name != null && f.name !== '' && f.value != null && f.value !== '');\r\n                    const hiddenFields = model.fields == null ? [] :\r\n                        model.fields.filter((f) => f.type === FieldType.Hidden && f.name != null && f.name !== '');\r\n                    existingHiddenFields.forEach((ef) => {\r\n                        const matchedField = hiddenFields.find((f) => f.name === ef.name);\r\n                        if (matchedField == null || matchedField.value !== ef.value) {\r\n                            const ph = new PasswordHistoryView();\r\n                            ph.password = ef.name + ': ' + ef.value;\r\n                            ph.lastUsedDate = new Date();\r\n                            model.passwordHistory.splice(0, 0, ph);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\r\n                model.passwordHistory = null;\r\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\r\n                // only save last 5 history\r\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\r\n            }\r\n        }\r\n\r\n        const cipher = new Cipher();\r\n        cipher.id = model.id;\r\n        cipher.folderId = model.folderId;\r\n        cipher.favorite = model.favorite;\r\n        cipher.organizationId = model.organizationId;\r\n        cipher.type = model.type;\r\n        cipher.collectionIds = model.collectionIds;\r\n        cipher.revisionDate = model.revisionDate;\r\n\r\n        if (key == null && cipher.organizationId != null) {\r\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\r\n            if (key == null) {\r\n                throw new Error('Cannot encrypt cipher for organization. No key.');\r\n            }\r\n        }\r\n        await Promise.all([\r\n            this.encryptObjProperty(model, cipher, {\r\n                name: null,\r\n                notes: null,\r\n            }, key),\r\n            this.encryptCipherData(cipher, model, key),\r\n            this.encryptFields(model.fields, key).then((fields) => {\r\n                cipher.fields = fields;\r\n            }),\r\n            this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\r\n                cipher.passwordHistory = ph;\r\n            }),\r\n            this.encryptAttachments(model.attachments, key).then((attachments) => {\r\n                cipher.attachments = attachments;\r\n            }),\r\n        ]);\r\n\r\n        return cipher;\r\n    }\r\n\r\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\r\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const promises: Promise<any>[] = [];\r\n        const encAttachments: Attachment[] = [];\r\n        attachmentsModel.forEach(async (model) => {\r\n            const attachment = new Attachment();\r\n            attachment.id = model.id;\r\n            attachment.size = model.size;\r\n            attachment.sizeName = model.sizeName;\r\n            attachment.url = model.url;\r\n            const promise = this.encryptObjProperty(model, attachment, {\r\n                fileName: null,\r\n            }, key).then(async () => {\r\n                if (model.key != null) {\r\n                    attachment.key = await this.cryptoService.encrypt(model.key.key, key);\r\n                }\r\n                encAttachments.push(attachment);\r\n            });\r\n            promises.push(promise);\r\n        });\r\n\r\n        await Promise.all(promises);\r\n        return encAttachments;\r\n    }\r\n\r\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\r\n        if (!fieldsModel || !fieldsModel.length) {\r\n            return null;\r\n        }\r\n\r\n        const self = this;\r\n        const encFields: Field[] = [];\r\n        await fieldsModel.reduce((promise, field) => {\r\n            return promise.then(() => {\r\n                return self.encryptField(field, key);\r\n            }).then((encField: Field) => {\r\n                encFields.push(encField);\r\n            });\r\n        }, Promise.resolve());\r\n\r\n        return encFields;\r\n    }\r\n\r\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\r\n        const field = new Field();\r\n        field.type = fieldModel.type;\r\n        // normalize boolean type field values\r\n        if (fieldModel.type === FieldType.Boolean && fieldModel.value !== 'true') {\r\n            fieldModel.value = 'false';\r\n        }\r\n\r\n        await this.encryptObjProperty(fieldModel, field, {\r\n            name: null,\r\n            value: null,\r\n        }, key);\r\n\r\n        return field;\r\n    }\r\n\r\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\r\n        if (!phModels || !phModels.length) {\r\n            return null;\r\n        }\r\n\r\n        const self = this;\r\n        const encPhs: Password[] = [];\r\n        await phModels.reduce((promise, ph) => {\r\n            return promise.then(() => {\r\n                return self.encryptPasswordHistory(ph, key);\r\n            }).then((encPh: Password) => {\r\n                encPhs.push(encPh);\r\n            });\r\n        }, Promise.resolve());\r\n\r\n        return encPhs;\r\n    }\r\n\r\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\r\n        const ph = new Password();\r\n        ph.lastUsedDate = phModel.lastUsedDate;\r\n\r\n        await this.encryptObjProperty(phModel, ph, {\r\n            password: null,\r\n        }, key);\r\n\r\n        return ph;\r\n    }\r\n\r\n    async get(id: string): Promise<Cipher> {\r\n        const userId = await this.userService.getUserId();\r\n        const localData = await this.storageService.get<any>(Keys.localData);\r\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\r\n    }\r\n\r\n    async getAll(): Promise<Cipher[]> {\r\n        const userId = await this.userService.getUserId();\r\n        const localData = await this.storageService.get<any>(Keys.localData);\r\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n        const response: Cipher[] = [];\r\n        for (const id in ciphers) {\r\n            if (ciphers.hasOwnProperty(id)) {\r\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\r\n            }\r\n        }\r\n        return response;\r\n    }\r\n\r\n    @sequentialize(() => 'getAllDecrypted')\r\n    async getAllDecrypted(): Promise<CipherView[]> {\r\n        if (this.decryptedCipherCache != null) {\r\n            return this.decryptedCipherCache;\r\n        }\r\n\r\n        const decCiphers: CipherView[] = [];\r\n        const hasKey = await this.cryptoService.hasKey();\r\n        if (!hasKey) {\r\n            throw new Error('No key.');\r\n        }\r\n\r\n        const promises: any[] = [];\r\n        const ciphers = await this.getAll();\r\n        ciphers.forEach((cipher) => {\r\n            promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\r\n        });\r\n\r\n        await Promise.all(promises);\r\n        decCiphers.sort(this.getLocaleSortingFunction());\r\n        this.decryptedCipherCache = decCiphers;\r\n        return this.decryptedCipherCache;\r\n    }\r\n\r\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\r\n        const ciphers = await this.getAllDecrypted();\r\n\r\n        return ciphers.filter((cipher) => {\r\n            if (cipher.isDeleted) {\r\n                return false;\r\n            }\r\n            if (folder && cipher.folderId === groupingId) {\r\n                return true;\r\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n    }\r\n\r\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[],\r\n        defaultMatch: UriMatchType = null): Promise<CipherView[]> {\r\n        if (url == null && includeOtherTypes == null) {\r\n            return Promise.resolve([]);\r\n        }\r\n\r\n        const domain = Utils.getDomain(url);\r\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\r\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\r\n                let matches: any[] = [];\r\n                eqDomains.forEach((eqDomain) => {\r\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\r\n                        matches = matches.concat(eqDomain);\r\n                    }\r\n                });\r\n\r\n                if (!matches.length) {\r\n                    matches.push(domain);\r\n                }\r\n\r\n                return matches;\r\n            });\r\n\r\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\r\n        const matchingDomains = result[0];\r\n        const ciphers = result[1];\r\n\r\n        if (defaultMatch == null) {\r\n            defaultMatch = await this.storageService.get<UriMatchType>(ConstantsService.defaultUriMatch);\r\n            if (defaultMatch == null) {\r\n                defaultMatch = UriMatchType.Domain;\r\n            }\r\n        }\r\n\r\n        return ciphers.filter((cipher) => {\r\n            if (cipher.deletedDate != null) {\r\n                return false;\r\n            }\r\n            if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\r\n                return true;\r\n            }\r\n\r\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\r\n                for (let i = 0; i < cipher.login.uris.length; i++) {\r\n                    const u = cipher.login.uris[i];\r\n                    if (u.uri == null) {\r\n                        continue;\r\n                    }\r\n\r\n                    const match = u.match == null ? defaultMatch : u.match;\r\n                    switch (match) {\r\n                        case UriMatchType.Domain:\r\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\r\n                                if (DomainMatchBlacklist.has(u.domain)) {\r\n                                    const domainUrlHost = Utils.getHost(url);\r\n                                    if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\r\n                                        return true;\r\n                                    }\r\n                                } else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case UriMatchType.Host:\r\n                            const urlHost = Utils.getHost(url);\r\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case UriMatchType.Exact:\r\n                            if (url === u.uri) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case UriMatchType.StartsWith:\r\n                            if (url.startsWith(u.uri)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case UriMatchType.RegularExpression:\r\n                            try {\r\n                                const regex = new RegExp(u.uri, 'i');\r\n                                if (regex.test(url)) {\r\n                                    return true;\r\n                                }\r\n                            } catch { }\r\n                            break;\r\n                        case UriMatchType.Never:\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n    }\r\n\r\n    async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\r\n        const ciphers = await this.apiService.getCiphersOrganization(organizationId);\r\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\r\n            const decCiphers: CipherView[] = [];\r\n            const promises: any[] = [];\r\n            ciphers.data.forEach((r) => {\r\n                const data = new CipherData(r);\r\n                const cipher = new Cipher(data);\r\n                promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\r\n            });\r\n            await Promise.all(promises);\r\n            decCiphers.sort(this.getLocaleSortingFunction());\r\n            return decCiphers;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    async getLastUsedForUrl(url: string): Promise<CipherView> {\r\n        return this.getCipherForUrl(url, true, false);\r\n    }\r\n\r\n    async getLastLaunchedForUrl(url: string): Promise<CipherView> {\r\n        return this.getCipherForUrl(url, false, true);\r\n    }\r\n\r\n    async getNextCipherForUrl(url: string): Promise<CipherView> {\r\n        return this.getCipherForUrl(url, false, false);\r\n    }\r\n\r\n    updateLastUsedIndexForUrl(url: string) {\r\n        this.sortedCiphersCache.updateLastUsedIndex(url);\r\n    }\r\n\r\n    async updateLastUsedDate(id: string): Promise<void> {\r\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\r\n        if (!ciphersLocalData) {\r\n            ciphersLocalData = {};\r\n        }\r\n\r\n        if (ciphersLocalData[id]) {\r\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\r\n        } else {\r\n            ciphersLocalData[id] = {\r\n                lastUsedDate: new Date().getTime(),\r\n            };\r\n        }\r\n\r\n        await this.storageService.save(Keys.localData, ciphersLocalData);\r\n\r\n        if (this.decryptedCipherCache == null) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\r\n            const cached = this.decryptedCipherCache[i];\r\n            if (cached.id === id) {\r\n                cached.localData = ciphersLocalData[id];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    async updateLastLaunchedDate(id: string): Promise<void> {\r\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\r\n        if (!ciphersLocalData) {\r\n            ciphersLocalData = {};\r\n        }\r\n\r\n        if (ciphersLocalData[id]) {\r\n            ciphersLocalData[id].lastLaunched = new Date().getTime();\r\n        } else {\r\n            ciphersLocalData[id] = {\r\n                lastUsedDate: new Date().getTime(),\r\n            };\r\n        }\r\n\r\n        await this.storageService.save(Keys.localData, ciphersLocalData);\r\n\r\n        if (this.decryptedCipherCache == null) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\r\n            const cached = this.decryptedCipherCache[i];\r\n            if (cached.id === id) {\r\n                cached.localData = ciphersLocalData[id];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    async saveNeverDomain(domain: string): Promise<void> {\r\n        if (domain == null) {\r\n            return;\r\n        }\r\n\r\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\r\n        if (!domains) {\r\n            domains = {};\r\n        }\r\n        domains[domain] = null;\r\n        await this.storageService.save(Keys.neverDomains, domains);\r\n    }\r\n\r\n    async saveWithServer(cipher: Cipher): Promise<any> {\r\n        let response: CipherResponse;\r\n        if (cipher.id == null) {\r\n            if (cipher.collectionIds != null) {\r\n                const request = new CipherCreateRequest(cipher);\r\n                response = await this.apiService.postCipherCreate(request);\r\n            } else {\r\n                const request = new CipherRequest(cipher);\r\n                response = await this.apiService.postCipher(request);\r\n            }\r\n            cipher.id = response.id;\r\n        } else {\r\n            const request = new CipherRequest(cipher);\r\n            response = await this.apiService.putCipher(cipher.id, request);\r\n        }\r\n\r\n        const userId = await this.userService.getUserId();\r\n        const data = new CipherData(response, userId, cipher.collectionIds);\r\n        await this.upsert(data);\r\n    }\r\n\r\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\r\n        const attachmentPromises: Promise<any>[] = [];\r\n        if (cipher.attachments != null) {\r\n            cipher.attachments.forEach((attachment) => {\r\n                if (attachment.key == null) {\r\n                    attachmentPromises.push(this.shareAttachmentWithServer(attachment, cipher.id, organizationId));\r\n                }\r\n            });\r\n        }\r\n        await Promise.all(attachmentPromises);\r\n\r\n        cipher.organizationId = organizationId;\r\n        cipher.collectionIds = collectionIds;\r\n        const encCipher = await this.encrypt(cipher);\r\n        const request = new CipherShareRequest(encCipher);\r\n        const response = await this.apiService.putShareCipher(cipher.id, request);\r\n        const userId = await this.userService.getUserId();\r\n        const data = new CipherData(response, userId, collectionIds);\r\n        await this.upsert(data);\r\n    }\r\n\r\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\r\n        const promises: Promise<any>[] = [];\r\n        const encCiphers: Cipher[] = [];\r\n        for (const cipher of ciphers) {\r\n            cipher.organizationId = organizationId;\r\n            cipher.collectionIds = collectionIds;\r\n            promises.push(this.encrypt(cipher).then((c) => {\r\n                encCiphers.push(c);\r\n            }));\r\n        }\r\n        await Promise.all(promises);\r\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\r\n        await this.apiService.putShareCiphers(request);\r\n        const userId = await this.userService.getUserId();\r\n        await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\r\n    }\r\n\r\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(unencryptedFile);\r\n            reader.onload = async (evt: any) => {\r\n                try {\r\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\r\n                        unencryptedFile.name, evt.target.result, admin);\r\n                    resolve(cData);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.onerror = (evt) => {\r\n                reject('Error reading file.');\r\n            };\r\n        });\r\n    }\r\n\r\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\r\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\r\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\r\n        const encFileName = await this.cryptoService.encrypt(filename, key);\r\n\r\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\r\n        const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\r\n\r\n        const fd = new FormData();\r\n        try {\r\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\r\n            fd.append('key', dataEncKey[1].encryptedString);\r\n            fd.append('data', blob, encFileName.encryptedString);\r\n        } catch (e) {\r\n            if (Utils.isNode && !Utils.isBrowser) {\r\n                fd.append('key', dataEncKey[1].encryptedString);\r\n                fd.append('data', Buffer.from(encData) as any, {\r\n                    filepath: encFileName.encryptedString,\r\n                    contentType: 'application/octet-stream',\r\n                } as any);\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        let response: CipherResponse;\r\n        try {\r\n            if (admin) {\r\n                response = await this.apiService.postCipherAttachmentAdmin(cipher.id, fd);\r\n            } else {\r\n                response = await this.apiService.postCipherAttachment(cipher.id, fd);\r\n            }\r\n        } catch (e) {\r\n            throw new Error((e as ErrorResponse).getSingleMessage());\r\n        }\r\n\r\n        const userId = await this.userService.getUserId();\r\n        const cData = new CipherData(response, userId, cipher.collectionIds);\r\n        if (!admin) {\r\n            await this.upsert(cData);\r\n        }\r\n        return new Cipher(cData);\r\n    }\r\n\r\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\r\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\r\n        await this.apiService.putCipherCollections(cipher.id, request);\r\n        const userId = await this.userService.getUserId();\r\n        const data = cipher.toCipherData(userId);\r\n        await this.upsert(data);\r\n    }\r\n\r\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n        if (ciphers == null) {\r\n            ciphers = {};\r\n        }\r\n\r\n        if (cipher instanceof CipherData) {\r\n            const c = cipher as CipherData;\r\n            ciphers[c.id] = c;\r\n        } else {\r\n            (cipher as CipherData[]).forEach((c) => {\r\n                ciphers[c.id] = c;\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\r\n        this.decryptedCipherCache = null;\r\n    }\r\n\r\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\r\n        this.decryptedCipherCache = null;\r\n    }\r\n\r\n    async clear(userId: string): Promise<any> {\r\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\r\n        this.clearCache();\r\n    }\r\n\r\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\r\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\r\n\r\n        const userId = await this.userService.getUserId();\r\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n        if (ciphers == null) {\r\n            ciphers = {};\r\n        }\r\n\r\n        ids.forEach((id) => {\r\n            if (ciphers.hasOwnProperty(id)) {\r\n                ciphers[id].folderId = folderId;\r\n            }\r\n        });\r\n\r\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\r\n        this.decryptedCipherCache = null;\r\n    }\r\n\r\n    async delete(id: string | string[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n        if (ciphers == null) {\r\n            return;\r\n        }\r\n\r\n        if (typeof id === 'string') {\r\n            if (ciphers[id] == null) {\r\n                return;\r\n            }\r\n            delete ciphers[id];\r\n        } else {\r\n            (id as string[]).forEach((i) => {\r\n                delete ciphers[i];\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\r\n        this.decryptedCipherCache = null;\r\n    }\r\n\r\n    async deleteWithServer(id: string): Promise<any> {\r\n        await this.apiService.deleteCipher(id);\r\n        await this.delete(id);\r\n    }\r\n\r\n    async deleteManyWithServer(ids: string[]): Promise<any> {\r\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\r\n        await this.delete(ids);\r\n    }\r\n\r\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\r\n        const userId = await this.userService.getUserId();\r\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n\r\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\r\n            if (ciphers[id].attachments[i].id === attachmentId) {\r\n                ciphers[id].attachments.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\r\n        this.decryptedCipherCache = null;\r\n    }\r\n\r\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\r\n        try {\r\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\r\n        } catch (e) {\r\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\r\n        }\r\n        await this.deleteAttachment(id, attachmentId);\r\n    }\r\n\r\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\r\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\r\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\r\n\r\n        const bothNotNull = aLastUsed != null && bLastUsed != null;\r\n        if (bothNotNull && aLastUsed < bLastUsed) {\r\n            return 1;\r\n        }\r\n        if (aLastUsed != null && bLastUsed == null) {\r\n            return -1;\r\n        }\r\n\r\n        if (bothNotNull && aLastUsed > bLastUsed) {\r\n            return -1;\r\n        }\r\n        if (bLastUsed != null && aLastUsed == null) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\r\n        const result = this.sortCiphersByLastUsed(a, b);\r\n        if (result !== 0) {\r\n            return result;\r\n        }\r\n\r\n        return this.getLocaleSortingFunction()(a, b);\r\n    }\r\n\r\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\r\n        return (a, b) => {\r\n            let aName = a.name;\r\n            let bName = b.name;\r\n\r\n            if (aName == null && bName != null) {\r\n                return -1;\r\n            }\r\n            if (aName != null && bName == null) {\r\n                return 1;\r\n            }\r\n            if (aName == null && bName == null) {\r\n                return 0;\r\n            }\r\n\r\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\r\n                aName.localeCompare(bName);\r\n\r\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\r\n                return result;\r\n            }\r\n\r\n            if (a.login.username != null) {\r\n                aName += a.login.username;\r\n            }\r\n\r\n            if (b.login.username != null) {\r\n                bName += b.login.username;\r\n            }\r\n\r\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\r\n                aName.localeCompare(bName);\r\n        };\r\n    }\r\n\r\n    async softDelete(id: string | string[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n        if (ciphers == null) {\r\n            return;\r\n        }\r\n\r\n        const setDeletedDate = (cipherId: string) => {\r\n            if (ciphers[cipherId] == null) {\r\n                return;\r\n            }\r\n            ciphers[cipherId].deletedDate = new Date().toISOString();\r\n        };\r\n\r\n        if (typeof id === 'string') {\r\n            setDeletedDate(id);\r\n        } else {\r\n            (id as string[]).forEach(setDeletedDate);\r\n        }\r\n\r\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\r\n        this.decryptedCipherCache = null;\r\n    }\r\n\r\n    async softDeleteWithServer(id: string): Promise<any> {\r\n        await this.apiService.putDeleteCipher(id);\r\n        await this.softDelete(id);\r\n    }\r\n\r\n    async softDeleteManyWithServer(ids: string[]): Promise<any> {\r\n        await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\r\n        await this.softDelete(ids);\r\n    }\r\n\r\n    async restore(id: string | string[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\r\n            Keys.ciphersPrefix + userId);\r\n        if (ciphers == null) {\r\n            return;\r\n        }\r\n\r\n        const clearDeletedDate = (cipherId: string) => {\r\n            if (ciphers[cipherId] == null) {\r\n                return;\r\n            }\r\n            ciphers[cipherId].deletedDate = null;\r\n        };\r\n\r\n        if (typeof id === 'string') {\r\n            clearDeletedDate(id);\r\n        } else {\r\n            (id as string[]).forEach(clearDeletedDate);\r\n        }\r\n\r\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\r\n        this.decryptedCipherCache = null;\r\n    }\r\n\r\n    async restoreWithServer(id: string): Promise<any> {\r\n        await this.apiService.putRestoreCipher(id);\r\n        await this.restore(id);\r\n    }\r\n\r\n    async restoreManyWithServer(ids: string[]): Promise<any> {\r\n        await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\r\n        await this.restore(ids);\r\n    }\r\n\r\n    // Helpers\r\n\r\n    private async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\r\n        organizationId: string): Promise<any> {\r\n        const attachmentResponse = await this.apiService.nativeFetch(\r\n            new Request(attachmentView.url, { cache: 'no-store' }));\r\n        if (attachmentResponse.status !== 200) {\r\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\r\n        }\r\n\r\n        const buf = await attachmentResponse.arrayBuffer();\r\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\r\n        const key = await this.cryptoService.getOrgKey(organizationId);\r\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\r\n\r\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\r\n        const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\r\n\r\n        const fd = new FormData();\r\n        try {\r\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\r\n            fd.append('key', dataEncKey[1].encryptedString);\r\n            fd.append('data', blob, encFileName.encryptedString);\r\n        } catch (e) {\r\n            if (Utils.isNode && !Utils.isBrowser) {\r\n                fd.append('key', dataEncKey[1].encryptedString);\r\n                fd.append('data', Buffer.from(encData) as any, {\r\n                    filepath: encFileName.encryptedString,\r\n                    contentType: 'application/octet-stream',\r\n                } as any);\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd, organizationId);\r\n        } catch (e) {\r\n            throw new Error((e as ErrorResponse).getSingleMessage());\r\n        }\r\n    }\r\n\r\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\r\n        map: any, key: SymmetricCryptoKey): Promise<void> {\r\n        const promises = [];\r\n        const self = this;\r\n\r\n        for (const prop in map) {\r\n            if (!map.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n\r\n            // tslint:disable-next-line\r\n            (function (theProp, theObj) {\r\n                const p = Promise.resolve().then(() => {\r\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\r\n                    if (modelProp && modelProp !== '') {\r\n                        return self.cryptoService.encrypt(modelProp, key);\r\n                    }\r\n                    return null;\r\n                }).then((val: CipherString) => {\r\n                    (theObj as any)[theProp] = val;\r\n                });\r\n                promises.push(p);\r\n            })(prop, obj);\r\n        }\r\n\r\n        await Promise.all(promises);\r\n    }\r\n\r\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\r\n        switch (cipher.type) {\r\n            case CipherType.Login:\r\n                cipher.login = new Login();\r\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\r\n                await this.encryptObjProperty(model.login, cipher.login, {\r\n                    username: null,\r\n                    password: null,\r\n                    totp: null,\r\n                }, key);\r\n\r\n                if (model.login.uris != null) {\r\n                    cipher.login.uris = [];\r\n                    for (let i = 0; i < model.login.uris.length; i++) {\r\n                        const loginUri = new LoginUri();\r\n                        loginUri.match = model.login.uris[i].match;\r\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\r\n                            uri: null,\r\n                        }, key);\r\n                        cipher.login.uris.push(loginUri);\r\n                    }\r\n                }\r\n                return;\r\n            case CipherType.SecureNote:\r\n                cipher.secureNote = new SecureNote();\r\n                cipher.secureNote.type = model.secureNote.type;\r\n                return;\r\n            case CipherType.Card:\r\n                cipher.card = new Card();\r\n                await this.encryptObjProperty(model.card, cipher.card, {\r\n                    cardholderName: null,\r\n                    brand: null,\r\n                    number: null,\r\n                    expMonth: null,\r\n                    expYear: null,\r\n                    code: null,\r\n                }, key);\r\n                return;\r\n            case CipherType.Identity:\r\n                cipher.identity = new Identity();\r\n                await this.encryptObjProperty(model.identity, cipher.identity, {\r\n                    title: null,\r\n                    firstName: null,\r\n                    middleName: null,\r\n                    lastName: null,\r\n                    address1: null,\r\n                    address2: null,\r\n                    address3: null,\r\n                    city: null,\r\n                    state: null,\r\n                    postalCode: null,\r\n                    country: null,\r\n                    company: null,\r\n                    email: null,\r\n                    phone: null,\r\n                    ssn: null,\r\n                    username: null,\r\n                    passportNumber: null,\r\n                    licenseNumber: null,\r\n                }, key);\r\n                return;\r\n            default:\r\n                throw new Error('Unknown cipher type.');\r\n        }\r\n    }\r\n\r\n    private async getCipherForUrl(url: string, lastUsed: boolean, lastLaunched: boolean): Promise<CipherView> {\r\n        if (!this.sortedCiphersCache.isCached(url)) {\r\n            const ciphers = await this.getAllDecryptedForUrl(url);\r\n            if (!ciphers) {\r\n                return null;\r\n            }\r\n            this.sortedCiphersCache.addCiphers(url, ciphers);\r\n        }\r\n\r\n        if (lastLaunched) {\r\n            return this.sortedCiphersCache.getLastLaunched(url);\r\n        } else if (lastUsed) {\r\n            return this.sortedCiphersCache.getLastUsed(url);\r\n        } else {\r\n            return this.sortedCiphersCache.getNext(url);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\r\n *\r\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\r\n * be returned, instead of calling the original function again\r\n *\r\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\r\n *\r\n * Read more at https://github.com/bitwarden/jslib/pull/7\r\n */\r\nexport function sequentialize(cacheKey: (args: any[]) => string) {\r\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\r\n        const originalMethod: () => Promise<any> = descriptor.value;\r\n        const caches = new Map<any, Map<string, Promise<any>>>();\r\n\r\n        const getCache = (obj: any) => {\r\n            let cache = caches.get(obj);\r\n            if (cache != null) {\r\n                return cache;\r\n            }\r\n            cache = new Map<string, Promise<any>>();\r\n            caches.set(obj, cache);\r\n            return cache;\r\n        };\r\n\r\n        return {\r\n            value: function(...args: any[]) {\r\n                const cache = getCache(this);\r\n                const argsCacheKey = cacheKey(args);\r\n                let response = cache.get(argsCacheKey);\r\n                if (response != null) {\r\n                    return response;\r\n                }\r\n\r\n                const onFinally = () => {\r\n                    cache.delete(argsCacheKey);\r\n                    if (cache.size === 0) {\r\n                        caches.delete(this);\r\n                    }\r\n                };\r\n                response = originalMethod.apply(this, args).then((val: any) => {\r\n                    onFinally();\r\n                    return val;\r\n                }).catch((err: any) => {\r\n                    onFinally();\r\n                    throw err;\r\n                });\r\n\r\n                cache.set(argsCacheKey, response);\r\n                return response;\r\n            },\r\n        };\r\n    };\r\n}\r\n","import { CollectionData } from '../models/data/collectionData';\r\n\r\nimport { Collection } from '../models/domain/collection';\r\nimport { TreeNode } from '../models/domain/treeNode';\r\n\r\nimport { CollectionView } from '../models/view/collectionView';\r\n\r\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport { I18nService } from '../abstractions/i18n.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { UserService } from '../abstractions/user.service';\r\n\r\nimport { ServiceUtils } from '../misc/serviceUtils';\r\nimport { Utils } from '../misc/utils';\r\n\r\nconst Keys = {\r\n    collectionsPrefix: 'collections_',\r\n};\r\nconst NestingDelimiter = '/';\r\n\r\nexport class CollectionService implements CollectionServiceAbstraction {\r\n    decryptedCollectionCache: CollectionView[];\r\n\r\n    constructor(private cryptoService: CryptoService, private userService: UserService,\r\n        private storageService: StorageService, private i18nService: I18nService) {\r\n    }\r\n\r\n    clearCache(): void {\r\n        this.decryptedCollectionCache = null;\r\n    }\r\n\r\n    async encrypt(model: CollectionView): Promise<Collection> {\r\n        if (model.organizationId == null) {\r\n            throw new Error('Collection has no organization id.');\r\n        }\r\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\r\n        if (key == null) {\r\n            throw new Error('No key for this collection\\'s organization.');\r\n        }\r\n        const collection = new Collection();\r\n        collection.id = model.id;\r\n        collection.organizationId = model.organizationId;\r\n        collection.readOnly = model.readOnly;\r\n        collection.name = await this.cryptoService.encrypt(model.name, key);\r\n        return collection;\r\n    }\r\n\r\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\r\n        if (collections == null) {\r\n            return [];\r\n        }\r\n        const decCollections: CollectionView[] = [];\r\n        const promises: Promise<any>[] = [];\r\n        collections.forEach((collection) => {\r\n            promises.push(collection.decrypt().then((c) => decCollections.push(c)));\r\n        });\r\n        await Promise.all(promises);\r\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\r\n    }\r\n\r\n    async get(id: string): Promise<Collection> {\r\n        const userId = await this.userService.getUserId();\r\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\r\n            Keys.collectionsPrefix + userId);\r\n        if (collections == null || !collections.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        return new Collection(collections[id]);\r\n    }\r\n\r\n    async getAll(): Promise<Collection[]> {\r\n        const userId = await this.userService.getUserId();\r\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\r\n            Keys.collectionsPrefix + userId);\r\n        const response: Collection[] = [];\r\n        for (const id in collections) {\r\n            if (collections.hasOwnProperty(id)) {\r\n                response.push(new Collection(collections[id]));\r\n            }\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getAllDecrypted(): Promise<CollectionView[]> {\r\n        if (this.decryptedCollectionCache != null) {\r\n            return this.decryptedCollectionCache;\r\n        }\r\n\r\n        const hasKey = await this.cryptoService.hasKey();\r\n        if (!hasKey) {\r\n            throw new Error('No key.');\r\n        }\r\n\r\n        const collections = await this.getAll();\r\n        this.decryptedCollectionCache = await this.decryptMany(collections);\r\n        return this.decryptedCollectionCache;\r\n    }\r\n\r\n    async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\r\n        if (collections == null) {\r\n            collections = await this.getAllDecrypted();\r\n        }\r\n        const nodes: TreeNode<CollectionView>[] = [];\r\n        collections.forEach((c) => {\r\n            const collectionCopy = new CollectionView();\r\n            collectionCopy.id = c.id;\r\n            collectionCopy.organizationId = c.organizationId;\r\n            const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\r\n            ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\r\n        });\r\n        return nodes;\r\n    }\r\n\r\n    async getNested(id: string): Promise<TreeNode<CollectionView>> {\r\n        const collections = await this.getAllNested();\r\n        return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\r\n    }\r\n\r\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\r\n            Keys.collectionsPrefix + userId);\r\n        if (collections == null) {\r\n            collections = {};\r\n        }\r\n\r\n        if (collection instanceof CollectionData) {\r\n            const c = collection as CollectionData;\r\n            collections[c.id] = c;\r\n        } else {\r\n            (collection as CollectionData[]).forEach((c) => {\r\n                collections[c.id] = c;\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\r\n        this.decryptedCollectionCache = null;\r\n    }\r\n\r\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\r\n        this.decryptedCollectionCache = null;\r\n    }\r\n\r\n    async clear(userId: string): Promise<any> {\r\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\r\n        this.decryptedCollectionCache = null;\r\n    }\r\n\r\n    async delete(id: string | string[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\r\n            Keys.collectionsPrefix + userId);\r\n        if (collections == null) {\r\n            return;\r\n        }\r\n\r\n        if (typeof id === 'string') {\r\n            const i = id as string;\r\n            delete collections[id];\r\n        } else {\r\n            (id as string[]).forEach((i) => {\r\n                delete collections[i];\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\r\n        this.decryptedCollectionCache = null;\r\n    }\r\n}\r\n","import {\r\n    ITreeNodeObject,\r\n    TreeNode,\r\n} from '../models/domain/treeNode';\r\n\r\nexport class ServiceUtils {\r\n    static nestedTraverse(nodeTree: TreeNode<ITreeNodeObject>[], partIndex: number, parts: string[],\r\n        obj: ITreeNodeObject, parent: ITreeNodeObject, delimiter: string) {\r\n        if (parts.length <= partIndex) {\r\n            return;\r\n        }\r\n\r\n        const end = partIndex === parts.length - 1;\r\n        const partName = parts[partIndex];\r\n\r\n        for (let i = 0; i < nodeTree.length; i++) {\r\n            if (nodeTree[i].node.name !== parts[partIndex]) {\r\n                continue;\r\n            }\r\n            if (end && nodeTree[i].node.id !== obj.id) {\r\n                // Another node with the same name.\r\n                nodeTree.push(new TreeNode(obj, partName, parent));\r\n                return;\r\n            }\r\n            ServiceUtils.nestedTraverse(nodeTree[i].children, partIndex + 1, parts,\r\n                obj, nodeTree[i].node, delimiter);\r\n            return;\r\n        }\r\n\r\n        if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\r\n            if (end) {\r\n                nodeTree.push(new TreeNode(obj, partName, parent));\r\n                return;\r\n            }\r\n            const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\r\n            ServiceUtils.nestedTraverse(nodeTree, 0, [newPartName, ...parts.slice(partIndex + 2)],\r\n                obj, parent, delimiter);\r\n        }\r\n    }\r\n\r\n    static getTreeNodeObject(nodeTree: TreeNode<ITreeNodeObject>[], id: string): TreeNode<ITreeNodeObject> {\r\n        for (let i = 0; i < nodeTree.length; i++) {\r\n            if (nodeTree[i].node.id === id) {\r\n                return nodeTree[i];\r\n            } else if (nodeTree[i].children != null) {\r\n                const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\r\n                if (node !== null) {\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { CryptoService } from '../abstractions/crypto.service';\r\n\r\nexport class ContainerService {\r\n    constructor(private cryptoService: CryptoService) {\r\n    }\r\n\r\n    // deprecated, use attachToGlobal instead\r\n    attachToWindow(win: any) {\r\n        this.attachToGlobal(win);\r\n    }\r\n\r\n    attachToGlobal(global: any) {\r\n        if (!global.bitwardenContainerService) {\r\n            global.bitwardenContainerService = this;\r\n        }\r\n    }\r\n\r\n    getCryptoService(): CryptoService {\r\n        return this.cryptoService;\r\n    }\r\n}\r\n","import * as bigInt from 'big-integer';\r\n\r\nimport { EncryptionType } from '../enums/encryptionType';\r\nimport { KdfType } from '../enums/kdfType';\r\n\r\nimport { CipherString } from '../models/domain/cipherString';\r\nimport { EncryptedObject } from '../models/domain/encryptedObject';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\r\n\r\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\r\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\r\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\n\r\nimport { ConstantsService } from './constants.service';\r\n\r\nimport { sequentialize } from '../misc/sequentialize';\r\nimport { Utils } from '../misc/utils';\r\nimport { EEFLongWordList } from '../misc/wordlist';\r\n\r\nconst Keys = {\r\n    key: 'key', // Master Key\r\n    encOrgKeys: 'encOrgKeys',\r\n    encPrivateKey: 'encPrivateKey',\r\n    encKey: 'encKey', // Generated Symmetric Key\r\n    keyHash: 'keyHash',\r\n};\r\n\r\nexport class CryptoService implements CryptoServiceAbstraction {\r\n    private key: SymmetricCryptoKey;\r\n    private encKey: SymmetricCryptoKey;\r\n    private legacyEtmKey: SymmetricCryptoKey;\r\n    private keyHash: string;\r\n    private publicKey: ArrayBuffer;\r\n    private privateKey: ArrayBuffer;\r\n    private orgKeys: Map<string, SymmetricCryptoKey>;\r\n\r\n    constructor(private storageService: StorageService, private secureStorageService: StorageService,\r\n        private cryptoFunctionService: CryptoFunctionService, private platformUtilService: PlatformUtilsService) { }\r\n\r\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\r\n        this.key = key;\r\n\r\n        const option = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\r\n        const biometric = await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\r\n        if (option != null && !(biometric && this.platformUtilService.supportsSecureStorage())) {\r\n            // if we have a lock option set, we do not store the key\r\n            return;\r\n        }\r\n\r\n        return this.secureStorageService.save(Keys.key, key.keyB64);\r\n    }\r\n\r\n    setKeyHash(keyHash: string): Promise<{}> {\r\n        this.keyHash = keyHash;\r\n        return this.storageService.save(Keys.keyHash, keyHash);\r\n    }\r\n\r\n    async setEncKey(encKey: string): Promise<{}> {\r\n        if (encKey == null) {\r\n            return;\r\n        }\r\n\r\n        await this.storageService.save(Keys.encKey, encKey);\r\n        this.encKey = null;\r\n    }\r\n\r\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\r\n        if (encPrivateKey == null) {\r\n            return;\r\n        }\r\n\r\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\r\n        this.privateKey = null;\r\n    }\r\n\r\n    setOrgKeys(orgs: ProfileOrganizationResponse[]): Promise<{}> {\r\n        const orgKeys: any = {};\r\n        orgs.forEach((org) => {\r\n            orgKeys[org.id] = org.key;\r\n        });\r\n\r\n        this.orgKeys = null;\r\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\r\n    }\r\n\r\n    async getKey(): Promise<SymmetricCryptoKey> {\r\n        if (this.key != null) {\r\n            return this.key;\r\n        }\r\n\r\n        const key = await this.secureStorageService.get<string>(Keys.key);\r\n        if (key != null) {\r\n            this.key = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\r\n        }\r\n\r\n        return key == null ? null : this.key;\r\n    }\r\n\r\n    async getKeyHash(): Promise<string> {\r\n        if (this.keyHash != null) {\r\n            return this.keyHash;\r\n        }\r\n\r\n        const keyHash = await this.storageService.get<string>(Keys.keyHash);\r\n        if (keyHash != null) {\r\n            this.keyHash = keyHash;\r\n        }\r\n\r\n        return keyHash == null ? null : this.keyHash;\r\n    }\r\n\r\n    @sequentialize(() => 'getEncKey')\r\n    async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\r\n        if (this.encKey != null) {\r\n            return this.encKey;\r\n        }\r\n\r\n        const encKey = await this.storageService.get<string>(Keys.encKey);\r\n        if (encKey == null) {\r\n            return null;\r\n        }\r\n\r\n        if (key == null) {\r\n            key = await this.getKey();\r\n        }\r\n        if (key == null) {\r\n            return null;\r\n        }\r\n\r\n        let decEncKey: ArrayBuffer;\r\n        const encKeyCipher = new CipherString(encKey);\r\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\r\n            decEncKey = await this.decryptToBytes(encKeyCipher, key);\r\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\r\n            const newKey = await this.stretchKey(key);\r\n            decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\r\n        } else {\r\n            throw new Error('Unsupported encKey type.');\r\n        }\r\n\r\n        if (decEncKey == null) {\r\n            return null;\r\n        }\r\n        this.encKey = new SymmetricCryptoKey(decEncKey);\r\n        return this.encKey;\r\n    }\r\n\r\n    async getPublicKey(): Promise<ArrayBuffer> {\r\n        if (this.publicKey != null) {\r\n            return this.publicKey;\r\n        }\r\n\r\n        const privateKey = await this.getPrivateKey();\r\n        if (privateKey == null) {\r\n            return null;\r\n        }\r\n\r\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\r\n        return this.publicKey;\r\n    }\r\n\r\n    async getPrivateKey(): Promise<ArrayBuffer> {\r\n        if (this.privateKey != null) {\r\n            return this.privateKey;\r\n        }\r\n\r\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\r\n        if (encPrivateKey == null) {\r\n            return null;\r\n        }\r\n\r\n        this.privateKey = await this.decryptToBytes(new CipherString(encPrivateKey), null);\r\n        return this.privateKey;\r\n    }\r\n\r\n    async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\r\n        if (publicKey == null) {\r\n            publicKey = await this.getPublicKey();\r\n        }\r\n        if (publicKey === null) {\r\n            throw new Error('No public key available.');\r\n        }\r\n        const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, 'sha256');\r\n        const userFingerprint = await this.cryptoFunctionService.hkdfExpand(keyFingerprint, userId, 32, 'sha256');\r\n        return this.hashPhrase(userFingerprint);\r\n    }\r\n\r\n    @sequentialize(() => 'getOrgKeys')\r\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\r\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\r\n            return this.orgKeys;\r\n        }\r\n\r\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\r\n        if (encOrgKeys == null) {\r\n            return null;\r\n        }\r\n\r\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\r\n        let setKey = false;\r\n\r\n        for (const orgId in encOrgKeys) {\r\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\r\n                continue;\r\n            }\r\n\r\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\r\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\r\n            setKey = true;\r\n        }\r\n\r\n        if (setKey) {\r\n            this.orgKeys = orgKeys;\r\n        }\r\n\r\n        return this.orgKeys;\r\n    }\r\n\r\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\r\n        if (orgId == null) {\r\n            return null;\r\n        }\r\n\r\n        const orgKeys = await this.getOrgKeys();\r\n        if (orgKeys == null || !orgKeys.has(orgId)) {\r\n            return null;\r\n        }\r\n\r\n        return orgKeys.get(orgId);\r\n    }\r\n\r\n    async hasKey(): Promise<boolean> {\r\n        return (await this.getKey()) != null;\r\n    }\r\n\r\n    async hasEncKey(): Promise<boolean> {\r\n        const encKey = await this.storageService.get<string>(Keys.encKey);\r\n        return encKey != null;\r\n    }\r\n\r\n    clearKey(): Promise<any> {\r\n        this.key = this.legacyEtmKey = null;\r\n        return this.secureStorageService.remove(Keys.key);\r\n    }\r\n\r\n    clearKeyHash(): Promise<any> {\r\n        this.keyHash = null;\r\n        return this.storageService.remove(Keys.keyHash);\r\n    }\r\n\r\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\r\n        this.encKey = null;\r\n        if (memoryOnly) {\r\n            return Promise.resolve();\r\n        }\r\n        return this.storageService.remove(Keys.encKey);\r\n    }\r\n\r\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\r\n        this.privateKey = null;\r\n        this.publicKey = null;\r\n        if (memoryOnly) {\r\n            return Promise.resolve();\r\n        }\r\n        return this.storageService.remove(Keys.encPrivateKey);\r\n    }\r\n\r\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\r\n        this.orgKeys = null;\r\n        if (memoryOnly) {\r\n            return Promise.resolve();\r\n        }\r\n        return this.storageService.remove(Keys.encOrgKeys);\r\n    }\r\n\r\n    clearPinProtectedKey(): Promise<any> {\r\n        return this.storageService.remove(ConstantsService.pinProtectedKey);\r\n    }\r\n\r\n    clearKeys(): Promise<any> {\r\n        return Promise.all([\r\n            this.clearKey(),\r\n            this.clearKeyHash(),\r\n            this.clearOrgKeys(),\r\n            this.clearEncKey(),\r\n            this.clearKeyPair(),\r\n            this.clearPinProtectedKey(),\r\n        ]);\r\n    }\r\n\r\n    async toggleKey(): Promise<any> {\r\n        const key = await this.getKey();\r\n        const option = await this.storageService.get(ConstantsService.vaultTimeoutKey);\r\n        const biometric = await this.storageService.get(ConstantsService.biometricUnlockKey);\r\n        if ((!biometric && this.platformUtilService.supportsSecureStorage()) && (option != null || option === 0)) {\r\n            // if we have a lock option set, clear the key\r\n            await this.clearKey();\r\n            this.key = key;\r\n            return;\r\n        }\r\n\r\n        await this.setKey(key);\r\n    }\r\n\r\n    async makeKey(password: string, salt: string, kdf: KdfType, kdfIterations: number):\r\n        Promise<SymmetricCryptoKey> {\r\n        let key: ArrayBuffer = null;\r\n        if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\r\n            if (kdfIterations == null) {\r\n                kdfIterations = 5000;\r\n            } else if (kdfIterations < 5000) {\r\n                throw new Error('PBKDF2 iteration minimum is 5000.');\r\n            }\r\n            key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', kdfIterations);\r\n        } else {\r\n            throw new Error('Unknown Kdf.');\r\n        }\r\n        return new SymmetricCryptoKey(key);\r\n    }\r\n\r\n    async makeKeyFromPin(pin: string, salt: string, kdf: KdfType, kdfIterations: number,\r\n        protectedKeyCs: CipherString = null):\r\n        Promise<SymmetricCryptoKey> {\r\n        if (protectedKeyCs == null) {\r\n            const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\r\n            if (pinProtectedKey == null) {\r\n                throw new Error('No PIN protected key found.');\r\n            }\r\n            protectedKeyCs = new CipherString(pinProtectedKey);\r\n        }\r\n        const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\r\n        const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\r\n        return new SymmetricCryptoKey(decKey);\r\n    }\r\n\r\n    async makeShareKey(): Promise<[CipherString, SymmetricCryptoKey]> {\r\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\r\n        const publicKey = await this.getPublicKey();\r\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\r\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\r\n    }\r\n\r\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, CipherString]> {\r\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\r\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\r\n        const privateEnc = await this.encrypt(keyPair[1], key);\r\n        return [publicB64, privateEnc];\r\n    }\r\n\r\n    async makePinKey(pin: string, salt: string, kdf: KdfType, kdfIterations: number): Promise<SymmetricCryptoKey> {\r\n        const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\r\n        return await this.stretchKey(pinKey);\r\n    }\r\n\r\n    async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\r\n        const sendKey = await this.cryptoFunctionService.hkdf(keyMaterial, 'bitwarden-send', 'send', 64, 'sha256');\r\n        return new SymmetricCryptoKey(sendKey);\r\n    }\r\n\r\n    async hashPassword(password: string, key: SymmetricCryptoKey): Promise<string> {\r\n        if (key == null) {\r\n            key = await this.getKey();\r\n        }\r\n        if (password == null || key == null) {\r\n            throw new Error('Invalid parameters.');\r\n        }\r\n\r\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', 1);\r\n        return Utils.fromBufferToB64(hash);\r\n    }\r\n\r\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, CipherString]> {\r\n        const theKey = await this.getKeyForEncryption(key);\r\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\r\n        return this.buildEncKey(theKey, encKey);\r\n    }\r\n\r\n    async remakeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, CipherString]> {\r\n        const encKey = await this.getEncKey();\r\n        return this.buildEncKey(key, encKey.key);\r\n    }\r\n\r\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<CipherString> {\r\n        if (plainValue == null) {\r\n            return Promise.resolve(null);\r\n        }\r\n\r\n        let plainBuf: ArrayBuffer;\r\n        if (typeof (plainValue) === 'string') {\r\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\r\n        } else {\r\n            plainBuf = plainValue;\r\n        }\r\n\r\n        const encObj = await this.aesEncrypt(plainBuf, key);\r\n        const iv = Utils.fromBufferToB64(encObj.iv);\r\n        const data = Utils.fromBufferToB64(encObj.data);\r\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\r\n        return new CipherString(encObj.key.encType, data, iv, mac);\r\n    }\r\n\r\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\r\n        const encValue = await this.aesEncrypt(plainValue, key);\r\n        let macLen = 0;\r\n        if (encValue.mac != null) {\r\n            macLen = encValue.mac.byteLength;\r\n        }\r\n\r\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\r\n        encBytes.set([encValue.key.encType]);\r\n        encBytes.set(new Uint8Array(encValue.iv), 1);\r\n        if (encValue.mac != null) {\r\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\r\n        }\r\n\r\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\r\n        return encBytes.buffer;\r\n    }\r\n\r\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<CipherString> {\r\n        if (publicKey == null) {\r\n            publicKey = await this.getPublicKey();\r\n        }\r\n        if (publicKey == null) {\r\n            throw new Error('Public key unavailable.');\r\n        }\r\n\r\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\r\n        return new CipherString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\r\n    }\r\n\r\n    async decryptToBytes(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\r\n        const iv = Utils.fromB64ToArray(cipherString.iv).buffer;\r\n        const data = Utils.fromB64ToArray(cipherString.data).buffer;\r\n        const mac = cipherString.mac ? Utils.fromB64ToArray(cipherString.mac).buffer : null;\r\n        const decipher = await this.aesDecryptToBytes(cipherString.encryptionType, data, iv, mac, key);\r\n        if (decipher == null) {\r\n            return null;\r\n        }\r\n\r\n        return decipher;\r\n    }\r\n\r\n    async decryptToUtf8(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<string> {\r\n        return await this.aesDecryptToUtf8(cipherString.encryptionType, cipherString.data,\r\n            cipherString.iv, cipherString.mac, key);\r\n    }\r\n\r\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\r\n        if (encBuf == null) {\r\n            throw new Error('no encBuf.');\r\n        }\r\n\r\n        const encBytes = new Uint8Array(encBuf);\r\n        const encType = encBytes[0];\r\n        let ctBytes: Uint8Array = null;\r\n        let ivBytes: Uint8Array = null;\r\n        let macBytes: Uint8Array = null;\r\n\r\n        switch (encType) {\r\n            case EncryptionType.AesCbc128_HmacSha256_B64:\r\n            case EncryptionType.AesCbc256_HmacSha256_B64:\r\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\r\n                    return null;\r\n                }\r\n\r\n                ivBytes = encBytes.slice(1, 17);\r\n                macBytes = encBytes.slice(17, 49);\r\n                ctBytes = encBytes.slice(49);\r\n                break;\r\n            case EncryptionType.AesCbc256_B64:\r\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\r\n                    return null;\r\n                }\r\n\r\n                ivBytes = encBytes.slice(1, 17);\r\n                ctBytes = encBytes.slice(17);\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n\r\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\r\n            macBytes != null ? macBytes.buffer : null, key);\r\n    }\r\n\r\n    // EFForg/OpenWireless\r\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\r\n    async randomNumber(min: number, max: number): Promise<number> {\r\n        let rval = 0;\r\n        const range = max - min + 1;\r\n        const bitsNeeded = Math.ceil(Math.log2(range));\r\n        if (bitsNeeded > 53) {\r\n            throw new Error('We cannot generate numbers larger than 53 bits.');\r\n        }\r\n\r\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\r\n        const mask = Math.pow(2, bitsNeeded) - 1;\r\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\r\n\r\n        // Fill a byte array with N random numbers\r\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\r\n\r\n        let p = (bytesNeeded - 1) * 8;\r\n        for (let i = 0; i < bytesNeeded; i++) {\r\n            rval += byteArray[i] * Math.pow(2, p);\r\n            p -= 8;\r\n        }\r\n\r\n        // Use & to apply the mask and reduce the number of recursive lookups\r\n        // tslint:disable-next-line\r\n        rval = rval & mask;\r\n\r\n        if (rval >= range) {\r\n            // Integer out of acceptable range\r\n            return this.randomNumber(min, max);\r\n        }\r\n\r\n        // Return an integer that falls within the range\r\n        return min + rval;\r\n    }\r\n\r\n    // Helpers\r\n\r\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\r\n        const obj = new EncryptedObject();\r\n        obj.key = await this.getKeyForEncryption(key);\r\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\r\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\r\n\r\n        if (obj.key.macKey != null) {\r\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\r\n            macData.set(new Uint8Array(obj.iv), 0);\r\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\r\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\r\n        key: SymmetricCryptoKey): Promise<string> {\r\n        const keyForEnc = await this.getKeyForEncryption(key);\r\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\r\n\r\n        if (theKey.macKey != null && mac == null) {\r\n            // tslint:disable-next-line\r\n            console.error('mac required.');\r\n            return null;\r\n        }\r\n\r\n        if (theKey.encType !== encType) {\r\n            // tslint:disable-next-line\r\n            console.error('encType unavailable.');\r\n            return null;\r\n        }\r\n\r\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\r\n        if (fastParams.macKey != null && fastParams.mac != null) {\r\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\r\n                fastParams.macKey, 'sha256');\r\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\r\n            if (!macsEqual) {\r\n                // tslint:disable-next-line\r\n                console.error('mac failed.');\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\r\n    }\r\n\r\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\r\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\r\n        const keyForEnc = await this.getKeyForEncryption(key);\r\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\r\n\r\n        if (theKey.macKey != null && mac == null) {\r\n            return null;\r\n        }\r\n\r\n        if (theKey.encType !== encType) {\r\n            return null;\r\n        }\r\n\r\n        if (theKey.macKey != null && mac != null) {\r\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\r\n            macData.set(new Uint8Array(iv), 0);\r\n            macData.set(new Uint8Array(data), iv.byteLength);\r\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\r\n            if (computedMac === null) {\r\n                return null;\r\n            }\r\n\r\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\r\n            if (!macsMatch) {\r\n                // tslint:disable-next-line\r\n                console.error('mac failed.');\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\r\n    }\r\n\r\n    private async rsaDecrypt(encValue: string): Promise<ArrayBuffer> {\r\n        const headerPieces = encValue.split('.');\r\n        let encType: EncryptionType = null;\r\n        let encPieces: string[];\r\n\r\n        if (headerPieces.length === 1) {\r\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\r\n            encPieces = [headerPieces[0]];\r\n        } else if (headerPieces.length === 2) {\r\n            try {\r\n                encType = parseInt(headerPieces[0], null);\r\n                encPieces = headerPieces[1].split('|');\r\n            } catch (e) { }\r\n        }\r\n\r\n        switch (encType) {\r\n            case EncryptionType.Rsa2048_OaepSha256_B64:\r\n            case EncryptionType.Rsa2048_OaepSha1_B64:\r\n            // HmacSha256 types are deprecated\r\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\r\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\r\n                break;\r\n            default:\r\n                throw new Error('encType unavailable.');\r\n        }\r\n\r\n        if (encPieces == null || encPieces.length <= 0) {\r\n            throw new Error('encPieces unavailable.');\r\n        }\r\n\r\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\r\n        const privateKey = await this.getPrivateKey();\r\n        if (privateKey == null) {\r\n            throw new Error('No private key.');\r\n        }\r\n\r\n        let alg: 'sha1' | 'sha256' = 'sha1';\r\n        switch (encType) {\r\n            case EncryptionType.Rsa2048_OaepSha256_B64:\r\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\r\n                alg = 'sha256';\r\n                break;\r\n            case EncryptionType.Rsa2048_OaepSha1_B64:\r\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\r\n                break;\r\n            default:\r\n                throw new Error('encType unavailable.');\r\n        }\r\n\r\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\r\n    }\r\n\r\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\r\n        if (key != null) {\r\n            return key;\r\n        }\r\n\r\n        const encKey = await this.getEncKey();\r\n        if (encKey != null) {\r\n            return encKey;\r\n        }\r\n\r\n        return await this.getKey();\r\n    }\r\n\r\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\r\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\r\n            key.encType === EncryptionType.AesCbc256_B64) {\r\n            // Old encrypt-then-mac scheme, make a new key\r\n            if (this.legacyEtmKey == null) {\r\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\r\n            }\r\n            return this.legacyEtmKey;\r\n        }\r\n\r\n        return key;\r\n    }\r\n\r\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\r\n        const newKey = new Uint8Array(64);\r\n        const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'enc', 32, 'sha256');\r\n        const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, 'mac', 32, 'sha256');\r\n        newKey.set(new Uint8Array(encKey));\r\n        newKey.set(new Uint8Array(macKey), 32);\r\n        return new SymmetricCryptoKey(newKey.buffer);\r\n    }\r\n\r\n    private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\r\n        const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\r\n        let numWords = Math.ceil(minimumEntropy / entropyPerWord);\r\n\r\n        const hashArr = Array.from(new Uint8Array(hash));\r\n        const entropyAvailable = hashArr.length * 4;\r\n        if (numWords * entropyPerWord > entropyAvailable) {\r\n            throw new Error('Output entropy of hash function is too small');\r\n        }\r\n\r\n        const phrase: string[] = [];\r\n        let hashNumber = bigInt.fromArray(hashArr, 256);\r\n        while (numWords--) {\r\n            const remainder = hashNumber.mod(EEFLongWordList.length);\r\n            hashNumber = hashNumber.divide(EEFLongWordList.length);\r\n            phrase.push(EEFLongWordList[remainder as any]);\r\n        }\r\n        return phrase;\r\n    }\r\n\r\n    private async buildEncKey(key: SymmetricCryptoKey, encKey: ArrayBuffer)\r\n        : Promise<[SymmetricCryptoKey, CipherString]> {\r\n        let encKeyEnc: CipherString = null;\r\n        if (key.key.byteLength === 32) {\r\n            const newKey = await this.stretchKey(key);\r\n            encKeyEnc = await this.encrypt(encKey, newKey);\r\n        } else if (key.key.byteLength === 64) {\r\n            encKeyEnc = await this.encrypt(encKey, key);\r\n        } else {\r\n            throw new Error('Invalid key size.');\r\n        }\r\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\r\n    }\r\n}\r\n","// EFF's Long Wordlist from https://www.eff.org/dice\r\nexport const EEFLongWordList = [\r\n    'abacus',\r\n    'abdomen',\r\n    'abdominal',\r\n    'abide',\r\n    'abiding',\r\n    'ability',\r\n    'ablaze',\r\n    'able',\r\n    'abnormal',\r\n    'abrasion',\r\n    'abrasive',\r\n    'abreast',\r\n    'abridge',\r\n    'abroad',\r\n    'abruptly',\r\n    'absence',\r\n    'absentee',\r\n    'absently',\r\n    'absinthe',\r\n    'absolute',\r\n    'absolve',\r\n    'abstain',\r\n    'abstract',\r\n    'absurd',\r\n    'accent',\r\n    'acclaim',\r\n    'acclimate',\r\n    'accompany',\r\n    'account',\r\n    'accuracy',\r\n    'accurate',\r\n    'accustom',\r\n    'acetone',\r\n    'achiness',\r\n    'aching',\r\n    'acid',\r\n    'acorn',\r\n    'acquaint',\r\n    'acquire',\r\n    'acre',\r\n    'acrobat',\r\n    'acronym',\r\n    'acting',\r\n    'action',\r\n    'activate',\r\n    'activator',\r\n    'active',\r\n    'activism',\r\n    'activist',\r\n    'activity',\r\n    'actress',\r\n    'acts',\r\n    'acutely',\r\n    'acuteness',\r\n    'aeration',\r\n    'aerobics',\r\n    'aerosol',\r\n    'aerospace',\r\n    'afar',\r\n    'affair',\r\n    'affected',\r\n    'affecting',\r\n    'affection',\r\n    'affidavit',\r\n    'affiliate',\r\n    'affirm',\r\n    'affix',\r\n    'afflicted',\r\n    'affluent',\r\n    'afford',\r\n    'affront',\r\n    'aflame',\r\n    'afloat',\r\n    'aflutter',\r\n    'afoot',\r\n    'afraid',\r\n    'afterglow',\r\n    'afterlife',\r\n    'aftermath',\r\n    'aftermost',\r\n    'afternoon',\r\n    'aged',\r\n    'ageless',\r\n    'agency',\r\n    'agenda',\r\n    'agent',\r\n    'aggregate',\r\n    'aghast',\r\n    'agile',\r\n    'agility',\r\n    'aging',\r\n    'agnostic',\r\n    'agonize',\r\n    'agonizing',\r\n    'agony',\r\n    'agreeable',\r\n    'agreeably',\r\n    'agreed',\r\n    'agreeing',\r\n    'agreement',\r\n    'aground',\r\n    'ahead',\r\n    'ahoy',\r\n    'aide',\r\n    'aids',\r\n    'aim',\r\n    'ajar',\r\n    'alabaster',\r\n    'alarm',\r\n    'albatross',\r\n    'album',\r\n    'alfalfa',\r\n    'algebra',\r\n    'algorithm',\r\n    'alias',\r\n    'alibi',\r\n    'alienable',\r\n    'alienate',\r\n    'aliens',\r\n    'alike',\r\n    'alive',\r\n    'alkaline',\r\n    'alkalize',\r\n    'almanac',\r\n    'almighty',\r\n    'almost',\r\n    'aloe',\r\n    'aloft',\r\n    'aloha',\r\n    'alone',\r\n    'alongside',\r\n    'aloof',\r\n    'alphabet',\r\n    'alright',\r\n    'although',\r\n    'altitude',\r\n    'alto',\r\n    'aluminum',\r\n    'alumni',\r\n    'always',\r\n    'amaretto',\r\n    'amaze',\r\n    'amazingly',\r\n    'amber',\r\n    'ambiance',\r\n    'ambiguity',\r\n    'ambiguous',\r\n    'ambition',\r\n    'ambitious',\r\n    'ambulance',\r\n    'ambush',\r\n    'amendable',\r\n    'amendment',\r\n    'amends',\r\n    'amenity',\r\n    'amiable',\r\n    'amicably',\r\n    'amid',\r\n    'amigo',\r\n    'amino',\r\n    'amiss',\r\n    'ammonia',\r\n    'ammonium',\r\n    'amnesty',\r\n    'amniotic',\r\n    'among',\r\n    'amount',\r\n    'amperage',\r\n    'ample',\r\n    'amplifier',\r\n    'amplify',\r\n    'amply',\r\n    'amuck',\r\n    'amulet',\r\n    'amusable',\r\n    'amused',\r\n    'amusement',\r\n    'amuser',\r\n    'amusing',\r\n    'anaconda',\r\n    'anaerobic',\r\n    'anagram',\r\n    'anatomist',\r\n    'anatomy',\r\n    'anchor',\r\n    'anchovy',\r\n    'ancient',\r\n    'android',\r\n    'anemia',\r\n    'anemic',\r\n    'aneurism',\r\n    'anew',\r\n    'angelfish',\r\n    'angelic',\r\n    'anger',\r\n    'angled',\r\n    'angler',\r\n    'angles',\r\n    'angling',\r\n    'angrily',\r\n    'angriness',\r\n    'anguished',\r\n    'angular',\r\n    'animal',\r\n    'animate',\r\n    'animating',\r\n    'animation',\r\n    'animator',\r\n    'anime',\r\n    'animosity',\r\n    'ankle',\r\n    'annex',\r\n    'annotate',\r\n    'announcer',\r\n    'annoying',\r\n    'annually',\r\n    'annuity',\r\n    'anointer',\r\n    'another',\r\n    'answering',\r\n    'antacid',\r\n    'antarctic',\r\n    'anteater',\r\n    'antelope',\r\n    'antennae',\r\n    'anthem',\r\n    'anthill',\r\n    'anthology',\r\n    'antibody',\r\n    'antics',\r\n    'antidote',\r\n    'antihero',\r\n    'antiquely',\r\n    'antiques',\r\n    'antiquity',\r\n    'antirust',\r\n    'antitoxic',\r\n    'antitrust',\r\n    'antiviral',\r\n    'antivirus',\r\n    'antler',\r\n    'antonym',\r\n    'antsy',\r\n    'anvil',\r\n    'anybody',\r\n    'anyhow',\r\n    'anymore',\r\n    'anyone',\r\n    'anyplace',\r\n    'anything',\r\n    'anytime',\r\n    'anyway',\r\n    'anywhere',\r\n    'aorta',\r\n    'apache',\r\n    'apostle',\r\n    'appealing',\r\n    'appear',\r\n    'appease',\r\n    'appeasing',\r\n    'appendage',\r\n    'appendix',\r\n    'appetite',\r\n    'appetizer',\r\n    'applaud',\r\n    'applause',\r\n    'apple',\r\n    'appliance',\r\n    'applicant',\r\n    'applied',\r\n    'apply',\r\n    'appointee',\r\n    'appraisal',\r\n    'appraiser',\r\n    'apprehend',\r\n    'approach',\r\n    'approval',\r\n    'approve',\r\n    'apricot',\r\n    'april',\r\n    'apron',\r\n    'aptitude',\r\n    'aptly',\r\n    'aqua',\r\n    'aqueduct',\r\n    'arbitrary',\r\n    'arbitrate',\r\n    'ardently',\r\n    'area',\r\n    'arena',\r\n    'arguable',\r\n    'arguably',\r\n    'argue',\r\n    'arise',\r\n    'armadillo',\r\n    'armband',\r\n    'armchair',\r\n    'armed',\r\n    'armful',\r\n    'armhole',\r\n    'arming',\r\n    'armless',\r\n    'armoire',\r\n    'armored',\r\n    'armory',\r\n    'armrest',\r\n    'army',\r\n    'aroma',\r\n    'arose',\r\n    'around',\r\n    'arousal',\r\n    'arrange',\r\n    'array',\r\n    'arrest',\r\n    'arrival',\r\n    'arrive',\r\n    'arrogance',\r\n    'arrogant',\r\n    'arson',\r\n    'art',\r\n    'ascend',\r\n    'ascension',\r\n    'ascent',\r\n    'ascertain',\r\n    'ashamed',\r\n    'ashen',\r\n    'ashes',\r\n    'ashy',\r\n    'aside',\r\n    'askew',\r\n    'asleep',\r\n    'asparagus',\r\n    'aspect',\r\n    'aspirate',\r\n    'aspire',\r\n    'aspirin',\r\n    'astonish',\r\n    'astound',\r\n    'astride',\r\n    'astrology',\r\n    'astronaut',\r\n    'astronomy',\r\n    'astute',\r\n    'atlantic',\r\n    'atlas',\r\n    'atom',\r\n    'atonable',\r\n    'atop',\r\n    'atrium',\r\n    'atrocious',\r\n    'atrophy',\r\n    'attach',\r\n    'attain',\r\n    'attempt',\r\n    'attendant',\r\n    'attendee',\r\n    'attention',\r\n    'attentive',\r\n    'attest',\r\n    'attic',\r\n    'attire',\r\n    'attitude',\r\n    'attractor',\r\n    'attribute',\r\n    'atypical',\r\n    'auction',\r\n    'audacious',\r\n    'audacity',\r\n    'audible',\r\n    'audibly',\r\n    'audience',\r\n    'audio',\r\n    'audition',\r\n    'augmented',\r\n    'august',\r\n    'authentic',\r\n    'author',\r\n    'autism',\r\n    'autistic',\r\n    'autograph',\r\n    'automaker',\r\n    'automated',\r\n    'automatic',\r\n    'autopilot',\r\n    'available',\r\n    'avalanche',\r\n    'avatar',\r\n    'avenge',\r\n    'avenging',\r\n    'avenue',\r\n    'average',\r\n    'aversion',\r\n    'avert',\r\n    'aviation',\r\n    'aviator',\r\n    'avid',\r\n    'avoid',\r\n    'await',\r\n    'awaken',\r\n    'award',\r\n    'aware',\r\n    'awhile',\r\n    'awkward',\r\n    'awning',\r\n    'awoke',\r\n    'awry',\r\n    'axis',\r\n    'babble',\r\n    'babbling',\r\n    'babied',\r\n    'baboon',\r\n    'backache',\r\n    'backboard',\r\n    'backboned',\r\n    'backdrop',\r\n    'backed',\r\n    'backer',\r\n    'backfield',\r\n    'backfire',\r\n    'backhand',\r\n    'backing',\r\n    'backlands',\r\n    'backlash',\r\n    'backless',\r\n    'backlight',\r\n    'backlit',\r\n    'backlog',\r\n    'backpack',\r\n    'backpedal',\r\n    'backrest',\r\n    'backroom',\r\n    'backshift',\r\n    'backside',\r\n    'backslid',\r\n    'backspace',\r\n    'backspin',\r\n    'backstab',\r\n    'backstage',\r\n    'backtalk',\r\n    'backtrack',\r\n    'backup',\r\n    'backward',\r\n    'backwash',\r\n    'backwater',\r\n    'backyard',\r\n    'bacon',\r\n    'bacteria',\r\n    'bacterium',\r\n    'badass',\r\n    'badge',\r\n    'badland',\r\n    'badly',\r\n    'badness',\r\n    'baffle',\r\n    'baffling',\r\n    'bagel',\r\n    'bagful',\r\n    'baggage',\r\n    'bagged',\r\n    'baggie',\r\n    'bagginess',\r\n    'bagging',\r\n    'baggy',\r\n    'bagpipe',\r\n    'baguette',\r\n    'baked',\r\n    'bakery',\r\n    'bakeshop',\r\n    'baking',\r\n    'balance',\r\n    'balancing',\r\n    'balcony',\r\n    'balmy',\r\n    'balsamic',\r\n    'bamboo',\r\n    'banana',\r\n    'banish',\r\n    'banister',\r\n    'banjo',\r\n    'bankable',\r\n    'bankbook',\r\n    'banked',\r\n    'banker',\r\n    'banking',\r\n    'banknote',\r\n    'bankroll',\r\n    'banner',\r\n    'bannister',\r\n    'banshee',\r\n    'banter',\r\n    'barbecue',\r\n    'barbed',\r\n    'barbell',\r\n    'barber',\r\n    'barcode',\r\n    'barge',\r\n    'bargraph',\r\n    'barista',\r\n    'baritone',\r\n    'barley',\r\n    'barmaid',\r\n    'barman',\r\n    'barn',\r\n    'barometer',\r\n    'barrack',\r\n    'barracuda',\r\n    'barrel',\r\n    'barrette',\r\n    'barricade',\r\n    'barrier',\r\n    'barstool',\r\n    'bartender',\r\n    'barterer',\r\n    'bash',\r\n    'basically',\r\n    'basics',\r\n    'basil',\r\n    'basin',\r\n    'basis',\r\n    'basket',\r\n    'batboy',\r\n    'batch',\r\n    'bath',\r\n    'baton',\r\n    'bats',\r\n    'battalion',\r\n    'battered',\r\n    'battering',\r\n    'battery',\r\n    'batting',\r\n    'battle',\r\n    'bauble',\r\n    'bazooka',\r\n    'blabber',\r\n    'bladder',\r\n    'blade',\r\n    'blah',\r\n    'blame',\r\n    'blaming',\r\n    'blanching',\r\n    'blandness',\r\n    'blank',\r\n    'blaspheme',\r\n    'blasphemy',\r\n    'blast',\r\n    'blatancy',\r\n    'blatantly',\r\n    'blazer',\r\n    'blazing',\r\n    'bleach',\r\n    'bleak',\r\n    'bleep',\r\n    'blemish',\r\n    'blend',\r\n    'bless',\r\n    'blighted',\r\n    'blimp',\r\n    'bling',\r\n    'blinked',\r\n    'blinker',\r\n    'blinking',\r\n    'blinks',\r\n    'blip',\r\n    'blissful',\r\n    'blitz',\r\n    'blizzard',\r\n    'bloated',\r\n    'bloating',\r\n    'blob',\r\n    'blog',\r\n    'bloomers',\r\n    'blooming',\r\n    'blooper',\r\n    'blot',\r\n    'blouse',\r\n    'blubber',\r\n    'bluff',\r\n    'bluish',\r\n    'blunderer',\r\n    'blunt',\r\n    'blurb',\r\n    'blurred',\r\n    'blurry',\r\n    'blurt',\r\n    'blush',\r\n    'blustery',\r\n    'boaster',\r\n    'boastful',\r\n    'boasting',\r\n    'boat',\r\n    'bobbed',\r\n    'bobbing',\r\n    'bobble',\r\n    'bobcat',\r\n    'bobsled',\r\n    'bobtail',\r\n    'bodacious',\r\n    'body',\r\n    'bogged',\r\n    'boggle',\r\n    'bogus',\r\n    'boil',\r\n    'bok',\r\n    'bolster',\r\n    'bolt',\r\n    'bonanza',\r\n    'bonded',\r\n    'bonding',\r\n    'bondless',\r\n    'boned',\r\n    'bonehead',\r\n    'boneless',\r\n    'bonelike',\r\n    'boney',\r\n    'bonfire',\r\n    'bonnet',\r\n    'bonsai',\r\n    'bonus',\r\n    'bony',\r\n    'boogeyman',\r\n    'boogieman',\r\n    'book',\r\n    'boondocks',\r\n    'booted',\r\n    'booth',\r\n    'bootie',\r\n    'booting',\r\n    'bootlace',\r\n    'bootleg',\r\n    'boots',\r\n    'boozy',\r\n    'borax',\r\n    'boring',\r\n    'borough',\r\n    'borrower',\r\n    'borrowing',\r\n    'boss',\r\n    'botanical',\r\n    'botanist',\r\n    'botany',\r\n    'botch',\r\n    'both',\r\n    'bottle',\r\n    'bottling',\r\n    'bottom',\r\n    'bounce',\r\n    'bouncing',\r\n    'bouncy',\r\n    'bounding',\r\n    'boundless',\r\n    'bountiful',\r\n    'bovine',\r\n    'boxcar',\r\n    'boxer',\r\n    'boxing',\r\n    'boxlike',\r\n    'boxy',\r\n    'breach',\r\n    'breath',\r\n    'breeches',\r\n    'breeching',\r\n    'breeder',\r\n    'breeding',\r\n    'breeze',\r\n    'breezy',\r\n    'brethren',\r\n    'brewery',\r\n    'brewing',\r\n    'briar',\r\n    'bribe',\r\n    'brick',\r\n    'bride',\r\n    'bridged',\r\n    'brigade',\r\n    'bright',\r\n    'brilliant',\r\n    'brim',\r\n    'bring',\r\n    'brink',\r\n    'brisket',\r\n    'briskly',\r\n    'briskness',\r\n    'bristle',\r\n    'brittle',\r\n    'broadband',\r\n    'broadcast',\r\n    'broaden',\r\n    'broadly',\r\n    'broadness',\r\n    'broadside',\r\n    'broadways',\r\n    'broiler',\r\n    'broiling',\r\n    'broken',\r\n    'broker',\r\n    'bronchial',\r\n    'bronco',\r\n    'bronze',\r\n    'bronzing',\r\n    'brook',\r\n    'broom',\r\n    'brought',\r\n    'browbeat',\r\n    'brownnose',\r\n    'browse',\r\n    'browsing',\r\n    'bruising',\r\n    'brunch',\r\n    'brunette',\r\n    'brunt',\r\n    'brush',\r\n    'brussels',\r\n    'brute',\r\n    'brutishly',\r\n    'bubble',\r\n    'bubbling',\r\n    'bubbly',\r\n    'buccaneer',\r\n    'bucked',\r\n    'bucket',\r\n    'buckle',\r\n    'buckshot',\r\n    'buckskin',\r\n    'bucktooth',\r\n    'buckwheat',\r\n    'buddhism',\r\n    'buddhist',\r\n    'budding',\r\n    'buddy',\r\n    'budget',\r\n    'buffalo',\r\n    'buffed',\r\n    'buffer',\r\n    'buffing',\r\n    'buffoon',\r\n    'buggy',\r\n    'bulb',\r\n    'bulge',\r\n    'bulginess',\r\n    'bulgur',\r\n    'bulk',\r\n    'bulldog',\r\n    'bulldozer',\r\n    'bullfight',\r\n    'bullfrog',\r\n    'bullhorn',\r\n    'bullion',\r\n    'bullish',\r\n    'bullpen',\r\n    'bullring',\r\n    'bullseye',\r\n    'bullwhip',\r\n    'bully',\r\n    'bunch',\r\n    'bundle',\r\n    'bungee',\r\n    'bunion',\r\n    'bunkbed',\r\n    'bunkhouse',\r\n    'bunkmate',\r\n    'bunny',\r\n    'bunt',\r\n    'busboy',\r\n    'bush',\r\n    'busily',\r\n    'busload',\r\n    'bust',\r\n    'busybody',\r\n    'buzz',\r\n    'cabana',\r\n    'cabbage',\r\n    'cabbie',\r\n    'cabdriver',\r\n    'cable',\r\n    'caboose',\r\n    'cache',\r\n    'cackle',\r\n    'cacti',\r\n    'cactus',\r\n    'caddie',\r\n    'caddy',\r\n    'cadet',\r\n    'cadillac',\r\n    'cadmium',\r\n    'cage',\r\n    'cahoots',\r\n    'cake',\r\n    'calamari',\r\n    'calamity',\r\n    'calcium',\r\n    'calculate',\r\n    'calculus',\r\n    'caliber',\r\n    'calibrate',\r\n    'calm',\r\n    'caloric',\r\n    'calorie',\r\n    'calzone',\r\n    'camcorder',\r\n    'cameo',\r\n    'camera',\r\n    'camisole',\r\n    'camper',\r\n    'campfire',\r\n    'camping',\r\n    'campsite',\r\n    'campus',\r\n    'canal',\r\n    'canary',\r\n    'cancel',\r\n    'candied',\r\n    'candle',\r\n    'candy',\r\n    'cane',\r\n    'canine',\r\n    'canister',\r\n    'cannabis',\r\n    'canned',\r\n    'canning',\r\n    'cannon',\r\n    'cannot',\r\n    'canola',\r\n    'canon',\r\n    'canopener',\r\n    'canopy',\r\n    'canteen',\r\n    'canyon',\r\n    'capable',\r\n    'capably',\r\n    'capacity',\r\n    'cape',\r\n    'capillary',\r\n    'capital',\r\n    'capitol',\r\n    'capped',\r\n    'capricorn',\r\n    'capsize',\r\n    'capsule',\r\n    'caption',\r\n    'captivate',\r\n    'captive',\r\n    'captivity',\r\n    'capture',\r\n    'caramel',\r\n    'carat',\r\n    'caravan',\r\n    'carbon',\r\n    'cardboard',\r\n    'carded',\r\n    'cardiac',\r\n    'cardigan',\r\n    'cardinal',\r\n    'cardstock',\r\n    'carefully',\r\n    'caregiver',\r\n    'careless',\r\n    'caress',\r\n    'caretaker',\r\n    'cargo',\r\n    'caring',\r\n    'carless',\r\n    'carload',\r\n    'carmaker',\r\n    'carnage',\r\n    'carnation',\r\n    'carnival',\r\n    'carnivore',\r\n    'carol',\r\n    'carpenter',\r\n    'carpentry',\r\n    'carpool',\r\n    'carport',\r\n    'carried',\r\n    'carrot',\r\n    'carrousel',\r\n    'carry',\r\n    'cartel',\r\n    'cartload',\r\n    'carton',\r\n    'cartoon',\r\n    'cartridge',\r\n    'cartwheel',\r\n    'carve',\r\n    'carving',\r\n    'carwash',\r\n    'cascade',\r\n    'case',\r\n    'cash',\r\n    'casing',\r\n    'casino',\r\n    'casket',\r\n    'cassette',\r\n    'casually',\r\n    'casualty',\r\n    'catacomb',\r\n    'catalog',\r\n    'catalyst',\r\n    'catalyze',\r\n    'catapult',\r\n    'cataract',\r\n    'catatonic',\r\n    'catcall',\r\n    'catchable',\r\n    'catcher',\r\n    'catching',\r\n    'catchy',\r\n    'caterer',\r\n    'catering',\r\n    'catfight',\r\n    'catfish',\r\n    'cathedral',\r\n    'cathouse',\r\n    'catlike',\r\n    'catnap',\r\n    'catnip',\r\n    'catsup',\r\n    'cattail',\r\n    'cattishly',\r\n    'cattle',\r\n    'catty',\r\n    'catwalk',\r\n    'caucasian',\r\n    'caucus',\r\n    'causal',\r\n    'causation',\r\n    'cause',\r\n    'causing',\r\n    'cauterize',\r\n    'caution',\r\n    'cautious',\r\n    'cavalier',\r\n    'cavalry',\r\n    'caviar',\r\n    'cavity',\r\n    'cedar',\r\n    'celery',\r\n    'celestial',\r\n    'celibacy',\r\n    'celibate',\r\n    'celtic',\r\n    'cement',\r\n    'census',\r\n    'ceramics',\r\n    'ceremony',\r\n    'certainly',\r\n    'certainty',\r\n    'certified',\r\n    'certify',\r\n    'cesarean',\r\n    'cesspool',\r\n    'chafe',\r\n    'chaffing',\r\n    'chain',\r\n    'chair',\r\n    'chalice',\r\n    'challenge',\r\n    'chamber',\r\n    'chamomile',\r\n    'champion',\r\n    'chance',\r\n    'change',\r\n    'channel',\r\n    'chant',\r\n    'chaos',\r\n    'chaperone',\r\n    'chaplain',\r\n    'chapped',\r\n    'chaps',\r\n    'chapter',\r\n    'character',\r\n    'charbroil',\r\n    'charcoal',\r\n    'charger',\r\n    'charging',\r\n    'chariot',\r\n    'charity',\r\n    'charm',\r\n    'charred',\r\n    'charter',\r\n    'charting',\r\n    'chase',\r\n    'chasing',\r\n    'chaste',\r\n    'chastise',\r\n    'chastity',\r\n    'chatroom',\r\n    'chatter',\r\n    'chatting',\r\n    'chatty',\r\n    'cheating',\r\n    'cheddar',\r\n    'cheek',\r\n    'cheer',\r\n    'cheese',\r\n    'cheesy',\r\n    'chef',\r\n    'chemicals',\r\n    'chemist',\r\n    'chemo',\r\n    'cherisher',\r\n    'cherub',\r\n    'chess',\r\n    'chest',\r\n    'chevron',\r\n    'chevy',\r\n    'chewable',\r\n    'chewer',\r\n    'chewing',\r\n    'chewy',\r\n    'chief',\r\n    'chihuahua',\r\n    'childcare',\r\n    'childhood',\r\n    'childish',\r\n    'childless',\r\n    'childlike',\r\n    'chili',\r\n    'chill',\r\n    'chimp',\r\n    'chip',\r\n    'chirping',\r\n    'chirpy',\r\n    'chitchat',\r\n    'chivalry',\r\n    'chive',\r\n    'chloride',\r\n    'chlorine',\r\n    'choice',\r\n    'chokehold',\r\n    'choking',\r\n    'chomp',\r\n    'chooser',\r\n    'choosing',\r\n    'choosy',\r\n    'chop',\r\n    'chosen',\r\n    'chowder',\r\n    'chowtime',\r\n    'chrome',\r\n    'chubby',\r\n    'chuck',\r\n    'chug',\r\n    'chummy',\r\n    'chump',\r\n    'chunk',\r\n    'churn',\r\n    'chute',\r\n    'cider',\r\n    'cilantro',\r\n    'cinch',\r\n    'cinema',\r\n    'cinnamon',\r\n    'circle',\r\n    'circling',\r\n    'circular',\r\n    'circulate',\r\n    'circus',\r\n    'citable',\r\n    'citadel',\r\n    'citation',\r\n    'citizen',\r\n    'citric',\r\n    'citrus',\r\n    'city',\r\n    'civic',\r\n    'civil',\r\n    'clad',\r\n    'claim',\r\n    'clambake',\r\n    'clammy',\r\n    'clamor',\r\n    'clamp',\r\n    'clamshell',\r\n    'clang',\r\n    'clanking',\r\n    'clapped',\r\n    'clapper',\r\n    'clapping',\r\n    'clarify',\r\n    'clarinet',\r\n    'clarity',\r\n    'clash',\r\n    'clasp',\r\n    'class',\r\n    'clatter',\r\n    'clause',\r\n    'clavicle',\r\n    'claw',\r\n    'clay',\r\n    'clean',\r\n    'clear',\r\n    'cleat',\r\n    'cleaver',\r\n    'cleft',\r\n    'clench',\r\n    'clergyman',\r\n    'clerical',\r\n    'clerk',\r\n    'clever',\r\n    'clicker',\r\n    'client',\r\n    'climate',\r\n    'climatic',\r\n    'cling',\r\n    'clinic',\r\n    'clinking',\r\n    'clip',\r\n    'clique',\r\n    'cloak',\r\n    'clobber',\r\n    'clock',\r\n    'clone',\r\n    'cloning',\r\n    'closable',\r\n    'closure',\r\n    'clothes',\r\n    'clothing',\r\n    'cloud',\r\n    'clover',\r\n    'clubbed',\r\n    'clubbing',\r\n    'clubhouse',\r\n    'clump',\r\n    'clumsily',\r\n    'clumsy',\r\n    'clunky',\r\n    'clustered',\r\n    'clutch',\r\n    'clutter',\r\n    'coach',\r\n    'coagulant',\r\n    'coastal',\r\n    'coaster',\r\n    'coasting',\r\n    'coastland',\r\n    'coastline',\r\n    'coat',\r\n    'coauthor',\r\n    'cobalt',\r\n    'cobbler',\r\n    'cobweb',\r\n    'cocoa',\r\n    'coconut',\r\n    'cod',\r\n    'coeditor',\r\n    'coerce',\r\n    'coexist',\r\n    'coffee',\r\n    'cofounder',\r\n    'cognition',\r\n    'cognitive',\r\n    'cogwheel',\r\n    'coherence',\r\n    'coherent',\r\n    'cohesive',\r\n    'coil',\r\n    'coke',\r\n    'cola',\r\n    'cold',\r\n    'coleslaw',\r\n    'coliseum',\r\n    'collage',\r\n    'collapse',\r\n    'collar',\r\n    'collected',\r\n    'collector',\r\n    'collide',\r\n    'collie',\r\n    'collision',\r\n    'colonial',\r\n    'colonist',\r\n    'colonize',\r\n    'colony',\r\n    'colossal',\r\n    'colt',\r\n    'coma',\r\n    'come',\r\n    'comfort',\r\n    'comfy',\r\n    'comic',\r\n    'coming',\r\n    'comma',\r\n    'commence',\r\n    'commend',\r\n    'comment',\r\n    'commerce',\r\n    'commode',\r\n    'commodity',\r\n    'commodore',\r\n    'common',\r\n    'commotion',\r\n    'commute',\r\n    'commuting',\r\n    'compacted',\r\n    'compacter',\r\n    'compactly',\r\n    'compactor',\r\n    'companion',\r\n    'company',\r\n    'compare',\r\n    'compel',\r\n    'compile',\r\n    'comply',\r\n    'component',\r\n    'composed',\r\n    'composer',\r\n    'composite',\r\n    'compost',\r\n    'composure',\r\n    'compound',\r\n    'compress',\r\n    'comprised',\r\n    'computer',\r\n    'computing',\r\n    'comrade',\r\n    'concave',\r\n    'conceal',\r\n    'conceded',\r\n    'concept',\r\n    'concerned',\r\n    'concert',\r\n    'conch',\r\n    'concierge',\r\n    'concise',\r\n    'conclude',\r\n    'concrete',\r\n    'concur',\r\n    'condense',\r\n    'condiment',\r\n    'condition',\r\n    'condone',\r\n    'conducive',\r\n    'conductor',\r\n    'conduit',\r\n    'cone',\r\n    'confess',\r\n    'confetti',\r\n    'confidant',\r\n    'confident',\r\n    'confider',\r\n    'confiding',\r\n    'configure',\r\n    'confined',\r\n    'confining',\r\n    'confirm',\r\n    'conflict',\r\n    'conform',\r\n    'confound',\r\n    'confront',\r\n    'confused',\r\n    'confusing',\r\n    'confusion',\r\n    'congenial',\r\n    'congested',\r\n    'congrats',\r\n    'congress',\r\n    'conical',\r\n    'conjoined',\r\n    'conjure',\r\n    'conjuror',\r\n    'connected',\r\n    'connector',\r\n    'consensus',\r\n    'consent',\r\n    'console',\r\n    'consoling',\r\n    'consonant',\r\n    'constable',\r\n    'constant',\r\n    'constrain',\r\n    'constrict',\r\n    'construct',\r\n    'consult',\r\n    'consumer',\r\n    'consuming',\r\n    'contact',\r\n    'container',\r\n    'contempt',\r\n    'contend',\r\n    'contented',\r\n    'contently',\r\n    'contents',\r\n    'contest',\r\n    'context',\r\n    'contort',\r\n    'contour',\r\n    'contrite',\r\n    'control',\r\n    'contusion',\r\n    'convene',\r\n    'convent',\r\n    'copartner',\r\n    'cope',\r\n    'copied',\r\n    'copier',\r\n    'copilot',\r\n    'coping',\r\n    'copious',\r\n    'copper',\r\n    'copy',\r\n    'coral',\r\n    'cork',\r\n    'cornball',\r\n    'cornbread',\r\n    'corncob',\r\n    'cornea',\r\n    'corned',\r\n    'corner',\r\n    'cornfield',\r\n    'cornflake',\r\n    'cornhusk',\r\n    'cornmeal',\r\n    'cornstalk',\r\n    'corny',\r\n    'coronary',\r\n    'coroner',\r\n    'corporal',\r\n    'corporate',\r\n    'corral',\r\n    'correct',\r\n    'corridor',\r\n    'corrode',\r\n    'corroding',\r\n    'corrosive',\r\n    'corsage',\r\n    'corset',\r\n    'cortex',\r\n    'cosigner',\r\n    'cosmetics',\r\n    'cosmic',\r\n    'cosmos',\r\n    'cosponsor',\r\n    'cost',\r\n    'cottage',\r\n    'cotton',\r\n    'couch',\r\n    'cough',\r\n    'could',\r\n    'countable',\r\n    'countdown',\r\n    'counting',\r\n    'countless',\r\n    'country',\r\n    'county',\r\n    'courier',\r\n    'covenant',\r\n    'cover',\r\n    'coveted',\r\n    'coveting',\r\n    'coyness',\r\n    'cozily',\r\n    'coziness',\r\n    'cozy',\r\n    'crabbing',\r\n    'crabgrass',\r\n    'crablike',\r\n    'crabmeat',\r\n    'cradle',\r\n    'cradling',\r\n    'crafter',\r\n    'craftily',\r\n    'craftsman',\r\n    'craftwork',\r\n    'crafty',\r\n    'cramp',\r\n    'cranberry',\r\n    'crane',\r\n    'cranial',\r\n    'cranium',\r\n    'crank',\r\n    'crate',\r\n    'crave',\r\n    'craving',\r\n    'crawfish',\r\n    'crawlers',\r\n    'crawling',\r\n    'crayfish',\r\n    'crayon',\r\n    'crazed',\r\n    'crazily',\r\n    'craziness',\r\n    'crazy',\r\n    'creamed',\r\n    'creamer',\r\n    'creamlike',\r\n    'crease',\r\n    'creasing',\r\n    'creatable',\r\n    'create',\r\n    'creation',\r\n    'creative',\r\n    'creature',\r\n    'credible',\r\n    'credibly',\r\n    'credit',\r\n    'creed',\r\n    'creme',\r\n    'creole',\r\n    'crepe',\r\n    'crept',\r\n    'crescent',\r\n    'crested',\r\n    'cresting',\r\n    'crestless',\r\n    'crevice',\r\n    'crewless',\r\n    'crewman',\r\n    'crewmate',\r\n    'crib',\r\n    'cricket',\r\n    'cried',\r\n    'crier',\r\n    'crimp',\r\n    'crimson',\r\n    'cringe',\r\n    'cringing',\r\n    'crinkle',\r\n    'crinkly',\r\n    'crisped',\r\n    'crisping',\r\n    'crisply',\r\n    'crispness',\r\n    'crispy',\r\n    'criteria',\r\n    'critter',\r\n    'croak',\r\n    'crock',\r\n    'crook',\r\n    'croon',\r\n    'crop',\r\n    'cross',\r\n    'crouch',\r\n    'crouton',\r\n    'crowbar',\r\n    'crowd',\r\n    'crown',\r\n    'crucial',\r\n    'crudely',\r\n    'crudeness',\r\n    'cruelly',\r\n    'cruelness',\r\n    'cruelty',\r\n    'crumb',\r\n    'crummiest',\r\n    'crummy',\r\n    'crumpet',\r\n    'crumpled',\r\n    'cruncher',\r\n    'crunching',\r\n    'crunchy',\r\n    'crusader',\r\n    'crushable',\r\n    'crushed',\r\n    'crusher',\r\n    'crushing',\r\n    'crust',\r\n    'crux',\r\n    'crying',\r\n    'cryptic',\r\n    'crystal',\r\n    'cubbyhole',\r\n    'cube',\r\n    'cubical',\r\n    'cubicle',\r\n    'cucumber',\r\n    'cuddle',\r\n    'cuddly',\r\n    'cufflink',\r\n    'culinary',\r\n    'culminate',\r\n    'culpable',\r\n    'culprit',\r\n    'cultivate',\r\n    'cultural',\r\n    'culture',\r\n    'cupbearer',\r\n    'cupcake',\r\n    'cupid',\r\n    'cupped',\r\n    'cupping',\r\n    'curable',\r\n    'curator',\r\n    'curdle',\r\n    'cure',\r\n    'curfew',\r\n    'curing',\r\n    'curled',\r\n    'curler',\r\n    'curliness',\r\n    'curling',\r\n    'curly',\r\n    'curry',\r\n    'curse',\r\n    'cursive',\r\n    'cursor',\r\n    'curtain',\r\n    'curtly',\r\n    'curtsy',\r\n    'curvature',\r\n    'curve',\r\n    'curvy',\r\n    'cushy',\r\n    'cusp',\r\n    'cussed',\r\n    'custard',\r\n    'custodian',\r\n    'custody',\r\n    'customary',\r\n    'customer',\r\n    'customize',\r\n    'customs',\r\n    'cut',\r\n    'cycle',\r\n    'cyclic',\r\n    'cycling',\r\n    'cyclist',\r\n    'cylinder',\r\n    'cymbal',\r\n    'cytoplasm',\r\n    'cytoplast',\r\n    'dab',\r\n    'dad',\r\n    'daffodil',\r\n    'dagger',\r\n    'daily',\r\n    'daintily',\r\n    'dainty',\r\n    'dairy',\r\n    'daisy',\r\n    'dallying',\r\n    'dance',\r\n    'dancing',\r\n    'dandelion',\r\n    'dander',\r\n    'dandruff',\r\n    'dandy',\r\n    'danger',\r\n    'dangle',\r\n    'dangling',\r\n    'daredevil',\r\n    'dares',\r\n    'daringly',\r\n    'darkened',\r\n    'darkening',\r\n    'darkish',\r\n    'darkness',\r\n    'darkroom',\r\n    'darling',\r\n    'darn',\r\n    'dart',\r\n    'darwinism',\r\n    'dash',\r\n    'dastardly',\r\n    'data',\r\n    'datebook',\r\n    'dating',\r\n    'daughter',\r\n    'daunting',\r\n    'dawdler',\r\n    'dawn',\r\n    'daybed',\r\n    'daybreak',\r\n    'daycare',\r\n    'daydream',\r\n    'daylight',\r\n    'daylong',\r\n    'dayroom',\r\n    'daytime',\r\n    'dazzler',\r\n    'dazzling',\r\n    'deacon',\r\n    'deafening',\r\n    'deafness',\r\n    'dealer',\r\n    'dealing',\r\n    'dealmaker',\r\n    'dealt',\r\n    'dean',\r\n    'debatable',\r\n    'debate',\r\n    'debating',\r\n    'debit',\r\n    'debrief',\r\n    'debtless',\r\n    'debtor',\r\n    'debug',\r\n    'debunk',\r\n    'decade',\r\n    'decaf',\r\n    'decal',\r\n    'decathlon',\r\n    'decay',\r\n    'deceased',\r\n    'deceit',\r\n    'deceiver',\r\n    'deceiving',\r\n    'december',\r\n    'decency',\r\n    'decent',\r\n    'deception',\r\n    'deceptive',\r\n    'decibel',\r\n    'decidable',\r\n    'decimal',\r\n    'decimeter',\r\n    'decipher',\r\n    'deck',\r\n    'declared',\r\n    'decline',\r\n    'decode',\r\n    'decompose',\r\n    'decorated',\r\n    'decorator',\r\n    'decoy',\r\n    'decrease',\r\n    'decree',\r\n    'dedicate',\r\n    'dedicator',\r\n    'deduce',\r\n    'deduct',\r\n    'deed',\r\n    'deem',\r\n    'deepen',\r\n    'deeply',\r\n    'deepness',\r\n    'deface',\r\n    'defacing',\r\n    'defame',\r\n    'default',\r\n    'defeat',\r\n    'defection',\r\n    'defective',\r\n    'defendant',\r\n    'defender',\r\n    'defense',\r\n    'defensive',\r\n    'deferral',\r\n    'deferred',\r\n    'defiance',\r\n    'defiant',\r\n    'defile',\r\n    'defiling',\r\n    'define',\r\n    'definite',\r\n    'deflate',\r\n    'deflation',\r\n    'deflator',\r\n    'deflected',\r\n    'deflector',\r\n    'defog',\r\n    'deforest',\r\n    'defraud',\r\n    'defrost',\r\n    'deftly',\r\n    'defuse',\r\n    'defy',\r\n    'degraded',\r\n    'degrading',\r\n    'degrease',\r\n    'degree',\r\n    'dehydrate',\r\n    'deity',\r\n    'dejected',\r\n    'delay',\r\n    'delegate',\r\n    'delegator',\r\n    'delete',\r\n    'deletion',\r\n    'delicacy',\r\n    'delicate',\r\n    'delicious',\r\n    'delighted',\r\n    'delirious',\r\n    'delirium',\r\n    'deliverer',\r\n    'delivery',\r\n    'delouse',\r\n    'delta',\r\n    'deluge',\r\n    'delusion',\r\n    'deluxe',\r\n    'demanding',\r\n    'demeaning',\r\n    'demeanor',\r\n    'demise',\r\n    'democracy',\r\n    'democrat',\r\n    'demote',\r\n    'demotion',\r\n    'demystify',\r\n    'denatured',\r\n    'deniable',\r\n    'denial',\r\n    'denim',\r\n    'denote',\r\n    'dense',\r\n    'density',\r\n    'dental',\r\n    'dentist',\r\n    'denture',\r\n    'deny',\r\n    'deodorant',\r\n    'deodorize',\r\n    'departed',\r\n    'departure',\r\n    'depict',\r\n    'deplete',\r\n    'depletion',\r\n    'deplored',\r\n    'deploy',\r\n    'deport',\r\n    'depose',\r\n    'depraved',\r\n    'depravity',\r\n    'deprecate',\r\n    'depress',\r\n    'deprive',\r\n    'depth',\r\n    'deputize',\r\n    'deputy',\r\n    'derail',\r\n    'deranged',\r\n    'derby',\r\n    'derived',\r\n    'desecrate',\r\n    'deserve',\r\n    'deserving',\r\n    'designate',\r\n    'designed',\r\n    'designer',\r\n    'designing',\r\n    'deskbound',\r\n    'desktop',\r\n    'deskwork',\r\n    'desolate',\r\n    'despair',\r\n    'despise',\r\n    'despite',\r\n    'destiny',\r\n    'destitute',\r\n    'destruct',\r\n    'detached',\r\n    'detail',\r\n    'detection',\r\n    'detective',\r\n    'detector',\r\n    'detention',\r\n    'detergent',\r\n    'detest',\r\n    'detonate',\r\n    'detonator',\r\n    'detoxify',\r\n    'detract',\r\n    'deuce',\r\n    'devalue',\r\n    'deviancy',\r\n    'deviant',\r\n    'deviate',\r\n    'deviation',\r\n    'deviator',\r\n    'device',\r\n    'devious',\r\n    'devotedly',\r\n    'devotee',\r\n    'devotion',\r\n    'devourer',\r\n    'devouring',\r\n    'devoutly',\r\n    'dexterity',\r\n    'dexterous',\r\n    'diabetes',\r\n    'diabetic',\r\n    'diabolic',\r\n    'diagnoses',\r\n    'diagnosis',\r\n    'diagram',\r\n    'dial',\r\n    'diameter',\r\n    'diaper',\r\n    'diaphragm',\r\n    'diary',\r\n    'dice',\r\n    'dicing',\r\n    'dictate',\r\n    'dictation',\r\n    'dictator',\r\n    'difficult',\r\n    'diffused',\r\n    'diffuser',\r\n    'diffusion',\r\n    'diffusive',\r\n    'dig',\r\n    'dilation',\r\n    'diligence',\r\n    'diligent',\r\n    'dill',\r\n    'dilute',\r\n    'dime',\r\n    'diminish',\r\n    'dimly',\r\n    'dimmed',\r\n    'dimmer',\r\n    'dimness',\r\n    'dimple',\r\n    'diner',\r\n    'dingbat',\r\n    'dinghy',\r\n    'dinginess',\r\n    'dingo',\r\n    'dingy',\r\n    'dining',\r\n    'dinner',\r\n    'diocese',\r\n    'dioxide',\r\n    'diploma',\r\n    'dipped',\r\n    'dipper',\r\n    'dipping',\r\n    'directed',\r\n    'direction',\r\n    'directive',\r\n    'directly',\r\n    'directory',\r\n    'direness',\r\n    'dirtiness',\r\n    'disabled',\r\n    'disagree',\r\n    'disallow',\r\n    'disarm',\r\n    'disarray',\r\n    'disaster',\r\n    'disband',\r\n    'disbelief',\r\n    'disburse',\r\n    'discard',\r\n    'discern',\r\n    'discharge',\r\n    'disclose',\r\n    'discolor',\r\n    'discount',\r\n    'discourse',\r\n    'discover',\r\n    'discuss',\r\n    'disdain',\r\n    'disengage',\r\n    'disfigure',\r\n    'disgrace',\r\n    'dish',\r\n    'disinfect',\r\n    'disjoin',\r\n    'disk',\r\n    'dislike',\r\n    'disliking',\r\n    'dislocate',\r\n    'dislodge',\r\n    'disloyal',\r\n    'dismantle',\r\n    'dismay',\r\n    'dismiss',\r\n    'dismount',\r\n    'disobey',\r\n    'disorder',\r\n    'disown',\r\n    'disparate',\r\n    'disparity',\r\n    'dispatch',\r\n    'dispense',\r\n    'dispersal',\r\n    'dispersed',\r\n    'disperser',\r\n    'displace',\r\n    'display',\r\n    'displease',\r\n    'disposal',\r\n    'dispose',\r\n    'disprove',\r\n    'dispute',\r\n    'disregard',\r\n    'disrupt',\r\n    'dissuade',\r\n    'distance',\r\n    'distant',\r\n    'distaste',\r\n    'distill',\r\n    'distinct',\r\n    'distort',\r\n    'distract',\r\n    'distress',\r\n    'district',\r\n    'distrust',\r\n    'ditch',\r\n    'ditto',\r\n    'ditzy',\r\n    'dividable',\r\n    'divided',\r\n    'dividend',\r\n    'dividers',\r\n    'dividing',\r\n    'divinely',\r\n    'diving',\r\n    'divinity',\r\n    'divisible',\r\n    'divisibly',\r\n    'division',\r\n    'divisive',\r\n    'divorcee',\r\n    'dizziness',\r\n    'dizzy',\r\n    'doable',\r\n    'docile',\r\n    'dock',\r\n    'doctrine',\r\n    'document',\r\n    'dodge',\r\n    'dodgy',\r\n    'doily',\r\n    'doing',\r\n    'dole',\r\n    'dollar',\r\n    'dollhouse',\r\n    'dollop',\r\n    'dolly',\r\n    'dolphin',\r\n    'domain',\r\n    'domelike',\r\n    'domestic',\r\n    'dominion',\r\n    'dominoes',\r\n    'donated',\r\n    'donation',\r\n    'donator',\r\n    'donor',\r\n    'donut',\r\n    'doodle',\r\n    'doorbell',\r\n    'doorframe',\r\n    'doorknob',\r\n    'doorman',\r\n    'doormat',\r\n    'doornail',\r\n    'doorpost',\r\n    'doorstep',\r\n    'doorstop',\r\n    'doorway',\r\n    'doozy',\r\n    'dork',\r\n    'dormitory',\r\n    'dorsal',\r\n    'dosage',\r\n    'dose',\r\n    'dotted',\r\n    'doubling',\r\n    'douche',\r\n    'dove',\r\n    'down',\r\n    'dowry',\r\n    'doze',\r\n    'drab',\r\n    'dragging',\r\n    'dragonfly',\r\n    'dragonish',\r\n    'dragster',\r\n    'drainable',\r\n    'drainage',\r\n    'drained',\r\n    'drainer',\r\n    'drainpipe',\r\n    'dramatic',\r\n    'dramatize',\r\n    'drank',\r\n    'drapery',\r\n    'drastic',\r\n    'draw',\r\n    'dreaded',\r\n    'dreadful',\r\n    'dreadlock',\r\n    'dreamboat',\r\n    'dreamily',\r\n    'dreamland',\r\n    'dreamless',\r\n    'dreamlike',\r\n    'dreamt',\r\n    'dreamy',\r\n    'drearily',\r\n    'dreary',\r\n    'drench',\r\n    'dress',\r\n    'drew',\r\n    'dribble',\r\n    'dried',\r\n    'drier',\r\n    'drift',\r\n    'driller',\r\n    'drilling',\r\n    'drinkable',\r\n    'drinking',\r\n    'dripping',\r\n    'drippy',\r\n    'drivable',\r\n    'driven',\r\n    'driver',\r\n    'driveway',\r\n    'driving',\r\n    'drizzle',\r\n    'drizzly',\r\n    'drone',\r\n    'drool',\r\n    'droop',\r\n    'drop-down',\r\n    'dropbox',\r\n    'dropkick',\r\n    'droplet',\r\n    'dropout',\r\n    'dropper',\r\n    'drove',\r\n    'drown',\r\n    'drowsily',\r\n    'drudge',\r\n    'drum',\r\n    'dry',\r\n    'dubbed',\r\n    'dubiously',\r\n    'duchess',\r\n    'duckbill',\r\n    'ducking',\r\n    'duckling',\r\n    'ducktail',\r\n    'ducky',\r\n    'duct',\r\n    'dude',\r\n    'duffel',\r\n    'dugout',\r\n    'duh',\r\n    'duke',\r\n    'duller',\r\n    'dullness',\r\n    'duly',\r\n    'dumping',\r\n    'dumpling',\r\n    'dumpster',\r\n    'duo',\r\n    'dupe',\r\n    'duplex',\r\n    'duplicate',\r\n    'duplicity',\r\n    'durable',\r\n    'durably',\r\n    'duration',\r\n    'duress',\r\n    'during',\r\n    'dusk',\r\n    'dust',\r\n    'dutiful',\r\n    'duty',\r\n    'duvet',\r\n    'dwarf',\r\n    'dweeb',\r\n    'dwelled',\r\n    'dweller',\r\n    'dwelling',\r\n    'dwindle',\r\n    'dwindling',\r\n    'dynamic',\r\n    'dynamite',\r\n    'dynasty',\r\n    'dyslexia',\r\n    'dyslexic',\r\n    'each',\r\n    'eagle',\r\n    'earache',\r\n    'eardrum',\r\n    'earflap',\r\n    'earful',\r\n    'earlobe',\r\n    'early',\r\n    'earmark',\r\n    'earmuff',\r\n    'earphone',\r\n    'earpiece',\r\n    'earplugs',\r\n    'earring',\r\n    'earshot',\r\n    'earthen',\r\n    'earthlike',\r\n    'earthling',\r\n    'earthly',\r\n    'earthworm',\r\n    'earthy',\r\n    'earwig',\r\n    'easeful',\r\n    'easel',\r\n    'easiest',\r\n    'easily',\r\n    'easiness',\r\n    'easing',\r\n    'eastbound',\r\n    'eastcoast',\r\n    'easter',\r\n    'eastward',\r\n    'eatable',\r\n    'eaten',\r\n    'eatery',\r\n    'eating',\r\n    'eats',\r\n    'ebay',\r\n    'ebony',\r\n    'ebook',\r\n    'ecard',\r\n    'eccentric',\r\n    'echo',\r\n    'eclair',\r\n    'eclipse',\r\n    'ecologist',\r\n    'ecology',\r\n    'economic',\r\n    'economist',\r\n    'economy',\r\n    'ecosphere',\r\n    'ecosystem',\r\n    'edge',\r\n    'edginess',\r\n    'edging',\r\n    'edgy',\r\n    'edition',\r\n    'editor',\r\n    'educated',\r\n    'education',\r\n    'educator',\r\n    'eel',\r\n    'effective',\r\n    'effects',\r\n    'efficient',\r\n    'effort',\r\n    'eggbeater',\r\n    'egging',\r\n    'eggnog',\r\n    'eggplant',\r\n    'eggshell',\r\n    'egomaniac',\r\n    'egotism',\r\n    'egotistic',\r\n    'either',\r\n    'eject',\r\n    'elaborate',\r\n    'elastic',\r\n    'elated',\r\n    'elbow',\r\n    'eldercare',\r\n    'elderly',\r\n    'eldest',\r\n    'electable',\r\n    'election',\r\n    'elective',\r\n    'elephant',\r\n    'elevate',\r\n    'elevating',\r\n    'elevation',\r\n    'elevator',\r\n    'eleven',\r\n    'elf',\r\n    'eligible',\r\n    'eligibly',\r\n    'eliminate',\r\n    'elite',\r\n    'elitism',\r\n    'elixir',\r\n    'elk',\r\n    'ellipse',\r\n    'elliptic',\r\n    'elm',\r\n    'elongated',\r\n    'elope',\r\n    'eloquence',\r\n    'eloquent',\r\n    'elsewhere',\r\n    'elude',\r\n    'elusive',\r\n    'elves',\r\n    'email',\r\n    'embargo',\r\n    'embark',\r\n    'embassy',\r\n    'embattled',\r\n    'embellish',\r\n    'ember',\r\n    'embezzle',\r\n    'emblaze',\r\n    'emblem',\r\n    'embody',\r\n    'embolism',\r\n    'emboss',\r\n    'embroider',\r\n    'emcee',\r\n    'emerald',\r\n    'emergency',\r\n    'emission',\r\n    'emit',\r\n    'emote',\r\n    'emoticon',\r\n    'emotion',\r\n    'empathic',\r\n    'empathy',\r\n    'emperor',\r\n    'emphases',\r\n    'emphasis',\r\n    'emphasize',\r\n    'emphatic',\r\n    'empirical',\r\n    'employed',\r\n    'employee',\r\n    'employer',\r\n    'emporium',\r\n    'empower',\r\n    'emptier',\r\n    'emptiness',\r\n    'empty',\r\n    'emu',\r\n    'enable',\r\n    'enactment',\r\n    'enamel',\r\n    'enchanted',\r\n    'enchilada',\r\n    'encircle',\r\n    'enclose',\r\n    'enclosure',\r\n    'encode',\r\n    'encore',\r\n    'encounter',\r\n    'encourage',\r\n    'encroach',\r\n    'encrust',\r\n    'encrypt',\r\n    'endanger',\r\n    'endeared',\r\n    'endearing',\r\n    'ended',\r\n    'ending',\r\n    'endless',\r\n    'endnote',\r\n    'endocrine',\r\n    'endorphin',\r\n    'endorse',\r\n    'endowment',\r\n    'endpoint',\r\n    'endurable',\r\n    'endurance',\r\n    'enduring',\r\n    'energetic',\r\n    'energize',\r\n    'energy',\r\n    'enforced',\r\n    'enforcer',\r\n    'engaged',\r\n    'engaging',\r\n    'engine',\r\n    'engorge',\r\n    'engraved',\r\n    'engraver',\r\n    'engraving',\r\n    'engross',\r\n    'engulf',\r\n    'enhance',\r\n    'enigmatic',\r\n    'enjoyable',\r\n    'enjoyably',\r\n    'enjoyer',\r\n    'enjoying',\r\n    'enjoyment',\r\n    'enlarged',\r\n    'enlarging',\r\n    'enlighten',\r\n    'enlisted',\r\n    'enquirer',\r\n    'enrage',\r\n    'enrich',\r\n    'enroll',\r\n    'enslave',\r\n    'ensnare',\r\n    'ensure',\r\n    'entail',\r\n    'entangled',\r\n    'entering',\r\n    'entertain',\r\n    'enticing',\r\n    'entire',\r\n    'entitle',\r\n    'entity',\r\n    'entomb',\r\n    'entourage',\r\n    'entrap',\r\n    'entree',\r\n    'entrench',\r\n    'entrust',\r\n    'entryway',\r\n    'entwine',\r\n    'enunciate',\r\n    'envelope',\r\n    'enviable',\r\n    'enviably',\r\n    'envious',\r\n    'envision',\r\n    'envoy',\r\n    'envy',\r\n    'enzyme',\r\n    'epic',\r\n    'epidemic',\r\n    'epidermal',\r\n    'epidermis',\r\n    'epidural',\r\n    'epilepsy',\r\n    'epileptic',\r\n    'epilogue',\r\n    'epiphany',\r\n    'episode',\r\n    'equal',\r\n    'equate',\r\n    'equation',\r\n    'equator',\r\n    'equinox',\r\n    'equipment',\r\n    'equity',\r\n    'equivocal',\r\n    'eradicate',\r\n    'erasable',\r\n    'erased',\r\n    'eraser',\r\n    'erasure',\r\n    'ergonomic',\r\n    'errand',\r\n    'errant',\r\n    'erratic',\r\n    'error',\r\n    'erupt',\r\n    'escalate',\r\n    'escalator',\r\n    'escapable',\r\n    'escapade',\r\n    'escapist',\r\n    'escargot',\r\n    'eskimo',\r\n    'esophagus',\r\n    'espionage',\r\n    'espresso',\r\n    'esquire',\r\n    'essay',\r\n    'essence',\r\n    'essential',\r\n    'establish',\r\n    'estate',\r\n    'esteemed',\r\n    'estimate',\r\n    'estimator',\r\n    'estranged',\r\n    'estrogen',\r\n    'etching',\r\n    'eternal',\r\n    'eternity',\r\n    'ethanol',\r\n    'ether',\r\n    'ethically',\r\n    'ethics',\r\n    'euphemism',\r\n    'evacuate',\r\n    'evacuee',\r\n    'evade',\r\n    'evaluate',\r\n    'evaluator',\r\n    'evaporate',\r\n    'evasion',\r\n    'evasive',\r\n    'even',\r\n    'everglade',\r\n    'evergreen',\r\n    'everybody',\r\n    'everyday',\r\n    'everyone',\r\n    'evict',\r\n    'evidence',\r\n    'evident',\r\n    'evil',\r\n    'evoke',\r\n    'evolution',\r\n    'evolve',\r\n    'exact',\r\n    'exalted',\r\n    'example',\r\n    'excavate',\r\n    'excavator',\r\n    'exceeding',\r\n    'exception',\r\n    'excess',\r\n    'exchange',\r\n    'excitable',\r\n    'exciting',\r\n    'exclaim',\r\n    'exclude',\r\n    'excluding',\r\n    'exclusion',\r\n    'exclusive',\r\n    'excretion',\r\n    'excretory',\r\n    'excursion',\r\n    'excusable',\r\n    'excusably',\r\n    'excuse',\r\n    'exemplary',\r\n    'exemplify',\r\n    'exemption',\r\n    'exerciser',\r\n    'exert',\r\n    'exes',\r\n    'exfoliate',\r\n    'exhale',\r\n    'exhaust',\r\n    'exhume',\r\n    'exile',\r\n    'existing',\r\n    'exit',\r\n    'exodus',\r\n    'exonerate',\r\n    'exorcism',\r\n    'exorcist',\r\n    'expand',\r\n    'expanse',\r\n    'expansion',\r\n    'expansive',\r\n    'expectant',\r\n    'expedited',\r\n    'expediter',\r\n    'expel',\r\n    'expend',\r\n    'expenses',\r\n    'expensive',\r\n    'expert',\r\n    'expire',\r\n    'expiring',\r\n    'explain',\r\n    'expletive',\r\n    'explicit',\r\n    'explode',\r\n    'exploit',\r\n    'explore',\r\n    'exploring',\r\n    'exponent',\r\n    'exporter',\r\n    'exposable',\r\n    'expose',\r\n    'exposure',\r\n    'express',\r\n    'expulsion',\r\n    'exquisite',\r\n    'extended',\r\n    'extending',\r\n    'extent',\r\n    'extenuate',\r\n    'exterior',\r\n    'external',\r\n    'extinct',\r\n    'extortion',\r\n    'extradite',\r\n    'extras',\r\n    'extrovert',\r\n    'extrude',\r\n    'extruding',\r\n    'exuberant',\r\n    'fable',\r\n    'fabric',\r\n    'fabulous',\r\n    'facebook',\r\n    'facecloth',\r\n    'facedown',\r\n    'faceless',\r\n    'facelift',\r\n    'faceplate',\r\n    'faceted',\r\n    'facial',\r\n    'facility',\r\n    'facing',\r\n    'facsimile',\r\n    'faction',\r\n    'factoid',\r\n    'factor',\r\n    'factsheet',\r\n    'factual',\r\n    'faculty',\r\n    'fade',\r\n    'fading',\r\n    'failing',\r\n    'falcon',\r\n    'fall',\r\n    'false',\r\n    'falsify',\r\n    'fame',\r\n    'familiar',\r\n    'family',\r\n    'famine',\r\n    'famished',\r\n    'fanatic',\r\n    'fancied',\r\n    'fanciness',\r\n    'fancy',\r\n    'fanfare',\r\n    'fang',\r\n    'fanning',\r\n    'fantasize',\r\n    'fantastic',\r\n    'fantasy',\r\n    'fascism',\r\n    'fastball',\r\n    'faster',\r\n    'fasting',\r\n    'fastness',\r\n    'faucet',\r\n    'favorable',\r\n    'favorably',\r\n    'favored',\r\n    'favoring',\r\n    'favorite',\r\n    'fax',\r\n    'feast',\r\n    'federal',\r\n    'fedora',\r\n    'feeble',\r\n    'feed',\r\n    'feel',\r\n    'feisty',\r\n    'feline',\r\n    'felt-tip',\r\n    'feminine',\r\n    'feminism',\r\n    'feminist',\r\n    'feminize',\r\n    'femur',\r\n    'fence',\r\n    'fencing',\r\n    'fender',\r\n    'ferment',\r\n    'fernlike',\r\n    'ferocious',\r\n    'ferocity',\r\n    'ferret',\r\n    'ferris',\r\n    'ferry',\r\n    'fervor',\r\n    'fester',\r\n    'festival',\r\n    'festive',\r\n    'festivity',\r\n    'fetal',\r\n    'fetch',\r\n    'fever',\r\n    'fiber',\r\n    'fiction',\r\n    'fiddle',\r\n    'fiddling',\r\n    'fidelity',\r\n    'fidgeting',\r\n    'fidgety',\r\n    'fifteen',\r\n    'fifth',\r\n    'fiftieth',\r\n    'fifty',\r\n    'figment',\r\n    'figure',\r\n    'figurine',\r\n    'filing',\r\n    'filled',\r\n    'filler',\r\n    'filling',\r\n    'film',\r\n    'filter',\r\n    'filth',\r\n    'filtrate',\r\n    'finale',\r\n    'finalist',\r\n    'finalize',\r\n    'finally',\r\n    'finance',\r\n    'financial',\r\n    'finch',\r\n    'fineness',\r\n    'finer',\r\n    'finicky',\r\n    'finished',\r\n    'finisher',\r\n    'finishing',\r\n    'finite',\r\n    'finless',\r\n    'finlike',\r\n    'fiscally',\r\n    'fit',\r\n    'five',\r\n    'flaccid',\r\n    'flagman',\r\n    'flagpole',\r\n    'flagship',\r\n    'flagstick',\r\n    'flagstone',\r\n    'flail',\r\n    'flakily',\r\n    'flaky',\r\n    'flame',\r\n    'flammable',\r\n    'flanked',\r\n    'flanking',\r\n    'flannels',\r\n    'flap',\r\n    'flaring',\r\n    'flashback',\r\n    'flashbulb',\r\n    'flashcard',\r\n    'flashily',\r\n    'flashing',\r\n    'flashy',\r\n    'flask',\r\n    'flatbed',\r\n    'flatfoot',\r\n    'flatly',\r\n    'flatness',\r\n    'flatten',\r\n    'flattered',\r\n    'flatterer',\r\n    'flattery',\r\n    'flattop',\r\n    'flatware',\r\n    'flatworm',\r\n    'flavored',\r\n    'flavorful',\r\n    'flavoring',\r\n    'flaxseed',\r\n    'fled',\r\n    'fleshed',\r\n    'fleshy',\r\n    'flick',\r\n    'flier',\r\n    'flight',\r\n    'flinch',\r\n    'fling',\r\n    'flint',\r\n    'flip',\r\n    'flirt',\r\n    'float',\r\n    'flock',\r\n    'flogging',\r\n    'flop',\r\n    'floral',\r\n    'florist',\r\n    'floss',\r\n    'flounder',\r\n    'flyable',\r\n    'flyaway',\r\n    'flyer',\r\n    'flying',\r\n    'flyover',\r\n    'flypaper',\r\n    'foam',\r\n    'foe',\r\n    'fog',\r\n    'foil',\r\n    'folic',\r\n    'folk',\r\n    'follicle',\r\n    'follow',\r\n    'fondling',\r\n    'fondly',\r\n    'fondness',\r\n    'fondue',\r\n    'font',\r\n    'food',\r\n    'fool',\r\n    'footage',\r\n    'football',\r\n    'footbath',\r\n    'footboard',\r\n    'footer',\r\n    'footgear',\r\n    'foothill',\r\n    'foothold',\r\n    'footing',\r\n    'footless',\r\n    'footman',\r\n    'footnote',\r\n    'footpad',\r\n    'footpath',\r\n    'footprint',\r\n    'footrest',\r\n    'footsie',\r\n    'footsore',\r\n    'footwear',\r\n    'footwork',\r\n    'fossil',\r\n    'foster',\r\n    'founder',\r\n    'founding',\r\n    'fountain',\r\n    'fox',\r\n    'foyer',\r\n    'fraction',\r\n    'fracture',\r\n    'fragile',\r\n    'fragility',\r\n    'fragment',\r\n    'fragrance',\r\n    'fragrant',\r\n    'frail',\r\n    'frame',\r\n    'framing',\r\n    'frantic',\r\n    'fraternal',\r\n    'frayed',\r\n    'fraying',\r\n    'frays',\r\n    'freckled',\r\n    'freckles',\r\n    'freebase',\r\n    'freebee',\r\n    'freebie',\r\n    'freedom',\r\n    'freefall',\r\n    'freehand',\r\n    'freeing',\r\n    'freeload',\r\n    'freely',\r\n    'freemason',\r\n    'freeness',\r\n    'freestyle',\r\n    'freeware',\r\n    'freeway',\r\n    'freewill',\r\n    'freezable',\r\n    'freezing',\r\n    'freight',\r\n    'french',\r\n    'frenzied',\r\n    'frenzy',\r\n    'frequency',\r\n    'frequent',\r\n    'fresh',\r\n    'fretful',\r\n    'fretted',\r\n    'friction',\r\n    'friday',\r\n    'fridge',\r\n    'fried',\r\n    'friend',\r\n    'frighten',\r\n    'frightful',\r\n    'frigidity',\r\n    'frigidly',\r\n    'frill',\r\n    'fringe',\r\n    'frisbee',\r\n    'frisk',\r\n    'fritter',\r\n    'frivolous',\r\n    'frolic',\r\n    'from',\r\n    'front',\r\n    'frostbite',\r\n    'frosted',\r\n    'frostily',\r\n    'frosting',\r\n    'frostlike',\r\n    'frosty',\r\n    'froth',\r\n    'frown',\r\n    'frozen',\r\n    'fructose',\r\n    'frugality',\r\n    'frugally',\r\n    'fruit',\r\n    'frustrate',\r\n    'frying',\r\n    'gab',\r\n    'gaffe',\r\n    'gag',\r\n    'gainfully',\r\n    'gaining',\r\n    'gains',\r\n    'gala',\r\n    'gallantly',\r\n    'galleria',\r\n    'gallery',\r\n    'galley',\r\n    'gallon',\r\n    'gallows',\r\n    'gallstone',\r\n    'galore',\r\n    'galvanize',\r\n    'gambling',\r\n    'game',\r\n    'gaming',\r\n    'gamma',\r\n    'gander',\r\n    'gangly',\r\n    'gangrene',\r\n    'gangway',\r\n    'gap',\r\n    'garage',\r\n    'garbage',\r\n    'garden',\r\n    'gargle',\r\n    'garland',\r\n    'garlic',\r\n    'garment',\r\n    'garnet',\r\n    'garnish',\r\n    'garter',\r\n    'gas',\r\n    'gatherer',\r\n    'gathering',\r\n    'gating',\r\n    'gauging',\r\n    'gauntlet',\r\n    'gauze',\r\n    'gave',\r\n    'gawk',\r\n    'gazing',\r\n    'gear',\r\n    'gecko',\r\n    'geek',\r\n    'geiger',\r\n    'gem',\r\n    'gender',\r\n    'generic',\r\n    'generous',\r\n    'genetics',\r\n    'genre',\r\n    'gentile',\r\n    'gentleman',\r\n    'gently',\r\n    'gents',\r\n    'geography',\r\n    'geologic',\r\n    'geologist',\r\n    'geology',\r\n    'geometric',\r\n    'geometry',\r\n    'geranium',\r\n    'gerbil',\r\n    'geriatric',\r\n    'germicide',\r\n    'germinate',\r\n    'germless',\r\n    'germproof',\r\n    'gestate',\r\n    'gestation',\r\n    'gesture',\r\n    'getaway',\r\n    'getting',\r\n    'getup',\r\n    'giant',\r\n    'gibberish',\r\n    'giblet',\r\n    'giddily',\r\n    'giddiness',\r\n    'giddy',\r\n    'gift',\r\n    'gigabyte',\r\n    'gigahertz',\r\n    'gigantic',\r\n    'giggle',\r\n    'giggling',\r\n    'giggly',\r\n    'gigolo',\r\n    'gilled',\r\n    'gills',\r\n    'gimmick',\r\n    'girdle',\r\n    'giveaway',\r\n    'given',\r\n    'giver',\r\n    'giving',\r\n    'gizmo',\r\n    'gizzard',\r\n    'glacial',\r\n    'glacier',\r\n    'glade',\r\n    'gladiator',\r\n    'gladly',\r\n    'glamorous',\r\n    'glamour',\r\n    'glance',\r\n    'glancing',\r\n    'glandular',\r\n    'glare',\r\n    'glaring',\r\n    'glass',\r\n    'glaucoma',\r\n    'glazing',\r\n    'gleaming',\r\n    'gleeful',\r\n    'glider',\r\n    'gliding',\r\n    'glimmer',\r\n    'glimpse',\r\n    'glisten',\r\n    'glitch',\r\n    'glitter',\r\n    'glitzy',\r\n    'gloater',\r\n    'gloating',\r\n    'gloomily',\r\n    'gloomy',\r\n    'glorified',\r\n    'glorifier',\r\n    'glorify',\r\n    'glorious',\r\n    'glory',\r\n    'gloss',\r\n    'glove',\r\n    'glowing',\r\n    'glowworm',\r\n    'glucose',\r\n    'glue',\r\n    'gluten',\r\n    'glutinous',\r\n    'glutton',\r\n    'gnarly',\r\n    'gnat',\r\n    'goal',\r\n    'goatskin',\r\n    'goes',\r\n    'goggles',\r\n    'going',\r\n    'goldfish',\r\n    'goldmine',\r\n    'goldsmith',\r\n    'golf',\r\n    'goliath',\r\n    'gonad',\r\n    'gondola',\r\n    'gone',\r\n    'gong',\r\n    'good',\r\n    'gooey',\r\n    'goofball',\r\n    'goofiness',\r\n    'goofy',\r\n    'google',\r\n    'goon',\r\n    'gopher',\r\n    'gore',\r\n    'gorged',\r\n    'gorgeous',\r\n    'gory',\r\n    'gosling',\r\n    'gossip',\r\n    'gothic',\r\n    'gotten',\r\n    'gout',\r\n    'gown',\r\n    'grab',\r\n    'graceful',\r\n    'graceless',\r\n    'gracious',\r\n    'gradation',\r\n    'graded',\r\n    'grader',\r\n    'gradient',\r\n    'grading',\r\n    'gradually',\r\n    'graduate',\r\n    'graffiti',\r\n    'grafted',\r\n    'grafting',\r\n    'grain',\r\n    'granddad',\r\n    'grandkid',\r\n    'grandly',\r\n    'grandma',\r\n    'grandpa',\r\n    'grandson',\r\n    'granite',\r\n    'granny',\r\n    'granola',\r\n    'grant',\r\n    'granular',\r\n    'grape',\r\n    'graph',\r\n    'grapple',\r\n    'grappling',\r\n    'grasp',\r\n    'grass',\r\n    'gratified',\r\n    'gratify',\r\n    'grating',\r\n    'gratitude',\r\n    'gratuity',\r\n    'gravel',\r\n    'graveness',\r\n    'graves',\r\n    'graveyard',\r\n    'gravitate',\r\n    'gravity',\r\n    'gravy',\r\n    'gray',\r\n    'grazing',\r\n    'greasily',\r\n    'greedily',\r\n    'greedless',\r\n    'greedy',\r\n    'green',\r\n    'greeter',\r\n    'greeting',\r\n    'grew',\r\n    'greyhound',\r\n    'grid',\r\n    'grief',\r\n    'grievance',\r\n    'grieving',\r\n    'grievous',\r\n    'grill',\r\n    'grimace',\r\n    'grimacing',\r\n    'grime',\r\n    'griminess',\r\n    'grimy',\r\n    'grinch',\r\n    'grinning',\r\n    'grip',\r\n    'gristle',\r\n    'grit',\r\n    'groggily',\r\n    'groggy',\r\n    'groin',\r\n    'groom',\r\n    'groove',\r\n    'grooving',\r\n    'groovy',\r\n    'grope',\r\n    'ground',\r\n    'grouped',\r\n    'grout',\r\n    'grove',\r\n    'grower',\r\n    'growing',\r\n    'growl',\r\n    'grub',\r\n    'grudge',\r\n    'grudging',\r\n    'grueling',\r\n    'gruffly',\r\n    'grumble',\r\n    'grumbling',\r\n    'grumbly',\r\n    'grumpily',\r\n    'grunge',\r\n    'grunt',\r\n    'guacamole',\r\n    'guidable',\r\n    'guidance',\r\n    'guide',\r\n    'guiding',\r\n    'guileless',\r\n    'guise',\r\n    'gulf',\r\n    'gullible',\r\n    'gully',\r\n    'gulp',\r\n    'gumball',\r\n    'gumdrop',\r\n    'gumminess',\r\n    'gumming',\r\n    'gummy',\r\n    'gurgle',\r\n    'gurgling',\r\n    'guru',\r\n    'gush',\r\n    'gusto',\r\n    'gusty',\r\n    'gutless',\r\n    'guts',\r\n    'gutter',\r\n    'guy',\r\n    'guzzler',\r\n    'gyration',\r\n    'habitable',\r\n    'habitant',\r\n    'habitat',\r\n    'habitual',\r\n    'hacked',\r\n    'hacker',\r\n    'hacking',\r\n    'hacksaw',\r\n    'had',\r\n    'haggler',\r\n    'haiku',\r\n    'half',\r\n    'halogen',\r\n    'halt',\r\n    'halved',\r\n    'halves',\r\n    'hamburger',\r\n    'hamlet',\r\n    'hammock',\r\n    'hamper',\r\n    'hamster',\r\n    'hamstring',\r\n    'handbag',\r\n    'handball',\r\n    'handbook',\r\n    'handbrake',\r\n    'handcart',\r\n    'handclap',\r\n    'handclasp',\r\n    'handcraft',\r\n    'handcuff',\r\n    'handed',\r\n    'handful',\r\n    'handgrip',\r\n    'handgun',\r\n    'handheld',\r\n    'handiness',\r\n    'handiwork',\r\n    'handlebar',\r\n    'handled',\r\n    'handler',\r\n    'handling',\r\n    'handmade',\r\n    'handoff',\r\n    'handpick',\r\n    'handprint',\r\n    'handrail',\r\n    'handsaw',\r\n    'handset',\r\n    'handsfree',\r\n    'handshake',\r\n    'handstand',\r\n    'handwash',\r\n    'handwork',\r\n    'handwoven',\r\n    'handwrite',\r\n    'handyman',\r\n    'hangnail',\r\n    'hangout',\r\n    'hangover',\r\n    'hangup',\r\n    'hankering',\r\n    'hankie',\r\n    'hanky',\r\n    'haphazard',\r\n    'happening',\r\n    'happier',\r\n    'happiest',\r\n    'happily',\r\n    'happiness',\r\n    'happy',\r\n    'harbor',\r\n    'hardcopy',\r\n    'hardcore',\r\n    'hardcover',\r\n    'harddisk',\r\n    'hardened',\r\n    'hardener',\r\n    'hardening',\r\n    'hardhat',\r\n    'hardhead',\r\n    'hardiness',\r\n    'hardly',\r\n    'hardness',\r\n    'hardship',\r\n    'hardware',\r\n    'hardwired',\r\n    'hardwood',\r\n    'hardy',\r\n    'harmful',\r\n    'harmless',\r\n    'harmonica',\r\n    'harmonics',\r\n    'harmonize',\r\n    'harmony',\r\n    'harness',\r\n    'harpist',\r\n    'harsh',\r\n    'harvest',\r\n    'hash',\r\n    'hassle',\r\n    'haste',\r\n    'hastily',\r\n    'hastiness',\r\n    'hasty',\r\n    'hatbox',\r\n    'hatchback',\r\n    'hatchery',\r\n    'hatchet',\r\n    'hatching',\r\n    'hatchling',\r\n    'hate',\r\n    'hatless',\r\n    'hatred',\r\n    'haunt',\r\n    'haven',\r\n    'hazard',\r\n    'hazelnut',\r\n    'hazily',\r\n    'haziness',\r\n    'hazing',\r\n    'hazy',\r\n    'headache',\r\n    'headband',\r\n    'headboard',\r\n    'headcount',\r\n    'headdress',\r\n    'headed',\r\n    'header',\r\n    'headfirst',\r\n    'headgear',\r\n    'heading',\r\n    'headlamp',\r\n    'headless',\r\n    'headlock',\r\n    'headphone',\r\n    'headpiece',\r\n    'headrest',\r\n    'headroom',\r\n    'headscarf',\r\n    'headset',\r\n    'headsman',\r\n    'headstand',\r\n    'headstone',\r\n    'headway',\r\n    'headwear',\r\n    'heap',\r\n    'heat',\r\n    'heave',\r\n    'heavily',\r\n    'heaviness',\r\n    'heaving',\r\n    'hedge',\r\n    'hedging',\r\n    'heftiness',\r\n    'hefty',\r\n    'helium',\r\n    'helmet',\r\n    'helper',\r\n    'helpful',\r\n    'helping',\r\n    'helpless',\r\n    'helpline',\r\n    'hemlock',\r\n    'hemstitch',\r\n    'hence',\r\n    'henchman',\r\n    'henna',\r\n    'herald',\r\n    'herbal',\r\n    'herbicide',\r\n    'herbs',\r\n    'heritage',\r\n    'hermit',\r\n    'heroics',\r\n    'heroism',\r\n    'herring',\r\n    'herself',\r\n    'hertz',\r\n    'hesitancy',\r\n    'hesitant',\r\n    'hesitate',\r\n    'hexagon',\r\n    'hexagram',\r\n    'hubcap',\r\n    'huddle',\r\n    'huddling',\r\n    'huff',\r\n    'hug',\r\n    'hula',\r\n    'hulk',\r\n    'hull',\r\n    'human',\r\n    'humble',\r\n    'humbling',\r\n    'humbly',\r\n    'humid',\r\n    'humiliate',\r\n    'humility',\r\n    'humming',\r\n    'hummus',\r\n    'humongous',\r\n    'humorist',\r\n    'humorless',\r\n    'humorous',\r\n    'humpback',\r\n    'humped',\r\n    'humvee',\r\n    'hunchback',\r\n    'hundredth',\r\n    'hunger',\r\n    'hungrily',\r\n    'hungry',\r\n    'hunk',\r\n    'hunter',\r\n    'hunting',\r\n    'huntress',\r\n    'huntsman',\r\n    'hurdle',\r\n    'hurled',\r\n    'hurler',\r\n    'hurling',\r\n    'hurray',\r\n    'hurricane',\r\n    'hurried',\r\n    'hurry',\r\n    'hurt',\r\n    'husband',\r\n    'hush',\r\n    'husked',\r\n    'huskiness',\r\n    'hut',\r\n    'hybrid',\r\n    'hydrant',\r\n    'hydrated',\r\n    'hydration',\r\n    'hydrogen',\r\n    'hydroxide',\r\n    'hyperlink',\r\n    'hypertext',\r\n    'hyphen',\r\n    'hypnoses',\r\n    'hypnosis',\r\n    'hypnotic',\r\n    'hypnotism',\r\n    'hypnotist',\r\n    'hypnotize',\r\n    'hypocrisy',\r\n    'hypocrite',\r\n    'ibuprofen',\r\n    'ice',\r\n    'iciness',\r\n    'icing',\r\n    'icky',\r\n    'icon',\r\n    'icy',\r\n    'idealism',\r\n    'idealist',\r\n    'idealize',\r\n    'ideally',\r\n    'idealness',\r\n    'identical',\r\n    'identify',\r\n    'identity',\r\n    'ideology',\r\n    'idiocy',\r\n    'idiom',\r\n    'idly',\r\n    'igloo',\r\n    'ignition',\r\n    'ignore',\r\n    'iguana',\r\n    'illicitly',\r\n    'illusion',\r\n    'illusive',\r\n    'image',\r\n    'imaginary',\r\n    'imagines',\r\n    'imaging',\r\n    'imbecile',\r\n    'imitate',\r\n    'imitation',\r\n    'immature',\r\n    'immerse',\r\n    'immersion',\r\n    'imminent',\r\n    'immobile',\r\n    'immodest',\r\n    'immorally',\r\n    'immortal',\r\n    'immovable',\r\n    'immovably',\r\n    'immunity',\r\n    'immunize',\r\n    'impaired',\r\n    'impale',\r\n    'impart',\r\n    'impatient',\r\n    'impeach',\r\n    'impeding',\r\n    'impending',\r\n    'imperfect',\r\n    'imperial',\r\n    'impish',\r\n    'implant',\r\n    'implement',\r\n    'implicate',\r\n    'implicit',\r\n    'implode',\r\n    'implosion',\r\n    'implosive',\r\n    'imply',\r\n    'impolite',\r\n    'important',\r\n    'importer',\r\n    'impose',\r\n    'imposing',\r\n    'impotence',\r\n    'impotency',\r\n    'impotent',\r\n    'impound',\r\n    'imprecise',\r\n    'imprint',\r\n    'imprison',\r\n    'impromptu',\r\n    'improper',\r\n    'improve',\r\n    'improving',\r\n    'improvise',\r\n    'imprudent',\r\n    'impulse',\r\n    'impulsive',\r\n    'impure',\r\n    'impurity',\r\n    'iodine',\r\n    'iodize',\r\n    'ion',\r\n    'ipad',\r\n    'iphone',\r\n    'ipod',\r\n    'irate',\r\n    'irk',\r\n    'iron',\r\n    'irregular',\r\n    'irrigate',\r\n    'irritable',\r\n    'irritably',\r\n    'irritant',\r\n    'irritate',\r\n    'islamic',\r\n    'islamist',\r\n    'isolated',\r\n    'isolating',\r\n    'isolation',\r\n    'isotope',\r\n    'issue',\r\n    'issuing',\r\n    'italicize',\r\n    'italics',\r\n    'item',\r\n    'itinerary',\r\n    'itunes',\r\n    'ivory',\r\n    'ivy',\r\n    'jab',\r\n    'jackal',\r\n    'jacket',\r\n    'jackknife',\r\n    'jackpot',\r\n    'jailbird',\r\n    'jailbreak',\r\n    'jailer',\r\n    'jailhouse',\r\n    'jalapeno',\r\n    'jam',\r\n    'janitor',\r\n    'january',\r\n    'jargon',\r\n    'jarring',\r\n    'jasmine',\r\n    'jaundice',\r\n    'jaunt',\r\n    'java',\r\n    'jawed',\r\n    'jawless',\r\n    'jawline',\r\n    'jaws',\r\n    'jaybird',\r\n    'jaywalker',\r\n    'jazz',\r\n    'jeep',\r\n    'jeeringly',\r\n    'jellied',\r\n    'jelly',\r\n    'jersey',\r\n    'jester',\r\n    'jet',\r\n    'jiffy',\r\n    'jigsaw',\r\n    'jimmy',\r\n    'jingle',\r\n    'jingling',\r\n    'jinx',\r\n    'jitters',\r\n    'jittery',\r\n    'job',\r\n    'jockey',\r\n    'jockstrap',\r\n    'jogger',\r\n    'jogging',\r\n    'john',\r\n    'joining',\r\n    'jokester',\r\n    'jokingly',\r\n    'jolliness',\r\n    'jolly',\r\n    'jolt',\r\n    'jot',\r\n    'jovial',\r\n    'joyfully',\r\n    'joylessly',\r\n    'joyous',\r\n    'joyride',\r\n    'joystick',\r\n    'jubilance',\r\n    'jubilant',\r\n    'judge',\r\n    'judgingly',\r\n    'judicial',\r\n    'judiciary',\r\n    'judo',\r\n    'juggle',\r\n    'juggling',\r\n    'jugular',\r\n    'juice',\r\n    'juiciness',\r\n    'juicy',\r\n    'jujitsu',\r\n    'jukebox',\r\n    'july',\r\n    'jumble',\r\n    'jumbo',\r\n    'jump',\r\n    'junction',\r\n    'juncture',\r\n    'june',\r\n    'junior',\r\n    'juniper',\r\n    'junkie',\r\n    'junkman',\r\n    'junkyard',\r\n    'jurist',\r\n    'juror',\r\n    'jury',\r\n    'justice',\r\n    'justifier',\r\n    'justify',\r\n    'justly',\r\n    'justness',\r\n    'juvenile',\r\n    'kabob',\r\n    'kangaroo',\r\n    'karaoke',\r\n    'karate',\r\n    'karma',\r\n    'kebab',\r\n    'keenly',\r\n    'keenness',\r\n    'keep',\r\n    'keg',\r\n    'kelp',\r\n    'kennel',\r\n    'kept',\r\n    'kerchief',\r\n    'kerosene',\r\n    'kettle',\r\n    'kick',\r\n    'kiln',\r\n    'kilobyte',\r\n    'kilogram',\r\n    'kilometer',\r\n    'kilowatt',\r\n    'kilt',\r\n    'kimono',\r\n    'kindle',\r\n    'kindling',\r\n    'kindly',\r\n    'kindness',\r\n    'kindred',\r\n    'kinetic',\r\n    'kinfolk',\r\n    'king',\r\n    'kinship',\r\n    'kinsman',\r\n    'kinswoman',\r\n    'kissable',\r\n    'kisser',\r\n    'kissing',\r\n    'kitchen',\r\n    'kite',\r\n    'kitten',\r\n    'kitty',\r\n    'kiwi',\r\n    'kleenex',\r\n    'knapsack',\r\n    'knee',\r\n    'knelt',\r\n    'knickers',\r\n    'knoll',\r\n    'koala',\r\n    'kooky',\r\n    'kosher',\r\n    'krypton',\r\n    'kudos',\r\n    'kung',\r\n    'labored',\r\n    'laborer',\r\n    'laboring',\r\n    'laborious',\r\n    'labrador',\r\n    'ladder',\r\n    'ladies',\r\n    'ladle',\r\n    'ladybug',\r\n    'ladylike',\r\n    'lagged',\r\n    'lagging',\r\n    'lagoon',\r\n    'lair',\r\n    'lake',\r\n    'lance',\r\n    'landed',\r\n    'landfall',\r\n    'landfill',\r\n    'landing',\r\n    'landlady',\r\n    'landless',\r\n    'landline',\r\n    'landlord',\r\n    'landmark',\r\n    'landmass',\r\n    'landmine',\r\n    'landowner',\r\n    'landscape',\r\n    'landside',\r\n    'landslide',\r\n    'language',\r\n    'lankiness',\r\n    'lanky',\r\n    'lantern',\r\n    'lapdog',\r\n    'lapel',\r\n    'lapped',\r\n    'lapping',\r\n    'laptop',\r\n    'lard',\r\n    'large',\r\n    'lark',\r\n    'lash',\r\n    'lasso',\r\n    'last',\r\n    'latch',\r\n    'late',\r\n    'lather',\r\n    'latitude',\r\n    'latrine',\r\n    'latter',\r\n    'latticed',\r\n    'launch',\r\n    'launder',\r\n    'laundry',\r\n    'laurel',\r\n    'lavender',\r\n    'lavish',\r\n    'laxative',\r\n    'lazily',\r\n    'laziness',\r\n    'lazy',\r\n    'lecturer',\r\n    'left',\r\n    'legacy',\r\n    'legal',\r\n    'legend',\r\n    'legged',\r\n    'leggings',\r\n    'legible',\r\n    'legibly',\r\n    'legislate',\r\n    'lego',\r\n    'legroom',\r\n    'legume',\r\n    'legwarmer',\r\n    'legwork',\r\n    'lemon',\r\n    'lend',\r\n    'length',\r\n    'lens',\r\n    'lent',\r\n    'leotard',\r\n    'lesser',\r\n    'letdown',\r\n    'lethargic',\r\n    'lethargy',\r\n    'letter',\r\n    'lettuce',\r\n    'level',\r\n    'leverage',\r\n    'levers',\r\n    'levitate',\r\n    'levitator',\r\n    'liability',\r\n    'liable',\r\n    'liberty',\r\n    'librarian',\r\n    'library',\r\n    'licking',\r\n    'licorice',\r\n    'lid',\r\n    'life',\r\n    'lifter',\r\n    'lifting',\r\n    'liftoff',\r\n    'ligament',\r\n    'likely',\r\n    'likeness',\r\n    'likewise',\r\n    'liking',\r\n    'lilac',\r\n    'lilly',\r\n    'lily',\r\n    'limb',\r\n    'limeade',\r\n    'limelight',\r\n    'limes',\r\n    'limit',\r\n    'limping',\r\n    'limpness',\r\n    'line',\r\n    'lingo',\r\n    'linguini',\r\n    'linguist',\r\n    'lining',\r\n    'linked',\r\n    'linoleum',\r\n    'linseed',\r\n    'lint',\r\n    'lion',\r\n    'lip',\r\n    'liquefy',\r\n    'liqueur',\r\n    'liquid',\r\n    'lisp',\r\n    'list',\r\n    'litigate',\r\n    'litigator',\r\n    'litmus',\r\n    'litter',\r\n    'little',\r\n    'livable',\r\n    'lived',\r\n    'lively',\r\n    'liver',\r\n    'livestock',\r\n    'lividly',\r\n    'living',\r\n    'lizard',\r\n    'lubricant',\r\n    'lubricate',\r\n    'lucid',\r\n    'luckily',\r\n    'luckiness',\r\n    'luckless',\r\n    'lucrative',\r\n    'ludicrous',\r\n    'lugged',\r\n    'lukewarm',\r\n    'lullaby',\r\n    'lumber',\r\n    'luminance',\r\n    'luminous',\r\n    'lumpiness',\r\n    'lumping',\r\n    'lumpish',\r\n    'lunacy',\r\n    'lunar',\r\n    'lunchbox',\r\n    'luncheon',\r\n    'lunchroom',\r\n    'lunchtime',\r\n    'lung',\r\n    'lurch',\r\n    'lure',\r\n    'luridness',\r\n    'lurk',\r\n    'lushly',\r\n    'lushness',\r\n    'luster',\r\n    'lustfully',\r\n    'lustily',\r\n    'lustiness',\r\n    'lustrous',\r\n    'lusty',\r\n    'luxurious',\r\n    'luxury',\r\n    'lying',\r\n    'lyrically',\r\n    'lyricism',\r\n    'lyricist',\r\n    'lyrics',\r\n    'macarena',\r\n    'macaroni',\r\n    'macaw',\r\n    'mace',\r\n    'machine',\r\n    'machinist',\r\n    'magazine',\r\n    'magenta',\r\n    'maggot',\r\n    'magical',\r\n    'magician',\r\n    'magma',\r\n    'magnesium',\r\n    'magnetic',\r\n    'magnetism',\r\n    'magnetize',\r\n    'magnifier',\r\n    'magnify',\r\n    'magnitude',\r\n    'magnolia',\r\n    'mahogany',\r\n    'maimed',\r\n    'majestic',\r\n    'majesty',\r\n    'majorette',\r\n    'majority',\r\n    'makeover',\r\n    'maker',\r\n    'makeshift',\r\n    'making',\r\n    'malformed',\r\n    'malt',\r\n    'mama',\r\n    'mammal',\r\n    'mammary',\r\n    'mammogram',\r\n    'manager',\r\n    'managing',\r\n    'manatee',\r\n    'mandarin',\r\n    'mandate',\r\n    'mandatory',\r\n    'mandolin',\r\n    'manger',\r\n    'mangle',\r\n    'mango',\r\n    'mangy',\r\n    'manhandle',\r\n    'manhole',\r\n    'manhood',\r\n    'manhunt',\r\n    'manicotti',\r\n    'manicure',\r\n    'manifesto',\r\n    'manila',\r\n    'mankind',\r\n    'manlike',\r\n    'manliness',\r\n    'manly',\r\n    'manmade',\r\n    'manned',\r\n    'mannish',\r\n    'manor',\r\n    'manpower',\r\n    'mantis',\r\n    'mantra',\r\n    'manual',\r\n    'many',\r\n    'map',\r\n    'marathon',\r\n    'marauding',\r\n    'marbled',\r\n    'marbles',\r\n    'marbling',\r\n    'march',\r\n    'mardi',\r\n    'margarine',\r\n    'margarita',\r\n    'margin',\r\n    'marigold',\r\n    'marina',\r\n    'marine',\r\n    'marital',\r\n    'maritime',\r\n    'marlin',\r\n    'marmalade',\r\n    'maroon',\r\n    'married',\r\n    'marrow',\r\n    'marry',\r\n    'marshland',\r\n    'marshy',\r\n    'marsupial',\r\n    'marvelous',\r\n    'marxism',\r\n    'mascot',\r\n    'masculine',\r\n    'mashed',\r\n    'mashing',\r\n    'massager',\r\n    'masses',\r\n    'massive',\r\n    'mastiff',\r\n    'matador',\r\n    'matchbook',\r\n    'matchbox',\r\n    'matcher',\r\n    'matching',\r\n    'matchless',\r\n    'material',\r\n    'maternal',\r\n    'maternity',\r\n    'math',\r\n    'mating',\r\n    'matriarch',\r\n    'matrimony',\r\n    'matrix',\r\n    'matron',\r\n    'matted',\r\n    'matter',\r\n    'maturely',\r\n    'maturing',\r\n    'maturity',\r\n    'mauve',\r\n    'maverick',\r\n    'maximize',\r\n    'maximum',\r\n    'maybe',\r\n    'mayday',\r\n    'mayflower',\r\n    'moaner',\r\n    'moaning',\r\n    'mobile',\r\n    'mobility',\r\n    'mobilize',\r\n    'mobster',\r\n    'mocha',\r\n    'mocker',\r\n    'mockup',\r\n    'modified',\r\n    'modify',\r\n    'modular',\r\n    'modulator',\r\n    'module',\r\n    'moisten',\r\n    'moistness',\r\n    'moisture',\r\n    'molar',\r\n    'molasses',\r\n    'mold',\r\n    'molecular',\r\n    'molecule',\r\n    'molehill',\r\n    'mollusk',\r\n    'mom',\r\n    'monastery',\r\n    'monday',\r\n    'monetary',\r\n    'monetize',\r\n    'moneybags',\r\n    'moneyless',\r\n    'moneywise',\r\n    'mongoose',\r\n    'mongrel',\r\n    'monitor',\r\n    'monkhood',\r\n    'monogamy',\r\n    'monogram',\r\n    'monologue',\r\n    'monopoly',\r\n    'monorail',\r\n    'monotone',\r\n    'monotype',\r\n    'monoxide',\r\n    'monsieur',\r\n    'monsoon',\r\n    'monstrous',\r\n    'monthly',\r\n    'monument',\r\n    'moocher',\r\n    'moodiness',\r\n    'moody',\r\n    'mooing',\r\n    'moonbeam',\r\n    'mooned',\r\n    'moonlight',\r\n    'moonlike',\r\n    'moonlit',\r\n    'moonrise',\r\n    'moonscape',\r\n    'moonshine',\r\n    'moonstone',\r\n    'moonwalk',\r\n    'mop',\r\n    'morale',\r\n    'morality',\r\n    'morally',\r\n    'morbidity',\r\n    'morbidly',\r\n    'morphine',\r\n    'morphing',\r\n    'morse',\r\n    'mortality',\r\n    'mortally',\r\n    'mortician',\r\n    'mortified',\r\n    'mortify',\r\n    'mortuary',\r\n    'mosaic',\r\n    'mossy',\r\n    'most',\r\n    'mothball',\r\n    'mothproof',\r\n    'motion',\r\n    'motivate',\r\n    'motivator',\r\n    'motive',\r\n    'motocross',\r\n    'motor',\r\n    'motto',\r\n    'mountable',\r\n    'mountain',\r\n    'mounted',\r\n    'mounting',\r\n    'mourner',\r\n    'mournful',\r\n    'mouse',\r\n    'mousiness',\r\n    'moustache',\r\n    'mousy',\r\n    'mouth',\r\n    'movable',\r\n    'move',\r\n    'movie',\r\n    'moving',\r\n    'mower',\r\n    'mowing',\r\n    'much',\r\n    'muck',\r\n    'mud',\r\n    'mug',\r\n    'mulberry',\r\n    'mulch',\r\n    'mule',\r\n    'mulled',\r\n    'mullets',\r\n    'multiple',\r\n    'multiply',\r\n    'multitask',\r\n    'multitude',\r\n    'mumble',\r\n    'mumbling',\r\n    'mumbo',\r\n    'mummified',\r\n    'mummify',\r\n    'mummy',\r\n    'mumps',\r\n    'munchkin',\r\n    'mundane',\r\n    'municipal',\r\n    'muppet',\r\n    'mural',\r\n    'murkiness',\r\n    'murky',\r\n    'murmuring',\r\n    'muscular',\r\n    'museum',\r\n    'mushily',\r\n    'mushiness',\r\n    'mushroom',\r\n    'mushy',\r\n    'music',\r\n    'musket',\r\n    'muskiness',\r\n    'musky',\r\n    'mustang',\r\n    'mustard',\r\n    'muster',\r\n    'mustiness',\r\n    'musty',\r\n    'mutable',\r\n    'mutate',\r\n    'mutation',\r\n    'mute',\r\n    'mutilated',\r\n    'mutilator',\r\n    'mutiny',\r\n    'mutt',\r\n    'mutual',\r\n    'muzzle',\r\n    'myself',\r\n    'myspace',\r\n    'mystified',\r\n    'mystify',\r\n    'myth',\r\n    'nacho',\r\n    'nag',\r\n    'nail',\r\n    'name',\r\n    'naming',\r\n    'nanny',\r\n    'nanometer',\r\n    'nape',\r\n    'napkin',\r\n    'napped',\r\n    'napping',\r\n    'nappy',\r\n    'narrow',\r\n    'nastily',\r\n    'nastiness',\r\n    'national',\r\n    'native',\r\n    'nativity',\r\n    'natural',\r\n    'nature',\r\n    'naturist',\r\n    'nautical',\r\n    'navigate',\r\n    'navigator',\r\n    'navy',\r\n    'nearby',\r\n    'nearest',\r\n    'nearly',\r\n    'nearness',\r\n    'neatly',\r\n    'neatness',\r\n    'nebula',\r\n    'nebulizer',\r\n    'nectar',\r\n    'negate',\r\n    'negation',\r\n    'negative',\r\n    'neglector',\r\n    'negligee',\r\n    'negligent',\r\n    'negotiate',\r\n    'nemeses',\r\n    'nemesis',\r\n    'neon',\r\n    'nephew',\r\n    'nerd',\r\n    'nervous',\r\n    'nervy',\r\n    'nest',\r\n    'net',\r\n    'neurology',\r\n    'neuron',\r\n    'neurosis',\r\n    'neurotic',\r\n    'neuter',\r\n    'neutron',\r\n    'never',\r\n    'next',\r\n    'nibble',\r\n    'nickname',\r\n    'nicotine',\r\n    'niece',\r\n    'nifty',\r\n    'nimble',\r\n    'nimbly',\r\n    'nineteen',\r\n    'ninetieth',\r\n    'ninja',\r\n    'nintendo',\r\n    'ninth',\r\n    'nuclear',\r\n    'nuclei',\r\n    'nucleus',\r\n    'nugget',\r\n    'nullify',\r\n    'number',\r\n    'numbing',\r\n    'numbly',\r\n    'numbness',\r\n    'numeral',\r\n    'numerate',\r\n    'numerator',\r\n    'numeric',\r\n    'numerous',\r\n    'nuptials',\r\n    'nursery',\r\n    'nursing',\r\n    'nurture',\r\n    'nutcase',\r\n    'nutlike',\r\n    'nutmeg',\r\n    'nutrient',\r\n    'nutshell',\r\n    'nuttiness',\r\n    'nutty',\r\n    'nuzzle',\r\n    'nylon',\r\n    'oaf',\r\n    'oak',\r\n    'oasis',\r\n    'oat',\r\n    'obedience',\r\n    'obedient',\r\n    'obituary',\r\n    'object',\r\n    'obligate',\r\n    'obliged',\r\n    'oblivion',\r\n    'oblivious',\r\n    'oblong',\r\n    'obnoxious',\r\n    'oboe',\r\n    'obscure',\r\n    'obscurity',\r\n    'observant',\r\n    'observer',\r\n    'observing',\r\n    'obsessed',\r\n    'obsession',\r\n    'obsessive',\r\n    'obsolete',\r\n    'obstacle',\r\n    'obstinate',\r\n    'obstruct',\r\n    'obtain',\r\n    'obtrusive',\r\n    'obtuse',\r\n    'obvious',\r\n    'occultist',\r\n    'occupancy',\r\n    'occupant',\r\n    'occupier',\r\n    'occupy',\r\n    'ocean',\r\n    'ocelot',\r\n    'octagon',\r\n    'octane',\r\n    'october',\r\n    'octopus',\r\n    'ogle',\r\n    'oil',\r\n    'oink',\r\n    'ointment',\r\n    'okay',\r\n    'old',\r\n    'olive',\r\n    'olympics',\r\n    'omega',\r\n    'omen',\r\n    'ominous',\r\n    'omission',\r\n    'omit',\r\n    'omnivore',\r\n    'onboard',\r\n    'oncoming',\r\n    'ongoing',\r\n    'onion',\r\n    'online',\r\n    'onlooker',\r\n    'only',\r\n    'onscreen',\r\n    'onset',\r\n    'onshore',\r\n    'onslaught',\r\n    'onstage',\r\n    'onto',\r\n    'onward',\r\n    'onyx',\r\n    'oops',\r\n    'ooze',\r\n    'oozy',\r\n    'opacity',\r\n    'opal',\r\n    'open',\r\n    'operable',\r\n    'operate',\r\n    'operating',\r\n    'operation',\r\n    'operative',\r\n    'operator',\r\n    'opium',\r\n    'opossum',\r\n    'opponent',\r\n    'oppose',\r\n    'opposing',\r\n    'opposite',\r\n    'oppressed',\r\n    'oppressor',\r\n    'opt',\r\n    'opulently',\r\n    'osmosis',\r\n    'other',\r\n    'otter',\r\n    'ouch',\r\n    'ought',\r\n    'ounce',\r\n    'outage',\r\n    'outback',\r\n    'outbid',\r\n    'outboard',\r\n    'outbound',\r\n    'outbreak',\r\n    'outburst',\r\n    'outcast',\r\n    'outclass',\r\n    'outcome',\r\n    'outdated',\r\n    'outdoors',\r\n    'outer',\r\n    'outfield',\r\n    'outfit',\r\n    'outflank',\r\n    'outgoing',\r\n    'outgrow',\r\n    'outhouse',\r\n    'outing',\r\n    'outlast',\r\n    'outlet',\r\n    'outline',\r\n    'outlook',\r\n    'outlying',\r\n    'outmatch',\r\n    'outmost',\r\n    'outnumber',\r\n    'outplayed',\r\n    'outpost',\r\n    'outpour',\r\n    'output',\r\n    'outrage',\r\n    'outrank',\r\n    'outreach',\r\n    'outright',\r\n    'outscore',\r\n    'outsell',\r\n    'outshine',\r\n    'outshoot',\r\n    'outsider',\r\n    'outskirts',\r\n    'outsmart',\r\n    'outsource',\r\n    'outspoken',\r\n    'outtakes',\r\n    'outthink',\r\n    'outward',\r\n    'outweigh',\r\n    'outwit',\r\n    'oval',\r\n    'ovary',\r\n    'oven',\r\n    'overact',\r\n    'overall',\r\n    'overarch',\r\n    'overbid',\r\n    'overbill',\r\n    'overbite',\r\n    'overblown',\r\n    'overboard',\r\n    'overbook',\r\n    'overbuilt',\r\n    'overcast',\r\n    'overcoat',\r\n    'overcome',\r\n    'overcook',\r\n    'overcrowd',\r\n    'overdraft',\r\n    'overdrawn',\r\n    'overdress',\r\n    'overdrive',\r\n    'overdue',\r\n    'overeager',\r\n    'overeater',\r\n    'overexert',\r\n    'overfed',\r\n    'overfeed',\r\n    'overfill',\r\n    'overflow',\r\n    'overfull',\r\n    'overgrown',\r\n    'overhand',\r\n    'overhang',\r\n    'overhaul',\r\n    'overhead',\r\n    'overhear',\r\n    'overheat',\r\n    'overhung',\r\n    'overjoyed',\r\n    'overkill',\r\n    'overlabor',\r\n    'overlaid',\r\n    'overlap',\r\n    'overlay',\r\n    'overload',\r\n    'overlook',\r\n    'overlord',\r\n    'overlying',\r\n    'overnight',\r\n    'overpass',\r\n    'overpay',\r\n    'overplant',\r\n    'overplay',\r\n    'overpower',\r\n    'overprice',\r\n    'overrate',\r\n    'overreach',\r\n    'overreact',\r\n    'override',\r\n    'overripe',\r\n    'overrule',\r\n    'overrun',\r\n    'overshoot',\r\n    'overshot',\r\n    'oversight',\r\n    'oversized',\r\n    'oversleep',\r\n    'oversold',\r\n    'overspend',\r\n    'overstate',\r\n    'overstay',\r\n    'overstep',\r\n    'overstock',\r\n    'overstuff',\r\n    'oversweet',\r\n    'overtake',\r\n    'overthrow',\r\n    'overtime',\r\n    'overtly',\r\n    'overtone',\r\n    'overture',\r\n    'overturn',\r\n    'overuse',\r\n    'overvalue',\r\n    'overview',\r\n    'overwrite',\r\n    'owl',\r\n    'oxford',\r\n    'oxidant',\r\n    'oxidation',\r\n    'oxidize',\r\n    'oxidizing',\r\n    'oxygen',\r\n    'oxymoron',\r\n    'oyster',\r\n    'ozone',\r\n    'paced',\r\n    'pacemaker',\r\n    'pacific',\r\n    'pacifier',\r\n    'pacifism',\r\n    'pacifist',\r\n    'pacify',\r\n    'padded',\r\n    'padding',\r\n    'paddle',\r\n    'paddling',\r\n    'padlock',\r\n    'pagan',\r\n    'pager',\r\n    'paging',\r\n    'pajamas',\r\n    'palace',\r\n    'palatable',\r\n    'palm',\r\n    'palpable',\r\n    'palpitate',\r\n    'paltry',\r\n    'pampered',\r\n    'pamperer',\r\n    'pampers',\r\n    'pamphlet',\r\n    'panama',\r\n    'pancake',\r\n    'pancreas',\r\n    'panda',\r\n    'pandemic',\r\n    'pang',\r\n    'panhandle',\r\n    'panic',\r\n    'panning',\r\n    'panorama',\r\n    'panoramic',\r\n    'panther',\r\n    'pantomime',\r\n    'pantry',\r\n    'pants',\r\n    'pantyhose',\r\n    'paparazzi',\r\n    'papaya',\r\n    'paper',\r\n    'paprika',\r\n    'papyrus',\r\n    'parabola',\r\n    'parachute',\r\n    'parade',\r\n    'paradox',\r\n    'paragraph',\r\n    'parakeet',\r\n    'paralegal',\r\n    'paralyses',\r\n    'paralysis',\r\n    'paralyze',\r\n    'paramedic',\r\n    'parameter',\r\n    'paramount',\r\n    'parasail',\r\n    'parasite',\r\n    'parasitic',\r\n    'parcel',\r\n    'parched',\r\n    'parchment',\r\n    'pardon',\r\n    'parish',\r\n    'parka',\r\n    'parking',\r\n    'parkway',\r\n    'parlor',\r\n    'parmesan',\r\n    'parole',\r\n    'parrot',\r\n    'parsley',\r\n    'parsnip',\r\n    'partake',\r\n    'parted',\r\n    'parting',\r\n    'partition',\r\n    'partly',\r\n    'partner',\r\n    'partridge',\r\n    'party',\r\n    'passable',\r\n    'passably',\r\n    'passage',\r\n    'passcode',\r\n    'passenger',\r\n    'passerby',\r\n    'passing',\r\n    'passion',\r\n    'passive',\r\n    'passivism',\r\n    'passover',\r\n    'passport',\r\n    'password',\r\n    'pasta',\r\n    'pasted',\r\n    'pastel',\r\n    'pastime',\r\n    'pastor',\r\n    'pastrami',\r\n    'pasture',\r\n    'pasty',\r\n    'patchwork',\r\n    'patchy',\r\n    'paternal',\r\n    'paternity',\r\n    'path',\r\n    'patience',\r\n    'patient',\r\n    'patio',\r\n    'patriarch',\r\n    'patriot',\r\n    'patrol',\r\n    'patronage',\r\n    'patronize',\r\n    'pauper',\r\n    'pavement',\r\n    'paver',\r\n    'pavestone',\r\n    'pavilion',\r\n    'paving',\r\n    'pawing',\r\n    'payable',\r\n    'payback',\r\n    'paycheck',\r\n    'payday',\r\n    'payee',\r\n    'payer',\r\n    'paying',\r\n    'payment',\r\n    'payphone',\r\n    'payroll',\r\n    'pebble',\r\n    'pebbly',\r\n    'pecan',\r\n    'pectin',\r\n    'peculiar',\r\n    'peddling',\r\n    'pediatric',\r\n    'pedicure',\r\n    'pedigree',\r\n    'pedometer',\r\n    'pegboard',\r\n    'pelican',\r\n    'pellet',\r\n    'pelt',\r\n    'pelvis',\r\n    'penalize',\r\n    'penalty',\r\n    'pencil',\r\n    'pendant',\r\n    'pending',\r\n    'penholder',\r\n    'penknife',\r\n    'pennant',\r\n    'penniless',\r\n    'penny',\r\n    'penpal',\r\n    'pension',\r\n    'pentagon',\r\n    'pentagram',\r\n    'pep',\r\n    'perceive',\r\n    'percent',\r\n    'perch',\r\n    'percolate',\r\n    'perennial',\r\n    'perfected',\r\n    'perfectly',\r\n    'perfume',\r\n    'periscope',\r\n    'perish',\r\n    'perjurer',\r\n    'perjury',\r\n    'perkiness',\r\n    'perky',\r\n    'perm',\r\n    'peroxide',\r\n    'perpetual',\r\n    'perplexed',\r\n    'persecute',\r\n    'persevere',\r\n    'persuaded',\r\n    'persuader',\r\n    'pesky',\r\n    'peso',\r\n    'pessimism',\r\n    'pessimist',\r\n    'pester',\r\n    'pesticide',\r\n    'petal',\r\n    'petite',\r\n    'petition',\r\n    'petri',\r\n    'petroleum',\r\n    'petted',\r\n    'petticoat',\r\n    'pettiness',\r\n    'petty',\r\n    'petunia',\r\n    'phantom',\r\n    'phobia',\r\n    'phoenix',\r\n    'phonebook',\r\n    'phoney',\r\n    'phonics',\r\n    'phoniness',\r\n    'phony',\r\n    'phosphate',\r\n    'photo',\r\n    'phrase',\r\n    'phrasing',\r\n    'placard',\r\n    'placate',\r\n    'placidly',\r\n    'plank',\r\n    'planner',\r\n    'plant',\r\n    'plasma',\r\n    'plaster',\r\n    'plastic',\r\n    'plated',\r\n    'platform',\r\n    'plating',\r\n    'platinum',\r\n    'platonic',\r\n    'platter',\r\n    'platypus',\r\n    'plausible',\r\n    'plausibly',\r\n    'playable',\r\n    'playback',\r\n    'player',\r\n    'playful',\r\n    'playgroup',\r\n    'playhouse',\r\n    'playing',\r\n    'playlist',\r\n    'playmaker',\r\n    'playmate',\r\n    'playoff',\r\n    'playpen',\r\n    'playroom',\r\n    'playset',\r\n    'plaything',\r\n    'playtime',\r\n    'plaza',\r\n    'pleading',\r\n    'pleat',\r\n    'pledge',\r\n    'plentiful',\r\n    'plenty',\r\n    'plethora',\r\n    'plexiglas',\r\n    'pliable',\r\n    'plod',\r\n    'plop',\r\n    'plot',\r\n    'plow',\r\n    'ploy',\r\n    'pluck',\r\n    'plug',\r\n    'plunder',\r\n    'plunging',\r\n    'plural',\r\n    'plus',\r\n    'plutonium',\r\n    'plywood',\r\n    'poach',\r\n    'pod',\r\n    'poem',\r\n    'poet',\r\n    'pogo',\r\n    'pointed',\r\n    'pointer',\r\n    'pointing',\r\n    'pointless',\r\n    'pointy',\r\n    'poise',\r\n    'poison',\r\n    'poker',\r\n    'poking',\r\n    'polar',\r\n    'police',\r\n    'policy',\r\n    'polio',\r\n    'polish',\r\n    'politely',\r\n    'polka',\r\n    'polo',\r\n    'polyester',\r\n    'polygon',\r\n    'polygraph',\r\n    'polymer',\r\n    'poncho',\r\n    'pond',\r\n    'pony',\r\n    'popcorn',\r\n    'pope',\r\n    'poplar',\r\n    'popper',\r\n    'poppy',\r\n    'popsicle',\r\n    'populace',\r\n    'popular',\r\n    'populate',\r\n    'porcupine',\r\n    'pork',\r\n    'porous',\r\n    'porridge',\r\n    'portable',\r\n    'portal',\r\n    'portfolio',\r\n    'porthole',\r\n    'portion',\r\n    'portly',\r\n    'portside',\r\n    'poser',\r\n    'posh',\r\n    'posing',\r\n    'possible',\r\n    'possibly',\r\n    'possum',\r\n    'postage',\r\n    'postal',\r\n    'postbox',\r\n    'postcard',\r\n    'posted',\r\n    'poster',\r\n    'posting',\r\n    'postnasal',\r\n    'posture',\r\n    'postwar',\r\n    'pouch',\r\n    'pounce',\r\n    'pouncing',\r\n    'pound',\r\n    'pouring',\r\n    'pout',\r\n    'powdered',\r\n    'powdering',\r\n    'powdery',\r\n    'power',\r\n    'powwow',\r\n    'pox',\r\n    'praising',\r\n    'prance',\r\n    'prancing',\r\n    'pranker',\r\n    'prankish',\r\n    'prankster',\r\n    'prayer',\r\n    'praying',\r\n    'preacher',\r\n    'preaching',\r\n    'preachy',\r\n    'preamble',\r\n    'precinct',\r\n    'precise',\r\n    'precision',\r\n    'precook',\r\n    'precut',\r\n    'predator',\r\n    'predefine',\r\n    'predict',\r\n    'preface',\r\n    'prefix',\r\n    'preflight',\r\n    'preformed',\r\n    'pregame',\r\n    'pregnancy',\r\n    'pregnant',\r\n    'preheated',\r\n    'prelaunch',\r\n    'prelaw',\r\n    'prelude',\r\n    'premiere',\r\n    'premises',\r\n    'premium',\r\n    'prenatal',\r\n    'preoccupy',\r\n    'preorder',\r\n    'prepaid',\r\n    'prepay',\r\n    'preplan',\r\n    'preppy',\r\n    'preschool',\r\n    'prescribe',\r\n    'preseason',\r\n    'preset',\r\n    'preshow',\r\n    'president',\r\n    'presoak',\r\n    'press',\r\n    'presume',\r\n    'presuming',\r\n    'preteen',\r\n    'pretended',\r\n    'pretender',\r\n    'pretense',\r\n    'pretext',\r\n    'pretty',\r\n    'pretzel',\r\n    'prevail',\r\n    'prevalent',\r\n    'prevent',\r\n    'preview',\r\n    'previous',\r\n    'prewar',\r\n    'prewashed',\r\n    'prideful',\r\n    'pried',\r\n    'primal',\r\n    'primarily',\r\n    'primary',\r\n    'primate',\r\n    'primer',\r\n    'primp',\r\n    'princess',\r\n    'print',\r\n    'prior',\r\n    'prism',\r\n    'prison',\r\n    'prissy',\r\n    'pristine',\r\n    'privacy',\r\n    'private',\r\n    'privatize',\r\n    'prize',\r\n    'proactive',\r\n    'probable',\r\n    'probably',\r\n    'probation',\r\n    'probe',\r\n    'probing',\r\n    'probiotic',\r\n    'problem',\r\n    'procedure',\r\n    'process',\r\n    'proclaim',\r\n    'procreate',\r\n    'procurer',\r\n    'prodigal',\r\n    'prodigy',\r\n    'produce',\r\n    'product',\r\n    'profane',\r\n    'profanity',\r\n    'professed',\r\n    'professor',\r\n    'profile',\r\n    'profound',\r\n    'profusely',\r\n    'progeny',\r\n    'prognosis',\r\n    'program',\r\n    'progress',\r\n    'projector',\r\n    'prologue',\r\n    'prolonged',\r\n    'promenade',\r\n    'prominent',\r\n    'promoter',\r\n    'promotion',\r\n    'prompter',\r\n    'promptly',\r\n    'prone',\r\n    'prong',\r\n    'pronounce',\r\n    'pronto',\r\n    'proofing',\r\n    'proofread',\r\n    'proofs',\r\n    'propeller',\r\n    'properly',\r\n    'property',\r\n    'proponent',\r\n    'proposal',\r\n    'propose',\r\n    'props',\r\n    'prorate',\r\n    'protector',\r\n    'protegee',\r\n    'proton',\r\n    'prototype',\r\n    'protozoan',\r\n    'protract',\r\n    'protrude',\r\n    'proud',\r\n    'provable',\r\n    'proved',\r\n    'proven',\r\n    'provided',\r\n    'provider',\r\n    'providing',\r\n    'province',\r\n    'proving',\r\n    'provoke',\r\n    'provoking',\r\n    'provolone',\r\n    'prowess',\r\n    'prowler',\r\n    'prowling',\r\n    'proximity',\r\n    'proxy',\r\n    'prozac',\r\n    'prude',\r\n    'prudishly',\r\n    'prune',\r\n    'pruning',\r\n    'pry',\r\n    'psychic',\r\n    'public',\r\n    'publisher',\r\n    'pucker',\r\n    'pueblo',\r\n    'pug',\r\n    'pull',\r\n    'pulmonary',\r\n    'pulp',\r\n    'pulsate',\r\n    'pulse',\r\n    'pulverize',\r\n    'puma',\r\n    'pumice',\r\n    'pummel',\r\n    'punch',\r\n    'punctual',\r\n    'punctuate',\r\n    'punctured',\r\n    'pungent',\r\n    'punisher',\r\n    'punk',\r\n    'pupil',\r\n    'puppet',\r\n    'puppy',\r\n    'purchase',\r\n    'pureblood',\r\n    'purebred',\r\n    'purely',\r\n    'pureness',\r\n    'purgatory',\r\n    'purge',\r\n    'purging',\r\n    'purifier',\r\n    'purify',\r\n    'purist',\r\n    'puritan',\r\n    'purity',\r\n    'purple',\r\n    'purplish',\r\n    'purposely',\r\n    'purr',\r\n    'purse',\r\n    'pursuable',\r\n    'pursuant',\r\n    'pursuit',\r\n    'purveyor',\r\n    'pushcart',\r\n    'pushchair',\r\n    'pusher',\r\n    'pushiness',\r\n    'pushing',\r\n    'pushover',\r\n    'pushpin',\r\n    'pushup',\r\n    'pushy',\r\n    'putdown',\r\n    'putt',\r\n    'puzzle',\r\n    'puzzling',\r\n    'pyramid',\r\n    'pyromania',\r\n    'python',\r\n    'quack',\r\n    'quadrant',\r\n    'quail',\r\n    'quaintly',\r\n    'quake',\r\n    'quaking',\r\n    'qualified',\r\n    'qualifier',\r\n    'qualify',\r\n    'quality',\r\n    'qualm',\r\n    'quantum',\r\n    'quarrel',\r\n    'quarry',\r\n    'quartered',\r\n    'quarterly',\r\n    'quarters',\r\n    'quartet',\r\n    'quench',\r\n    'query',\r\n    'quicken',\r\n    'quickly',\r\n    'quickness',\r\n    'quicksand',\r\n    'quickstep',\r\n    'quiet',\r\n    'quill',\r\n    'quilt',\r\n    'quintet',\r\n    'quintuple',\r\n    'quirk',\r\n    'quit',\r\n    'quiver',\r\n    'quizzical',\r\n    'quotable',\r\n    'quotation',\r\n    'quote',\r\n    'rabid',\r\n    'race',\r\n    'racing',\r\n    'racism',\r\n    'rack',\r\n    'racoon',\r\n    'radar',\r\n    'radial',\r\n    'radiance',\r\n    'radiantly',\r\n    'radiated',\r\n    'radiation',\r\n    'radiator',\r\n    'radio',\r\n    'radish',\r\n    'raffle',\r\n    'raft',\r\n    'rage',\r\n    'ragged',\r\n    'raging',\r\n    'ragweed',\r\n    'raider',\r\n    'railcar',\r\n    'railing',\r\n    'railroad',\r\n    'railway',\r\n    'raisin',\r\n    'rake',\r\n    'raking',\r\n    'rally',\r\n    'ramble',\r\n    'rambling',\r\n    'ramp',\r\n    'ramrod',\r\n    'ranch',\r\n    'rancidity',\r\n    'random',\r\n    'ranged',\r\n    'ranger',\r\n    'ranging',\r\n    'ranked',\r\n    'ranking',\r\n    'ransack',\r\n    'ranting',\r\n    'rants',\r\n    'rare',\r\n    'rarity',\r\n    'rascal',\r\n    'rash',\r\n    'rasping',\r\n    'ravage',\r\n    'raven',\r\n    'ravine',\r\n    'raving',\r\n    'ravioli',\r\n    'ravishing',\r\n    'reabsorb',\r\n    'reach',\r\n    'reacquire',\r\n    'reaction',\r\n    'reactive',\r\n    'reactor',\r\n    'reaffirm',\r\n    'ream',\r\n    'reanalyze',\r\n    'reappear',\r\n    'reapply',\r\n    'reappoint',\r\n    'reapprove',\r\n    'rearrange',\r\n    'rearview',\r\n    'reason',\r\n    'reassign',\r\n    'reassure',\r\n    'reattach',\r\n    'reawake',\r\n    'rebalance',\r\n    'rebate',\r\n    'rebel',\r\n    'rebirth',\r\n    'reboot',\r\n    'reborn',\r\n    'rebound',\r\n    'rebuff',\r\n    'rebuild',\r\n    'rebuilt',\r\n    'reburial',\r\n    'rebuttal',\r\n    'recall',\r\n    'recant',\r\n    'recapture',\r\n    'recast',\r\n    'recede',\r\n    'recent',\r\n    'recess',\r\n    'recharger',\r\n    'recipient',\r\n    'recital',\r\n    'recite',\r\n    'reckless',\r\n    'reclaim',\r\n    'recliner',\r\n    'reclining',\r\n    'recluse',\r\n    'reclusive',\r\n    'recognize',\r\n    'recoil',\r\n    'recollect',\r\n    'recolor',\r\n    'reconcile',\r\n    'reconfirm',\r\n    'reconvene',\r\n    'recopy',\r\n    'record',\r\n    'recount',\r\n    'recoup',\r\n    'recovery',\r\n    'recreate',\r\n    'rectal',\r\n    'rectangle',\r\n    'rectified',\r\n    'rectify',\r\n    'recycled',\r\n    'recycler',\r\n    'recycling',\r\n    'reemerge',\r\n    'reenact',\r\n    'reenter',\r\n    'reentry',\r\n    'reexamine',\r\n    'referable',\r\n    'referee',\r\n    'reference',\r\n    'refill',\r\n    'refinance',\r\n    'refined',\r\n    'refinery',\r\n    'refining',\r\n    'refinish',\r\n    'reflected',\r\n    'reflector',\r\n    'reflex',\r\n    'reflux',\r\n    'refocus',\r\n    'refold',\r\n    'reforest',\r\n    'reformat',\r\n    'reformed',\r\n    'reformer',\r\n    'reformist',\r\n    'refract',\r\n    'refrain',\r\n    'refreeze',\r\n    'refresh',\r\n    'refried',\r\n    'refueling',\r\n    'refund',\r\n    'refurbish',\r\n    'refurnish',\r\n    'refusal',\r\n    'refuse',\r\n    'refusing',\r\n    'refutable',\r\n    'refute',\r\n    'regain',\r\n    'regalia',\r\n    'regally',\r\n    'reggae',\r\n    'regime',\r\n    'region',\r\n    'register',\r\n    'registrar',\r\n    'registry',\r\n    'regress',\r\n    'regretful',\r\n    'regroup',\r\n    'regular',\r\n    'regulate',\r\n    'regulator',\r\n    'rehab',\r\n    'reheat',\r\n    'rehire',\r\n    'rehydrate',\r\n    'reimburse',\r\n    'reissue',\r\n    'reiterate',\r\n    'rejoice',\r\n    'rejoicing',\r\n    'rejoin',\r\n    'rekindle',\r\n    'relapse',\r\n    'relapsing',\r\n    'relatable',\r\n    'related',\r\n    'relation',\r\n    'relative',\r\n    'relax',\r\n    'relay',\r\n    'relearn',\r\n    'release',\r\n    'relenting',\r\n    'reliable',\r\n    'reliably',\r\n    'reliance',\r\n    'reliant',\r\n    'relic',\r\n    'relieve',\r\n    'relieving',\r\n    'relight',\r\n    'relish',\r\n    'relive',\r\n    'reload',\r\n    'relocate',\r\n    'relock',\r\n    'reluctant',\r\n    'rely',\r\n    'remake',\r\n    'remark',\r\n    'remarry',\r\n    'rematch',\r\n    'remedial',\r\n    'remedy',\r\n    'remember',\r\n    'reminder',\r\n    'remindful',\r\n    'remission',\r\n    'remix',\r\n    'remnant',\r\n    'remodeler',\r\n    'remold',\r\n    'remorse',\r\n    'remote',\r\n    'removable',\r\n    'removal',\r\n    'removed',\r\n    'remover',\r\n    'removing',\r\n    'rename',\r\n    'renderer',\r\n    'rendering',\r\n    'rendition',\r\n    'renegade',\r\n    'renewable',\r\n    'renewably',\r\n    'renewal',\r\n    'renewed',\r\n    'renounce',\r\n    'renovate',\r\n    'renovator',\r\n    'rentable',\r\n    'rental',\r\n    'rented',\r\n    'renter',\r\n    'reoccupy',\r\n    'reoccur',\r\n    'reopen',\r\n    'reorder',\r\n    'repackage',\r\n    'repacking',\r\n    'repaint',\r\n    'repair',\r\n    'repave',\r\n    'repaying',\r\n    'repayment',\r\n    'repeal',\r\n    'repeated',\r\n    'repeater',\r\n    'repent',\r\n    'rephrase',\r\n    'replace',\r\n    'replay',\r\n    'replica',\r\n    'reply',\r\n    'reporter',\r\n    'repose',\r\n    'repossess',\r\n    'repost',\r\n    'repressed',\r\n    'reprimand',\r\n    'reprint',\r\n    'reprise',\r\n    'reproach',\r\n    'reprocess',\r\n    'reproduce',\r\n    'reprogram',\r\n    'reps',\r\n    'reptile',\r\n    'reptilian',\r\n    'repugnant',\r\n    'repulsion',\r\n    'repulsive',\r\n    'repurpose',\r\n    'reputable',\r\n    'reputably',\r\n    'request',\r\n    'require',\r\n    'requisite',\r\n    'reroute',\r\n    'rerun',\r\n    'resale',\r\n    'resample',\r\n    'rescuer',\r\n    'reseal',\r\n    'research',\r\n    'reselect',\r\n    'reseller',\r\n    'resemble',\r\n    'resend',\r\n    'resent',\r\n    'reset',\r\n    'reshape',\r\n    'reshoot',\r\n    'reshuffle',\r\n    'residence',\r\n    'residency',\r\n    'resident',\r\n    'residual',\r\n    'residue',\r\n    'resigned',\r\n    'resilient',\r\n    'resistant',\r\n    'resisting',\r\n    'resize',\r\n    'resolute',\r\n    'resolved',\r\n    'resonant',\r\n    'resonate',\r\n    'resort',\r\n    'resource',\r\n    'respect',\r\n    'resubmit',\r\n    'result',\r\n    'resume',\r\n    'resupply',\r\n    'resurface',\r\n    'resurrect',\r\n    'retail',\r\n    'retainer',\r\n    'retaining',\r\n    'retake',\r\n    'retaliate',\r\n    'retention',\r\n    'rethink',\r\n    'retinal',\r\n    'retired',\r\n    'retiree',\r\n    'retiring',\r\n    'retold',\r\n    'retool',\r\n    'retorted',\r\n    'retouch',\r\n    'retrace',\r\n    'retract',\r\n    'retrain',\r\n    'retread',\r\n    'retreat',\r\n    'retrial',\r\n    'retrieval',\r\n    'retriever',\r\n    'retry',\r\n    'return',\r\n    'retying',\r\n    'retype',\r\n    'reunion',\r\n    'reunite',\r\n    'reusable',\r\n    'reuse',\r\n    'reveal',\r\n    'reveler',\r\n    'revenge',\r\n    'revenue',\r\n    'reverb',\r\n    'revered',\r\n    'reverence',\r\n    'reverend',\r\n    'reversal',\r\n    'reverse',\r\n    'reversing',\r\n    'reversion',\r\n    'revert',\r\n    'revisable',\r\n    'revise',\r\n    'revision',\r\n    'revisit',\r\n    'revivable',\r\n    'revival',\r\n    'reviver',\r\n    'reviving',\r\n    'revocable',\r\n    'revoke',\r\n    'revolt',\r\n    'revolver',\r\n    'revolving',\r\n    'reward',\r\n    'rewash',\r\n    'rewind',\r\n    'rewire',\r\n    'reword',\r\n    'rework',\r\n    'rewrap',\r\n    'rewrite',\r\n    'rhyme',\r\n    'ribbon',\r\n    'ribcage',\r\n    'rice',\r\n    'riches',\r\n    'richly',\r\n    'richness',\r\n    'rickety',\r\n    'ricotta',\r\n    'riddance',\r\n    'ridden',\r\n    'ride',\r\n    'riding',\r\n    'rifling',\r\n    'rift',\r\n    'rigging',\r\n    'rigid',\r\n    'rigor',\r\n    'rimless',\r\n    'rimmed',\r\n    'rind',\r\n    'rink',\r\n    'rinse',\r\n    'rinsing',\r\n    'riot',\r\n    'ripcord',\r\n    'ripeness',\r\n    'ripening',\r\n    'ripping',\r\n    'ripple',\r\n    'rippling',\r\n    'riptide',\r\n    'rise',\r\n    'rising',\r\n    'risk',\r\n    'risotto',\r\n    'ritalin',\r\n    'ritzy',\r\n    'rival',\r\n    'riverbank',\r\n    'riverbed',\r\n    'riverboat',\r\n    'riverside',\r\n    'riveter',\r\n    'riveting',\r\n    'roamer',\r\n    'roaming',\r\n    'roast',\r\n    'robbing',\r\n    'robe',\r\n    'robin',\r\n    'robotics',\r\n    'robust',\r\n    'rockband',\r\n    'rocker',\r\n    'rocket',\r\n    'rockfish',\r\n    'rockiness',\r\n    'rocking',\r\n    'rocklike',\r\n    'rockslide',\r\n    'rockstar',\r\n    'rocky',\r\n    'rogue',\r\n    'roman',\r\n    'romp',\r\n    'rope',\r\n    'roping',\r\n    'roster',\r\n    'rosy',\r\n    'rotten',\r\n    'rotting',\r\n    'rotunda',\r\n    'roulette',\r\n    'rounding',\r\n    'roundish',\r\n    'roundness',\r\n    'roundup',\r\n    'roundworm',\r\n    'routine',\r\n    'routing',\r\n    'rover',\r\n    'roving',\r\n    'royal',\r\n    'rubbed',\r\n    'rubber',\r\n    'rubbing',\r\n    'rubble',\r\n    'rubdown',\r\n    'ruby',\r\n    'ruckus',\r\n    'rudder',\r\n    'rug',\r\n    'ruined',\r\n    'rule',\r\n    'rumble',\r\n    'rumbling',\r\n    'rummage',\r\n    'rumor',\r\n    'runaround',\r\n    'rundown',\r\n    'runner',\r\n    'running',\r\n    'runny',\r\n    'runt',\r\n    'runway',\r\n    'rupture',\r\n    'rural',\r\n    'ruse',\r\n    'rush',\r\n    'rust',\r\n    'rut',\r\n    'sabbath',\r\n    'sabotage',\r\n    'sacrament',\r\n    'sacred',\r\n    'sacrifice',\r\n    'sadden',\r\n    'saddlebag',\r\n    'saddled',\r\n    'saddling',\r\n    'sadly',\r\n    'sadness',\r\n    'safari',\r\n    'safeguard',\r\n    'safehouse',\r\n    'safely',\r\n    'safeness',\r\n    'saffron',\r\n    'saga',\r\n    'sage',\r\n    'sagging',\r\n    'saggy',\r\n    'said',\r\n    'saint',\r\n    'sake',\r\n    'salad',\r\n    'salami',\r\n    'salaried',\r\n    'salary',\r\n    'saline',\r\n    'salon',\r\n    'saloon',\r\n    'salsa',\r\n    'salt',\r\n    'salutary',\r\n    'salute',\r\n    'salvage',\r\n    'salvaging',\r\n    'salvation',\r\n    'same',\r\n    'sample',\r\n    'sampling',\r\n    'sanction',\r\n    'sanctity',\r\n    'sanctuary',\r\n    'sandal',\r\n    'sandbag',\r\n    'sandbank',\r\n    'sandbar',\r\n    'sandblast',\r\n    'sandbox',\r\n    'sanded',\r\n    'sandfish',\r\n    'sanding',\r\n    'sandlot',\r\n    'sandpaper',\r\n    'sandpit',\r\n    'sandstone',\r\n    'sandstorm',\r\n    'sandworm',\r\n    'sandy',\r\n    'sanitary',\r\n    'sanitizer',\r\n    'sank',\r\n    'santa',\r\n    'sapling',\r\n    'sappiness',\r\n    'sappy',\r\n    'sarcasm',\r\n    'sarcastic',\r\n    'sardine',\r\n    'sash',\r\n    'sasquatch',\r\n    'sassy',\r\n    'satchel',\r\n    'satiable',\r\n    'satin',\r\n    'satirical',\r\n    'satisfied',\r\n    'satisfy',\r\n    'saturate',\r\n    'saturday',\r\n    'sauciness',\r\n    'saucy',\r\n    'sauna',\r\n    'savage',\r\n    'savanna',\r\n    'saved',\r\n    'savings',\r\n    'savior',\r\n    'savor',\r\n    'saxophone',\r\n    'say',\r\n    'scabbed',\r\n    'scabby',\r\n    'scalded',\r\n    'scalding',\r\n    'scale',\r\n    'scaling',\r\n    'scallion',\r\n    'scallop',\r\n    'scalping',\r\n    'scam',\r\n    'scandal',\r\n    'scanner',\r\n    'scanning',\r\n    'scant',\r\n    'scapegoat',\r\n    'scarce',\r\n    'scarcity',\r\n    'scarecrow',\r\n    'scared',\r\n    'scarf',\r\n    'scarily',\r\n    'scariness',\r\n    'scarring',\r\n    'scary',\r\n    'scavenger',\r\n    'scenic',\r\n    'schedule',\r\n    'schematic',\r\n    'scheme',\r\n    'scheming',\r\n    'schilling',\r\n    'schnapps',\r\n    'scholar',\r\n    'science',\r\n    'scientist',\r\n    'scion',\r\n    'scoff',\r\n    'scolding',\r\n    'scone',\r\n    'scoop',\r\n    'scooter',\r\n    'scope',\r\n    'scorch',\r\n    'scorebook',\r\n    'scorecard',\r\n    'scored',\r\n    'scoreless',\r\n    'scorer',\r\n    'scoring',\r\n    'scorn',\r\n    'scorpion',\r\n    'scotch',\r\n    'scoundrel',\r\n    'scoured',\r\n    'scouring',\r\n    'scouting',\r\n    'scouts',\r\n    'scowling',\r\n    'scrabble',\r\n    'scraggly',\r\n    'scrambled',\r\n    'scrambler',\r\n    'scrap',\r\n    'scratch',\r\n    'scrawny',\r\n    'screen',\r\n    'scribble',\r\n    'scribe',\r\n    'scribing',\r\n    'scrimmage',\r\n    'script',\r\n    'scroll',\r\n    'scrooge',\r\n    'scrounger',\r\n    'scrubbed',\r\n    'scrubber',\r\n    'scruffy',\r\n    'scrunch',\r\n    'scrutiny',\r\n    'scuba',\r\n    'scuff',\r\n    'sculptor',\r\n    'sculpture',\r\n    'scurvy',\r\n    'scuttle',\r\n    'secluded',\r\n    'secluding',\r\n    'seclusion',\r\n    'second',\r\n    'secrecy',\r\n    'secret',\r\n    'sectional',\r\n    'sector',\r\n    'secular',\r\n    'securely',\r\n    'security',\r\n    'sedan',\r\n    'sedate',\r\n    'sedation',\r\n    'sedative',\r\n    'sediment',\r\n    'seduce',\r\n    'seducing',\r\n    'segment',\r\n    'seismic',\r\n    'seizing',\r\n    'seldom',\r\n    'selected',\r\n    'selection',\r\n    'selective',\r\n    'selector',\r\n    'self',\r\n    'seltzer',\r\n    'semantic',\r\n    'semester',\r\n    'semicolon',\r\n    'semifinal',\r\n    'seminar',\r\n    'semisoft',\r\n    'semisweet',\r\n    'senate',\r\n    'senator',\r\n    'send',\r\n    'senior',\r\n    'senorita',\r\n    'sensation',\r\n    'sensitive',\r\n    'sensitize',\r\n    'sensually',\r\n    'sensuous',\r\n    'sepia',\r\n    'september',\r\n    'septic',\r\n    'septum',\r\n    'sequel',\r\n    'sequence',\r\n    'sequester',\r\n    'series',\r\n    'sermon',\r\n    'serotonin',\r\n    'serpent',\r\n    'serrated',\r\n    'serve',\r\n    'service',\r\n    'serving',\r\n    'sesame',\r\n    'sessions',\r\n    'setback',\r\n    'setting',\r\n    'settle',\r\n    'settling',\r\n    'setup',\r\n    'sevenfold',\r\n    'seventeen',\r\n    'seventh',\r\n    'seventy',\r\n    'severity',\r\n    'shabby',\r\n    'shack',\r\n    'shaded',\r\n    'shadily',\r\n    'shadiness',\r\n    'shading',\r\n    'shadow',\r\n    'shady',\r\n    'shaft',\r\n    'shakable',\r\n    'shakily',\r\n    'shakiness',\r\n    'shaking',\r\n    'shaky',\r\n    'shale',\r\n    'shallot',\r\n    'shallow',\r\n    'shame',\r\n    'shampoo',\r\n    'shamrock',\r\n    'shank',\r\n    'shanty',\r\n    'shape',\r\n    'shaping',\r\n    'share',\r\n    'sharpener',\r\n    'sharper',\r\n    'sharpie',\r\n    'sharply',\r\n    'sharpness',\r\n    'shawl',\r\n    'sheath',\r\n    'shed',\r\n    'sheep',\r\n    'sheet',\r\n    'shelf',\r\n    'shell',\r\n    'shelter',\r\n    'shelve',\r\n    'shelving',\r\n    'sherry',\r\n    'shield',\r\n    'shifter',\r\n    'shifting',\r\n    'shiftless',\r\n    'shifty',\r\n    'shimmer',\r\n    'shimmy',\r\n    'shindig',\r\n    'shine',\r\n    'shingle',\r\n    'shininess',\r\n    'shining',\r\n    'shiny',\r\n    'ship',\r\n    'shirt',\r\n    'shivering',\r\n    'shock',\r\n    'shone',\r\n    'shoplift',\r\n    'shopper',\r\n    'shopping',\r\n    'shoptalk',\r\n    'shore',\r\n    'shortage',\r\n    'shortcake',\r\n    'shortcut',\r\n    'shorten',\r\n    'shorter',\r\n    'shorthand',\r\n    'shortlist',\r\n    'shortly',\r\n    'shortness',\r\n    'shorts',\r\n    'shortwave',\r\n    'shorty',\r\n    'shout',\r\n    'shove',\r\n    'showbiz',\r\n    'showcase',\r\n    'showdown',\r\n    'shower',\r\n    'showgirl',\r\n    'showing',\r\n    'showman',\r\n    'shown',\r\n    'showoff',\r\n    'showpiece',\r\n    'showplace',\r\n    'showroom',\r\n    'showy',\r\n    'shrank',\r\n    'shrapnel',\r\n    'shredder',\r\n    'shredding',\r\n    'shrewdly',\r\n    'shriek',\r\n    'shrill',\r\n    'shrimp',\r\n    'shrine',\r\n    'shrink',\r\n    'shrivel',\r\n    'shrouded',\r\n    'shrubbery',\r\n    'shrubs',\r\n    'shrug',\r\n    'shrunk',\r\n    'shucking',\r\n    'shudder',\r\n    'shuffle',\r\n    'shuffling',\r\n    'shun',\r\n    'shush',\r\n    'shut',\r\n    'shy',\r\n    'siamese',\r\n    'siberian',\r\n    'sibling',\r\n    'siding',\r\n    'sierra',\r\n    'siesta',\r\n    'sift',\r\n    'sighing',\r\n    'silenced',\r\n    'silencer',\r\n    'silent',\r\n    'silica',\r\n    'silicon',\r\n    'silk',\r\n    'silliness',\r\n    'silly',\r\n    'silo',\r\n    'silt',\r\n    'silver',\r\n    'similarly',\r\n    'simile',\r\n    'simmering',\r\n    'simple',\r\n    'simplify',\r\n    'simply',\r\n    'sincere',\r\n    'sincerity',\r\n    'singer',\r\n    'singing',\r\n    'single',\r\n    'singular',\r\n    'sinister',\r\n    'sinless',\r\n    'sinner',\r\n    'sinuous',\r\n    'sip',\r\n    'siren',\r\n    'sister',\r\n    'sitcom',\r\n    'sitter',\r\n    'sitting',\r\n    'situated',\r\n    'situation',\r\n    'sixfold',\r\n    'sixteen',\r\n    'sixth',\r\n    'sixties',\r\n    'sixtieth',\r\n    'sixtyfold',\r\n    'sizable',\r\n    'sizably',\r\n    'size',\r\n    'sizing',\r\n    'sizzle',\r\n    'sizzling',\r\n    'skater',\r\n    'skating',\r\n    'skedaddle',\r\n    'skeletal',\r\n    'skeleton',\r\n    'skeptic',\r\n    'sketch',\r\n    'skewed',\r\n    'skewer',\r\n    'skid',\r\n    'skied',\r\n    'skier',\r\n    'skies',\r\n    'skiing',\r\n    'skilled',\r\n    'skillet',\r\n    'skillful',\r\n    'skimmed',\r\n    'skimmer',\r\n    'skimming',\r\n    'skimpily',\r\n    'skincare',\r\n    'skinhead',\r\n    'skinless',\r\n    'skinning',\r\n    'skinny',\r\n    'skintight',\r\n    'skipper',\r\n    'skipping',\r\n    'skirmish',\r\n    'skirt',\r\n    'skittle',\r\n    'skydiver',\r\n    'skylight',\r\n    'skyline',\r\n    'skype',\r\n    'skyrocket',\r\n    'skyward',\r\n    'slab',\r\n    'slacked',\r\n    'slacker',\r\n    'slacking',\r\n    'slackness',\r\n    'slacks',\r\n    'slain',\r\n    'slam',\r\n    'slander',\r\n    'slang',\r\n    'slapping',\r\n    'slapstick',\r\n    'slashed',\r\n    'slashing',\r\n    'slate',\r\n    'slather',\r\n    'slaw',\r\n    'sled',\r\n    'sleek',\r\n    'sleep',\r\n    'sleet',\r\n    'sleeve',\r\n    'slept',\r\n    'sliceable',\r\n    'sliced',\r\n    'slicer',\r\n    'slicing',\r\n    'slick',\r\n    'slider',\r\n    'slideshow',\r\n    'sliding',\r\n    'slighted',\r\n    'slighting',\r\n    'slightly',\r\n    'slimness',\r\n    'slimy',\r\n    'slinging',\r\n    'slingshot',\r\n    'slinky',\r\n    'slip',\r\n    'slit',\r\n    'sliver',\r\n    'slobbery',\r\n    'slogan',\r\n    'sloped',\r\n    'sloping',\r\n    'sloppily',\r\n    'sloppy',\r\n    'slot',\r\n    'slouching',\r\n    'slouchy',\r\n    'sludge',\r\n    'slug',\r\n    'slum',\r\n    'slurp',\r\n    'slush',\r\n    'sly',\r\n    'small',\r\n    'smartly',\r\n    'smartness',\r\n    'smasher',\r\n    'smashing',\r\n    'smashup',\r\n    'smell',\r\n    'smelting',\r\n    'smile',\r\n    'smilingly',\r\n    'smirk',\r\n    'smite',\r\n    'smith',\r\n    'smitten',\r\n    'smock',\r\n    'smog',\r\n    'smoked',\r\n    'smokeless',\r\n    'smokiness',\r\n    'smoking',\r\n    'smoky',\r\n    'smolder',\r\n    'smooth',\r\n    'smother',\r\n    'smudge',\r\n    'smudgy',\r\n    'smuggler',\r\n    'smuggling',\r\n    'smugly',\r\n    'smugness',\r\n    'snack',\r\n    'snagged',\r\n    'snaking',\r\n    'snap',\r\n    'snare',\r\n    'snarl',\r\n    'snazzy',\r\n    'sneak',\r\n    'sneer',\r\n    'sneeze',\r\n    'sneezing',\r\n    'snide',\r\n    'sniff',\r\n    'snippet',\r\n    'snipping',\r\n    'snitch',\r\n    'snooper',\r\n    'snooze',\r\n    'snore',\r\n    'snoring',\r\n    'snorkel',\r\n    'snort',\r\n    'snout',\r\n    'snowbird',\r\n    'snowboard',\r\n    'snowbound',\r\n    'snowcap',\r\n    'snowdrift',\r\n    'snowdrop',\r\n    'snowfall',\r\n    'snowfield',\r\n    'snowflake',\r\n    'snowiness',\r\n    'snowless',\r\n    'snowman',\r\n    'snowplow',\r\n    'snowshoe',\r\n    'snowstorm',\r\n    'snowsuit',\r\n    'snowy',\r\n    'snub',\r\n    'snuff',\r\n    'snuggle',\r\n    'snugly',\r\n    'snugness',\r\n    'speak',\r\n    'spearfish',\r\n    'spearhead',\r\n    'spearman',\r\n    'spearmint',\r\n    'species',\r\n    'specimen',\r\n    'specked',\r\n    'speckled',\r\n    'specks',\r\n    'spectacle',\r\n    'spectator',\r\n    'spectrum',\r\n    'speculate',\r\n    'speech',\r\n    'speed',\r\n    'spellbind',\r\n    'speller',\r\n    'spelling',\r\n    'spendable',\r\n    'spender',\r\n    'spending',\r\n    'spent',\r\n    'spew',\r\n    'sphere',\r\n    'spherical',\r\n    'sphinx',\r\n    'spider',\r\n    'spied',\r\n    'spiffy',\r\n    'spill',\r\n    'spilt',\r\n    'spinach',\r\n    'spinal',\r\n    'spindle',\r\n    'spinner',\r\n    'spinning',\r\n    'spinout',\r\n    'spinster',\r\n    'spiny',\r\n    'spiral',\r\n    'spirited',\r\n    'spiritism',\r\n    'spirits',\r\n    'spiritual',\r\n    'splashed',\r\n    'splashing',\r\n    'splashy',\r\n    'splatter',\r\n    'spleen',\r\n    'splendid',\r\n    'splendor',\r\n    'splice',\r\n    'splicing',\r\n    'splinter',\r\n    'splotchy',\r\n    'splurge',\r\n    'spoilage',\r\n    'spoiled',\r\n    'spoiler',\r\n    'spoiling',\r\n    'spoils',\r\n    'spoken',\r\n    'spokesman',\r\n    'sponge',\r\n    'spongy',\r\n    'sponsor',\r\n    'spoof',\r\n    'spookily',\r\n    'spooky',\r\n    'spool',\r\n    'spoon',\r\n    'spore',\r\n    'sporting',\r\n    'sports',\r\n    'sporty',\r\n    'spotless',\r\n    'spotlight',\r\n    'spotted',\r\n    'spotter',\r\n    'spotting',\r\n    'spotty',\r\n    'spousal',\r\n    'spouse',\r\n    'spout',\r\n    'sprain',\r\n    'sprang',\r\n    'sprawl',\r\n    'spray',\r\n    'spree',\r\n    'sprig',\r\n    'spring',\r\n    'sprinkled',\r\n    'sprinkler',\r\n    'sprint',\r\n    'sprite',\r\n    'sprout',\r\n    'spruce',\r\n    'sprung',\r\n    'spry',\r\n    'spud',\r\n    'spur',\r\n    'sputter',\r\n    'spyglass',\r\n    'squabble',\r\n    'squad',\r\n    'squall',\r\n    'squander',\r\n    'squash',\r\n    'squatted',\r\n    'squatter',\r\n    'squatting',\r\n    'squeak',\r\n    'squealer',\r\n    'squealing',\r\n    'squeamish',\r\n    'squeegee',\r\n    'squeeze',\r\n    'squeezing',\r\n    'squid',\r\n    'squiggle',\r\n    'squiggly',\r\n    'squint',\r\n    'squire',\r\n    'squirt',\r\n    'squishier',\r\n    'squishy',\r\n    'stability',\r\n    'stabilize',\r\n    'stable',\r\n    'stack',\r\n    'stadium',\r\n    'staff',\r\n    'stage',\r\n    'staging',\r\n    'stagnant',\r\n    'stagnate',\r\n    'stainable',\r\n    'stained',\r\n    'staining',\r\n    'stainless',\r\n    'stalemate',\r\n    'staleness',\r\n    'stalling',\r\n    'stallion',\r\n    'stamina',\r\n    'stammer',\r\n    'stamp',\r\n    'stand',\r\n    'stank',\r\n    'staple',\r\n    'stapling',\r\n    'starboard',\r\n    'starch',\r\n    'stardom',\r\n    'stardust',\r\n    'starfish',\r\n    'stargazer',\r\n    'staring',\r\n    'stark',\r\n    'starless',\r\n    'starlet',\r\n    'starlight',\r\n    'starlit',\r\n    'starring',\r\n    'starry',\r\n    'starship',\r\n    'starter',\r\n    'starting',\r\n    'startle',\r\n    'startling',\r\n    'startup',\r\n    'starved',\r\n    'starving',\r\n    'stash',\r\n    'state',\r\n    'static',\r\n    'statistic',\r\n    'statue',\r\n    'stature',\r\n    'status',\r\n    'statute',\r\n    'statutory',\r\n    'staunch',\r\n    'stays',\r\n    'steadfast',\r\n    'steadier',\r\n    'steadily',\r\n    'steadying',\r\n    'steam',\r\n    'steed',\r\n    'steep',\r\n    'steerable',\r\n    'steering',\r\n    'steersman',\r\n    'stegosaur',\r\n    'stellar',\r\n    'stem',\r\n    'stench',\r\n    'stencil',\r\n    'step',\r\n    'stereo',\r\n    'sterile',\r\n    'sterility',\r\n    'sterilize',\r\n    'sterling',\r\n    'sternness',\r\n    'sternum',\r\n    'stew',\r\n    'stick',\r\n    'stiffen',\r\n    'stiffly',\r\n    'stiffness',\r\n    'stifle',\r\n    'stifling',\r\n    'stillness',\r\n    'stilt',\r\n    'stimulant',\r\n    'stimulate',\r\n    'stimuli',\r\n    'stimulus',\r\n    'stinger',\r\n    'stingily',\r\n    'stinging',\r\n    'stingray',\r\n    'stingy',\r\n    'stinking',\r\n    'stinky',\r\n    'stipend',\r\n    'stipulate',\r\n    'stir',\r\n    'stitch',\r\n    'stock',\r\n    'stoic',\r\n    'stoke',\r\n    'stole',\r\n    'stomp',\r\n    'stonewall',\r\n    'stoneware',\r\n    'stonework',\r\n    'stoning',\r\n    'stony',\r\n    'stood',\r\n    'stooge',\r\n    'stool',\r\n    'stoop',\r\n    'stoplight',\r\n    'stoppable',\r\n    'stoppage',\r\n    'stopped',\r\n    'stopper',\r\n    'stopping',\r\n    'stopwatch',\r\n    'storable',\r\n    'storage',\r\n    'storeroom',\r\n    'storewide',\r\n    'storm',\r\n    'stout',\r\n    'stove',\r\n    'stowaway',\r\n    'stowing',\r\n    'straddle',\r\n    'straggler',\r\n    'strained',\r\n    'strainer',\r\n    'straining',\r\n    'strangely',\r\n    'stranger',\r\n    'strangle',\r\n    'strategic',\r\n    'strategy',\r\n    'stratus',\r\n    'straw',\r\n    'stray',\r\n    'streak',\r\n    'stream',\r\n    'street',\r\n    'strength',\r\n    'strenuous',\r\n    'strep',\r\n    'stress',\r\n    'stretch',\r\n    'strewn',\r\n    'stricken',\r\n    'strict',\r\n    'stride',\r\n    'strife',\r\n    'strike',\r\n    'striking',\r\n    'strive',\r\n    'striving',\r\n    'strobe',\r\n    'strode',\r\n    'stroller',\r\n    'strongbox',\r\n    'strongly',\r\n    'strongman',\r\n    'struck',\r\n    'structure',\r\n    'strudel',\r\n    'struggle',\r\n    'strum',\r\n    'strung',\r\n    'strut',\r\n    'stubbed',\r\n    'stubble',\r\n    'stubbly',\r\n    'stubborn',\r\n    'stucco',\r\n    'stuck',\r\n    'student',\r\n    'studied',\r\n    'studio',\r\n    'study',\r\n    'stuffed',\r\n    'stuffing',\r\n    'stuffy',\r\n    'stumble',\r\n    'stumbling',\r\n    'stump',\r\n    'stung',\r\n    'stunned',\r\n    'stunner',\r\n    'stunning',\r\n    'stunt',\r\n    'stupor',\r\n    'sturdily',\r\n    'sturdy',\r\n    'styling',\r\n    'stylishly',\r\n    'stylist',\r\n    'stylized',\r\n    'stylus',\r\n    'suave',\r\n    'subarctic',\r\n    'subatomic',\r\n    'subdivide',\r\n    'subdued',\r\n    'subduing',\r\n    'subfloor',\r\n    'subgroup',\r\n    'subheader',\r\n    'subject',\r\n    'sublease',\r\n    'sublet',\r\n    'sublevel',\r\n    'sublime',\r\n    'submarine',\r\n    'submerge',\r\n    'submersed',\r\n    'submitter',\r\n    'subpanel',\r\n    'subpar',\r\n    'subplot',\r\n    'subprime',\r\n    'subscribe',\r\n    'subscript',\r\n    'subsector',\r\n    'subside',\r\n    'subsiding',\r\n    'subsidize',\r\n    'subsidy',\r\n    'subsoil',\r\n    'subsonic',\r\n    'substance',\r\n    'subsystem',\r\n    'subtext',\r\n    'subtitle',\r\n    'subtly',\r\n    'subtotal',\r\n    'subtract',\r\n    'subtype',\r\n    'suburb',\r\n    'subway',\r\n    'subwoofer',\r\n    'subzero',\r\n    'succulent',\r\n    'such',\r\n    'suction',\r\n    'sudden',\r\n    'sudoku',\r\n    'suds',\r\n    'sufferer',\r\n    'suffering',\r\n    'suffice',\r\n    'suffix',\r\n    'suffocate',\r\n    'suffrage',\r\n    'sugar',\r\n    'suggest',\r\n    'suing',\r\n    'suitable',\r\n    'suitably',\r\n    'suitcase',\r\n    'suitor',\r\n    'sulfate',\r\n    'sulfide',\r\n    'sulfite',\r\n    'sulfur',\r\n    'sulk',\r\n    'sullen',\r\n    'sulphate',\r\n    'sulphuric',\r\n    'sultry',\r\n    'superbowl',\r\n    'superglue',\r\n    'superhero',\r\n    'superior',\r\n    'superjet',\r\n    'superman',\r\n    'supermom',\r\n    'supernova',\r\n    'supervise',\r\n    'supper',\r\n    'supplier',\r\n    'supply',\r\n    'support',\r\n    'supremacy',\r\n    'supreme',\r\n    'surcharge',\r\n    'surely',\r\n    'sureness',\r\n    'surface',\r\n    'surfacing',\r\n    'surfboard',\r\n    'surfer',\r\n    'surgery',\r\n    'surgical',\r\n    'surging',\r\n    'surname',\r\n    'surpass',\r\n    'surplus',\r\n    'surprise',\r\n    'surreal',\r\n    'surrender',\r\n    'surrogate',\r\n    'surround',\r\n    'survey',\r\n    'survival',\r\n    'survive',\r\n    'surviving',\r\n    'survivor',\r\n    'sushi',\r\n    'suspect',\r\n    'suspend',\r\n    'suspense',\r\n    'sustained',\r\n    'sustainer',\r\n    'swab',\r\n    'swaddling',\r\n    'swagger',\r\n    'swampland',\r\n    'swan',\r\n    'swapping',\r\n    'swarm',\r\n    'sway',\r\n    'swear',\r\n    'sweat',\r\n    'sweep',\r\n    'swell',\r\n    'swept',\r\n    'swerve',\r\n    'swifter',\r\n    'swiftly',\r\n    'swiftness',\r\n    'swimmable',\r\n    'swimmer',\r\n    'swimming',\r\n    'swimsuit',\r\n    'swimwear',\r\n    'swinger',\r\n    'swinging',\r\n    'swipe',\r\n    'swirl',\r\n    'switch',\r\n    'swivel',\r\n    'swizzle',\r\n    'swooned',\r\n    'swoop',\r\n    'swoosh',\r\n    'swore',\r\n    'sworn',\r\n    'swung',\r\n    'sycamore',\r\n    'sympathy',\r\n    'symphonic',\r\n    'symphony',\r\n    'symptom',\r\n    'synapse',\r\n    'syndrome',\r\n    'synergy',\r\n    'synopses',\r\n    'synopsis',\r\n    'synthesis',\r\n    'synthetic',\r\n    'syrup',\r\n    'system',\r\n    't-shirt',\r\n    'tabasco',\r\n    'tabby',\r\n    'tableful',\r\n    'tables',\r\n    'tablet',\r\n    'tableware',\r\n    'tabloid',\r\n    'tackiness',\r\n    'tacking',\r\n    'tackle',\r\n    'tackling',\r\n    'tacky',\r\n    'taco',\r\n    'tactful',\r\n    'tactical',\r\n    'tactics',\r\n    'tactile',\r\n    'tactless',\r\n    'tadpole',\r\n    'taekwondo',\r\n    'tag',\r\n    'tainted',\r\n    'take',\r\n    'taking',\r\n    'talcum',\r\n    'talisman',\r\n    'tall',\r\n    'talon',\r\n    'tamale',\r\n    'tameness',\r\n    'tamer',\r\n    'tamper',\r\n    'tank',\r\n    'tanned',\r\n    'tannery',\r\n    'tanning',\r\n    'tantrum',\r\n    'tapeless',\r\n    'tapered',\r\n    'tapering',\r\n    'tapestry',\r\n    'tapioca',\r\n    'tapping',\r\n    'taps',\r\n    'tarantula',\r\n    'target',\r\n    'tarmac',\r\n    'tarnish',\r\n    'tarot',\r\n    'tartar',\r\n    'tartly',\r\n    'tartness',\r\n    'task',\r\n    'tassel',\r\n    'taste',\r\n    'tastiness',\r\n    'tasting',\r\n    'tasty',\r\n    'tattered',\r\n    'tattle',\r\n    'tattling',\r\n    'tattoo',\r\n    'taunt',\r\n    'tavern',\r\n    'thank',\r\n    'that',\r\n    'thaw',\r\n    'theater',\r\n    'theatrics',\r\n    'thee',\r\n    'theft',\r\n    'theme',\r\n    'theology',\r\n    'theorize',\r\n    'thermal',\r\n    'thermos',\r\n    'thesaurus',\r\n    'these',\r\n    'thesis',\r\n    'thespian',\r\n    'thicken',\r\n    'thicket',\r\n    'thickness',\r\n    'thieving',\r\n    'thievish',\r\n    'thigh',\r\n    'thimble',\r\n    'thing',\r\n    'think',\r\n    'thinly',\r\n    'thinner',\r\n    'thinness',\r\n    'thinning',\r\n    'thirstily',\r\n    'thirsting',\r\n    'thirsty',\r\n    'thirteen',\r\n    'thirty',\r\n    'thong',\r\n    'thorn',\r\n    'those',\r\n    'thousand',\r\n    'thrash',\r\n    'thread',\r\n    'threaten',\r\n    'threefold',\r\n    'thrift',\r\n    'thrill',\r\n    'thrive',\r\n    'thriving',\r\n    'throat',\r\n    'throbbing',\r\n    'throng',\r\n    'throttle',\r\n    'throwaway',\r\n    'throwback',\r\n    'thrower',\r\n    'throwing',\r\n    'thud',\r\n    'thumb',\r\n    'thumping',\r\n    'thursday',\r\n    'thus',\r\n    'thwarting',\r\n    'thyself',\r\n    'tiara',\r\n    'tibia',\r\n    'tidal',\r\n    'tidbit',\r\n    'tidiness',\r\n    'tidings',\r\n    'tidy',\r\n    'tiger',\r\n    'tighten',\r\n    'tightly',\r\n    'tightness',\r\n    'tightrope',\r\n    'tightwad',\r\n    'tigress',\r\n    'tile',\r\n    'tiling',\r\n    'till',\r\n    'tilt',\r\n    'timid',\r\n    'timing',\r\n    'timothy',\r\n    'tinderbox',\r\n    'tinfoil',\r\n    'tingle',\r\n    'tingling',\r\n    'tingly',\r\n    'tinker',\r\n    'tinkling',\r\n    'tinsel',\r\n    'tinsmith',\r\n    'tint',\r\n    'tinwork',\r\n    'tiny',\r\n    'tipoff',\r\n    'tipped',\r\n    'tipper',\r\n    'tipping',\r\n    'tiptoeing',\r\n    'tiptop',\r\n    'tiring',\r\n    'tissue',\r\n    'trace',\r\n    'tracing',\r\n    'track',\r\n    'traction',\r\n    'tractor',\r\n    'trade',\r\n    'trading',\r\n    'tradition',\r\n    'traffic',\r\n    'tragedy',\r\n    'trailing',\r\n    'trailside',\r\n    'train',\r\n    'traitor',\r\n    'trance',\r\n    'tranquil',\r\n    'transfer',\r\n    'transform',\r\n    'translate',\r\n    'transpire',\r\n    'transport',\r\n    'transpose',\r\n    'trapdoor',\r\n    'trapeze',\r\n    'trapezoid',\r\n    'trapped',\r\n    'trapper',\r\n    'trapping',\r\n    'traps',\r\n    'trash',\r\n    'travel',\r\n    'traverse',\r\n    'travesty',\r\n    'tray',\r\n    'treachery',\r\n    'treading',\r\n    'treadmill',\r\n    'treason',\r\n    'treat',\r\n    'treble',\r\n    'tree',\r\n    'trekker',\r\n    'tremble',\r\n    'trembling',\r\n    'tremor',\r\n    'trench',\r\n    'trend',\r\n    'trespass',\r\n    'triage',\r\n    'trial',\r\n    'triangle',\r\n    'tribesman',\r\n    'tribunal',\r\n    'tribune',\r\n    'tributary',\r\n    'tribute',\r\n    'triceps',\r\n    'trickery',\r\n    'trickily',\r\n    'tricking',\r\n    'trickle',\r\n    'trickster',\r\n    'tricky',\r\n    'tricolor',\r\n    'tricycle',\r\n    'trident',\r\n    'tried',\r\n    'trifle',\r\n    'trifocals',\r\n    'trillion',\r\n    'trilogy',\r\n    'trimester',\r\n    'trimmer',\r\n    'trimming',\r\n    'trimness',\r\n    'trinity',\r\n    'trio',\r\n    'tripod',\r\n    'tripping',\r\n    'triumph',\r\n    'trivial',\r\n    'trodden',\r\n    'trolling',\r\n    'trombone',\r\n    'trophy',\r\n    'tropical',\r\n    'tropics',\r\n    'trouble',\r\n    'troubling',\r\n    'trough',\r\n    'trousers',\r\n    'trout',\r\n    'trowel',\r\n    'truce',\r\n    'truck',\r\n    'truffle',\r\n    'trump',\r\n    'trunks',\r\n    'trustable',\r\n    'trustee',\r\n    'trustful',\r\n    'trusting',\r\n    'trustless',\r\n    'truth',\r\n    'try',\r\n    'tubby',\r\n    'tubeless',\r\n    'tubular',\r\n    'tucking',\r\n    'tuesday',\r\n    'tug',\r\n    'tuition',\r\n    'tulip',\r\n    'tumble',\r\n    'tumbling',\r\n    'tummy',\r\n    'turban',\r\n    'turbine',\r\n    'turbofan',\r\n    'turbojet',\r\n    'turbulent',\r\n    'turf',\r\n    'turkey',\r\n    'turmoil',\r\n    'turret',\r\n    'turtle',\r\n    'tusk',\r\n    'tutor',\r\n    'tutu',\r\n    'tux',\r\n    'tweak',\r\n    'tweed',\r\n    'tweet',\r\n    'tweezers',\r\n    'twelve',\r\n    'twentieth',\r\n    'twenty',\r\n    'twerp',\r\n    'twice',\r\n    'twiddle',\r\n    'twiddling',\r\n    'twig',\r\n    'twilight',\r\n    'twine',\r\n    'twins',\r\n    'twirl',\r\n    'twistable',\r\n    'twisted',\r\n    'twister',\r\n    'twisting',\r\n    'twisty',\r\n    'twitch',\r\n    'twitter',\r\n    'tycoon',\r\n    'tying',\r\n    'tyke',\r\n    'udder',\r\n    'ultimate',\r\n    'ultimatum',\r\n    'ultra',\r\n    'umbilical',\r\n    'umbrella',\r\n    'umpire',\r\n    'unabashed',\r\n    'unable',\r\n    'unadorned',\r\n    'unadvised',\r\n    'unafraid',\r\n    'unaired',\r\n    'unaligned',\r\n    'unaltered',\r\n    'unarmored',\r\n    'unashamed',\r\n    'unaudited',\r\n    'unawake',\r\n    'unaware',\r\n    'unbaked',\r\n    'unbalance',\r\n    'unbeaten',\r\n    'unbend',\r\n    'unbent',\r\n    'unbiased',\r\n    'unbitten',\r\n    'unblended',\r\n    'unblessed',\r\n    'unblock',\r\n    'unbolted',\r\n    'unbounded',\r\n    'unboxed',\r\n    'unbraided',\r\n    'unbridle',\r\n    'unbroken',\r\n    'unbuckled',\r\n    'unbundle',\r\n    'unburned',\r\n    'unbutton',\r\n    'uncanny',\r\n    'uncapped',\r\n    'uncaring',\r\n    'uncertain',\r\n    'unchain',\r\n    'unchanged',\r\n    'uncharted',\r\n    'uncheck',\r\n    'uncivil',\r\n    'unclad',\r\n    'unclaimed',\r\n    'unclamped',\r\n    'unclasp',\r\n    'uncle',\r\n    'unclip',\r\n    'uncloak',\r\n    'unclog',\r\n    'unclothed',\r\n    'uncoated',\r\n    'uncoiled',\r\n    'uncolored',\r\n    'uncombed',\r\n    'uncommon',\r\n    'uncooked',\r\n    'uncork',\r\n    'uncorrupt',\r\n    'uncounted',\r\n    'uncouple',\r\n    'uncouth',\r\n    'uncover',\r\n    'uncross',\r\n    'uncrown',\r\n    'uncrushed',\r\n    'uncured',\r\n    'uncurious',\r\n    'uncurled',\r\n    'uncut',\r\n    'undamaged',\r\n    'undated',\r\n    'undaunted',\r\n    'undead',\r\n    'undecided',\r\n    'undefined',\r\n    'underage',\r\n    'underarm',\r\n    'undercoat',\r\n    'undercook',\r\n    'undercut',\r\n    'underdog',\r\n    'underdone',\r\n    'underfed',\r\n    'underfeed',\r\n    'underfoot',\r\n    'undergo',\r\n    'undergrad',\r\n    'underhand',\r\n    'underline',\r\n    'underling',\r\n    'undermine',\r\n    'undermost',\r\n    'underpaid',\r\n    'underpass',\r\n    'underpay',\r\n    'underrate',\r\n    'undertake',\r\n    'undertone',\r\n    'undertook',\r\n    'undertow',\r\n    'underuse',\r\n    'underwear',\r\n    'underwent',\r\n    'underwire',\r\n    'undesired',\r\n    'undiluted',\r\n    'undivided',\r\n    'undocked',\r\n    'undoing',\r\n    'undone',\r\n    'undrafted',\r\n    'undress',\r\n    'undrilled',\r\n    'undusted',\r\n    'undying',\r\n    'unearned',\r\n    'unearth',\r\n    'unease',\r\n    'uneasily',\r\n    'uneasy',\r\n    'uneatable',\r\n    'uneaten',\r\n    'unedited',\r\n    'unelected',\r\n    'unending',\r\n    'unengaged',\r\n    'unenvied',\r\n    'unequal',\r\n    'unethical',\r\n    'uneven',\r\n    'unexpired',\r\n    'unexposed',\r\n    'unfailing',\r\n    'unfair',\r\n    'unfasten',\r\n    'unfazed',\r\n    'unfeeling',\r\n    'unfiled',\r\n    'unfilled',\r\n    'unfitted',\r\n    'unfitting',\r\n    'unfixable',\r\n    'unfixed',\r\n    'unflawed',\r\n    'unfocused',\r\n    'unfold',\r\n    'unfounded',\r\n    'unframed',\r\n    'unfreeze',\r\n    'unfrosted',\r\n    'unfrozen',\r\n    'unfunded',\r\n    'unglazed',\r\n    'ungloved',\r\n    'unglue',\r\n    'ungodly',\r\n    'ungraded',\r\n    'ungreased',\r\n    'unguarded',\r\n    'unguided',\r\n    'unhappily',\r\n    'unhappy',\r\n    'unharmed',\r\n    'unhealthy',\r\n    'unheard',\r\n    'unhearing',\r\n    'unheated',\r\n    'unhelpful',\r\n    'unhidden',\r\n    'unhinge',\r\n    'unhitched',\r\n    'unholy',\r\n    'unhook',\r\n    'unicorn',\r\n    'unicycle',\r\n    'unified',\r\n    'unifier',\r\n    'uniformed',\r\n    'uniformly',\r\n    'unify',\r\n    'unimpeded',\r\n    'uninjured',\r\n    'uninstall',\r\n    'uninsured',\r\n    'uninvited',\r\n    'union',\r\n    'uniquely',\r\n    'unisexual',\r\n    'unison',\r\n    'unissued',\r\n    'unit',\r\n    'universal',\r\n    'universe',\r\n    'unjustly',\r\n    'unkempt',\r\n    'unkind',\r\n    'unknotted',\r\n    'unknowing',\r\n    'unknown',\r\n    'unlaced',\r\n    'unlatch',\r\n    'unlawful',\r\n    'unleaded',\r\n    'unlearned',\r\n    'unleash',\r\n    'unless',\r\n    'unleveled',\r\n    'unlighted',\r\n    'unlikable',\r\n    'unlimited',\r\n    'unlined',\r\n    'unlinked',\r\n    'unlisted',\r\n    'unlit',\r\n    'unlivable',\r\n    'unloaded',\r\n    'unloader',\r\n    'unlocked',\r\n    'unlocking',\r\n    'unlovable',\r\n    'unloved',\r\n    'unlovely',\r\n    'unloving',\r\n    'unluckily',\r\n    'unlucky',\r\n    'unmade',\r\n    'unmanaged',\r\n    'unmanned',\r\n    'unmapped',\r\n    'unmarked',\r\n    'unmasked',\r\n    'unmasking',\r\n    'unmatched',\r\n    'unmindful',\r\n    'unmixable',\r\n    'unmixed',\r\n    'unmolded',\r\n    'unmoral',\r\n    'unmovable',\r\n    'unmoved',\r\n    'unmoving',\r\n    'unnamable',\r\n    'unnamed',\r\n    'unnatural',\r\n    'unneeded',\r\n    'unnerve',\r\n    'unnerving',\r\n    'unnoticed',\r\n    'unopened',\r\n    'unopposed',\r\n    'unpack',\r\n    'unpadded',\r\n    'unpaid',\r\n    'unpainted',\r\n    'unpaired',\r\n    'unpaved',\r\n    'unpeeled',\r\n    'unpicked',\r\n    'unpiloted',\r\n    'unpinned',\r\n    'unplanned',\r\n    'unplanted',\r\n    'unpleased',\r\n    'unpledged',\r\n    'unplowed',\r\n    'unplug',\r\n    'unpopular',\r\n    'unproven',\r\n    'unquote',\r\n    'unranked',\r\n    'unrated',\r\n    'unraveled',\r\n    'unreached',\r\n    'unread',\r\n    'unreal',\r\n    'unreeling',\r\n    'unrefined',\r\n    'unrelated',\r\n    'unrented',\r\n    'unrest',\r\n    'unretired',\r\n    'unrevised',\r\n    'unrigged',\r\n    'unripe',\r\n    'unrivaled',\r\n    'unroasted',\r\n    'unrobed',\r\n    'unroll',\r\n    'unruffled',\r\n    'unruly',\r\n    'unrushed',\r\n    'unsaddle',\r\n    'unsafe',\r\n    'unsaid',\r\n    'unsalted',\r\n    'unsaved',\r\n    'unsavory',\r\n    'unscathed',\r\n    'unscented',\r\n    'unscrew',\r\n    'unsealed',\r\n    'unseated',\r\n    'unsecured',\r\n    'unseeing',\r\n    'unseemly',\r\n    'unseen',\r\n    'unselect',\r\n    'unselfish',\r\n    'unsent',\r\n    'unsettled',\r\n    'unshackle',\r\n    'unshaken',\r\n    'unshaved',\r\n    'unshaven',\r\n    'unsheathe',\r\n    'unshipped',\r\n    'unsightly',\r\n    'unsigned',\r\n    'unskilled',\r\n    'unsliced',\r\n    'unsmooth',\r\n    'unsnap',\r\n    'unsocial',\r\n    'unsoiled',\r\n    'unsold',\r\n    'unsolved',\r\n    'unsorted',\r\n    'unspoiled',\r\n    'unspoken',\r\n    'unstable',\r\n    'unstaffed',\r\n    'unstamped',\r\n    'unsteady',\r\n    'unsterile',\r\n    'unstirred',\r\n    'unstitch',\r\n    'unstopped',\r\n    'unstuck',\r\n    'unstuffed',\r\n    'unstylish',\r\n    'unsubtle',\r\n    'unsubtly',\r\n    'unsuited',\r\n    'unsure',\r\n    'unsworn',\r\n    'untagged',\r\n    'untainted',\r\n    'untaken',\r\n    'untamed',\r\n    'untangled',\r\n    'untapped',\r\n    'untaxed',\r\n    'unthawed',\r\n    'unthread',\r\n    'untidy',\r\n    'untie',\r\n    'until',\r\n    'untimed',\r\n    'untimely',\r\n    'untitled',\r\n    'untoasted',\r\n    'untold',\r\n    'untouched',\r\n    'untracked',\r\n    'untrained',\r\n    'untreated',\r\n    'untried',\r\n    'untrimmed',\r\n    'untrue',\r\n    'untruth',\r\n    'unturned',\r\n    'untwist',\r\n    'untying',\r\n    'unusable',\r\n    'unused',\r\n    'unusual',\r\n    'unvalued',\r\n    'unvaried',\r\n    'unvarying',\r\n    'unveiled',\r\n    'unveiling',\r\n    'unvented',\r\n    'unviable',\r\n    'unvisited',\r\n    'unvocal',\r\n    'unwanted',\r\n    'unwarlike',\r\n    'unwary',\r\n    'unwashed',\r\n    'unwatched',\r\n    'unweave',\r\n    'unwed',\r\n    'unwelcome',\r\n    'unwell',\r\n    'unwieldy',\r\n    'unwilling',\r\n    'unwind',\r\n    'unwired',\r\n    'unwitting',\r\n    'unwomanly',\r\n    'unworldly',\r\n    'unworn',\r\n    'unworried',\r\n    'unworthy',\r\n    'unwound',\r\n    'unwoven',\r\n    'unwrapped',\r\n    'unwritten',\r\n    'unzip',\r\n    'upbeat',\r\n    'upchuck',\r\n    'upcoming',\r\n    'upcountry',\r\n    'update',\r\n    'upfront',\r\n    'upgrade',\r\n    'upheaval',\r\n    'upheld',\r\n    'uphill',\r\n    'uphold',\r\n    'uplifted',\r\n    'uplifting',\r\n    'upload',\r\n    'upon',\r\n    'upper',\r\n    'upright',\r\n    'uprising',\r\n    'upriver',\r\n    'uproar',\r\n    'uproot',\r\n    'upscale',\r\n    'upside',\r\n    'upstage',\r\n    'upstairs',\r\n    'upstart',\r\n    'upstate',\r\n    'upstream',\r\n    'upstroke',\r\n    'upswing',\r\n    'uptake',\r\n    'uptight',\r\n    'uptown',\r\n    'upturned',\r\n    'upward',\r\n    'upwind',\r\n    'uranium',\r\n    'urban',\r\n    'urchin',\r\n    'urethane',\r\n    'urgency',\r\n    'urgent',\r\n    'urging',\r\n    'urologist',\r\n    'urology',\r\n    'usable',\r\n    'usage',\r\n    'useable',\r\n    'used',\r\n    'uselessly',\r\n    'user',\r\n    'usher',\r\n    'usual',\r\n    'utensil',\r\n    'utility',\r\n    'utilize',\r\n    'utmost',\r\n    'utopia',\r\n    'utter',\r\n    'vacancy',\r\n    'vacant',\r\n    'vacate',\r\n    'vacation',\r\n    'vagabond',\r\n    'vagrancy',\r\n    'vagrantly',\r\n    'vaguely',\r\n    'vagueness',\r\n    'valiant',\r\n    'valid',\r\n    'valium',\r\n    'valley',\r\n    'valuables',\r\n    'value',\r\n    'vanilla',\r\n    'vanish',\r\n    'vanity',\r\n    'vanquish',\r\n    'vantage',\r\n    'vaporizer',\r\n    'variable',\r\n    'variably',\r\n    'varied',\r\n    'variety',\r\n    'various',\r\n    'varmint',\r\n    'varnish',\r\n    'varsity',\r\n    'varying',\r\n    'vascular',\r\n    'vaseline',\r\n    'vastly',\r\n    'vastness',\r\n    'veal',\r\n    'vegan',\r\n    'veggie',\r\n    'vehicular',\r\n    'velcro',\r\n    'velocity',\r\n    'velvet',\r\n    'vendetta',\r\n    'vending',\r\n    'vendor',\r\n    'veneering',\r\n    'vengeful',\r\n    'venomous',\r\n    'ventricle',\r\n    'venture',\r\n    'venue',\r\n    'venus',\r\n    'verbalize',\r\n    'verbally',\r\n    'verbose',\r\n    'verdict',\r\n    'verify',\r\n    'verse',\r\n    'version',\r\n    'versus',\r\n    'vertebrae',\r\n    'vertical',\r\n    'vertigo',\r\n    'very',\r\n    'vessel',\r\n    'vest',\r\n    'veteran',\r\n    'veto',\r\n    'vexingly',\r\n    'viability',\r\n    'viable',\r\n    'vibes',\r\n    'vice',\r\n    'vicinity',\r\n    'victory',\r\n    'video',\r\n    'viewable',\r\n    'viewer',\r\n    'viewing',\r\n    'viewless',\r\n    'viewpoint',\r\n    'vigorous',\r\n    'village',\r\n    'villain',\r\n    'vindicate',\r\n    'vineyard',\r\n    'vintage',\r\n    'violate',\r\n    'violation',\r\n    'violator',\r\n    'violet',\r\n    'violin',\r\n    'viper',\r\n    'viral',\r\n    'virtual',\r\n    'virtuous',\r\n    'virus',\r\n    'visa',\r\n    'viscosity',\r\n    'viscous',\r\n    'viselike',\r\n    'visible',\r\n    'visibly',\r\n    'vision',\r\n    'visiting',\r\n    'visitor',\r\n    'visor',\r\n    'vista',\r\n    'vitality',\r\n    'vitalize',\r\n    'vitally',\r\n    'vitamins',\r\n    'vivacious',\r\n    'vividly',\r\n    'vividness',\r\n    'vixen',\r\n    'vocalist',\r\n    'vocalize',\r\n    'vocally',\r\n    'vocation',\r\n    'voice',\r\n    'voicing',\r\n    'void',\r\n    'volatile',\r\n    'volley',\r\n    'voltage',\r\n    'volumes',\r\n    'voter',\r\n    'voting',\r\n    'voucher',\r\n    'vowed',\r\n    'vowel',\r\n    'voyage',\r\n    'wackiness',\r\n    'wad',\r\n    'wafer',\r\n    'waffle',\r\n    'waged',\r\n    'wager',\r\n    'wages',\r\n    'waggle',\r\n    'wagon',\r\n    'wake',\r\n    'waking',\r\n    'walk',\r\n    'walmart',\r\n    'walnut',\r\n    'walrus',\r\n    'waltz',\r\n    'wand',\r\n    'wannabe',\r\n    'wanted',\r\n    'wanting',\r\n    'wasabi',\r\n    'washable',\r\n    'washbasin',\r\n    'washboard',\r\n    'washbowl',\r\n    'washcloth',\r\n    'washday',\r\n    'washed',\r\n    'washer',\r\n    'washhouse',\r\n    'washing',\r\n    'washout',\r\n    'washroom',\r\n    'washstand',\r\n    'washtub',\r\n    'wasp',\r\n    'wasting',\r\n    'watch',\r\n    'water',\r\n    'waviness',\r\n    'waving',\r\n    'wavy',\r\n    'whacking',\r\n    'whacky',\r\n    'wham',\r\n    'wharf',\r\n    'wheat',\r\n    'whenever',\r\n    'whiff',\r\n    'whimsical',\r\n    'whinny',\r\n    'whiny',\r\n    'whisking',\r\n    'whoever',\r\n    'whole',\r\n    'whomever',\r\n    'whoopee',\r\n    'whooping',\r\n    'whoops',\r\n    'why',\r\n    'wick',\r\n    'widely',\r\n    'widen',\r\n    'widget',\r\n    'widow',\r\n    'width',\r\n    'wieldable',\r\n    'wielder',\r\n    'wife',\r\n    'wifi',\r\n    'wikipedia',\r\n    'wildcard',\r\n    'wildcat',\r\n    'wilder',\r\n    'wildfire',\r\n    'wildfowl',\r\n    'wildland',\r\n    'wildlife',\r\n    'wildly',\r\n    'wildness',\r\n    'willed',\r\n    'willfully',\r\n    'willing',\r\n    'willow',\r\n    'willpower',\r\n    'wilt',\r\n    'wimp',\r\n    'wince',\r\n    'wincing',\r\n    'wind',\r\n    'wing',\r\n    'winking',\r\n    'winner',\r\n    'winnings',\r\n    'winter',\r\n    'wipe',\r\n    'wired',\r\n    'wireless',\r\n    'wiring',\r\n    'wiry',\r\n    'wisdom',\r\n    'wise',\r\n    'wish',\r\n    'wisplike',\r\n    'wispy',\r\n    'wistful',\r\n    'wizard',\r\n    'wobble',\r\n    'wobbling',\r\n    'wobbly',\r\n    'wok',\r\n    'wolf',\r\n    'wolverine',\r\n    'womanhood',\r\n    'womankind',\r\n    'womanless',\r\n    'womanlike',\r\n    'womanly',\r\n    'womb',\r\n    'woof',\r\n    'wooing',\r\n    'wool',\r\n    'woozy',\r\n    'word',\r\n    'work',\r\n    'worried',\r\n    'worrier',\r\n    'worrisome',\r\n    'worry',\r\n    'worsening',\r\n    'worshiper',\r\n    'worst',\r\n    'wound',\r\n    'woven',\r\n    'wow',\r\n    'wrangle',\r\n    'wrath',\r\n    'wreath',\r\n    'wreckage',\r\n    'wrecker',\r\n    'wrecking',\r\n    'wrench',\r\n    'wriggle',\r\n    'wriggly',\r\n    'wrinkle',\r\n    'wrinkly',\r\n    'wrist',\r\n    'writing',\r\n    'written',\r\n    'wrongdoer',\r\n    'wronged',\r\n    'wrongful',\r\n    'wrongly',\r\n    'wrongness',\r\n    'wrought',\r\n    'xbox',\r\n    'xerox',\r\n    'yahoo',\r\n    'yam',\r\n    'yanking',\r\n    'yapping',\r\n    'yard',\r\n    'yarn',\r\n    'yeah',\r\n    'yearbook',\r\n    'yearling',\r\n    'yearly',\r\n    'yearning',\r\n    'yeast',\r\n    'yelling',\r\n    'yelp',\r\n    'yen',\r\n    'yesterday',\r\n    'yiddish',\r\n    'yield',\r\n    'yin',\r\n    'yippee',\r\n    'yo-yo',\r\n    'yodel',\r\n    'yoga',\r\n    'yogurt',\r\n    'yonder',\r\n    'yoyo',\r\n    'yummy',\r\n    'zap',\r\n    'zealous',\r\n    'zebra',\r\n    'zen',\r\n    'zeppelin',\r\n    'zero',\r\n    'zestfully',\r\n    'zesty',\r\n    'zigzagged',\r\n    'zipfile',\r\n    'zipping',\r\n    'zippy',\r\n    'zips',\r\n    'zit',\r\n    'zodiac',\r\n    'zombie',\r\n    'zone',\r\n    'zoning',\r\n    'zookeeper',\r\n    'zoologist',\r\n    'zoology',\r\n    'zoom',\r\n];\r\n","import { EnvironmentUrls } from '../models/domain/environmentUrls';\r\n\r\nimport { ConstantsService } from './constants.service';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { EnvironmentService as EnvironmentServiceAbstraction } from '../abstractions/environment.service';\r\nimport { NotificationsService } from '../abstractions/notifications.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\n\r\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\r\n    baseUrl: string;\r\n    webVaultUrl: string;\r\n    apiUrl: string;\r\n    identityUrl: string;\r\n    iconsUrl: string;\r\n    notificationsUrl: string;\r\n    eventsUrl: string;\r\n    enterpriseUrl: string;\r\n\r\n    constructor(private apiService: ApiService, private storageService: StorageService,\r\n        private notificationsService: NotificationsService) { }\r\n\r\n    getWebVaultUrl(): string {\r\n        if (this.webVaultUrl != null) {\r\n            return this.webVaultUrl;\r\n        } else if (this.baseUrl) {\r\n            return this.baseUrl;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async setUrlsFromStorage(): Promise<void> {\r\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\r\n        const urls = urlsObj || {\r\n            base: null,\r\n            api: null,\r\n            identity: null,\r\n            icons: null,\r\n            notifications: null,\r\n            events: null,\r\n            webVault: null,\r\n            enterprise: null,\r\n        };\r\n\r\n        const envUrls = new EnvironmentUrls();\r\n\r\n        if (urls.base) {\r\n            this.baseUrl = envUrls.base = urls.base;\r\n            this.apiService.setUrls(envUrls);\r\n            return;\r\n        }\r\n\r\n        this.webVaultUrl = urls.webVault;\r\n        this.apiUrl = envUrls.api = urls.api;\r\n        this.identityUrl = envUrls.identity = urls.identity;\r\n        this.iconsUrl = urls.icons;\r\n        this.notificationsUrl = urls.notifications;\r\n        this.eventsUrl = envUrls.events = urls.events;\r\n        this.enterpriseUrl = urls.enterprise;\r\n        this.apiService.setUrls(envUrls);\r\n    }\r\n\r\n    async setUrls(urls: any): Promise<any> {\r\n        urls.base = this.formatUrl(urls.base);\r\n        urls.webVault = this.formatUrl(urls.webVault);\r\n        urls.api = this.formatUrl(urls.api);\r\n        urls.identity = this.formatUrl(urls.identity);\r\n        urls.icons = this.formatUrl(urls.icons);\r\n        urls.notifications = this.formatUrl(urls.notifications);\r\n        urls.events = this.formatUrl(urls.events);\r\n        urls.enterprise = this.formatUrl(urls.enterprise);\r\n\r\n        await this.storageService.save(ConstantsService.environmentUrlsKey, {\r\n            base: urls.base,\r\n            api: urls.api,\r\n            identity: urls.identity,\r\n            webVault: urls.webVault,\r\n            icons: urls.icons,\r\n            notifications: urls.notifications,\r\n            events: urls.events,\r\n            enterprise: urls.enterprise,\r\n        });\r\n\r\n        this.baseUrl = urls.base;\r\n        this.webVaultUrl = urls.webVault;\r\n        this.apiUrl = urls.api;\r\n        this.identityUrl = urls.identity;\r\n        this.iconsUrl = urls.icons;\r\n        this.notificationsUrl = urls.notifications;\r\n        this.eventsUrl = urls.events;\r\n        this.enterpriseUrl = urls.enterprise;\r\n\r\n        const envUrls = new EnvironmentUrls();\r\n        if (this.baseUrl) {\r\n            envUrls.base = this.baseUrl;\r\n        } else {\r\n            envUrls.api = this.apiUrl;\r\n            envUrls.identity = this.identityUrl;\r\n            envUrls.events = this.eventsUrl;\r\n        }\r\n\r\n        this.apiService.setUrls(envUrls);\r\n        if (this.notificationsService != null) {\r\n            this.notificationsService.init(this);\r\n        }\r\n        return urls;\r\n    }\r\n\r\n    private formatUrl(url: string): string {\r\n        if (url == null || url === '') {\r\n            return null;\r\n        }\r\n\r\n        url = url.replace(/\\/+$/g, '');\r\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\r\n            url = 'https://' + url;\r\n        }\r\n\r\n        return url.trim();\r\n    }\r\n}\r\n","import { FolderData } from '../models/data/folderData';\r\n\r\nimport { Folder } from '../models/domain/folder';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\nimport { TreeNode } from '../models/domain/treeNode';\r\n\r\nimport { FolderRequest } from '../models/request/folderRequest';\r\n\r\nimport { FolderResponse } from '../models/response/folderResponse';\r\n\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { CipherService } from '../abstractions/cipher.service';\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\r\nimport { I18nService } from '../abstractions/i18n.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { UserService } from '../abstractions/user.service';\r\nimport { CipherData } from '../models/data/cipherData';\r\n\r\nimport { ServiceUtils } from '../misc/serviceUtils';\r\nimport { Utils } from '../misc/utils';\r\n\r\nconst Keys = {\r\n    foldersPrefix: 'folders_',\r\n    ciphersPrefix: 'ciphers_',\r\n};\r\nconst NestingDelimiter = '/';\r\n\r\nexport class FolderService implements FolderServiceAbstraction {\r\n    decryptedFolderCache: FolderView[];\r\n\r\n    constructor(private cryptoService: CryptoService, private userService: UserService,\r\n        private apiService: ApiService, private storageService: StorageService,\r\n        private i18nService: I18nService, private cipherService: CipherService) { }\r\n\r\n    clearCache(): void {\r\n        this.decryptedFolderCache = null;\r\n    }\r\n\r\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\r\n        const folder = new Folder();\r\n        folder.id = model.id;\r\n        folder.name = await this.cryptoService.encrypt(model.name, key);\r\n        return folder;\r\n    }\r\n\r\n    async get(id: string): Promise<Folder> {\r\n        const userId = await this.userService.getUserId();\r\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\r\n            Keys.foldersPrefix + userId);\r\n        if (folders == null || !folders.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        return new Folder(folders[id]);\r\n    }\r\n\r\n    async getAll(): Promise<Folder[]> {\r\n        const userId = await this.userService.getUserId();\r\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\r\n            Keys.foldersPrefix + userId);\r\n        const response: Folder[] = [];\r\n        for (const id in folders) {\r\n            if (folders.hasOwnProperty(id)) {\r\n                response.push(new Folder(folders[id]));\r\n            }\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getAllDecrypted(): Promise<FolderView[]> {\r\n        if (this.decryptedFolderCache != null) {\r\n            return this.decryptedFolderCache;\r\n        }\r\n\r\n        const hasKey = await this.cryptoService.hasKey();\r\n        if (!hasKey) {\r\n            throw new Error('No key.');\r\n        }\r\n\r\n        const decFolders: FolderView[] = [];\r\n        const promises: Promise<any>[] = [];\r\n        const folders = await this.getAll();\r\n        folders.forEach((folder) => {\r\n            promises.push(folder.decrypt().then((f) => decFolders.push(f)));\r\n        });\r\n\r\n        await Promise.all(promises);\r\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\r\n\r\n        const noneFolder = new FolderView();\r\n        noneFolder.name = this.i18nService.t('noneFolder');\r\n        decFolders.push(noneFolder);\r\n\r\n        this.decryptedFolderCache = decFolders;\r\n        return this.decryptedFolderCache;\r\n    }\r\n\r\n    async getAllNested(): Promise<TreeNode<FolderView>[]> {\r\n        const folders = await this.getAllDecrypted();\r\n        const nodes: TreeNode<FolderView>[] = [];\r\n        folders.forEach((f) => {\r\n            const folderCopy = new FolderView();\r\n            folderCopy.id = f.id;\r\n            folderCopy.revisionDate = f.revisionDate;\r\n            const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\r\n            ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\r\n        });\r\n        return nodes;\r\n    }\r\n\r\n    async getNested(id: string): Promise<TreeNode<FolderView>> {\r\n        const folders = await this.getAllNested();\r\n        return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\r\n    }\r\n\r\n    async saveWithServer(folder: Folder): Promise<any> {\r\n        const request = new FolderRequest(folder);\r\n\r\n        let response: FolderResponse;\r\n        if (folder.id == null) {\r\n            response = await this.apiService.postFolder(request);\r\n            folder.id = response.id;\r\n        } else {\r\n            response = await this.apiService.putFolder(folder.id, request);\r\n        }\r\n\r\n        const userId = await this.userService.getUserId();\r\n        const data = new FolderData(response, userId);\r\n        await this.upsert(data);\r\n    }\r\n\r\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\r\n            Keys.foldersPrefix + userId);\r\n        if (folders == null) {\r\n            folders = {};\r\n        }\r\n\r\n        if (folder instanceof FolderData) {\r\n            const f = folder as FolderData;\r\n            folders[f.id] = f;\r\n        } else {\r\n            (folder as FolderData[]).forEach((f) => {\r\n                folders[f.id] = f;\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\r\n        this.decryptedFolderCache = null;\r\n    }\r\n\r\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\r\n        this.decryptedFolderCache = null;\r\n    }\r\n\r\n    async clear(userId: string): Promise<any> {\r\n        await this.storageService.remove(Keys.foldersPrefix + userId);\r\n        this.decryptedFolderCache = null;\r\n    }\r\n\r\n    async delete(id: string | string[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\r\n            Keys.foldersPrefix + userId);\r\n        if (folders == null) {\r\n            return;\r\n        }\r\n\r\n        if (typeof id === 'string') {\r\n            if (folders[id] == null) {\r\n                return;\r\n            }\r\n            delete folders[id];\r\n        } else {\r\n            (id as string[]).forEach((i) => {\r\n                delete folders[i];\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\r\n        this.decryptedFolderCache = null;\r\n\r\n        // Items in a deleted folder are re-assigned to \"No Folder\"\r\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\r\n        if (ciphers != null) {\r\n            const updates: CipherData[] = [];\r\n            for (const cId in ciphers) {\r\n                if (ciphers[cId].folderId === id) {\r\n                    ciphers[cId].folderId = null;\r\n                    updates.push(ciphers[cId]);\r\n                }\r\n            }\r\n            if (updates.length > 0) {\r\n                this.cipherService.upsert(updates);\r\n            }\r\n        }\r\n    }\r\n\r\n    async deleteWithServer(id: string): Promise<any> {\r\n        await this.apiService.deleteFolder(id);\r\n        await this.delete(id);\r\n    }\r\n}\r\n","import { FolderResponse } from '../response/folderResponse';\r\n\r\nexport class FolderData {\r\n    id: string;\r\n    userId: string;\r\n    name: string;\r\n    revisionDate: string;\r\n\r\n    constructor(response: FolderResponse, userId: string) {\r\n        this.userId = userId;\r\n        this.name = response.name;\r\n        this.id = response.id;\r\n        this.revisionDate = response.revisionDate;\r\n    }\r\n}\r\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\r\n\r\nexport class I18nService implements I18nServiceAbstraction {\r\n    locale: string;\r\n    // First locale is the default (English)\r\n    supportedTranslationLocales: string[] = ['en'];\r\n    translationLocale: string;\r\n    collator: Intl.Collator;\r\n    localeNames = new Map<string, string>([\r\n        ['af', 'Afrikaans'],\r\n        ['be', 'Беларуская'],\r\n        ['bg', 'български'],\r\n        ['ca', 'català'],\r\n        ['cs', 'čeština'],\r\n        ['da', 'dansk'],\r\n        ['de', 'Deutsch'],\r\n        ['el', 'Ελληνικά'],\r\n        ['en', 'English'],\r\n        ['en-GB', 'English (British)'],\r\n        ['eo', 'Esperanto'],\r\n        ['es', 'español'],\r\n        ['et', 'eesti'],\r\n        ['fa', 'فارسی'],\r\n        ['fi', 'suomi'],\r\n        ['fr', 'français'],\r\n        ['he', 'עברית'],\r\n        ['hi', 'हिन्दी'],\r\n        ['hr', 'hrvatski'],\r\n        ['hu', 'magyar'],\r\n        ['id', 'Bahasa Indonesia'],\r\n        ['it', 'italiano'],\r\n        ['ja', '日本語'],\r\n        ['ko', '한국어'],\r\n        ['lv', 'Latvietis'],\r\n        ['ml', 'മലയാളം'],\r\n        ['nb', 'norsk (bokmål)'],\r\n        ['nl', 'Nederlands'],\r\n        ['pl', 'polski'],\r\n        ['pt-BR', 'português do Brasil'],\r\n        ['pt-PT', 'português'],\r\n        ['ro', 'română'],\r\n        ['ru', 'русский'],\r\n        ['sk', 'slovenčina'],\r\n        ['sr', 'Српски'],\r\n        ['sv', 'svenska'],\r\n        ['th', 'ไทย'],\r\n        ['tr', 'Türkçe'],\r\n        ['uk', 'українська'],\r\n        ['vi', 'Tiếng Việt'],\r\n        ['zh-CN', '中文（中国大陆）'],\r\n        ['zh-TW', '中文（台灣）'],\r\n    ]);\r\n\r\n    protected inited: boolean;\r\n    protected defaultMessages: any = {};\r\n    protected localeMessages: any = {};\r\n\r\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\r\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\r\n        this.systemLanguage = systemLanguage.replace('_', '-');\r\n    }\r\n\r\n    async init(locale?: string) {\r\n        if (this.inited) {\r\n            throw new Error('i18n already initialized.');\r\n        }\r\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\r\n            throw new Error('supportedTranslationLocales not set.');\r\n        }\r\n\r\n        this.inited = true;\r\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\r\n\r\n        try {\r\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\r\n        } catch {\r\n            this.collator = null;\r\n        }\r\n\r\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\r\n            this.translationLocale = this.translationLocale.slice(0, 2);\r\n\r\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\r\n                this.translationLocale = this.supportedTranslationLocales[0];\r\n            }\r\n        }\r\n\r\n        if (this.localesDirectory != null) {\r\n            await this.loadMessages(this.translationLocale, this.localeMessages);\r\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\r\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\r\n            }\r\n        }\r\n    }\r\n\r\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\r\n        return this.translate(id, p1, p2, p3);\r\n    }\r\n\r\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\r\n        let result: string;\r\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\r\n            result = this.localeMessages[id];\r\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\r\n            result = this.defaultMessages[id];\r\n        } else {\r\n            result = '';\r\n        }\r\n\r\n        if (result !== '') {\r\n            if (p1 != null) {\r\n                result = result.split('__$1__').join(p1);\r\n            }\r\n            if (p2 != null) {\r\n                result = result.split('__$2__').join(p2);\r\n            }\r\n            if (p3 != null) {\r\n                result = result.split('__$3__').join(p3);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\r\n        const formattedLocale = locale.replace('-', '_');\r\n        const locales = await this.getLocalesJson(formattedLocale);\r\n        for (const prop in locales) {\r\n            if (!locales.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n            messagesObj[prop] = locales[prop].message;\r\n\r\n            if (locales[prop].placeholders) {\r\n                for (const placeProp in locales[prop].placeholders) {\r\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\r\n                        !locales[prop].placeholders[placeProp].content) {\r\n                        continue;\r\n                    }\r\n\r\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\r\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\r\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\r\n                        replaceContent = '__$' + replaceContent + '__';\r\n                    }\r\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import * as zxcvbn from 'zxcvbn';\r\n\r\nimport { CipherString } from '../models/domain/cipherString';\r\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\r\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\r\nimport { Policy } from '../models/domain/policy';\r\n\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport {\r\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\r\n} from '../abstractions/passwordGeneration.service';\r\nimport { PolicyService } from '../abstractions/policy.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\n\r\nimport { EEFLongWordList } from '../misc/wordlist';\r\n\r\nimport { PolicyType } from '../enums/policyType';\r\n\r\nconst DefaultOptions = {\r\n    length: 14,\r\n    ambiguous: false,\r\n    number: true,\r\n    minNumber: 1,\r\n    uppercase: true,\r\n    minUppercase: 0,\r\n    lowercase: true,\r\n    minLowercase: 0,\r\n    special: false,\r\n    minSpecial: 1,\r\n    type: 'password',\r\n    numWords: 3,\r\n    wordSeparator: '-',\r\n    capitalize: false,\r\n    includeNumber: false,\r\n};\r\n\r\nconst Keys = {\r\n    options: 'passwordGenerationOptions',\r\n    history: 'generatedPasswordHistory',\r\n};\r\n\r\nconst MaxPasswordsInHistory = 100;\r\n\r\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\r\n    private optionsCache: any;\r\n    private history: GeneratedPasswordHistory[];\r\n\r\n    constructor(private cryptoService: CryptoService, private storageService: StorageService,\r\n        private policyService: PolicyService) { }\r\n\r\n    async generatePassword(options: any): Promise<string> {\r\n        // overload defaults with given options\r\n        const o = Object.assign({}, DefaultOptions, options);\r\n\r\n        if (o.type === 'passphrase') {\r\n            return this.generatePassphrase(options);\r\n        }\r\n\r\n        // sanitize\r\n        this.sanitizePasswordLength(o, true);\r\n\r\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\r\n        if (o.length < minLength) {\r\n            o.length = minLength;\r\n        }\r\n\r\n        const positions: string[] = [];\r\n        if (o.lowercase && o.minLowercase > 0) {\r\n            for (let i = 0; i < o.minLowercase; i++) {\r\n                positions.push('l');\r\n            }\r\n        }\r\n        if (o.uppercase && o.minUppercase > 0) {\r\n            for (let i = 0; i < o.minUppercase; i++) {\r\n                positions.push('u');\r\n            }\r\n        }\r\n        if (o.number && o.minNumber > 0) {\r\n            for (let i = 0; i < o.minNumber; i++) {\r\n                positions.push('n');\r\n            }\r\n        }\r\n        if (o.special && o.minSpecial > 0) {\r\n            for (let i = 0; i < o.minSpecial; i++) {\r\n                positions.push('s');\r\n            }\r\n        }\r\n        while (positions.length < o.length) {\r\n            positions.push('a');\r\n        }\r\n\r\n        // shuffle\r\n        await this.shuffleArray(positions);\r\n\r\n        // build out the char sets\r\n        let allCharSet = '';\r\n\r\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\r\n        if (o.ambiguous) {\r\n            lowercaseCharSet += 'l';\r\n        }\r\n        if (o.lowercase) {\r\n            allCharSet += lowercaseCharSet;\r\n        }\r\n\r\n        let uppercaseCharSet = 'ABCDEFGHJKLMNPQRSTUVWXYZ';\r\n        if (o.ambiguous) {\r\n            uppercaseCharSet += 'IO';\r\n        }\r\n        if (o.uppercase) {\r\n            allCharSet += uppercaseCharSet;\r\n        }\r\n\r\n        let numberCharSet = '23456789';\r\n        if (o.ambiguous) {\r\n            numberCharSet += '01';\r\n        }\r\n        if (o.number) {\r\n            allCharSet += numberCharSet;\r\n        }\r\n\r\n        const specialCharSet = '!@#$%^&*';\r\n        if (o.special) {\r\n            allCharSet += specialCharSet;\r\n        }\r\n\r\n        let password = '';\r\n        for (let i = 0; i < o.length; i++) {\r\n            let positionChars: string;\r\n            switch (positions[i]) {\r\n                case 'l':\r\n                    positionChars = lowercaseCharSet;\r\n                    break;\r\n                case 'u':\r\n                    positionChars = uppercaseCharSet;\r\n                    break;\r\n                case 'n':\r\n                    positionChars = numberCharSet;\r\n                    break;\r\n                case 's':\r\n                    positionChars = specialCharSet;\r\n                    break;\r\n                case 'a':\r\n                    positionChars = allCharSet;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\r\n            password += positionChars.charAt(randomCharIndex);\r\n        }\r\n\r\n        return password;\r\n    }\r\n\r\n    async generatePassphrase(options: any): Promise<string> {\r\n        const o = Object.assign({}, DefaultOptions, options);\r\n\r\n        if (o.numWords == null || o.numWords <= 2) {\r\n            o.numWords = DefaultOptions.numWords;\r\n        }\r\n        if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\r\n            o.wordSeparator = ' ';\r\n        }\r\n        if (o.capitalize == null) {\r\n            o.capitalize = false;\r\n        }\r\n        if (o.includeNumber == null) {\r\n            o.includeNumber = false;\r\n        }\r\n\r\n        const listLength = EEFLongWordList.length - 1;\r\n        const wordList = new Array(o.numWords);\r\n        for (let i = 0; i < o.numWords; i++) {\r\n            const wordIndex = await this.cryptoService.randomNumber(0, listLength);\r\n            if (o.capitalize) {\r\n                wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\r\n            } else {\r\n                wordList[i] = EEFLongWordList[wordIndex];\r\n            }\r\n        }\r\n\r\n        if (o.includeNumber) {\r\n            await this.appendRandomNumberToRandomWord(wordList);\r\n        }\r\n        return wordList.join(o.wordSeparator);\r\n    }\r\n\r\n    async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\r\n        if (this.optionsCache == null) {\r\n            const options = await this.storageService.get(Keys.options);\r\n            if (options == null) {\r\n                this.optionsCache = DefaultOptions;\r\n            } else {\r\n                this.optionsCache = Object.assign({}, DefaultOptions, options);\r\n            }\r\n        }\r\n        const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(this.optionsCache);\r\n        this.optionsCache = enforcedOptions[0];\r\n        return [this.optionsCache, enforcedOptions[1]];\r\n    }\r\n\r\n    async enforcePasswordGeneratorPoliciesOnOptions(options: any): Promise<[any, PasswordGeneratorPolicyOptions]> {\r\n        let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\r\n        if (enforcedPolicyOptions != null) {\r\n            if (options.length < enforcedPolicyOptions.minLength) {\r\n                options.length = enforcedPolicyOptions.minLength;\r\n            }\r\n\r\n            if (enforcedPolicyOptions.useUppercase) {\r\n                options.uppercase = true;\r\n            }\r\n\r\n            if (enforcedPolicyOptions.useLowercase) {\r\n                options.lowercase = true;\r\n            }\r\n\r\n            if (enforcedPolicyOptions.useNumbers) {\r\n                options.number = true;\r\n            }\r\n\r\n            if (options.minNumber < enforcedPolicyOptions.numberCount) {\r\n                options.minNumber = enforcedPolicyOptions.numberCount;\r\n            }\r\n\r\n            if (enforcedPolicyOptions.useSpecial) {\r\n                options.special = true;\r\n            }\r\n\r\n            if (options.minSpecial < enforcedPolicyOptions.specialCount) {\r\n                options.minSpecial = enforcedPolicyOptions.specialCount;\r\n            }\r\n\r\n            // Must normalize these fields because the receiving call expects all options to pass the current rules\r\n            if (options.minSpecial + options.minNumber > options.length) {\r\n                options.minSpecial = options.length - options.minNumber;\r\n            }\r\n\r\n            if (options.numWords < enforcedPolicyOptions.minNumberWords) {\r\n                options.numWords = enforcedPolicyOptions.minNumberWords;\r\n            }\r\n\r\n            if (enforcedPolicyOptions.capitalize) {\r\n                options.capitalize = true;\r\n            }\r\n\r\n            if (enforcedPolicyOptions.includeNumber) {\r\n                options.includeNumber = true;\r\n            }\r\n\r\n            // Force default type if password/passphrase selected via policy\r\n            if (enforcedPolicyOptions.defaultType === 'password' ||\r\n                enforcedPolicyOptions.defaultType === 'passphrase') {\r\n                options.type = enforcedPolicyOptions.defaultType;\r\n            }\r\n        } else { // UI layer expects an instantiated object to prevent more explicit null checks\r\n            enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\r\n        }\r\n        return [options, enforcedPolicyOptions];\r\n    }\r\n\r\n    async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\r\n        const policies: Policy[] = this.policyService == null ? null :\r\n            await this.policyService.getAll(PolicyType.PasswordGenerator);\r\n        let enforcedOptions: PasswordGeneratorPolicyOptions = null;\r\n\r\n        if (policies == null || policies.length === 0) {\r\n            return enforcedOptions;\r\n        }\r\n\r\n        policies.forEach((currentPolicy) => {\r\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\r\n                return;\r\n            }\r\n\r\n            if (enforcedOptions == null) {\r\n                enforcedOptions = new PasswordGeneratorPolicyOptions();\r\n            }\r\n\r\n            // Password wins in multi-org collisions\r\n            if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== 'password') {\r\n                enforcedOptions.defaultType = currentPolicy.data.defaultType;\r\n            }\r\n\r\n            if (currentPolicy.data.minLength != null\r\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\r\n                enforcedOptions.minLength = currentPolicy.data.minLength;\r\n            }\r\n\r\n            if (currentPolicy.data.useUpper) {\r\n                enforcedOptions.useUppercase = true;\r\n            }\r\n\r\n            if (currentPolicy.data.useLower) {\r\n                enforcedOptions.useLowercase = true;\r\n            }\r\n\r\n            if (currentPolicy.data.useNumbers) {\r\n                enforcedOptions.useNumbers = true;\r\n            }\r\n\r\n            if (currentPolicy.data.minNumbers != null\r\n                && currentPolicy.data.minNumbers > enforcedOptions.numberCount) {\r\n                enforcedOptions.numberCount = currentPolicy.data.minNumbers;\r\n            }\r\n\r\n            if (currentPolicy.data.useSpecial) {\r\n                enforcedOptions.useSpecial = true;\r\n            }\r\n\r\n            if (currentPolicy.data.minSpecial != null\r\n                && currentPolicy.data.minSpecial > enforcedOptions.specialCount) {\r\n                enforcedOptions.specialCount = currentPolicy.data.minSpecial;\r\n            }\r\n\r\n            if (currentPolicy.data.minNumberWords != null\r\n                && currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords) {\r\n                enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\r\n            }\r\n\r\n            if (currentPolicy.data.capitalize) {\r\n                enforcedOptions.capitalize = true;\r\n            }\r\n\r\n            if (currentPolicy.data.includeNumber) {\r\n                enforcedOptions.includeNumber = true;\r\n            }\r\n        });\r\n\r\n        return enforcedOptions;\r\n    }\r\n\r\n    async saveOptions(options: any) {\r\n        await this.storageService.save(Keys.options, options);\r\n        this.optionsCache = options;\r\n    }\r\n\r\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\r\n        const hasKey = await this.cryptoService.hasKey();\r\n        if (!hasKey) {\r\n            return new Array<GeneratedPasswordHistory>();\r\n        }\r\n\r\n        if (!this.history) {\r\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\r\n            this.history = await this.decryptHistory(encrypted);\r\n        }\r\n\r\n        return this.history || new Array<GeneratedPasswordHistory>();\r\n    }\r\n\r\n    async addHistory(password: string): Promise<any> {\r\n        // Cannot add new history if no key is available\r\n        const hasKey = await this.cryptoService.hasKey();\r\n        if (!hasKey) {\r\n            return;\r\n        }\r\n\r\n        const currentHistory = await this.getHistory();\r\n\r\n        // Prevent duplicates\r\n        if (this.matchesPrevious(password, currentHistory)) {\r\n            return;\r\n        }\r\n\r\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\r\n\r\n        // Remove old items.\r\n        if (currentHistory.length > MaxPasswordsInHistory) {\r\n            currentHistory.pop();\r\n        }\r\n\r\n        const newHistory = await this.encryptHistory(currentHistory);\r\n        return await this.storageService.save(Keys.history, newHistory);\r\n    }\r\n\r\n    async clear(): Promise<any> {\r\n        this.history = [];\r\n        return await this.storageService.remove(Keys.history);\r\n    }\r\n\r\n    passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\r\n        if (password == null || password.length === 0) {\r\n            return null;\r\n        }\r\n        let globalUserInputs = ['bitwarden', 'bit', 'warden'];\r\n        if (userInputs != null && userInputs.length > 0) {\r\n            globalUserInputs = globalUserInputs.concat(userInputs);\r\n        }\r\n        // Use a hash set to get rid of any duplicate user inputs\r\n        const finalUserInputs = Array.from(new Set(globalUserInputs));\r\n        const result = zxcvbn(password, finalUserInputs);\r\n        return result;\r\n    }\r\n\r\n    normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\r\n        options.minLowercase = 0;\r\n        options.minUppercase = 0;\r\n\r\n        if (!options.length || options.length < 5) {\r\n            options.length = 5;\r\n        } else if (options.length > 128) {\r\n            options.length = 128;\r\n        }\r\n\r\n        if (options.length < enforcedPolicyOptions.minLength) {\r\n            options.length = enforcedPolicyOptions.minLength;\r\n        }\r\n\r\n        if (!options.minNumber) {\r\n            options.minNumber = 0;\r\n        } else if (options.minNumber > options.length) {\r\n            options.minNumber = options.length;\r\n        } else if (options.minNumber > 9) {\r\n            options.minNumber = 9;\r\n        }\r\n\r\n        if (options.minNumber < enforcedPolicyOptions.numberCount) {\r\n            options.minNumber = enforcedPolicyOptions.numberCount;\r\n        }\r\n\r\n        if (!options.minSpecial) {\r\n            options.minSpecial = 0;\r\n        } else if (options.minSpecial > options.length) {\r\n            options.minSpecial = options.length;\r\n        } else if (options.minSpecial > 9) {\r\n            options.minSpecial = 9;\r\n        }\r\n\r\n        if (options.minSpecial < enforcedPolicyOptions.specialCount) {\r\n            options.minSpecial = enforcedPolicyOptions.specialCount;\r\n        }\r\n\r\n        if (options.minSpecial + options.minNumber > options.length) {\r\n            options.minSpecial = options.length - options.minNumber;\r\n        }\r\n\r\n        if (options.numWords == null || options.length < 3) {\r\n            options.numWords = 3;\r\n        } else if (options.numWords > 20) {\r\n            options.numWords = 20;\r\n        }\r\n\r\n        if (options.numWords < enforcedPolicyOptions.minNumberWords) {\r\n            options.numWords = enforcedPolicyOptions.minNumberWords;\r\n        }\r\n\r\n        if (options.wordSeparator != null && options.wordSeparator.length > 1) {\r\n            options.wordSeparator = options.wordSeparator[0];\r\n        }\r\n\r\n        this.sanitizePasswordLength(options, false);\r\n    }\r\n\r\n    private capitalize(str: string) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    private async appendRandomNumberToRandomWord(wordList: string[]) {\r\n        if (wordList == null || wordList.length <= 0) {\r\n            return;\r\n        }\r\n        const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\r\n        const num = await this.cryptoService.randomNumber(0, 9);\r\n        wordList[index] = wordList[index] + num;\r\n    }\r\n\r\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\r\n        if (history == null || history.length === 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n\r\n        const promises = history.map(async (item) => {\r\n            const encrypted = await this.cryptoService.encrypt(item.password);\r\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\r\n        });\r\n\r\n        return await Promise.all(promises);\r\n    }\r\n\r\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\r\n        if (history == null || history.length === 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n\r\n        const promises = history.map(async (item) => {\r\n            const decrypted = await this.cryptoService.decryptToUtf8(new CipherString(item.password));\r\n            return new GeneratedPasswordHistory(decrypted, item.date);\r\n        });\r\n\r\n        return await Promise.all(promises);\r\n    }\r\n\r\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\r\n        if (history == null || history.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        return history[history.length - 1].password === password;\r\n    }\r\n\r\n    // ref: https://stackoverflow.com/a/12646864/1090359\r\n    private async shuffleArray(array: string[]) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = await this.cryptoService.randomNumber(0, i);\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    private sanitizePasswordLength(options: any, forGeneration: boolean) {\r\n        let minUppercaseCalc = 0;\r\n        let minLowercaseCalc = 0;\r\n        let minNumberCalc: number = options.minNumber;\r\n        let minSpecialCalc: number = options.minSpecial;\r\n\r\n        if (options.uppercase && options.minUppercase <= 0) {\r\n            minUppercaseCalc = 1;\r\n        } else if (!options.uppercase) {\r\n            minUppercaseCalc = 0;\r\n        }\r\n\r\n        if (options.lowercase && options.minLowercase <= 0) {\r\n            minLowercaseCalc = 1;\r\n        } else if (!options.lowercase) {\r\n            minLowercaseCalc = 0;\r\n        }\r\n\r\n        if (options.number && options.minNumber <= 0) {\r\n            minNumberCalc = 1;\r\n        } else if (!options.number) {\r\n            minNumberCalc = 0;\r\n        }\r\n\r\n        if (options.special && options.minSpecial <= 0) {\r\n            minSpecialCalc = 1;\r\n        } else if (!options.special) {\r\n            minSpecialCalc = 0;\r\n        }\r\n\r\n        // This should never happen but is a final safety net\r\n        if (!options.length || options.length < 1) {\r\n            options.length = 10;\r\n        }\r\n\r\n        const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\r\n        // Normalize and Generation both require this modification\r\n        if (options.length < minLength) {\r\n            options.length = minLength;\r\n        }\r\n\r\n        // Apply other changes if the options object passed in is for generation\r\n        if (forGeneration) {\r\n            options.minUppercase = minUppercaseCalc;\r\n            options.minLowercase = minLowercaseCalc;\r\n            options.minNumber = minNumberCalc;\r\n            options.minSpecial = minSpecialCalc;\r\n        }\r\n    }\r\n}\r\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { UserService } from '../abstractions/user.service';\r\n\r\nconst Keys = {\r\n    settingsPrefix: 'settings_',\r\n    equivalentDomains: 'equivalentDomains',\r\n};\r\n\r\nexport class SettingsService implements SettingsServiceAbstraction {\r\n    private settingsCache: any;\r\n\r\n    constructor(private userService: UserService, private storageService: StorageService) {\r\n    }\r\n\r\n    clearCache(): void {\r\n        this.settingsCache = null;\r\n    }\r\n\r\n    getEquivalentDomains(): Promise<any> {\r\n        return this.getSettingsKey(Keys.equivalentDomains);\r\n    }\r\n\r\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\r\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\r\n    }\r\n\r\n    async clear(userId: string): Promise<void> {\r\n        await this.storageService.remove(Keys.settingsPrefix + userId);\r\n        this.clearCache();\r\n    }\r\n\r\n    // Helpers\r\n\r\n    private async getSettings(): Promise<any> {\r\n        if (this.settingsCache == null) {\r\n            const userId = await this.userService.getUserId();\r\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\r\n        }\r\n        return this.settingsCache;\r\n    }\r\n\r\n    private async getSettingsKey(key: string): Promise<any> {\r\n        const settings = await this.getSettings();\r\n        if (settings != null && settings[key]) {\r\n            return settings[key];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private async setSettingsKey(key: string, value: any): Promise<void> {\r\n        const userId = await this.userService.getUserId();\r\n        let settings = await this.getSettings();\r\n        if (!settings) {\r\n            settings = {};\r\n        }\r\n\r\n        settings[key] = value;\r\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\r\n        this.settingsCache = settings;\r\n    }\r\n}\r\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\r\n\r\nexport class StateService implements StateServiceAbstraction {\r\n    private state: any = {};\r\n\r\n    get<T>(key: string): Promise<T> {\r\n        if (this.state.hasOwnProperty(key)) {\r\n            return Promise.resolve(this.state[key]);\r\n        }\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    save(key: string, obj: any): Promise<any> {\r\n        this.state[key] = obj;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    remove(key: string): Promise<any> {\r\n        delete this.state[key];\r\n        return Promise.resolve();\r\n    }\r\n\r\n    purge(): Promise<any> {\r\n        this.state = {};\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","import { ApiService } from '../abstractions/api.service';\r\nimport { CipherService } from '../abstractions/cipher.service';\r\nimport { CollectionService } from '../abstractions/collection.service';\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport { FolderService } from '../abstractions/folder.service';\r\nimport { MessagingService } from '../abstractions/messaging.service';\r\nimport { PolicyService } from '../abstractions/policy.service';\r\nimport { SendService } from '../abstractions/send.service';\r\nimport { SettingsService } from '../abstractions/settings.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\r\nimport { UserService } from '../abstractions/user.service';\r\n\r\nimport { CipherData } from '../models/data/cipherData';\r\nimport { CollectionData } from '../models/data/collectionData';\r\nimport { FolderData } from '../models/data/folderData';\r\nimport { OrganizationData } from '../models/data/organizationData';\r\nimport { PolicyData } from '../models/data/policyData';\r\nimport { SendData } from '../models/data/sendData';\r\n\r\nimport { CipherResponse } from '../models/response/cipherResponse';\r\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\r\nimport { DomainsResponse } from '../models/response/domainsResponse';\r\nimport { FolderResponse } from '../models/response/folderResponse';\r\nimport {\r\n    SyncCipherNotification,\r\n    SyncFolderNotification,\r\n} from '../models/response/notificationResponse';\r\nimport { PolicyResponse } from '../models/response/policyResponse';\r\nimport { ProfileResponse } from '../models/response/profileResponse';\r\nimport { SendResponse } from '../models/response/sendResponse';\r\n\r\nconst Keys = {\r\n    lastSyncPrefix: 'lastSync_',\r\n};\r\n\r\nexport class SyncService implements SyncServiceAbstraction {\r\n    syncInProgress: boolean = false;\r\n\r\n    constructor(private userService: UserService, private apiService: ApiService,\r\n        private settingsService: SettingsService, private folderService: FolderService,\r\n        private cipherService: CipherService, private cryptoService: CryptoService,\r\n        private collectionService: CollectionService, private storageService: StorageService,\r\n        private messagingService: MessagingService, private policyService: PolicyService,\r\n        private sendService: SendService, private logoutCallback: (expired: boolean) => Promise<void>) {\r\n    }\r\n\r\n    async getLastSync(): Promise<Date> {\r\n        const userId = await this.userService.getUserId();\r\n        if (userId == null) {\r\n            return null;\r\n        }\r\n\r\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\r\n        if (lastSync) {\r\n            return new Date(lastSync);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    async setLastSync(date: Date): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        if (userId == null) {\r\n            return;\r\n        }\r\n\r\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\r\n    }\r\n\r\n    async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\r\n        this.syncStarted();\r\n        const isAuthenticated = await this.userService.isAuthenticated();\r\n        if (!isAuthenticated) {\r\n            return this.syncCompleted(false);\r\n        }\r\n\r\n        const now = new Date();\r\n        let needsSync = false;\r\n        try {\r\n            needsSync = await this.needsSyncing(forceSync);\r\n        } catch (e) {\r\n            if (allowThrowOnError) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        if (!needsSync) {\r\n            await this.setLastSync(now);\r\n            return this.syncCompleted(false);\r\n        }\r\n\r\n        const userId = await this.userService.getUserId();\r\n        try {\r\n            const response = await this.apiService.getSync();\r\n\r\n            await this.syncProfile(response.profile);\r\n            await this.syncFolders(userId, response.folders);\r\n            await this.syncCollections(response.collections);\r\n            await this.syncCiphers(userId, response.ciphers);\r\n            await this.syncSends(userId, response.sends);\r\n            await this.syncSettings(userId, response.domains);\r\n            await this.syncPolicies(response.policies);\r\n\r\n            await this.setLastSync(now);\r\n            return this.syncCompleted(true);\r\n        } catch (e) {\r\n            if (allowThrowOnError) {\r\n                throw e;\r\n            } else {\r\n                return this.syncCompleted(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\r\n        this.syncStarted();\r\n        if (await this.userService.isAuthenticated()) {\r\n            try {\r\n                const localFolder = await this.folderService.get(notification.id);\r\n                if ((!isEdit && localFolder == null) ||\r\n                    (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)) {\r\n                    const remoteFolder = await this.apiService.getFolder(notification.id);\r\n                    if (remoteFolder != null) {\r\n                        const userId = await this.userService.getUserId();\r\n                        await this.folderService.upsert(new FolderData(remoteFolder, userId));\r\n                        this.messagingService.send('syncedUpsertedFolder', { folderId: notification.id });\r\n                        return this.syncCompleted(true);\r\n                    }\r\n                }\r\n            } catch { }\r\n        }\r\n        return this.syncCompleted(false);\r\n    }\r\n\r\n    async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\r\n        this.syncStarted();\r\n        if (await this.userService.isAuthenticated()) {\r\n            await this.folderService.delete(notification.id);\r\n            this.messagingService.send('syncedDeletedFolder', { folderId: notification.id });\r\n            this.syncCompleted(true);\r\n            return true;\r\n        }\r\n        return this.syncCompleted(false);\r\n    }\r\n\r\n    async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\r\n        this.syncStarted();\r\n        if (await this.userService.isAuthenticated()) {\r\n            try {\r\n                let shouldUpdate = true;\r\n                const localCipher = await this.cipherService.get(notification.id);\r\n                if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\r\n                    shouldUpdate = false;\r\n                }\r\n\r\n                let checkCollections = false;\r\n                if (shouldUpdate) {\r\n                    if (isEdit) {\r\n                        shouldUpdate = localCipher != null;\r\n                        checkCollections = true;\r\n                    } else {\r\n                        if (notification.collectionIds == null || notification.organizationId == null) {\r\n                            shouldUpdate = localCipher == null;\r\n                        } else {\r\n                            shouldUpdate = false;\r\n                            checkCollections = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!shouldUpdate && checkCollections && notification.organizationId != null &&\r\n                    notification.collectionIds != null && notification.collectionIds.length > 0) {\r\n                    const collections = await this.collectionService.getAll();\r\n                    if (collections != null) {\r\n                        for (let i = 0; i < collections.length; i++) {\r\n                            if (notification.collectionIds.indexOf(collections[i].id) > -1) {\r\n                                shouldUpdate = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (shouldUpdate) {\r\n                    const remoteCipher = await this.apiService.getCipher(notification.id);\r\n                    if (remoteCipher != null) {\r\n                        const userId = await this.userService.getUserId();\r\n                        await this.cipherService.upsert(new CipherData(remoteCipher, userId));\r\n                        this.messagingService.send('syncedUpsertedCipher', { cipherId: notification.id });\r\n                        return this.syncCompleted(true);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                if (e != null && e.statusCode === 404 && isEdit) {\r\n                    await this.cipherService.delete(notification.id);\r\n                    this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\r\n                    return this.syncCompleted(true);\r\n                }\r\n            }\r\n        }\r\n        return this.syncCompleted(false);\r\n    }\r\n\r\n    async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\r\n        this.syncStarted();\r\n        if (await this.userService.isAuthenticated()) {\r\n            await this.cipherService.delete(notification.id);\r\n            this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\r\n            return this.syncCompleted(true);\r\n        }\r\n        return this.syncCompleted(false);\r\n    }\r\n\r\n    // Helpers\r\n\r\n    private syncStarted() {\r\n        this.syncInProgress = true;\r\n        this.messagingService.send('syncStarted');\r\n    }\r\n\r\n    private syncCompleted(successfully: boolean): boolean {\r\n        this.syncInProgress = false;\r\n        this.messagingService.send('syncCompleted', { successfully: successfully });\r\n        return successfully;\r\n    }\r\n\r\n    private async needsSyncing(forceSync: boolean) {\r\n        if (forceSync) {\r\n            return true;\r\n        }\r\n\r\n        const lastSync = await this.getLastSync();\r\n        if (lastSync == null || lastSync.getTime() === 0) {\r\n            return true;\r\n        }\r\n\r\n        const response = await this.apiService.getAccountRevisionDate();\r\n        if (new Date(response) <= lastSync) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private async syncProfile(response: ProfileResponse) {\r\n        const stamp = await this.userService.getSecurityStamp();\r\n        if (stamp != null && stamp !== response.securityStamp) {\r\n            if (this.logoutCallback != null) {\r\n                await this.logoutCallback(true);\r\n            }\r\n\r\n            throw new Error('Stamp has changed');\r\n        }\r\n\r\n        await this.cryptoService.setEncKey(response.key);\r\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\r\n        await this.cryptoService.setOrgKeys(response.organizations);\r\n        await this.userService.setSecurityStamp(response.securityStamp);\r\n\r\n        const organizations: { [id: string]: OrganizationData; } = {};\r\n        response.organizations.forEach((o) => {\r\n            organizations[o.id] = new OrganizationData(o);\r\n        });\r\n        return await this.userService.replaceOrganizations(organizations);\r\n    }\r\n\r\n    private async syncFolders(userId: string, response: FolderResponse[]) {\r\n        const folders: { [id: string]: FolderData; } = {};\r\n        response.forEach((f) => {\r\n            folders[f.id] = new FolderData(f, userId);\r\n        });\r\n        return await this.folderService.replace(folders);\r\n    }\r\n\r\n    private async syncCollections(response: CollectionDetailsResponse[]) {\r\n        const collections: { [id: string]: CollectionData; } = {};\r\n        response.forEach((c) => {\r\n            collections[c.id] = new CollectionData(c);\r\n        });\r\n        return await this.collectionService.replace(collections);\r\n    }\r\n\r\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\r\n        const ciphers: { [id: string]: CipherData; } = {};\r\n        response.forEach((c) => {\r\n            ciphers[c.id] = new CipherData(c, userId);\r\n        });\r\n        return await this.cipherService.replace(ciphers);\r\n    }\r\n\r\n    private async syncSends(userId: string, response: SendResponse[]) {\r\n        const sends: { [id: string]: SendData; } = {};\r\n        response.forEach((s) => {\r\n            sends[s.id] = new SendData(s, userId);\r\n        });\r\n        return await this.sendService.replace(sends);\r\n    }\r\n\r\n    private async syncSettings(userId: string, response: DomainsResponse) {\r\n        let eqDomains: string[][] = [];\r\n        if (response != null && response.equivalentDomains != null) {\r\n            eqDomains = eqDomains.concat(response.equivalentDomains);\r\n        }\r\n\r\n        if (response != null && response.globalEquivalentDomains != null) {\r\n            response.globalEquivalentDomains.forEach((global) => {\r\n                if (global.domains.length > 0) {\r\n                    eqDomains.push(global.domains);\r\n                }\r\n            });\r\n        }\r\n\r\n        return this.settingsService.setEquivalentDomains(eqDomains);\r\n    }\r\n\r\n    private async syncPolicies(response: PolicyResponse[]) {\r\n        const policies: { [id: string]: PolicyData; } = {};\r\n        if (response != null) {\r\n            response.forEach((p) => {\r\n                policies[p.id] = new PolicyData(p);\r\n            });\r\n        }\r\n        return await this.policyService.replace(policies);\r\n    }\r\n}\r\n","import { ConstantsService } from './constants.service';\r\n\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\r\n\r\nimport { Utils } from '../misc/utils';\r\n\r\nconst Keys = {\r\n    accessToken: 'accessToken',\r\n    refreshToken: 'refreshToken',\r\n    twoFactorTokenPrefix: 'twoFactorToken_',\r\n};\r\n\r\nexport class TokenService implements TokenServiceAbstraction {\r\n    token: string;\r\n    decodedToken: any;\r\n    refreshToken: string;\r\n\r\n    constructor(private storageService: StorageService) {\r\n    }\r\n\r\n    setTokens(accessToken: string, refreshToken: string): Promise<any> {\r\n        return Promise.all([\r\n            this.setToken(accessToken),\r\n            this.setRefreshToken(refreshToken),\r\n        ]);\r\n    }\r\n\r\n    async setToken(token: string): Promise<any> {\r\n        this.token = token;\r\n        this.decodedToken = null;\r\n\r\n        if (await this.skipTokenStorage()) {\r\n            // if we have a vault timeout and the action is log out, don't store token\r\n            return;\r\n        }\r\n\r\n        return this.storageService.save(Keys.accessToken, token);\r\n    }\r\n\r\n    async getToken(): Promise<string> {\r\n        if (this.token != null) {\r\n            return this.token;\r\n        }\r\n\r\n        this.token = await this.storageService.get<string>(Keys.accessToken);\r\n        return this.token;\r\n    }\r\n\r\n    async setRefreshToken(refreshToken: string): Promise<any> {\r\n        this.refreshToken = refreshToken;\r\n\r\n        if (await this.skipTokenStorage()) {\r\n            // if we have a vault timeout and the action is log out, don't store token\r\n            return;\r\n        }\r\n\r\n        return this.storageService.save(Keys.refreshToken, refreshToken);\r\n    }\r\n\r\n    async getRefreshToken(): Promise<string> {\r\n        if (this.refreshToken != null) {\r\n            return this.refreshToken;\r\n        }\r\n\r\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\r\n        return this.refreshToken;\r\n    }\r\n\r\n    async toggleTokens(): Promise<any> {\r\n        const token = await this.getToken();\r\n        const refreshToken = await this.getRefreshToken();\r\n        const timeout = await this.storageService.get(ConstantsService.vaultTimeoutKey);\r\n        const action = await this.storageService.get(ConstantsService.vaultTimeoutActionKey);\r\n        if ((timeout != null || timeout === 0) && action === 'logOut') {\r\n            // if we have a vault timeout and the action is log out, reset tokens\r\n            await this.clearToken();\r\n            this.token = token;\r\n            this.refreshToken = refreshToken;\r\n            return;\r\n        }\r\n\r\n        await this.setToken(token);\r\n        await this.setRefreshToken(refreshToken);\r\n    }\r\n\r\n    setTwoFactorToken(token: string, email: string): Promise<any> {\r\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\r\n    }\r\n\r\n    getTwoFactorToken(email: string): Promise<string> {\r\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\r\n    }\r\n\r\n    clearTwoFactorToken(email: string): Promise<any> {\r\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\r\n    }\r\n\r\n    clearToken(): Promise<any> {\r\n        this.token = null;\r\n        this.decodedToken = null;\r\n        this.refreshToken = null;\r\n\r\n        return Promise.all([\r\n            this.storageService.remove(Keys.accessToken),\r\n            this.storageService.remove(Keys.refreshToken),\r\n        ]);\r\n    }\r\n\r\n    // jwthelper methods\r\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\r\n\r\n    decodeToken(): any {\r\n        if (this.decodedToken) {\r\n            return this.decodedToken;\r\n        }\r\n\r\n        if (this.token == null) {\r\n            throw new Error('Token not found.');\r\n        }\r\n\r\n        const parts = this.token.split('.');\r\n        if (parts.length !== 3) {\r\n            throw new Error('JWT must have 3 parts');\r\n        }\r\n\r\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\r\n        if (decoded == null) {\r\n            throw new Error('Cannot decode the token');\r\n        }\r\n\r\n        this.decodedToken = JSON.parse(decoded);\r\n        return this.decodedToken;\r\n    }\r\n\r\n    getTokenExpirationDate(): Date {\r\n        const decoded = this.decodeToken();\r\n        if (typeof decoded.exp === 'undefined') {\r\n            return null;\r\n        }\r\n\r\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        d.setUTCSeconds(decoded.exp);\r\n        return d;\r\n    }\r\n\r\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\r\n        const d = this.getTokenExpirationDate();\r\n        if (d == null) {\r\n            return 0;\r\n        }\r\n\r\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\r\n        return Math.round(msRemaining / 1000);\r\n    }\r\n\r\n    tokenNeedsRefresh(minutes: number = 5): boolean {\r\n        const sRemaining = this.tokenSecondsRemaining();\r\n        return sRemaining < (60 * minutes);\r\n    }\r\n\r\n    getUserId(): string {\r\n        const decoded = this.decodeToken();\r\n        if (typeof decoded.sub === 'undefined') {\r\n            throw new Error('No user id found');\r\n        }\r\n\r\n        return decoded.sub as string;\r\n    }\r\n\r\n    getEmail(): string {\r\n        const decoded = this.decodeToken();\r\n        if (typeof decoded.email === 'undefined') {\r\n            throw new Error('No email found');\r\n        }\r\n\r\n        return decoded.email as string;\r\n    }\r\n\r\n    getEmailVerified(): boolean {\r\n        const decoded = this.decodeToken();\r\n        if (typeof decoded.email_verified === 'undefined') {\r\n            throw new Error('No email verification found');\r\n        }\r\n\r\n        return decoded.email_verified as boolean;\r\n    }\r\n\r\n    getName(): string {\r\n        const decoded = this.decodeToken();\r\n        if (typeof decoded.name === 'undefined') {\r\n            return null;\r\n        }\r\n\r\n        return decoded.name as string;\r\n    }\r\n\r\n    getPremium(): boolean {\r\n        const decoded = this.decodeToken();\r\n        if (typeof decoded.premium === 'undefined') {\r\n            return false;\r\n        }\r\n\r\n        return decoded.premium as boolean;\r\n    }\r\n\r\n    getIssuer(): string {\r\n        const decoded = this.decodeToken();\r\n        if (typeof decoded.iss === 'undefined') {\r\n            throw new Error('No issuer found');\r\n        }\r\n\r\n        return decoded.iss as string;\r\n    }\r\n\r\n    private async skipTokenStorage(): Promise<boolean> {\r\n        const timeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\r\n        const action = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\r\n        return timeout != null && action === 'logOut';\r\n    }\r\n}\r\n","import { ConstantsService } from './constants.service';\r\n\r\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\r\n\r\nimport { Utils } from '../misc/utils';\r\n\r\nconst B32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\r\nconst SteamChars = '23456789BCDFGHJKMNPQRTVWXY';\r\n\r\nexport class TotpService implements TotpServiceAbstraction {\r\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService) { }\r\n\r\n    async getCode(key: string): Promise<string> {\r\n        if (key == null) {\r\n            return null;\r\n        }\r\n        let period = 30;\r\n        let alg: 'sha1' | 'sha256' | 'sha512' = 'sha1';\r\n        let digits = 6;\r\n        let keyB32 = key;\r\n        const isOtpAuth = key.toLowerCase().indexOf('otpauth://') === 0;\r\n        const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf('steam://') === 0;\r\n        if (isOtpAuth) {\r\n            const params = Utils.getQueryParams(key);\r\n            if (params.has('digits') && params.get('digits') != null) {\r\n                try {\r\n                    const digitParams = parseInt(params.get('digits').trim(), null);\r\n                    if (digitParams > 10) {\r\n                        digits = 10;\r\n                    } else if (digitParams > 0) {\r\n                        digits = digitParams;\r\n                    }\r\n                } catch { }\r\n            }\r\n            if (params.has('period') && params.get('period') != null) {\r\n                try {\r\n                    const periodParam = parseInt(params.get('period').trim(), null);\r\n                    if (periodParam > 0) {\r\n                        period = periodParam;\r\n                    }\r\n                } catch { }\r\n            }\r\n            if (params.has('secret') && params.get('secret') != null) {\r\n                keyB32 = params.get('secret');\r\n            }\r\n            if (params.has('algorithm') && params.get('algorithm') != null) {\r\n                const algParam = params.get('algorithm').toLowerCase();\r\n                if (algParam === 'sha1' || algParam === 'sha256' || algParam === 'sha512') {\r\n                    alg = algParam;\r\n                }\r\n            }\r\n        } else if (isSteamAuth) {\r\n            keyB32 = key.substr('steam://'.length);\r\n            digits = 5;\r\n        }\r\n\r\n        const epoch = Math.round(new Date().getTime() / 1000.0);\r\n        const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, '0');\r\n        const timeBytes = Utils.fromHexToArray(timeHex);\r\n        const keyBytes = this.b32ToBytes(keyB32);\r\n\r\n        if (!keyBytes.length || !timeBytes.length) {\r\n            return null;\r\n        }\r\n\r\n        const hash = await this.sign(keyBytes, timeBytes, alg);\r\n        if (hash.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        /* tslint:disable */\r\n        const offset = (hash[hash.length - 1] & 0xf);\r\n        const binary = ((hash[offset] & 0x7f) << 24) | ((hash[offset + 1] & 0xff) << 16) |\r\n            ((hash[offset + 2] & 0xff) << 8) | (hash[offset + 3] & 0xff);\r\n        /* tslint:enable */\r\n\r\n        let otp = '';\r\n        if (isSteamAuth) {\r\n            // tslint:disable-next-line\r\n            let fullCode = binary & 0x7fffffff;\r\n            for (let i = 0; i < digits; i++) {\r\n                otp += SteamChars[fullCode % SteamChars.length];\r\n                fullCode = Math.trunc(fullCode / SteamChars.length);\r\n            }\r\n        } else {\r\n            otp = (binary % Math.pow(10, digits)).toString();\r\n            otp = this.leftPad(otp, digits, '0');\r\n        }\r\n\r\n        return otp;\r\n    }\r\n\r\n    getTimeInterval(key: string): number {\r\n        let period = 30;\r\n        if (key != null && key.toLowerCase().indexOf('otpauth://') === 0) {\r\n            const params = Utils.getQueryParams(key);\r\n            if (params.has('period') && params.get('period') != null) {\r\n                try {\r\n                    period = parseInt(params.get('period').trim(), null);\r\n                } catch { }\r\n            }\r\n        }\r\n        return period;\r\n    }\r\n\r\n    async isAutoCopyEnabled(): Promise<boolean> {\r\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\r\n    }\r\n\r\n    // Helpers\r\n\r\n    private leftPad(s: string, l: number, p: string): string {\r\n        if (l + 1 >= s.length) {\r\n            s = Array(l + 1 - s.length).join(p) + s;\r\n        }\r\n        return s;\r\n    }\r\n\r\n    private decToHex(d: number): string {\r\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\r\n    }\r\n\r\n    private b32ToHex(s: string): string {\r\n        s = s.toUpperCase();\r\n        let cleanedInput = '';\r\n\r\n        for (let i = 0; i < s.length; i++) {\r\n            if (B32Chars.indexOf(s[i]) < 0) {\r\n                continue;\r\n            }\r\n\r\n            cleanedInput += s[i];\r\n        }\r\n        s = cleanedInput;\r\n\r\n        let bits = '';\r\n        let hex = '';\r\n        for (let i = 0; i < s.length; i++) {\r\n            const byteIndex = B32Chars.indexOf(s.charAt(i));\r\n            if (byteIndex < 0) {\r\n                continue;\r\n            }\r\n            bits += this.leftPad(byteIndex.toString(2), 5, '0');\r\n        }\r\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\r\n            const chunk = bits.substr(i, 4);\r\n            hex = hex + parseInt(chunk, 2).toString(16);\r\n        }\r\n        return hex;\r\n    }\r\n\r\n    private b32ToBytes(s: string): Uint8Array {\r\n        return Utils.fromHexToArray(this.b32ToHex(s));\r\n    }\r\n\r\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array, alg: 'sha1' | 'sha256' | 'sha512') {\r\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\r\n        return new Uint8Array(signature);\r\n    }\r\n}\r\n","import { StorageService } from '../abstractions/storage.service';\r\nimport { TokenService } from '../abstractions/token.service';\r\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\r\n\r\nimport { OrganizationData } from '../models/data/organizationData';\r\nimport { Organization } from '../models/domain/organization';\r\n\r\nimport { KdfType } from '../enums/kdfType';\r\n\r\nconst Keys = {\r\n    userId: 'userId',\r\n    userEmail: 'userEmail',\r\n    stamp: 'securityStamp',\r\n    kdf: 'kdf',\r\n    kdfIterations: 'kdfIterations',\r\n    organizationsPrefix: 'organizations_',\r\n};\r\n\r\nexport class UserService implements UserServiceAbstraction {\r\n    private userId: string;\r\n    private email: string;\r\n    private stamp: string;\r\n    private kdf: KdfType;\r\n    private kdfIterations: number;\r\n\r\n    constructor(private tokenService: TokenService, private storageService: StorageService) { }\r\n\r\n    setInformation(userId: string, email: string, kdf: KdfType, kdfIterations: number): Promise<any> {\r\n        this.email = email;\r\n        this.userId = userId;\r\n        this.kdf = kdf;\r\n        this.kdfIterations = kdfIterations;\r\n\r\n        return Promise.all([\r\n            this.storageService.save(Keys.userEmail, email),\r\n            this.storageService.save(Keys.userId, userId),\r\n            this.storageService.save(Keys.kdf, kdf),\r\n            this.storageService.save(Keys.kdfIterations, kdfIterations),\r\n        ]);\r\n    }\r\n\r\n    setSecurityStamp(stamp: string): Promise<any> {\r\n        this.stamp = stamp;\r\n        return this.storageService.save(Keys.stamp, stamp);\r\n    }\r\n\r\n    async getUserId(): Promise<string> {\r\n        if (this.userId == null) {\r\n            this.userId = await this.storageService.get<string>(Keys.userId);\r\n        }\r\n        return this.userId;\r\n    }\r\n\r\n    async getEmail(): Promise<string> {\r\n        if (this.email == null) {\r\n            this.email = await this.storageService.get<string>(Keys.userEmail);\r\n        }\r\n        return this.email;\r\n    }\r\n\r\n    async getSecurityStamp(): Promise<string> {\r\n        if (this.stamp == null) {\r\n            this.stamp = await this.storageService.get<string>(Keys.stamp);\r\n        }\r\n        return this.stamp;\r\n    }\r\n\r\n    async getKdf(): Promise<KdfType> {\r\n        if (this.kdf == null) {\r\n            this.kdf = await this.storageService.get<KdfType>(Keys.kdf);\r\n        }\r\n        return this.kdf;\r\n    }\r\n\r\n    async getKdfIterations(): Promise<number> {\r\n        if (this.kdfIterations == null) {\r\n            this.kdfIterations = await this.storageService.get<number>(Keys.kdfIterations);\r\n        }\r\n        return this.kdfIterations;\r\n    }\r\n\r\n    async clear(): Promise<any> {\r\n        const userId = await this.getUserId();\r\n\r\n        await Promise.all([\r\n            this.storageService.remove(Keys.userId),\r\n            this.storageService.remove(Keys.userEmail),\r\n            this.storageService.remove(Keys.stamp),\r\n            this.storageService.remove(Keys.kdf),\r\n            this.storageService.remove(Keys.kdfIterations),\r\n            this.clearOrganizations(userId),\r\n        ]);\r\n\r\n        this.userId = this.email = this.stamp = null;\r\n        this.kdf = null;\r\n        this.kdfIterations = null;\r\n    }\r\n\r\n    async isAuthenticated(): Promise<boolean> {\r\n        const token = await this.tokenService.getToken();\r\n        if (token == null) {\r\n            return false;\r\n        }\r\n\r\n        const userId = await this.getUserId();\r\n        return userId != null;\r\n    }\r\n\r\n    async canAccessPremium(): Promise<boolean> {\r\n        const authed = await this.isAuthenticated();\r\n        if (!authed) {\r\n            return false;\r\n        }\r\n\r\n        const tokenPremium = this.tokenService.getPremium();\r\n        if (tokenPremium) {\r\n            return true;\r\n        }\r\n\r\n        const orgs = await this.getAllOrganizations();\r\n        for (let i = 0; i < orgs.length; i++) {\r\n            if (orgs[i].usersGetPremium && orgs[i].enabled) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async getOrganization(id: string): Promise<Organization> {\r\n        const userId = await this.getUserId();\r\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\r\n            Keys.organizationsPrefix + userId);\r\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        return new Organization(organizations[id]);\r\n    }\r\n\r\n    async getAllOrganizations(): Promise<Organization[]> {\r\n        const userId = await this.getUserId();\r\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\r\n            Keys.organizationsPrefix + userId);\r\n        const response: Organization[] = [];\r\n        for (const id in organizations) {\r\n            if (organizations.hasOwnProperty(id)) {\r\n                response.push(new Organization(organizations[id]));\r\n            }\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\r\n        const userId = await this.getUserId();\r\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\r\n    }\r\n\r\n    async clearOrganizations(userId: string): Promise<any> {\r\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\r\n    }\r\n}\r\n","import { ConstantsService } from './constants.service';\r\n\r\nimport { CipherService } from '../abstractions/cipher.service';\r\nimport { CollectionService } from '../abstractions/collection.service';\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport { FolderService } from '../abstractions/folder.service';\r\nimport { MessagingService } from '../abstractions/messaging.service';\r\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\r\nimport { SearchService } from '../abstractions/search.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { TokenService } from '../abstractions/token.service';\r\nimport { UserService } from '../abstractions/user.service';\r\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from '../abstractions/vaultTimeout.service';\r\n\r\nimport { CipherString } from '../models/domain/cipherString';\r\n\r\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\r\n    pinProtectedKey: CipherString = null;\r\n    biometricLocked: boolean = true;\r\n\r\n    private inited = false;\r\n\r\n    constructor(private cipherService: CipherService, private folderService: FolderService,\r\n        private collectionService: CollectionService, private cryptoService: CryptoService,\r\n        private platformUtilsService: PlatformUtilsService, private storageService: StorageService,\r\n        private messagingService: MessagingService, private searchService: SearchService,\r\n        private userService: UserService, private tokenService: TokenService,\r\n        private lockedCallback: () => Promise<void> = null, private loggedOutCallback: () => Promise<void> = null) {\r\n    }\r\n\r\n    init(checkOnInterval: boolean) {\r\n        if (this.inited) {\r\n            return;\r\n        }\r\n\r\n        this.inited = true;\r\n        if (checkOnInterval) {\r\n            this.checkVaultTimeout();\r\n            setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\r\n        }\r\n    }\r\n\r\n    // Keys aren't stored for a device that is locked or logged out.\r\n    async isLocked(): Promise<boolean> {\r\n        const hasKey = await this.cryptoService.hasKey();\r\n        if (hasKey) {\r\n            if (await this.isBiometricLockSet() && this.biometricLocked) {\r\n                return true;\r\n            }\r\n        }\r\n        return !hasKey;\r\n    }\r\n\r\n    async checkVaultTimeout(): Promise<void> {\r\n        if (await this.platformUtilsService.isViewOpen()) {\r\n            // Do not lock\r\n            return;\r\n        }\r\n\r\n        // \"is logged out check\" - similar to isLocked, below\r\n        const authed = await this.userService.isAuthenticated();\r\n        if (!authed) {\r\n            return;\r\n        }\r\n\r\n        if (await this.isLocked()) {\r\n            return;\r\n        }\r\n\r\n        // This has the potential to be removed. Evaluate after all platforms complete with auto-logout\r\n        let vaultTimeout = this.platformUtilsService.lockTimeout();\r\n        if (vaultTimeout == null) {\r\n            vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\r\n        }\r\n\r\n        if (vaultTimeout == null || vaultTimeout < 0) {\r\n            return;\r\n        }\r\n\r\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\r\n        if (lastActive == null) {\r\n            return;\r\n        }\r\n\r\n        const vaultTimeoutSeconds = vaultTimeout * 60;\r\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\r\n        if (diffSeconds >= vaultTimeoutSeconds) {\r\n            // Pivot based on the saved vault timeout action\r\n            const timeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\r\n            timeoutAction === 'logOut' ? await this.logOut() : await this.lock(true);\r\n        }\r\n    }\r\n\r\n    async lock(allowSoftLock = false): Promise<void> {\r\n        const authed = await this.userService.isAuthenticated();\r\n        if (!authed) {\r\n            return;\r\n        }\r\n\r\n        this.biometricLocked = true;\r\n        if (allowSoftLock) {\r\n            const biometricLocked = await this.isBiometricLockSet();\r\n            if (biometricLocked && this.platformUtilsService.supportsSecureStorage()) {\r\n                this.messagingService.send('locked');\r\n                if (this.lockedCallback != null) {\r\n                    await this.lockedCallback();\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        await Promise.all([\r\n            this.cryptoService.clearKey(),\r\n            this.cryptoService.clearOrgKeys(true),\r\n            this.cryptoService.clearKeyPair(true),\r\n            this.cryptoService.clearEncKey(true),\r\n        ]);\r\n\r\n        this.folderService.clearCache();\r\n        this.cipherService.clearCache();\r\n        this.collectionService.clearCache();\r\n        this.searchService.clearIndex();\r\n        this.messagingService.send('locked');\r\n        if (this.lockedCallback != null) {\r\n            await this.lockedCallback();\r\n        }\r\n    }\r\n\r\n    async logOut(): Promise<void> {\r\n        if (this.loggedOutCallback != null) {\r\n            await this.loggedOutCallback();\r\n        }\r\n    }\r\n\r\n    async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\r\n        await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\r\n        await this.storageService.save(ConstantsService.vaultTimeoutActionKey, action);\r\n        await this.cryptoService.toggleKey();\r\n        await this.tokenService.toggleTokens();\r\n    }\r\n\r\n    async isPinLockSet(): Promise<[boolean, boolean]> {\r\n        const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\r\n        const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\r\n        return [protectedPin != null, pinProtectedKey != null];\r\n    }\r\n\r\n    async isBiometricLockSet(): Promise<boolean> {\r\n        return await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\r\n    }\r\n\r\n    clear(): Promise<any> {\r\n        this.pinProtectedKey = null;\r\n        return this.storageService.remove(ConstantsService.protectedPin);\r\n    }\r\n}\r\n","import { Cipher } from './cipher';\r\n\r\nimport { CipherView } from '../view/cipherView';\r\n\r\nexport class CipherWithIds extends Cipher {\r\n    id: string;\r\n    collectionIds: string[];\r\n\r\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\r\n    build(o: CipherView) {\r\n        this.id = o.id;\r\n        super.build(o);\r\n        this.collectionIds = o.collectionIds;\r\n    }\r\n}\r\n","import { Collection } from './collection';\r\n\r\nimport { CollectionView } from '../view/collectionView';\r\n\r\nexport class CollectionWithId extends Collection {\r\n    id: string;\r\n\r\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\r\n    build(o: CollectionView) {\r\n        this.id = o.id;\r\n        super.build(o);\r\n    }\r\n}\r\n","import { Folder } from './folder';\r\n\r\nimport { FolderView } from '../view/folderView';\r\n\r\nexport class FolderWithId extends Folder {\r\n    id: string;\r\n\r\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\r\n    build(o: FolderView) {\r\n        this.id = o.id;\r\n        super.build(o);\r\n    }\r\n}\r\n","export enum NotificationType {\r\n    SyncCipherUpdate = 0,\r\n    SyncCipherCreate = 1,\r\n    SyncLoginDelete = 2,\r\n    SyncFolderDelete = 3,\r\n    SyncCiphers = 4,\r\n\r\n    SyncVault = 5,\r\n    SyncOrgKeys = 6,\r\n    SyncFolderCreate = 7,\r\n    SyncFolderUpdate = 8,\r\n    SyncCipherDelete = 9,\r\n    SyncSettings = 10,\r\n\r\n    LogOut = 11,\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport 'bootstrap';\r\nimport 'jquery';\r\nimport 'popper.js';\r\n\r\n// tslint:disable-next-line\r\nrequire('../scss/styles.scss');\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nif (process.env.ENV === 'production') {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\r\n","import 'core-js';\r\n\r\nimport { ToasterModule } from 'angular2-toaster';\r\nimport { Angulartics2Module } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ServicesModule } from './services/services.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ModalComponent } from './modal.component';\r\n\r\nimport { AvatarComponent } from './components/avatar.component';\r\nimport { PasswordStrengthComponent } from './components/password-strength.component';\r\n\r\nimport { FooterComponent } from './layouts/footer.component';\r\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\r\nimport { NavbarComponent } from './layouts/navbar.component';\r\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\r\nimport { UserLayoutComponent } from './layouts/user-layout.component';\r\n\r\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\r\nimport { HintComponent } from './accounts/hint.component';\r\nimport { LockComponent } from './accounts/lock.component';\r\nimport { LoginComponent } from './accounts/login.component';\r\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\r\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\r\nimport { RegisterComponent } from './accounts/register.component';\r\nimport { SetPasswordComponent } from './accounts/set-password.component';\r\nimport { SsoComponent } from './accounts/sso.component';\r\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\r\nimport { TwoFactorComponent } from './accounts/two-factor.component';\r\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\r\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\r\n\r\nimport {\r\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\r\n} from './organizations/manage/collection-add-edit.component';\r\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\r\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\r\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\r\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\r\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\r\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\r\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\r\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\r\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\r\nimport { PolicyEditComponent as OrgPolicyEditComponent } from './organizations/manage/policy-edit.component';\r\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\r\nimport { UserConfirmComponent as OrgUserConfirmComponent } from './organizations/manage/user-confirm.component';\r\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\r\n\r\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\r\nimport { AdjustSeatsComponent } from './organizations/settings/adjust-seats.component';\r\nimport { ChangePlanComponent } from './organizations/settings/change-plan.component';\r\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\r\nimport { DownloadLicenseComponent } from './organizations/settings/download-license.component';\r\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\r\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\r\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\r\nimport {\r\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\r\n} from './organizations/settings/two-factor-setup.component';\r\n\r\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\r\nimport {\r\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\r\n} from './organizations/tools/exposed-passwords-report.component';\r\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\r\nimport {\r\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\r\n} from './organizations/tools/inactive-two-factor-report.component';\r\nimport {\r\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\r\n} from './organizations/tools/reused-passwords-report.component';\r\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\r\nimport {\r\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\r\n} from './organizations/tools/unsecured-websites-report.component';\r\nimport {\r\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\r\n} from './organizations/tools/weak-passwords-report.component';\r\n\r\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\r\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\r\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\r\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\r\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\r\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\r\n\r\nimport { AccessComponent } from './send/access.component';\r\nimport { AddEditComponent as SendAddEditComponent } from './send/add-edit.component';\r\nimport { SendComponent } from './send/send.component';\r\n\r\nimport { AccountComponent } from './settings/account.component';\r\nimport { AddCreditComponent } from './settings/add-credit.component';\r\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\r\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\r\nimport { ApiKeyComponent } from './settings/api-key.component';\r\nimport { ChangeEmailComponent } from './settings/change-email.component';\r\nimport { ChangeKdfComponent } from './settings/change-kdf.component';\r\nimport { ChangePasswordComponent } from './settings/change-password.component';\r\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\r\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\r\nimport { DeleteAccountComponent } from './settings/delete-account.component';\r\nimport { DomainRulesComponent } from './settings/domain-rules.component';\r\nimport { LinkSsoComponent } from './settings/link-sso.component';\r\nimport { OptionsComponent } from './settings/options.component';\r\nimport { OrganizationPlansComponent } from './settings/organization-plans.component';\r\nimport { OrganizationsComponent } from './settings/organizations.component';\r\nimport { PaymentComponent } from './settings/payment.component';\r\nimport { PremiumComponent } from './settings/premium.component';\r\nimport { ProfileComponent } from './settings/profile.component';\r\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { TaxInfoComponent } from './settings/tax-info.component';\r\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\r\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\r\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\r\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\r\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\r\nimport { TwoFactorU2fComponent } from './settings/two-factor-u2f.component';\r\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\r\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\r\nimport { UpdateKeyComponent } from './settings/update-key.component';\r\nimport { UpdateLicenseComponent } from './settings/update-license.component';\r\nimport { UserBillingComponent } from './settings/user-billing.component';\r\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\r\nimport { VerifyEmailComponent } from './settings/verify-email.component';\r\n\r\nimport { BreachReportComponent } from './tools/breach-report.component';\r\nimport { ExportComponent } from './tools/export.component';\r\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\r\nimport { ImportComponent } from './tools/import.component';\r\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\r\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\r\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\r\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\r\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\r\n\r\nimport { AddEditComponent } from './vault/add-edit.component';\r\nimport { AttachmentsComponent } from './vault/attachments.component';\r\nimport { BulkActionsComponent } from './vault/bulk-actions.component';\r\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\r\nimport { BulkMoveComponent } from './vault/bulk-move.component';\r\nimport { BulkRestoreComponent } from './vault/bulk-restore.component';\r\nimport { BulkShareComponent } from './vault/bulk-share.component';\r\nimport { CiphersComponent } from './vault/ciphers.component';\r\nimport { CollectionsComponent } from './vault/collections.component';\r\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\r\nimport { GroupingsComponent } from './vault/groupings.component';\r\nimport { ShareComponent } from './vault/share.component';\r\nimport { VaultComponent } from './vault/vault.component';\r\n\r\nimport { CalloutComponent } from 'jslib/angular/components/callout.component';\r\nimport { IconComponent } from 'jslib/angular/components/icon.component';\r\n\r\nimport { A11yTitleDirective } from 'jslib/angular/directives/a11y-title.directive';\r\nimport { ApiActionDirective } from 'jslib/angular/directives/api-action.directive';\r\nimport { AutofocusDirective } from 'jslib/angular/directives/autofocus.directive';\r\nimport { BlurClickDirective } from 'jslib/angular/directives/blur-click.directive';\r\nimport { BoxRowDirective } from 'jslib/angular/directives/box-row.directive';\r\nimport { FallbackSrcDirective } from 'jslib/angular/directives/fallback-src.directive';\r\nimport { InputVerbatimDirective } from 'jslib/angular/directives/input-verbatim.directive';\r\nimport { SelectCopyDirective } from 'jslib/angular/directives/select-copy.directive';\r\nimport { StopClickDirective } from 'jslib/angular/directives/stop-click.directive';\r\nimport { StopPropDirective } from 'jslib/angular/directives/stop-prop.directive';\r\nimport { TrueFalseValueDirective } from 'jslib/angular/directives/true-false-value.directive';\r\n\r\nimport { ColorPasswordPipe } from 'jslib/angular/pipes/color-password.pipe';\r\nimport { I18nPipe } from 'jslib/angular/pipes/i18n.pipe';\r\nimport { SearchCiphersPipe } from 'jslib/angular/pipes/search-ciphers.pipe';\r\nimport { SearchPipe } from 'jslib/angular/pipes/search.pipe';\r\n\r\nimport {\r\n    registerLocaleData,\r\n    DatePipe,\r\n} from '@angular/common';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeCs from '@angular/common/locales/cs';\r\nimport localeDa from '@angular/common/locales/da';\r\nimport localeDe from '@angular/common/locales/de';\r\nimport localeEl from '@angular/common/locales/el';\r\nimport localeEnGb from '@angular/common/locales/en-GB';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport localeEt from '@angular/common/locales/et';\r\nimport localeFr from '@angular/common/locales/fr';\r\nimport localeHe from '@angular/common/locales/he';\r\nimport localeIt from '@angular/common/locales/it';\r\nimport localeJa from '@angular/common/locales/ja';\r\nimport localeKo from '@angular/common/locales/ko';\r\nimport localeLv from '@angular/common/locales/lv';\r\nimport localeMl from '@angular/common/locales/ml';\r\nimport localeNb from '@angular/common/locales/nb';\r\nimport localeNl from '@angular/common/locales/nl';\r\nimport localePl from '@angular/common/locales/pl';\r\nimport localePtBr from '@angular/common/locales/pt';\r\nimport localePtPt from '@angular/common/locales/pt-PT';\r\nimport localeRu from '@angular/common/locales/ru';\r\nimport localeSk from '@angular/common/locales/sk';\r\nimport localeSv from '@angular/common/locales/sv';\r\nimport localeUk from '@angular/common/locales/uk';\r\nimport localeZhCn from '@angular/common/locales/zh-Hans';\r\nimport localeZhTw from '@angular/common/locales/zh-Hant';\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeCs, 'cs');\r\nregisterLocaleData(localeDa, 'da');\r\nregisterLocaleData(localeDe, 'de');\r\nregisterLocaleData(localeEl, 'el');\r\nregisterLocaleData(localeEnGb, 'en-GB');\r\nregisterLocaleData(localeEs, 'es');\r\nregisterLocaleData(localeEt, 'et');\r\nregisterLocaleData(localeFr, 'fr');\r\nregisterLocaleData(localeHe, 'he');\r\nregisterLocaleData(localeIt, 'it');\r\nregisterLocaleData(localeJa, 'ja');\r\nregisterLocaleData(localeKo, 'ko');\r\nregisterLocaleData(localeLv, 'lv');\r\nregisterLocaleData(localeMl, 'ml');\r\nregisterLocaleData(localeNb, 'nb');\r\nregisterLocaleData(localeNl, 'nl');\r\nregisterLocaleData(localePl, 'pl');\r\nregisterLocaleData(localePtBr, 'pt-BR');\r\nregisterLocaleData(localePtPt, 'pt-PT');\r\nregisterLocaleData(localeRu, 'ru');\r\nregisterLocaleData(localeSk, 'sk');\r\nregisterLocaleData(localeSv, 'sv');\r\nregisterLocaleData(localeUk, 'uk');\r\nregisterLocaleData(localeZhCn, 'zh-CN');\r\nregisterLocaleData(localeZhTw, 'zh-TW');\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        ServicesModule,\r\n        Angulartics2Module.forRoot({\r\n            pageTracking: {\r\n                clearQueryParams: true,\r\n            },\r\n        }),\r\n        ToasterModule.forRoot(),\r\n        InfiniteScrollModule,\r\n        DragDropModule,\r\n    ],\r\n    declarations: [\r\n        A11yTitleDirective,\r\n        AccessComponent,\r\n        AcceptOrganizationComponent,\r\n        AccountComponent,\r\n        SetPasswordComponent,\r\n        AddCreditComponent,\r\n        AddEditComponent,\r\n        AdjustPaymentComponent,\r\n        AdjustSeatsComponent,\r\n        AdjustStorageComponent,\r\n        ApiActionDirective,\r\n        ApiKeyComponent,\r\n        AppComponent,\r\n        AttachmentsComponent,\r\n        AutofocusDirective,\r\n        AvatarComponent,\r\n        BlurClickDirective,\r\n        BoxRowDirective,\r\n        BreachReportComponent,\r\n        BulkActionsComponent,\r\n        BulkDeleteComponent,\r\n        BulkMoveComponent,\r\n        BulkRestoreComponent,\r\n        BulkShareComponent,\r\n        CalloutComponent,\r\n        ChangeEmailComponent,\r\n        ChangeKdfComponent,\r\n        ChangePasswordComponent,\r\n        ChangePlanComponent,\r\n        CiphersComponent,\r\n        CollectionsComponent,\r\n        ColorPasswordPipe,\r\n        CreateOrganizationComponent,\r\n        DeauthorizeSessionsComponent,\r\n        DeleteAccountComponent,\r\n        DeleteOrganizationComponent,\r\n        DomainRulesComponent,\r\n        DownloadLicenseComponent,\r\n        ExportComponent,\r\n        ExposedPasswordsReportComponent,\r\n        FallbackSrcDirective,\r\n        FolderAddEditComponent,\r\n        FooterComponent,\r\n        FrontendLayoutComponent,\r\n        GroupingsComponent,\r\n        HintComponent,\r\n        I18nPipe,\r\n        IconComponent,\r\n        ImportComponent,\r\n        InactiveTwoFactorReportComponent,\r\n        InputVerbatimDirective,\r\n        LinkSsoComponent,\r\n        LockComponent,\r\n        LoginComponent,\r\n        ModalComponent,\r\n        NavbarComponent,\r\n        OptionsComponent,\r\n        OrgAccountComponent,\r\n        OrgAddEditComponent,\r\n        OrganizationBillingComponent,\r\n        OrganizationPlansComponent,\r\n        OrganizationSubscriptionComponent,\r\n        OrgAttachmentsComponent,\r\n        OrgCiphersComponent,\r\n        OrgCollectionAddEditComponent,\r\n        OrgCollectionsComponent,\r\n        OrgEntityEventsComponent,\r\n        OrgEntityUsersComponent,\r\n        OrgEventsComponent,\r\n        OrgExportComponent,\r\n        OrgExposedPasswordsReportComponent,\r\n        OrgImportComponent,\r\n        OrgInactiveTwoFactorReportComponent,\r\n        OrgGroupAddEditComponent,\r\n        OrgGroupingsComponent,\r\n        OrgGroupsComponent,\r\n        OrgManageCollectionsComponent,\r\n        OrgManageComponent,\r\n        OrgPeopleComponent,\r\n        OrgPolicyEditComponent,\r\n        OrgPoliciesComponent,\r\n        OrgReusedPasswordsReportComponent,\r\n        OrgSettingComponent,\r\n        OrgToolsComponent,\r\n        OrgTwoFactorSetupComponent,\r\n        OrgUserAddEditComponent,\r\n        OrgUserConfirmComponent,\r\n        OrgUserGroupsComponent,\r\n        OrganizationsComponent,\r\n        OrganizationLayoutComponent,\r\n        OrgUnsecuredWebsitesReportComponent,\r\n        OrgVaultComponent,\r\n        OrgWeakPasswordsReportComponent,\r\n        PasswordGeneratorComponent,\r\n        PasswordGeneratorHistoryComponent,\r\n        PasswordStrengthComponent,\r\n        PaymentComponent,\r\n        PremiumComponent,\r\n        ProfileComponent,\r\n        PurgeVaultComponent,\r\n        RecoverDeleteComponent,\r\n        RecoverTwoFactorComponent,\r\n        RegisterComponent,\r\n        ReusedPasswordsReportComponent,\r\n        SearchCiphersPipe,\r\n        SearchPipe,\r\n        SelectCopyDirective,\r\n        SendAddEditComponent,\r\n        SendComponent,\r\n        SettingsComponent,\r\n        ShareComponent,\r\n        SsoComponent,\r\n        StopClickDirective,\r\n        StopPropDirective,\r\n        TaxInfoComponent,\r\n        ToolsComponent,\r\n        TrueFalseValueDirective,\r\n        TwoFactorAuthenticatorComponent,\r\n        TwoFactorComponent,\r\n        TwoFactorDuoComponent,\r\n        TwoFactorEmailComponent,\r\n        TwoFactorOptionsComponent,\r\n        TwoFactorRecoveryComponent,\r\n        TwoFactorSetupComponent,\r\n        TwoFactorU2fComponent,\r\n        TwoFactorVerifyComponent,\r\n        TwoFactorYubiKeyComponent,\r\n        UnsecuredWebsitesReportComponent,\r\n        UpdateKeyComponent,\r\n        UpdateLicenseComponent,\r\n        UserBillingComponent,\r\n        UserLayoutComponent,\r\n        UserSubscriptionComponent,\r\n        VaultComponent,\r\n        VerifyEmailComponent,\r\n        VerifyEmailTokenComponent,\r\n        VerifyRecoverDeleteComponent,\r\n        WeakPasswordsReportComponent,\r\n    ],\r\n    entryComponents: [\r\n        AddEditComponent,\r\n        ApiKeyComponent,\r\n        AttachmentsComponent,\r\n        BulkActionsComponent,\r\n        BulkDeleteComponent,\r\n        BulkMoveComponent,\r\n        BulkRestoreComponent,\r\n        BulkShareComponent,\r\n        CollectionsComponent,\r\n        DeauthorizeSessionsComponent,\r\n        DeleteAccountComponent,\r\n        DeleteOrganizationComponent,\r\n        FolderAddEditComponent,\r\n        ModalComponent,\r\n        OrgAddEditComponent,\r\n        OrgAttachmentsComponent,\r\n        OrgCollectionAddEditComponent,\r\n        OrgCollectionsComponent,\r\n        OrgEntityEventsComponent,\r\n        OrgEntityUsersComponent,\r\n        OrgGroupAddEditComponent,\r\n        OrgPolicyEditComponent,\r\n        OrgUserAddEditComponent,\r\n        OrgUserConfirmComponent,\r\n        OrgUserGroupsComponent,\r\n        PasswordGeneratorHistoryComponent,\r\n        PurgeVaultComponent,\r\n        SendAddEditComponent,\r\n        ShareComponent,\r\n        TwoFactorAuthenticatorComponent,\r\n        TwoFactorDuoComponent,\r\n        TwoFactorEmailComponent,\r\n        TwoFactorOptionsComponent,\r\n        TwoFactorRecoveryComponent,\r\n        TwoFactorU2fComponent,\r\n        TwoFactorYubiKeyComponent,\r\n        UpdateKeyComponent,\r\n    ],\r\n    providers: [DatePipe],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n    RouterModule,\r\n    Routes,\r\n} from '@angular/router';\r\n\r\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\r\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\r\nimport { UserLayoutComponent } from './layouts/user-layout.component';\r\n\r\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\r\nimport { HintComponent } from './accounts/hint.component';\r\nimport { LockComponent } from './accounts/lock.component';\r\nimport { LoginComponent } from './accounts/login.component';\r\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\r\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\r\nimport { RegisterComponent } from './accounts/register.component';\r\nimport { SetPasswordComponent } from './accounts/set-password.component';\r\nimport { SsoComponent } from './accounts/sso.component';\r\nimport { TwoFactorComponent } from './accounts/two-factor.component';\r\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\r\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\r\n\r\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\r\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\r\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\r\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\r\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\r\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\r\n\r\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\r\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\r\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\r\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\r\nimport {\r\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\r\n} from './organizations/settings/two-factor-setup.component';\r\n\r\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\r\nimport {\r\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\r\n} from './organizations/tools/exposed-passwords-report.component';\r\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\r\nimport {\r\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\r\n} from './organizations/tools/inactive-two-factor-report.component';\r\nimport {\r\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\r\n} from './organizations/tools/reused-passwords-report.component';\r\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\r\nimport {\r\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\r\n} from './organizations/tools/unsecured-websites-report.component';\r\nimport {\r\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\r\n} from './organizations/tools/weak-passwords-report.component';\r\n\r\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\r\n\r\nimport { AccessComponent } from './send/access.component';\r\nimport { SendComponent } from './send/send.component';\r\n\r\nimport { AccountComponent } from './settings/account.component';\r\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\r\nimport { DomainRulesComponent } from './settings/domain-rules.component';\r\nimport { OptionsComponent } from './settings/options.component';\r\nimport { OrganizationsComponent } from './settings/organizations.component';\r\nimport { PremiumComponent } from './settings/premium.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\r\nimport { UserBillingComponent } from './settings/user-billing.component';\r\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\r\n\r\nimport { BreachReportComponent } from './tools/breach-report.component';\r\nimport { ExportComponent } from './tools/export.component';\r\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\r\nimport { ImportComponent } from './tools/import.component';\r\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\r\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\r\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\r\nimport { ToolsComponent } from './tools/tools.component';\r\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\r\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\r\n\r\nimport { VaultComponent } from './vault/vault.component';\r\n\r\nimport { OrganizationGuardService } from './services/organization-guard.service';\r\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\r\nimport { UnauthGuardService } from './services/unauth-guard.service';\r\n\r\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\r\n\r\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: FrontendLayoutComponent,\r\n        children: [\r\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\r\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\r\n            {\r\n                path: 'register', component: RegisterComponent,\r\n                canActivate: [UnauthGuardService],\r\n                data: { titleId: 'createAccount' },\r\n            },\r\n            {\r\n                path: 'sso', component: SsoComponent,\r\n                canActivate: [UnauthGuardService],\r\n                data: { titleId: 'enterpriseSingleSignOn' },\r\n            },\r\n            {\r\n                path: 'set-password', component: SetPasswordComponent,\r\n                data: { titleId: 'setMasterPassword' },\r\n            },\r\n            {\r\n                path: 'hint', component: HintComponent,\r\n                canActivate: [UnauthGuardService],\r\n                data: { titleId: 'passwordHint' },\r\n            },\r\n            { path: 'lock', component: LockComponent },\r\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\r\n            {\r\n                path: 'accept-organization',\r\n                component: AcceptOrganizationComponent,\r\n                data: { titleId: 'joinOrganization' },\r\n            },\r\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\r\n            {\r\n                path: 'recover-2fa',\r\n                component: RecoverTwoFactorComponent,\r\n                canActivate: [UnauthGuardService],\r\n                data: { titleId: 'recoverAccountTwoStep' },\r\n            },\r\n            {\r\n                path: 'recover-delete',\r\n                component: RecoverDeleteComponent,\r\n                canActivate: [UnauthGuardService],\r\n                data: { titleId: 'deleteAccount' },\r\n            },\r\n            {\r\n                path: 'verify-recover-delete',\r\n                component: VerifyRecoverDeleteComponent,\r\n                canActivate: [UnauthGuardService],\r\n                data: { titleId: 'deleteAccount' },\r\n            },\r\n            {\r\n                path: 'send/:sendId/:key',\r\n                component: AccessComponent,\r\n                data: { title: 'Bitwarden Send' },\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: '',\r\n        component: UserLayoutComponent,\r\n        canActivate: [AuthGuardService],\r\n        children: [\r\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\r\n            { path: 'sends', component: SendComponent, data: { title: 'Send' } },\r\n            {\r\n                path: 'settings',\r\n                component: SettingsComponent,\r\n                children: [\r\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\r\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\r\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\r\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\r\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\r\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\r\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billing' } },\r\n                    {\r\n                        path: 'subscription',\r\n                        component: UserSubscriptionComponent,\r\n                        data: { titleId: 'premiumMembership' },\r\n                    },\r\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\r\n                    {\r\n                        path: 'create-organization',\r\n                        component: CreateOrganizationComponent,\r\n                        data: { titleId: 'newOrganization' },\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                path: 'tools',\r\n                component: ToolsComponent,\r\n                canActivate: [AuthGuardService],\r\n                children: [\r\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\r\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\r\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\r\n                    {\r\n                        path: 'generator',\r\n                        component: PasswordGeneratorComponent,\r\n                        data: { titleId: 'passwordGenerator' },\r\n                    },\r\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\r\n                    {\r\n                        path: 'reused-passwords-report',\r\n                        component: ReusedPasswordsReportComponent,\r\n                        data: { titleId: 'reusedPasswordsReport' },\r\n                    },\r\n                    {\r\n                        path: 'unsecured-websites-report',\r\n                        component: UnsecuredWebsitesReportComponent,\r\n                        data: { titleId: 'unsecuredWebsitesReport' },\r\n                    },\r\n                    {\r\n                        path: 'weak-passwords-report',\r\n                        component: WeakPasswordsReportComponent,\r\n                        data: { titleId: 'weakPasswordsReport' },\r\n                    },\r\n                    {\r\n                        path: 'exposed-passwords-report',\r\n                        component: ExposedPasswordsReportComponent,\r\n                        data: { titleId: 'exposedPasswordsReport' },\r\n                    },\r\n                    {\r\n                        path: 'inactive-two-factor-report',\r\n                        component: InactiveTwoFactorReportComponent,\r\n                        data: { titleId: 'inactive2faReport' },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: 'organizations/:organizationId',\r\n        component: OrganizationLayoutComponent,\r\n        canActivate: [AuthGuardService, OrganizationGuardService],\r\n        children: [\r\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\r\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\r\n            {\r\n                path: 'tools',\r\n                component: OrgToolsComponent,\r\n                canActivate: [OrganizationTypeGuardService],\r\n                data: { allowedTypes: [OrganizationUserType.Owner, OrganizationUserType.Admin] },\r\n                children: [\r\n                    { path: '', pathMatch: 'full', redirectTo: 'import' },\r\n                    { path: 'import', component: OrgImportComponent, data: { titleId: 'importData' } },\r\n                    { path: 'export', component: OrgExportComponent, data: { titleId: 'exportVault' } },\r\n                    {\r\n                        path: 'exposed-passwords-report',\r\n                        component: OrgExposedPasswordsReportComponent,\r\n                        data: { titleId: 'exposedPasswordsReport' },\r\n                    },\r\n                    {\r\n                        path: 'inactive-two-factor-report',\r\n                        component: OrgInactiveTwoFactorReportComponent,\r\n                        data: { titleId: 'inactive2faReport' },\r\n                    },\r\n                    {\r\n                        path: 'reused-passwords-report',\r\n                        component: OrgReusedPasswordsReportComponent,\r\n                        data: { titleId: 'reusedPasswordsReport' },\r\n                    },\r\n                    {\r\n                        path: 'unsecured-websites-report',\r\n                        component: OrgUnsecuredWebsitesReportComponent,\r\n                        data: { titleId: 'unsecuredWebsitesReport' },\r\n                    },\r\n                    {\r\n                        path: 'weak-passwords-report',\r\n                        component: OrgWeakPasswordsReportComponent,\r\n                        data: { titleId: 'weakPasswordsReport' },\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                path: 'manage',\r\n                component: OrgManageComponent,\r\n                canActivate: [OrganizationTypeGuardService],\r\n                data: {\r\n                    allowedTypes: [\r\n                        OrganizationUserType.Owner,\r\n                        OrganizationUserType.Admin,\r\n                        OrganizationUserType.Manager,\r\n                    ],\r\n                },\r\n                children: [\r\n                    { path: '', pathMatch: 'full', redirectTo: 'people' },\r\n                    { path: 'collections', component: OrgManageCollectionsComponent, data: { titleId: 'collections' } },\r\n                    { path: 'events', component: OrgEventsComponent, data: { titleId: 'eventLogs' } },\r\n                    { path: 'groups', component: OrgGroupsComponent, data: { titleId: 'groups' } },\r\n                    { path: 'people', component: OrgPeopleComponent, data: { titleId: 'people' } },\r\n                    { path: 'policies', component: OrgPoliciesComponent, data: { titleId: 'policies' } },\r\n                ],\r\n            },\r\n            {\r\n                path: 'settings',\r\n                component: OrgSettingsComponent,\r\n                canActivate: [OrganizationTypeGuardService],\r\n                data: { allowedTypes: [OrganizationUserType.Owner] },\r\n                children: [\r\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\r\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\r\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\r\n                    {\r\n                        path: 'billing',\r\n                        component: OrganizationBillingComponent,\r\n                        data: { titleId: 'billing' },\r\n                    },\r\n                    {\r\n                        path: 'subscription',\r\n                        component: OrganizationSubscriptionComponent,\r\n                        data: { titleId: 'subscription' },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, {\r\n        useHash: true,\r\n        /*enableTracing: true,*/\r\n    })],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { BroadcasterService as BroadcasterServiceAbstraction } from '../abstractions/broadcaster.service';\r\n\r\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\r\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\r\n\r\n    send(message: any, id?: string) {\r\n        if (id != null) {\r\n            if (this.subscribers.has(id)) {\r\n                this.subscribers.get(id)(message);\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.subscribers.forEach((value) => {\r\n            value(message);\r\n        });\r\n    }\r\n\r\n    subscribe(id: string, messageCallback: (message: any) => any) {\r\n        this.subscribers.set(id, messageCallback);\r\n    }\r\n\r\n    unsubscribe(id: string) {\r\n        if (this.subscribers.has(id)) {\r\n            this.subscribers.delete(id);\r\n        }\r\n    }\r\n}\r\n","export function getDomain(host: string): string | null {\r\n    return null;\r\n}\r\n","export class OrganizationUserAcceptRequest {\r\n    token: string;\r\n}\r\n","import { Router } from '@angular/router';\r\n\r\nimport { PasswordHintRequest } from '../../models/request/passwordHintRequest';\r\n\r\nimport { ApiService } from '../../abstractions/api.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\nexport class HintComponent {\r\n    email: string = '';\r\n    formPromise: Promise<any>;\r\n\r\n    protected successRoute = 'login';\r\n    protected onSuccessfulSubmit: () => void;\r\n\r\n    constructor(protected router: Router, protected i18nService: I18nService,\r\n        protected apiService: ApiService, protected platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async submit() {\r\n        if (this.email == null || this.email === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('emailRequired'));\r\n            return;\r\n        }\r\n        if (this.email.indexOf('@') === -1) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('invalidEmail'));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\r\n            await this.formPromise;\r\n            this.platformUtilsService.eventTrack('Requested Hint');\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));\r\n            if (this.onSuccessfulSubmit != null) {\r\n                this.onSuccessfulSubmit();\r\n            } else if (this.router != null) {\r\n                this.router.navigate([this.successRoute]);\r\n            }\r\n        } catch { }\r\n    }\r\n}\r\n","export class PasswordHintRequest {\r\n    email: string;\r\n\r\n    constructor(email: string) {\r\n        this.email = email;\r\n    }\r\n}\r\n","import { OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ApiService } from '../../abstractions/api.service';\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\nimport { EnvironmentService } from '../../abstractions/environment.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { MessagingService } from '../../abstractions/messaging.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { StateService } from '../../abstractions/state.service';\r\nimport { StorageService } from '../../abstractions/storage.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\nimport { VaultTimeoutService } from '../../abstractions/vaultTimeout.service';\r\n\r\nimport { ConstantsService } from '../../services/constants.service';\r\n\r\nimport { CipherString } from '../../models/domain/cipherString';\r\nimport { SymmetricCryptoKey } from '../../models/domain/symmetricCryptoKey';\r\n\r\nimport { PasswordVerificationRequest } from '../../models/request/passwordVerificationRequest';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nexport class LockComponent implements OnInit {\r\n    masterPassword: string = '';\r\n    pin: string = '';\r\n    showPassword: boolean = false;\r\n    email: string;\r\n    pinLock: boolean = false;\r\n    webVaultHostname: string = '';\r\n    formPromise: Promise<any>;\r\n    supportsBiometric: boolean;\r\n    biometricLock: boolean;\r\n    biometricText: string;\r\n\r\n    protected successRoute: string = 'vault';\r\n    protected onSuccessfulSubmit: () => void;\r\n\r\n    private invalidPinAttempts = 0;\r\n    private pinSet: [boolean, boolean];\r\n\r\n    constructor(protected router: Router, protected i18nService: I18nService,\r\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\r\n        protected userService: UserService, protected cryptoService: CryptoService,\r\n        protected storageService: StorageService, protected vaultTimeoutService: VaultTimeoutService,\r\n        protected environmentService: EnvironmentService, protected stateService: StateService,\r\n        protected apiService: ApiService) { }\r\n\r\n    async ngOnInit() {\r\n        this.pinSet = await this.vaultTimeoutService.isPinLockSet();\r\n        this.pinLock = (this.pinSet[0] && this.vaultTimeoutService.pinProtectedKey != null) || this.pinSet[1];\r\n        this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\r\n        this.biometricLock = await this.vaultTimeoutService.isBiometricLockSet() && (await this.cryptoService.hasKey() || !this.platformUtilsService.supportsSecureStorage());\r\n        this.biometricText = await this.storageService.get(ConstantsService.biometricText);\r\n        this.email = await this.userService.getEmail();\r\n        let vaultUrl = this.environmentService.getWebVaultUrl();\r\n        if (vaultUrl == null) {\r\n            vaultUrl = 'https://bitwarden.com';\r\n        }\r\n        this.webVaultHostname = Utils.getHostname(vaultUrl);\r\n    }\r\n\r\n    async submit() {\r\n        if (this.pinLock && (this.pin == null || this.pin === '')) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('pinRequired'));\r\n            return;\r\n        }\r\n        if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        const kdf = await this.userService.getKdf();\r\n        const kdfIterations = await this.userService.getKdfIterations();\r\n\r\n        if (this.pinLock) {\r\n            let failed = true;\r\n            try {\r\n                if (this.pinSet[0]) {\r\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations,\r\n                        this.vaultTimeoutService.pinProtectedKey);\r\n                    const encKey = await this.cryptoService.getEncKey(key);\r\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\r\n                    const decPin = await this.cryptoService.decryptToUtf8(new CipherString(protectedPin), encKey);\r\n                    failed = decPin !== this.pin;\r\n                    if (!failed) {\r\n                        await this.setKeyAndContinue(key);\r\n                    }\r\n                } else {\r\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);\r\n                    failed = false;\r\n                    await this.setKeyAndContinue(key);\r\n                }\r\n            } catch {\r\n                failed = true;\r\n            }\r\n\r\n            if (failed) {\r\n                this.invalidPinAttempts++;\r\n                if (this.invalidPinAttempts >= 5) {\r\n                    this.messagingService.send('logout');\r\n                    return;\r\n                }\r\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                    this.i18nService.t('invalidPin'));\r\n            }\r\n        } else {\r\n            const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\r\n            const keyHash = await this.cryptoService.hashPassword(this.masterPassword, key);\r\n\r\n            let passwordValid = false;\r\n\r\n            if (keyHash != null) {\r\n                const storedKeyHash = await this.cryptoService.getKeyHash();\r\n                if (storedKeyHash != null) {\r\n                    passwordValid = storedKeyHash === keyHash;\r\n                } else {\r\n                    const request = new PasswordVerificationRequest();\r\n                    request.masterPasswordHash = keyHash;\r\n                    try {\r\n                        this.formPromise = this.apiService.postAccountVerifyPassword(request);\r\n                        await this.formPromise;\r\n                        passwordValid = true;\r\n                        await this.cryptoService.setKeyHash(keyHash);\r\n                    } catch { }\r\n                }\r\n            }\r\n\r\n            if (passwordValid) {\r\n                if (this.pinSet[0]) {\r\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\r\n                    const encKey = await this.cryptoService.getEncKey(key);\r\n                    const decPin = await this.cryptoService.decryptToUtf8(new CipherString(protectedPin), encKey);\r\n                    const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\r\n                    this.vaultTimeoutService.pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\r\n                }\r\n                this.setKeyAndContinue(key);\r\n            } else {\r\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                    this.i18nService.t('invalidMasterPassword'));\r\n            }\r\n        }\r\n    }\r\n\r\n    async logOut() {\r\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\r\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\r\n        if (confirmed) {\r\n            this.messagingService.send('logout');\r\n        }\r\n    }\r\n\r\n    async unlockBiometric() {\r\n        if (!this.biometricLock) {\r\n            return;\r\n        }\r\n        const success = await this.platformUtilsService.authenticateBiometric();\r\n\r\n        if (success) {\r\n            await this.doContinue();\r\n        }\r\n    }\r\n\r\n    togglePassword() {\r\n        this.platformUtilsService.eventTrack('Toggled Master Password on Unlock');\r\n        this.showPassword = !this.showPassword;\r\n        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();\r\n    }\r\n\r\n    private async setKeyAndContinue(key: SymmetricCryptoKey) {\r\n        await this.cryptoService.setKey(key);\r\n        this.doContinue();\r\n    }\r\n\r\n    private async doContinue() {\r\n        this.vaultTimeoutService.biometricLocked = false;\r\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\r\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\r\n        this.messagingService.send('unlocked');\r\n        if (this.onSuccessfulSubmit != null) {\r\n            this.onSuccessfulSubmit();\r\n        } else if (this.router != null) {\r\n            this.router.navigate([this.successRoute]);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    Input,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthResult } from '../../models/domain/authResult';\r\n\r\nimport { AuthService } from '../../abstractions/auth.service';\r\nimport { CryptoFunctionService } from '../../abstractions/cryptoFunction.service';\r\nimport { EnvironmentService } from '../../abstractions/environment.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { StateService } from '../../abstractions/state.service';\r\nimport { StorageService } from '../../abstractions/storage.service';\r\n\r\nimport { ConstantsService } from '../../services/constants.service';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\nconst Keys = {\r\n    rememberedEmail: 'rememberedEmail',\r\n    rememberEmail: 'rememberEmail',\r\n};\r\n\r\n@Directive()\r\nexport class LoginComponent implements OnInit {\r\n    @Input() email: string = '';\r\n    @Input() rememberEmail = true;\r\n\r\n    masterPassword: string = '';\r\n    showPassword: boolean = false;\r\n    formPromise: Promise<AuthResult>;\r\n    onSuccessfulLogin: () => Promise<any>;\r\n    onSuccessfulLoginNavigate: () => Promise<any>;\r\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\r\n\r\n    protected twoFactorRoute = '2fa';\r\n    protected successRoute = 'vault';\r\n\r\n    constructor(protected authService: AuthService, protected router: Router,\r\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\r\n        protected stateService: StateService, protected environmentService: EnvironmentService,\r\n        protected passwordGenerationService: PasswordGenerationService,\r\n        protected cryptoFunctionService: CryptoFunctionService, private storageService: StorageService) { }\r\n\r\n    async ngOnInit() {\r\n        if (this.email == null || this.email === '') {\r\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\r\n            if (this.email == null) {\r\n                this.email = '';\r\n            }\r\n        }\r\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\r\n        if (this.rememberEmail == null) {\r\n            this.rememberEmail = true;\r\n        }\r\n        if (Utils.isBrowser) {\r\n            document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.email == null || this.email === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('emailRequired'));\r\n            return;\r\n        }\r\n        if (this.email.indexOf('@') === -1) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('invalidEmail'));\r\n            return;\r\n        }\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword);\r\n            const response = await this.formPromise;\r\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\r\n            if (this.rememberEmail) {\r\n                await this.storageService.save(Keys.rememberedEmail, this.email);\r\n            } else {\r\n                await this.storageService.remove(Keys.rememberedEmail);\r\n            }\r\n            if (response.twoFactor) {\r\n                this.platformUtilsService.eventTrack('Logged In To Two-step');\r\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\r\n                    this.onSuccessfulLoginTwoFactorNavigate();\r\n                } else {\r\n                    this.router.navigate([this.twoFactorRoute]);\r\n                }\r\n            } else {\r\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\r\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\r\n                if (this.onSuccessfulLogin != null) {\r\n                    this.onSuccessfulLogin();\r\n                }\r\n                this.platformUtilsService.eventTrack('Logged In');\r\n                if (this.onSuccessfulLoginNavigate != null) {\r\n                    this.onSuccessfulLoginNavigate();\r\n                } else {\r\n                    this.router.navigate([this.successRoute]);\r\n                }\r\n            }\r\n        } catch { }\r\n    }\r\n\r\n    togglePassword() {\r\n        this.platformUtilsService.eventTrack('Toggled Master Password on Login');\r\n        this.showPassword = !this.showPassword;\r\n        document.getElementById('masterPassword').focus();\r\n    }\r\n\r\n    async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\r\n        // Generate necessary sso params\r\n        const passwordOptions: any = {\r\n            type: 'password',\r\n            length: 64,\r\n            uppercase: true,\r\n            lowercase: true,\r\n            numbers: true,\r\n            special: false,\r\n        };\r\n        const state = await this.passwordGenerationService.generatePassword(passwordOptions);\r\n        const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\r\n        const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, 'sha256');\r\n        const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\r\n\r\n        // Save sso params\r\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\r\n        await this.storageService.save(ConstantsService.ssoCodeVerifierKey, ssoCodeVerifier);\r\n\r\n        // Build URI\r\n        const webUrl = this.environmentService.getWebVaultUrl() == null ? 'https://vault.bitwarden.com' :\r\n            this.environmentService.getWebVaultUrl();\r\n\r\n        // Launch browser\r\n        this.platformUtilsService.launchUri(webUrl + '/#/sso?clientId=' + clientId +\r\n            '&redirectUri=' + encodeURIComponent(ssoRedirectUri) +\r\n            '&state=' + state + '&codeChallenge=' + codeChallenge);\r\n    }\r\n}\r\n","export class DeleteRecoverRequest {\r\n    email: string;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class TwoFactorRecoveryRequest extends PasswordVerificationRequest {\r\n    recoveryCode: string;\r\n    email: string;\r\n}\r\n","import { Router } from '@angular/router';\r\n\r\nimport { KeysRequest } from '../../models/request/keysRequest';\r\nimport { ReferenceEventRequest } from '../../models/request/referenceEventRequest';\r\nimport { RegisterRequest } from '../../models/request/registerRequest';\r\n\r\nimport { ApiService } from '../../abstractions/api.service';\r\nimport { AuthService } from '../../abstractions/auth.service';\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { StateService } from '../../abstractions/state.service';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class RegisterComponent {\r\n    name: string = '';\r\n    email: string = '';\r\n    masterPassword: string = '';\r\n    confirmMasterPassword: string = '';\r\n    hint: string = '';\r\n    showPassword: boolean = false;\r\n    formPromise: Promise<any>;\r\n    masterPasswordScore: number;\r\n    referenceData: ReferenceEventRequest;\r\n    showTerms = true;\r\n    acceptPolicies: boolean = false;\r\n\r\n    protected successRoute = 'login';\r\n    private masterPasswordStrengthTimeout: any;\r\n\r\n    constructor(protected authService: AuthService, protected router: Router,\r\n        protected i18nService: I18nService, protected cryptoService: CryptoService,\r\n        protected apiService: ApiService, protected stateService: StateService,\r\n        protected platformUtilsService: PlatformUtilsService,\r\n        protected passwordGenerationService: PasswordGenerationService) {\r\n        this.showTerms = !platformUtilsService.isSelfHost();\r\n    }\r\n\r\n    get masterPasswordScoreWidth() {\r\n        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\r\n    }\r\n\r\n    get masterPasswordScoreColor() {\r\n        switch (this.masterPasswordScore) {\r\n            case 4:\r\n                return 'success';\r\n            case 3:\r\n                return 'primary';\r\n            case 2:\r\n                return 'warning';\r\n            default:\r\n                return 'danger';\r\n        }\r\n    }\r\n\r\n    get masterPasswordScoreText() {\r\n        switch (this.masterPasswordScore) {\r\n            case 4:\r\n                return this.i18nService.t('strong');\r\n            case 3:\r\n                return this.i18nService.t('good');\r\n            case 2:\r\n                return this.i18nService.t('weak');\r\n            default:\r\n                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (!this.acceptPolicies && this.showTerms) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('acceptPoliciesError'));\r\n            return;\r\n        }\r\n\r\n        if (this.email == null || this.email === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('emailRequired'));\r\n            return;\r\n        }\r\n        if (this.email.indexOf('@') === -1) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('invalidEmail'));\r\n            return;\r\n        }\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassRequired'));\r\n            return;\r\n        }\r\n        if (this.masterPassword.length < 8) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassLength'));\r\n            return;\r\n        }\r\n        if (this.masterPassword !== this.confirmMasterPassword) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('masterPassDoesntMatch'));\r\n            return;\r\n        }\r\n\r\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\r\n            this.getPasswordStrengthUserInput());\r\n        if (strengthResult != null && strengthResult.score < 3) {\r\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\r\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\r\n                'warning');\r\n            if (!result) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.name = this.name === '' ? null : this.name;\r\n        this.email = this.email.trim().toLowerCase();\r\n        const kdf = KdfType.PBKDF2_SHA256;\r\n        const useLowerKdf = this.platformUtilsService.isIE();\r\n        const kdfIterations = useLowerKdf ? 10000 : 100000;\r\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\r\n        const encKey = await this.cryptoService.makeEncKey(key);\r\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\r\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\r\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\r\n            this.hint, encKey[1].encryptedString, kdf, kdfIterations, this.referenceData);\r\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\r\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\r\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\r\n            request.token = orgInvite.token;\r\n            request.organizationUserId = orgInvite.organizationUserId;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.apiService.postRegister(request);\r\n            await this.formPromise;\r\n            this.platformUtilsService.eventTrack('Registered');\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));\r\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\r\n        } catch { }\r\n    }\r\n\r\n    togglePassword(confirmField: boolean) {\r\n        this.platformUtilsService.eventTrack('Toggled Master Password on Register');\r\n        this.showPassword = !this.showPassword;\r\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\r\n    }\r\n\r\n    updatePasswordStrength() {\r\n        if (this.masterPasswordStrengthTimeout != null) {\r\n            clearTimeout(this.masterPasswordStrengthTimeout);\r\n        }\r\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\r\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\r\n                this.getPasswordStrengthUserInput());\r\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\r\n        }, 300);\r\n    }\r\n\r\n    private getPasswordStrengthUserInput() {\r\n        let userInput: string[] = [];\r\n        const atPosition = this.email.indexOf('@');\r\n        if (atPosition > -1) {\r\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\r\n        }\r\n        if (this.name != null && this.name !== '') {\r\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\r\n        }\r\n        return userInput;\r\n    }\r\n}\r\n","import { KeysRequest } from './keysRequest';\r\nimport { ReferenceEventRequest } from './referenceEventRequest';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class RegisterRequest {\r\n    name: string;\r\n    email: string;\r\n    masterPasswordHash: string;\r\n    masterPasswordHint: string;\r\n    key: string;\r\n    keys: KeysRequest;\r\n    token: string;\r\n    organizationUserId: string;\r\n    kdf: KdfType;\r\n    kdfIterations: number;\r\n    referenceData: ReferenceEventRequest;\r\n\r\n    constructor(email: string, name: string, masterPasswordHash: string, masterPasswordHint: string, key: string,\r\n        kdf: KdfType, kdfIterations: number, referenceData: ReferenceEventRequest) {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.masterPasswordHash = masterPasswordHash;\r\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\r\n        this.key = key;\r\n        this.kdf = kdf;\r\n        this.kdfIterations = kdfIterations;\r\n        this.referenceData = referenceData;\r\n    }\r\n}\r\n","export class ReferenceEventRequest {\r\n    id: string;\r\n    layout: string;\r\n    flow: string;\r\n}\r\n","import {\r\n    ActivatedRoute,\r\n    Router\r\n} from '@angular/router';\r\n\r\nimport { ApiService } from '../../abstractions/api.service';\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { MessagingService } from '../../abstractions/messaging.service';\r\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { PolicyService } from '../../abstractions/policy.service';\r\nimport { SyncService } from '../../abstractions/sync.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\n\r\nimport { CipherString } from '../../models/domain/cipherString';\r\nimport { SymmetricCryptoKey } from '../../models/domain/symmetricCryptoKey';\r\n\r\nimport { KeysRequest } from '../../models/request/keysRequest';\r\nimport { SetPasswordRequest } from '../../models/request/setPasswordRequest';\r\n\r\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\r\n    syncLoading: boolean = true;\r\n    showPassword: boolean = false;\r\n    hint: string = '';\r\n    identifier: string = null;\r\n\r\n    onSuccessfulChangePassword: () => Promise<any>;\r\n    successRoute = 'vault';\r\n\r\n    constructor(i18nService: I18nService, cryptoService: CryptoService, messagingService: MessagingService,\r\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\r\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, private router: Router,\r\n        private apiService: ApiService, private syncService: SyncService, private route: ActivatedRoute) {\r\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\r\n            platformUtilsService, policyService);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await this.syncService.fullSync(true);\r\n        this.syncLoading = false;\r\n\r\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n            if (qParams.identifier != null) {\r\n                this.identifier = qParams.identifier;\r\n            }\r\n\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n\r\n        super.ngOnInit();\r\n    }\r\n\r\n    async setupSubmitActions() {\r\n        this.kdf = KdfType.PBKDF2_SHA256;\r\n        const useLowerKdf = this.platformUtilsService.isIE();\r\n        this.kdfIterations = useLowerKdf ? 10000 : 100000;\r\n        return true;\r\n    }\r\n\r\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\r\n        encKey: [SymmetricCryptoKey, CipherString]) {\r\n        const request = new SetPasswordRequest();\r\n        request.masterPasswordHash = masterPasswordHash;\r\n        request.key = encKey[1].encryptedString;\r\n        request.masterPasswordHint = this.hint;\r\n        request.kdf = this.kdf;\r\n        request.kdfIterations = this.kdfIterations;\r\n        request.orgIdentifier = this.identifier;\r\n\r\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\r\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\r\n\r\n        try {\r\n            this.formPromise = this.apiService.setPassword(request);\r\n            await this.formPromise;\r\n\r\n            await this.userService.setInformation(await this.userService.getUserId(), await this.userService.getEmail(),\r\n                this.kdf, this.kdfIterations);\r\n            await this.cryptoService.setKey(key);\r\n            await this.cryptoService.setKeyHash(masterPasswordHash);\r\n            await this.cryptoService.setEncKey(encKey[1].encryptedString);\r\n            await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\r\n\r\n            if (this.onSuccessfulChangePassword != null) {\r\n                this.onSuccessfulChangePassword();\r\n            } else {\r\n                this.router.navigate([this.successRoute]);\r\n            }\r\n        } catch {\r\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\r\n        }\r\n    }\r\n\r\n    togglePassword(confirmField: boolean) {\r\n        this.platformUtilsService.eventTrack('Toggled Master Password on Set Password');\r\n        this.showPassword = !this.showPassword;\r\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\r\n    }\r\n}\r\n","import { KeysRequest } from './keysRequest';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class SetPasswordRequest {\r\n    masterPasswordHash: string;\r\n    key: string;\r\n    masterPasswordHint: string;\r\n    keys: KeysRequest;\r\n    kdf: KdfType;\r\n    kdfIterations: number;\r\n    orgIdentifier: string;\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\r\n\r\nimport { AuthService } from '../../abstractions/auth.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\n@Directive()\r\nexport class TwoFactorOptionsComponent implements OnInit {\r\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\r\n    @Output() onRecoverSelected = new EventEmitter();\r\n\r\n    providers: any[] = [];\r\n\r\n    constructor(protected authService: AuthService, protected router: Router,\r\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\r\n        protected win: Window) { }\r\n\r\n    ngOnInit() {\r\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\r\n    }\r\n\r\n    choose(p: any) {\r\n        this.onProviderSelected.emit(p.type);\r\n    }\r\n\r\n    recover() {\r\n        this.platformUtilsService.eventTrack('Selected Recover');\r\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\r\n        this.onRecoverSelected.emit();\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    EventEmitter,\r\n    OnDestroy,\r\n    Output,\r\n    Type,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\nimport { MessagingService } from '../../abstractions/messaging.service';\r\n\r\n@Component({\r\n    selector: 'app-modal',\r\n    template: `<ng-template #container></ng-template>`,\r\n})\r\nexport class ModalComponent implements OnDestroy {\r\n    @Output() onClose = new EventEmitter();\r\n    @Output() onClosed = new EventEmitter();\r\n    @Output() onShow = new EventEmitter();\r\n    @Output() onShown = new EventEmitter();\r\n    @ViewChild('container', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\r\n    parentContainer: ViewContainerRef = null;\r\n    fade: boolean = true;\r\n\r\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\r\n        protected messagingService: MessagingService) { }\r\n\r\n    ngOnDestroy() {\r\n        document.body.classList.remove('modal-open');\r\n        document.body.removeChild(document.querySelector('.modal-backdrop'));\r\n    }\r\n\r\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\r\n        setComponentParameters: (component: T) => void = null): T {\r\n        this.onShow.emit();\r\n        this.messagingService.send('modalShow');\r\n        this.parentContainer = parentContainer;\r\n        this.fade = fade;\r\n\r\n        document.body.classList.add('modal-open');\r\n        const backdrop = document.createElement('div');\r\n        backdrop.className = 'modal-backdrop' + (this.fade ? ' fade' : '');\r\n        document.body.appendChild(backdrop);\r\n\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\r\n        const componentRef = this.container.createComponent<T>(factory);\r\n        if (setComponentParameters != null) {\r\n            setComponentParameters(componentRef.instance);\r\n        }\r\n\r\n        document.querySelector('.modal-dialog').addEventListener('click', (e: Event) => {\r\n            e.stopPropagation();\r\n        });\r\n\r\n        const modals = Array.from(document.querySelectorAll('.modal, .modal *[data-dismiss=\"modal\"]'));\r\n        for (const closeElement of modals) {\r\n            closeElement.addEventListener('click', (event) => {\r\n                this.close();\r\n            });\r\n        }\r\n\r\n        this.onShown.emit();\r\n        this.messagingService.send('modalShown');\r\n        return componentRef.instance;\r\n    }\r\n\r\n    close() {\r\n        this.onClose.emit();\r\n        this.messagingService.send('modalClose');\r\n        this.onClosed.emit();\r\n        this.messagingService.send('modalClosed');\r\n        if (this.parentContainer != null) {\r\n            this.parentContainer.clear();\r\n        }\r\n    }\r\n}\r\n","import {\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport {\r\n    ActivatedRoute,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\r\n\r\nimport { TwoFactorEmailRequest } from '../../models/request/twoFactorEmailRequest';\r\n\r\nimport { AuthResult } from '../../models/domain';\r\n\r\nimport { ApiService } from '../../abstractions/api.service';\r\nimport { AuthService } from '../../abstractions/auth.service';\r\nimport { EnvironmentService } from '../../abstractions/environment.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { StateService } from '../../abstractions/state.service';\r\nimport { StorageService } from '../../abstractions/storage.service';\r\n\r\nimport { TwoFactorProviders } from '../../services/auth.service';\r\nimport { ConstantsService } from '../../services/constants.service';\r\n\r\nimport * as DuoWebSDK from 'duo_web_sdk';\r\nimport { U2f } from '../../misc/u2f';\r\n\r\nexport class TwoFactorComponent implements OnInit, OnDestroy {\r\n    token: string = '';\r\n    remember: boolean = false;\r\n    u2fReady: boolean = false;\r\n    initU2f: boolean = true;\r\n    providers = TwoFactorProviders;\r\n    providerType = TwoFactorProviderType;\r\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\r\n    u2fSupported: boolean = false;\r\n    u2f: U2f = null;\r\n    title: string = '';\r\n    twoFactorEmail: string = null;\r\n    formPromise: Promise<any>;\r\n    emailPromise: Promise<any>;\r\n    identifier: string = null;\r\n    onSuccessfulLogin: () => Promise<any>;\r\n    onSuccessfulLoginNavigate: () => Promise<any>;\r\n\r\n    protected loginRoute = 'login';\r\n    protected successRoute = 'vault';\r\n\r\n    constructor(protected authService: AuthService, protected router: Router,\r\n        protected i18nService: I18nService, protected apiService: ApiService,\r\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\r\n        protected environmentService: EnvironmentService, protected stateService: StateService,\r\n        protected storageService: StorageService, protected route: ActivatedRoute) {\r\n        this.u2fSupported = this.platformUtilsService.supportsU2f(win);\r\n    }\r\n\r\n    async ngOnInit() {\r\n        if (!this.authing || this.authService.twoFactorProvidersData == null) {\r\n            this.router.navigate([this.loginRoute]);\r\n            return;\r\n        }\r\n\r\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\r\n            if (qParams.identifier != null) {\r\n                this.identifier = qParams.identifier;\r\n            }\r\n\r\n            if (queryParamsSub != null) {\r\n                queryParamsSub.unsubscribe();\r\n            }\r\n        });\r\n\r\n        if (this.needsLock) {\r\n            this.successRoute = 'lock';\r\n        }\r\n\r\n        if (this.initU2f && this.win != null && this.u2fSupported) {\r\n            let customWebVaultUrl: string = null;\r\n            if (this.environmentService.baseUrl != null) {\r\n                customWebVaultUrl = this.environmentService.baseUrl;\r\n            } else if (this.environmentService.webVaultUrl != null) {\r\n                customWebVaultUrl = this.environmentService.webVaultUrl;\r\n            }\r\n\r\n            this.u2f = new U2f(this.win, customWebVaultUrl, (token: string) => {\r\n                this.token = token;\r\n                this.submit();\r\n            }, (error: string) => {\r\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\r\n            }, (info: string) => {\r\n                if (info === 'ready') {\r\n                    this.u2fReady = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.u2fSupported);\r\n        await this.init();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.cleanupU2f();\r\n        this.u2f = null;\r\n    }\r\n\r\n    async init() {\r\n        if (this.selectedProviderType == null) {\r\n            this.title = this.i18nService.t('loginUnavailable');\r\n            return;\r\n        }\r\n\r\n        this.cleanupU2f();\r\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\r\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\r\n        switch (this.selectedProviderType) {\r\n            case TwoFactorProviderType.U2f:\r\n                if (!this.u2fSupported || this.u2f == null) {\r\n                    break;\r\n                }\r\n\r\n                if (providerData.Challenge != null) {\r\n                    setTimeout(() => {\r\n                        this.u2f.init(JSON.parse(providerData.Challenge));\r\n                    }, 500);\r\n                } else {\r\n                    // TODO: Deprecated. Remove in future version.\r\n                    const challenges = JSON.parse(providerData.Challenges);\r\n                    if (challenges != null && challenges.length > 0) {\r\n                        this.u2f.init({\r\n                            appId: challenges[0].appId,\r\n                            challenge: challenges[0].challenge,\r\n                            keys: challenges.map((c: any) => {\r\n                                return {\r\n                                    version: c.version,\r\n                                    keyHandle: c.keyHandle,\r\n                                };\r\n                            }),\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n            case TwoFactorProviderType.Duo:\r\n            case TwoFactorProviderType.OrganizationDuo:\r\n                setTimeout(() => {\r\n                    DuoWebSDK.init({\r\n                        iframe: undefined,\r\n                        host: providerData.Host,\r\n                        sig_request: providerData.Signature,\r\n                        submit_callback: async (f: HTMLFormElement) => {\r\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\r\n                            if (sig != null) {\r\n                                this.token = sig.value;\r\n                                await this.submit();\r\n                            }\r\n                        },\r\n                    });\r\n                }, 0);\r\n                break;\r\n            case TwoFactorProviderType.Email:\r\n                this.twoFactorEmail = providerData.Email;\r\n                if (this.authService.twoFactorProvidersData.size > 1) {\r\n                    await this.sendEmail(false);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        if (this.token == null || this.token === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('verificationCodeRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.selectedProviderType === TwoFactorProviderType.U2f) {\r\n            if (this.u2f != null) {\r\n                this.u2f.stop();\r\n            } else {\r\n                return;\r\n            }\r\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\r\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\r\n            this.token = this.token.replace(' ', '').trim();\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\r\n            const response: AuthResult = await this.formPromise;\r\n            const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\r\n            await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\r\n            if (this.onSuccessfulLogin != null) {\r\n                this.onSuccessfulLogin();\r\n            }\r\n            this.platformUtilsService.eventTrack('Logged In From Two-step');\r\n            if (response.resetMasterPassword) {\r\n                this.successRoute = 'set-password';\r\n            }\r\n            if (this.onSuccessfulLoginNavigate != null) {\r\n                this.onSuccessfulLoginNavigate();\r\n            } else {\r\n                this.router.navigate([this.successRoute], {\r\n                    queryParams: {\r\n                        identifier: this.identifier,\r\n                    },\r\n                });\r\n            }\r\n        } catch {\r\n            if (this.selectedProviderType === TwoFactorProviderType.U2f && this.u2f != null) {\r\n                this.u2f.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    async sendEmail(doToast: boolean) {\r\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\r\n            return;\r\n        }\r\n\r\n        if (this.emailPromise != null) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const request = new TwoFactorEmailRequest(this.authService.email, this.authService.masterPasswordHash);\r\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\r\n            await this.emailPromise;\r\n            if (doToast) {\r\n                this.platformUtilsService.showToast('success', null,\r\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\r\n            }\r\n        } catch { }\r\n\r\n        this.emailPromise = null;\r\n    }\r\n\r\n    private cleanupU2f() {\r\n        if (this.u2f != null) {\r\n            this.u2f.stop();\r\n            this.u2f.cleanup();\r\n        }\r\n    }\r\n\r\n    get authing(): boolean {\r\n        return this.authService.authingWithPassword() || this.authService.authingWithSso() || this.authService.authingWithApiKey()\r\n    }\r\n\r\n    get needsLock(): boolean {\r\n        return this.authService.authingWithSso() || this.authService.authingWithApiKey();\r\n    }\r\n}\r\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\r\n\r\nexport class AuthResult {\r\n    twoFactor: boolean = false;\r\n    resetMasterPassword: boolean = false;\r\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\r\n}\r\n","import { DeviceType } from '../../enums/deviceType';\r\n\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\nexport class DeviceRequest {\r\n    type: DeviceType;\r\n    name: string;\r\n    identifier: string;\r\n    pushToken?: string;\r\n\r\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\r\n        this.type = platformUtilsService.getDevice();\r\n        this.name = platformUtilsService.getDeviceString();\r\n        this.identifier = appId;\r\n        this.pushToken = null;\r\n    }\r\n}\r\n","export class PreloginRequest {\r\n    email: string;\r\n\r\n    constructor(email: string) {\r\n        this.email = email;\r\n    }\r\n}\r\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\r\n\r\nimport { DeviceRequest } from './deviceRequest';\r\n\r\nexport class TokenRequest {\r\n    email: string;\r\n    masterPasswordHash: string;\r\n    code: string;\r\n    codeVerifier: string;\r\n    redirectUri: string;\r\n    clientId: string;\r\n    clientSecret: string;\r\n    token: string;\r\n    provider: TwoFactorProviderType;\r\n    remember: boolean;\r\n    device?: DeviceRequest;\r\n\r\n    constructor(credentials: string[], codes: string[], clientIdClientSecret: string[], provider: TwoFactorProviderType,\r\n        token: string, remember: boolean, device?: DeviceRequest) {\r\n        if (credentials != null && credentials.length > 1) {\r\n            this.email = credentials[0];\r\n            this.masterPasswordHash = credentials[1];\r\n        } else if (codes != null && codes.length > 2) {\r\n            this.code = codes[0];\r\n            this.codeVerifier = codes[1];\r\n            this.redirectUri = codes[2];\r\n        } else if (clientIdClientSecret != null && clientIdClientSecret.length > 1) {\r\n            this.clientId = clientIdClientSecret[0]\r\n            this.clientSecret = clientIdClientSecret[1]\r\n        }\r\n        this.token = token;\r\n        this.provider = provider;\r\n        this.remember = remember;\r\n        this.device = device != null ? device : null;\r\n    }\r\n\r\n    toIdentityToken(clientId: string) {\r\n        const obj: any = {\r\n            scope: 'api offline_access',\r\n            client_id: clientId,\r\n        };\r\n\r\n        if (this.clientSecret != null) {\r\n            obj.scope = 'api';\r\n            obj.grant_type = 'client_credentials';\r\n            obj.client_secret = this.clientSecret;\r\n        } else if (this.masterPasswordHash != null && this.email != null) {\r\n            obj.grant_type = 'password';\r\n            obj.username = this.email;\r\n            obj.password = this.masterPasswordHash;\r\n        } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\r\n            obj.grant_type = 'authorization_code';\r\n            obj.code = this.code;\r\n            obj.code_verifier = this.codeVerifier;\r\n            obj.redirect_uri = this.redirectUri;\r\n        } else {\r\n            throw new Error('must provide credentials or codes');\r\n        }\r\n\r\n        if (this.device) {\r\n            obj.deviceType = this.device.type;\r\n            obj.deviceIdentifier = this.device.identifier;\r\n            obj.deviceName = this.device.name;\r\n            // no push tokens for browser apps yet\r\n            // obj.devicePushToken = this.device.pushToken;\r\n        }\r\n\r\n        if (this.token && this.provider != null) {\r\n            obj.twoFactorToken = this.token;\r\n            obj.twoFactorProvider = this.provider;\r\n            obj.twoFactorRemember = this.remember ? '1' : '0';\r\n        }\r\n\r\n        return obj;\r\n    }\r\n}\r\n","export class U2f {\r\n    private iframe: HTMLIFrameElement = null;\r\n    private connectorLink: HTMLAnchorElement;\r\n    private parseFunction = this.parseMessage.bind(this);\r\n\r\n    constructor(private win: Window, private webVaultUrl: string, private successCallback: Function,\r\n        private errorCallback: Function, private infoCallback: Function) {\r\n        this.connectorLink = win.document.createElement('a');\r\n        this.webVaultUrl = webVaultUrl != null && webVaultUrl !== '' ? webVaultUrl : 'https://vault.bitwarden.com';\r\n    }\r\n\r\n    init(data: any): void {\r\n        this.connectorLink.href = this.webVaultUrl + '/u2f-connector.html' +\r\n            '?data=' + this.base64Encode(JSON.stringify(data)) +\r\n            '&parent=' + encodeURIComponent(this.win.document.location.href) +\r\n            '&v=1';\r\n\r\n        this.iframe = this.win.document.getElementById('u2f_iframe') as HTMLIFrameElement;\r\n        this.iframe.src = this.connectorLink.href;\r\n\r\n        this.win.addEventListener('message', this.parseFunction, false);\r\n    }\r\n\r\n    stop() {\r\n        this.sendMessage('stop');\r\n    }\r\n\r\n    start() {\r\n        this.sendMessage('start');\r\n    }\r\n\r\n    sendMessage(message: any) {\r\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\r\n            return;\r\n        }\r\n\r\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\r\n    }\r\n\r\n    base64Encode(str: string): string {\r\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\r\n            return String.fromCharCode(('0x' + p1) as any);\r\n        }));\r\n    }\r\n\r\n    cleanup() {\r\n        this.win.removeEventListener('message', this.parseFunction, false);\r\n    }\r\n\r\n    private parseMessage(event: MessageEvent) {\r\n        if (!this.validMessage(event)) {\r\n            return;\r\n        }\r\n\r\n        const parts: string[] = event.data.split('|');\r\n        if (parts[0] === 'success' && this.successCallback) {\r\n            this.successCallback(parts[1]);\r\n        } else if (parts[0] === 'error' && this.errorCallback) {\r\n            this.errorCallback(parts[1]);\r\n        } else if (parts[0] === 'info' && this.infoCallback) {\r\n            this.infoCallback(parts[1]);\r\n        }\r\n    }\r\n\r\n    private validMessage(event: MessageEvent) {\r\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\r\n            event.data == null || typeof (event.data) !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\r\n            event.data.indexOf('info|') === 0;\r\n    }\r\n}\r\n","export class VerifyEmailRequest {\r\n    userId: string;\r\n    token: string;\r\n\r\n    constructor(userId: string, token: string) {\r\n        this.userId = userId;\r\n        this.token = token;\r\n    }\r\n}\r\n","export class VerifyDeleteRecoverRequest {\r\n    userId: string;\r\n    token: string;\r\n\r\n    constructor(userId: string, token: string) {\r\n        this.userId = userId;\r\n        this.token = token;\r\n    }\r\n}\r\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\r\n\r\nexport class GroupRequest {\r\n    name: string;\r\n    accessAll: boolean;\r\n    externalId: string;\r\n    collections: SelectionReadOnlyRequest[] = [];\r\n}\r\n","import { OrganizationUserType } from '../../enums/organizationUserType';\r\n\r\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\r\n\r\nexport class OrganizationUserInviteRequest {\r\n    emails: string[] = [];\r\n    type: OrganizationUserType;\r\n    accessAll: boolean;\r\n    collections: SelectionReadOnlyRequest[] = [];\r\n}\r\n","import { OrganizationUserType } from '../../enums/organizationUserType';\r\n\r\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\r\n\r\nexport class OrganizationUserUpdateRequest {\r\n    type: OrganizationUserType;\r\n    accessAll: boolean;\r\n    collections: SelectionReadOnlyRequest[] = [];\r\n}\r\n","export class OrganizationUserUpdateGroupsRequest {\r\n    groupIds: string[] = [];\r\n}\r\n","export abstract class AppIdService {\r\n    getAppId: () => Promise<string>;\r\n    getAnonymousAppId: () => Promise<string>;\r\n}\r\n","import { LogLevelType } from '../enums/logLevelType';\r\n\r\nexport abstract class LogService {\r\n    debug: (message: string) => void;\r\n    info: (message: string) => void;\r\n    warning: (message: string) => void;\r\n    error: (message: string) => void;\r\n    write: (level: LogLevelType, message: string) => void;\r\n}\r\n","import { PolicyType } from '../../enums/policyType';\r\n\r\nexport class PolicyRequest {\r\n    type: PolicyType;\r\n    enabled: boolean;\r\n    data: any;\r\n}\r\n","export class OrganizationUpdateRequest {\r\n    name: string;\r\n    identifier: string;\r\n    businessName: string;\r\n    billingEmail: string;\r\n}\r\n","export enum TransactionType {\r\n    Charge = 0,\r\n    Credit = 1,\r\n    PromotionalCredit = 2,\r\n    ReferralCredit = 3,\r\n    Refund = 4,\r\n}\r\n","export class VerifyBankRequest {\r\n    amount1: number;\r\n    amount2: number;\r\n}\r\n","export class BitPayInvoiceRequest {\r\n    userId: string;\r\n    organizationId: string;\r\n    credit: boolean;\r\n    amount: number;\r\n    returnUrl: string;\r\n    name: string;\r\n    email: string;\r\n}\r\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\r\nimport { OrganizationTaxInfoUpdateRequest } from '../request/organizationTaxInfoUpdateRequest';\r\n\r\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\r\n    paymentMethodType: PaymentMethodType;\r\n    paymentToken: string;\r\n}\r\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\r\nimport { PlanType } from '../../enums/planType';\r\n\r\nexport class OrganizationCreateRequest {\r\n    name: string;\r\n    businessName: string;\r\n    billingEmail: string;\r\n    planType: PlanType;\r\n    key: string;\r\n    paymentMethodType: PaymentMethodType;\r\n    paymentToken: string;\r\n    additionalSeats: number;\r\n    additionalStorageGb: number;\r\n    premiumAccessAddon: boolean;\r\n    collectionName: string;\r\n    taxIdNumber: string;\r\n    billingAddressLine1: string;\r\n    billingAddressLine2: string;\r\n    billingAddressCity: string;\r\n    billingAddressState: string;\r\n    billingAddressPostalCode: string;\r\n    billingAddressCountry: string;\r\n}\r\n","import { PlanType } from '../../enums/planType';\r\n\r\nexport class OrganizationUpgradeRequest {\r\n    businessName: string;\r\n    planType: PlanType;\r\n    additionalSeats: number;\r\n    additionalStorageGb: number;\r\n    premiumAccessAddon: boolean;\r\n}\r\n","export class SeatRequest {\r\n    seatAdjustment: number;\r\n}\r\n","export class StorageRequest {\r\n    storageGbAdjustment: number;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class UpdateTwoFactorDuoRequest extends PasswordVerificationRequest {\r\n    integrationKey: string;\r\n    secretKey: string;\r\n    host: string;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\r\n\r\nexport class TwoFactorProviderRequest extends PasswordVerificationRequest {\r\n    type: TwoFactorProviderType;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class UpdateTwoFactorAuthenticatorRequest extends PasswordVerificationRequest {\r\n    token: string;\r\n    key: string;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class UpdateTwoFactorEmailRequest extends PasswordVerificationRequest {\r\n    token: string;\r\n    email: string;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class UpdateTwoFactorU2fDeleteRequest extends PasswordVerificationRequest {\r\n    id: number;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class UpdateTwoFactorU2fRequest extends PasswordVerificationRequest {\r\n    deviceResponse: string;\r\n    name: string;\r\n    id: number;\r\n}\r\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\r\n\r\nexport class UpdateTwoFactorYubioOtpRequest extends PasswordVerificationRequest {\r\n    key1: string;\r\n    key2: string;\r\n    key3: string;\r\n    key4: string;\r\n    key5: string;\r\n    nfc: boolean;\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\nimport { EventService } from '../../abstractions/event.service';\r\nimport { ExportService } from '../../abstractions/export.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { EventType } from '../../enums/eventType';\r\n\r\n@Directive()\r\nexport class ExportComponent {\r\n    @Output() onSaved = new EventEmitter();\r\n\r\n    formPromise: Promise<string>;\r\n    masterPassword: string;\r\n    format: 'json' | 'csv' = 'json';\r\n    showPassword = false;\r\n\r\n    constructor(protected cryptoService: CryptoService, protected i18nService: I18nService,\r\n        protected platformUtilsService: PlatformUtilsService, protected exportService: ExportService,\r\n        protected eventService: EventService, protected win: Window) { }\r\n\r\n    async submit() {\r\n        if (this.masterPassword == null || this.masterPassword === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('invalidMasterPassword'));\r\n            return;\r\n        }\r\n\r\n        const keyHash = await this.cryptoService.hashPassword(this.masterPassword, null);\r\n        const storedKeyHash = await this.cryptoService.getKeyHash();\r\n        if (storedKeyHash != null && keyHash != null && storedKeyHash === keyHash) {\r\n            try {\r\n                this.formPromise = this.getExportData();\r\n                const data = await this.formPromise;\r\n                this.platformUtilsService.eventTrack('Exported Data');\r\n                this.downloadFile(data);\r\n                this.saved();\r\n                await this.collectEvent();\r\n            } catch { }\r\n        } else {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('invalidMasterPassword'));\r\n        }\r\n    }\r\n\r\n    togglePassword() {\r\n        this.platformUtilsService.eventTrack('Toggled Master Password on Export');\r\n        this.showPassword = !this.showPassword;\r\n        document.getElementById('masterPassword').focus();\r\n    }\r\n\r\n    protected saved() {\r\n        this.onSaved.emit();\r\n    }\r\n\r\n    protected getExportData() {\r\n        return this.exportService.getExport(this.format);\r\n    }\r\n\r\n    protected getFileName(prefix?: string) {\r\n        return this.exportService.getFileName(prefix, this.format);\r\n    }\r\n\r\n    protected async collectEvent(): Promise<any> {\r\n        await this.eventService.collect(EventType.User_ClientExportedVault);\r\n    }\r\n\r\n    private downloadFile(csv: string): void {\r\n        const fileName = this.getFileName();\r\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\r\n    }\r\n}\r\n","export class AttachmentRequest {\r\n    fileName: string;\r\n    key: string;\r\n}\r\n","import {\r\n    CdkDragDrop,\r\n    moveItemInArray,\r\n} from '@angular/cdk/drag-drop';\r\nimport {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { CipherType } from '../../enums/cipherType';\r\nimport { EventType } from '../../enums/eventType';\r\nimport { FieldType } from '../../enums/fieldType';\r\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\r\nimport { SecureNoteType } from '../../enums/secureNoteType';\r\nimport { UriMatchType } from '../../enums/uriMatchType';\r\n\r\nimport { AuditService } from '../../abstractions/audit.service';\r\nimport { CipherService } from '../../abstractions/cipher.service';\r\nimport { CollectionService } from '../../abstractions/collection.service';\r\nimport { EventService } from '../../abstractions/event.service';\r\nimport { FolderService } from '../../abstractions/folder.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { MessagingService } from '../../abstractions/messaging.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { StateService } from '../../abstractions/state.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\n\r\nimport { Cipher } from '../../models/domain/cipher';\r\n\r\nimport { CardView } from '../../models/view/cardView';\r\nimport { CipherView } from '../../models/view/cipherView';\r\nimport { CollectionView } from '../../models/view/collectionView';\r\nimport { FieldView } from '../../models/view/fieldView';\r\nimport { FolderView } from '../../models/view/folderView';\r\nimport { IdentityView } from '../../models/view/identityView';\r\nimport { LoginUriView } from '../../models/view/loginUriView';\r\nimport { LoginView } from '../../models/view/loginView';\r\nimport { SecureNoteView } from '../../models/view/secureNoteView';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\n@Directive()\r\nexport class AddEditComponent implements OnInit {\r\n    @Input() cloneMode: boolean = false;\r\n    @Input() folderId: string = null;\r\n    @Input() cipherId: string;\r\n    @Input() type: CipherType;\r\n    @Input() collectionIds: string[];\r\n    @Input() organizationId: string = null;\r\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\r\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\r\n    @Output() onRestoredCipher = new EventEmitter<CipherView>();\r\n    @Output() onCancelled = new EventEmitter<CipherView>();\r\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\r\n    @Output() onShareCipher = new EventEmitter<CipherView>();\r\n    @Output() onEditCollections = new EventEmitter<CipherView>();\r\n    @Output() onGeneratePassword = new EventEmitter();\r\n\r\n    editMode: boolean = false;\r\n    cipher: CipherView;\r\n    folders: FolderView[];\r\n    collections: CollectionView[] = [];\r\n    title: string;\r\n    formPromise: Promise<any>;\r\n    deletePromise: Promise<any>;\r\n    restorePromise: Promise<any>;\r\n    checkPasswordPromise: Promise<number>;\r\n    showPassword: boolean = false;\r\n    showCardCode: boolean = false;\r\n    cipherType = CipherType;\r\n    fieldType = FieldType;\r\n    addFieldType: FieldType = FieldType.Text;\r\n    typeOptions: any[];\r\n    cardBrandOptions: any[];\r\n    cardExpMonthOptions: any[];\r\n    identityTitleOptions: any[];\r\n    addFieldTypeOptions: any[];\r\n    uriMatchOptions: any[];\r\n    ownershipOptions: any[] = [];\r\n    currentDate = new Date();\r\n\r\n    protected writeableCollections: CollectionView[];\r\n    private previousCipherId: string;\r\n\r\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\r\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\r\n        protected auditService: AuditService, protected stateService: StateService,\r\n        protected userService: UserService, protected collectionService: CollectionService,\r\n        protected messagingService: MessagingService, protected eventService: EventService) {\r\n        this.typeOptions = [\r\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\r\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\r\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\r\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\r\n        ];\r\n        this.cardBrandOptions = [\r\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\r\n            { name: 'Visa', value: 'Visa' },\r\n            { name: 'Mastercard', value: 'Mastercard' },\r\n            { name: 'American Express', value: 'Amex' },\r\n            { name: 'Discover', value: 'Discover' },\r\n            { name: 'Diners Club', value: 'Diners Club' },\r\n            { name: 'JCB', value: 'JCB' },\r\n            { name: 'Maestro', value: 'Maestro' },\r\n            { name: 'UnionPay', value: 'UnionPay' },\r\n            { name: i18nService.t('other'), value: 'Other' },\r\n        ];\r\n        this.cardExpMonthOptions = [\r\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\r\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\r\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\r\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\r\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\r\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\r\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\r\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\r\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\r\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\r\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\r\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\r\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\r\n        ];\r\n        this.identityTitleOptions = [\r\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\r\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\r\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\r\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\r\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\r\n        ];\r\n        this.addFieldTypeOptions = [\r\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\r\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\r\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\r\n        ];\r\n        this.uriMatchOptions = [\r\n            { name: i18nService.t('defaultMatchDetection'), value: null },\r\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\r\n            { name: i18nService.t('host'), value: UriMatchType.Host },\r\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\r\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\r\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\r\n            { name: i18nService.t('never'), value: UriMatchType.Never },\r\n        ];\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await this.init();\r\n    }\r\n\r\n    async init() {\r\n        const myEmail = await this.userService.getEmail();\r\n        this.ownershipOptions.push({ name: myEmail, value: null });\r\n        const orgs = await this.userService.getAllOrganizations();\r\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name')).forEach((o) => {\r\n            if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\r\n                this.ownershipOptions.push({ name: o.name, value: o.id });\r\n            }\r\n        });\r\n        this.writeableCollections = await this.loadCollections();\r\n    }\r\n\r\n    async load() {\r\n        this.editMode = this.cipherId != null;\r\n        if (this.editMode) {\r\n            this.editMode = true;\r\n            if (this.cloneMode) {\r\n                this.cloneMode = true;\r\n                this.title = this.i18nService.t('addItem');\r\n            } else {\r\n                this.title = this.i18nService.t('editItem');\r\n            }\r\n        } else {\r\n            this.title = this.i18nService.t('addItem');\r\n        }\r\n\r\n        const addEditCipherInfo: any = await this.stateService.get<any>('addEditCipherInfo');\r\n        if (addEditCipherInfo != null) {\r\n            this.cipher = addEditCipherInfo.cipher;\r\n            this.collectionIds = addEditCipherInfo.collectionIds;\r\n        }\r\n        await this.stateService.remove('addEditCipherInfo');\r\n\r\n        if (this.cipher == null) {\r\n            if (this.editMode) {\r\n                const cipher = await this.loadCipher();\r\n                this.cipher = await cipher.decrypt();\r\n\r\n                // Adjust Cipher Name if Cloning\r\n                if (this.cloneMode) {\r\n                    this.cipher.name += ' - ' + this.i18nService.t('clone');\r\n                }\r\n            } else {\r\n                this.cipher = new CipherView();\r\n                this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\r\n                this.cipher.folderId = this.folderId;\r\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\r\n                this.cipher.login = new LoginView();\r\n                this.cipher.login.uris = [new LoginUriView()];\r\n                this.cipher.card = new CardView();\r\n                this.cipher.identity = new IdentityView();\r\n                this.cipher.secureNote = new SecureNoteView();\r\n                this.cipher.secureNote.type = SecureNoteType.Generic;\r\n            }\r\n        }\r\n\r\n        if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\r\n            await this.organizationChanged();\r\n            if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {\r\n                this.collections.forEach((c) => {\r\n                    if (this.collectionIds.indexOf(c.id) > -1) {\r\n                        (c as any).checked = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        this.folders = await this.folderService.getAllDecrypted();\r\n\r\n        if (this.editMode && this.previousCipherId !== this.cipherId) {\r\n            this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\r\n        }\r\n        this.previousCipherId = this.cipherId;\r\n    }\r\n\r\n    async submit(): Promise<boolean> {\r\n        if (this.cipher.isDeleted) {\r\n            return this.restore();\r\n        }\r\n\r\n        if (this.cipher.name == null || this.cipher.name === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('nameRequired'));\r\n            return false;\r\n        }\r\n\r\n        if ((!this.editMode || this.cloneMode) && this.cipher.type === CipherType.Login &&\r\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\r\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\r\n            this.cipher.login.uris = null;\r\n        }\r\n\r\n        // Allows saving of selected collections during \"Add\" and \"Clone\" flows\r\n        if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\r\n            this.cipher.collectionIds = this.collections == null ? [] :\r\n                this.collections.filter((c) => (c as any).checked).map((c) => c.id);\r\n        }\r\n\r\n        // Clear current Cipher Id to trigger \"Add\" cipher flow\r\n        if (this.cloneMode) {\r\n            this.cipher.id = null;\r\n        }\r\n\r\n        const cipher = await this.encryptCipher();\r\n        try {\r\n            this.formPromise = this.saveCipher(cipher);\r\n            await this.formPromise;\r\n            this.cipher.id = cipher.id;\r\n            this.platformUtilsService.eventTrack(this.editMode && !this.cloneMode ? 'Edited Cipher' : 'Added Cipher');\r\n            this.platformUtilsService.showToast('success', null,\r\n                this.i18nService.t(this.editMode && !this.cloneMode ? 'editedItem' : 'addedItem'));\r\n            this.onSavedCipher.emit(this.cipher);\r\n            this.messagingService.send(this.editMode && !this.cloneMode ? 'editedCipher' : 'addedCipher');\r\n            return true;\r\n        } catch { }\r\n\r\n        return false;\r\n    }\r\n\r\n    addUri() {\r\n        if (this.cipher.type !== CipherType.Login) {\r\n            return;\r\n        }\r\n\r\n        if (this.cipher.login.uris == null) {\r\n            this.cipher.login.uris = [];\r\n        }\r\n\r\n        this.cipher.login.uris.push(new LoginUriView());\r\n    }\r\n\r\n    removeUri(uri: LoginUriView) {\r\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\r\n            return;\r\n        }\r\n\r\n        const i = this.cipher.login.uris.indexOf(uri);\r\n        if (i > -1) {\r\n            this.cipher.login.uris.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    addField() {\r\n        if (this.cipher.fields == null) {\r\n            this.cipher.fields = [];\r\n        }\r\n\r\n        const f = new FieldView();\r\n        f.type = this.addFieldType;\r\n        f.newField = true;\r\n        this.cipher.fields.push(f);\r\n    }\r\n\r\n    removeField(field: FieldView) {\r\n        const i = this.cipher.fields.indexOf(field);\r\n        if (i > -1) {\r\n            this.cipher.fields.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    trackByFunction(index: number, item: any) {\r\n        return index;\r\n    }\r\n\r\n    cancel() {\r\n        this.onCancelled.emit(this.cipher);\r\n    }\r\n\r\n    attachments() {\r\n        this.onEditAttachments.emit(this.cipher);\r\n    }\r\n\r\n    share() {\r\n        this.onShareCipher.emit(this.cipher);\r\n    }\r\n\r\n    editCollections() {\r\n        this.onEditCollections.emit(this.cipher);\r\n    }\r\n\r\n    async delete(): Promise<boolean> {\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\r\n            this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.deletePromise = this.deleteCipher();\r\n            await this.deletePromise;\r\n            this.platformUtilsService.eventTrack((this.cipher.isDeleted ? 'Permanently ' : '') + 'Deleted Cipher');\r\n            this.platformUtilsService.showToast('success', null,\r\n                this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));\r\n            this.onDeletedCipher.emit(this.cipher);\r\n            this.messagingService.send(this.cipher.isDeleted ? 'permanentlyDeletedCipher' : 'deletedCipher');\r\n        } catch { }\r\n\r\n        return true;\r\n    }\r\n\r\n    async restore(): Promise<boolean> {\r\n        if (!this.cipher.isDeleted) {\r\n            return false;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.restorePromise = this.restoreCipher();\r\n            await this.restorePromise;\r\n            this.platformUtilsService.eventTrack('Restored Cipher');\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));\r\n            this.onRestoredCipher.emit(this.cipher);\r\n            this.messagingService.send('restoredCipher');\r\n        } catch { }\r\n\r\n        return true;\r\n    }\r\n\r\n    async generatePassword(): Promise<boolean> {\r\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\r\n            const confirmed = await this.platformUtilsService.showDialog(\r\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\r\n                this.i18nService.t('yes'), this.i18nService.t('no'));\r\n            if (!confirmed) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.onGeneratePassword.emit();\r\n        return true;\r\n    }\r\n\r\n    togglePassword() {\r\n        this.platformUtilsService.eventTrack('Toggled Password on Edit');\r\n        this.showPassword = !this.showPassword;\r\n        document.getElementById('loginPassword').focus();\r\n        if (this.editMode && this.showPassword) {\r\n            this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\r\n        }\r\n    }\r\n\r\n    toggleCardCode() {\r\n        this.platformUtilsService.eventTrack('Toggled CardCode on Edit');\r\n        this.showCardCode = !this.showCardCode;\r\n        document.getElementById('cardCode').focus();\r\n        if (this.editMode && this.showCardCode) {\r\n            this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\r\n        }\r\n    }\r\n\r\n    toggleFieldValue(field: FieldView) {\r\n        const f = (field as any);\r\n        f.showValue = !f.showValue;\r\n        if (this.editMode && f.showValue) {\r\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\r\n        }\r\n    }\r\n\r\n    toggleUriOptions(uri: LoginUriView) {\r\n        const u = (uri as any);\r\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\r\n    }\r\n\r\n    loginUriMatchChanged(uri: LoginUriView) {\r\n        const u = (uri as any);\r\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\r\n    }\r\n\r\n    drop(event: CdkDragDrop<string[]>) {\r\n        moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\r\n    }\r\n\r\n    async organizationChanged() {\r\n        if (this.writeableCollections != null) {\r\n            this.writeableCollections.forEach((c) => (c as any).checked = false);\r\n        }\r\n        if (this.cipher.organizationId != null) {\r\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.cipher.organizationId);\r\n            const org = await this.userService.getOrganization(this.cipher.organizationId);\r\n            if (org != null) {\r\n                this.cipher.organizationUseTotp = org.useTotp;\r\n            }\r\n        } else {\r\n            this.collections = [];\r\n        }\r\n    }\r\n\r\n    async checkPassword() {\r\n        if (this.checkPasswordPromise != null) {\r\n            return;\r\n        }\r\n\r\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\r\n            return;\r\n        }\r\n\r\n        this.platformUtilsService.eventTrack('Check Password');\r\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\r\n        const matches = await this.checkPasswordPromise;\r\n        this.checkPasswordPromise = null;\r\n\r\n        if (matches > 0) {\r\n            this.platformUtilsService.showToast('warning', null,\r\n                this.i18nService.t('passwordExposed', matches.toString()));\r\n        } else {\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));\r\n        }\r\n    }\r\n\r\n    protected async loadCollections() {\r\n        const allCollections = await this.collectionService.getAllDecrypted();\r\n        return allCollections.filter((c) => !c.readOnly);\r\n    }\r\n\r\n    protected loadCipher() {\r\n        return this.cipherService.get(this.cipherId);\r\n    }\r\n\r\n    protected encryptCipher() {\r\n        return this.cipherService.encrypt(this.cipher);\r\n    }\r\n\r\n    protected saveCipher(cipher: Cipher) {\r\n        return this.cipherService.saveWithServer(cipher);\r\n    }\r\n\r\n    protected deleteCipher() {\r\n        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)\r\n            : this.cipherService.softDeleteWithServer(this.cipher.id);\r\n    }\r\n\r\n    protected restoreCipher() {\r\n        return this.cipherService.restoreWithServer(this.cipher.id);\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from '../../abstractions/cipher.service';\r\nimport { CryptoService } from '../../abstractions/crypto.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\n\r\nimport { Cipher } from '../../models/domain/cipher';\r\n\r\nimport { AttachmentView } from '../../models/view/attachmentView';\r\nimport { CipherView } from '../../models/view/cipherView';\r\n\r\n@Directive()\r\nexport class AttachmentsComponent implements OnInit {\r\n    @Input() cipherId: string;\r\n    @Output() onUploadedAttachment = new EventEmitter();\r\n    @Output() onDeletedAttachment = new EventEmitter();\r\n    @Output() onReuploadedAttachment = new EventEmitter();\r\n\r\n    cipher: CipherView;\r\n    cipherDomain: Cipher;\r\n    hasUpdatedKey: boolean;\r\n    canAccessAttachments: boolean;\r\n    formPromise: Promise<any>;\r\n    deletePromises: { [id: string]: Promise<any>; } = {};\r\n    reuploadPromises: { [id: string]: Promise<any>; } = {};\r\n\r\n    constructor(protected cipherService: CipherService, protected i18nService: I18nService,\r\n        protected cryptoService: CryptoService, protected userService: UserService,\r\n        protected platformUtilsService: PlatformUtilsService, protected win: Window) { }\r\n\r\n    async ngOnInit() {\r\n        await this.init();\r\n    }\r\n\r\n    async submit() {\r\n        if (!this.hasUpdatedKey) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('updateKey'));\r\n            return;\r\n        }\r\n\r\n        const fileEl = document.getElementById('file') as HTMLInputElement;\r\n        const files = fileEl.files;\r\n        if (files == null || files.length === 0) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('selectFile'));\r\n            return;\r\n        }\r\n\r\n        if (files[0].size > 104857600) { // 100 MB\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('maxFileSize'));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.formPromise = this.saveCipherAttachment(files[0]);\r\n            this.cipherDomain = await this.formPromise;\r\n            this.cipher = await this.cipherDomain.decrypt();\r\n            this.platformUtilsService.eventTrack('Added Attachment');\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\r\n            this.onUploadedAttachment.emit();\r\n        } catch { }\r\n\r\n        // reset file input\r\n        // ref: https://stackoverflow.com/a/20552042\r\n        fileEl.type = '';\r\n        fileEl.type = 'file';\r\n        fileEl.value = '';\r\n    }\r\n\r\n    async delete(attachment: AttachmentView) {\r\n        if (this.deletePromises[attachment.id] != null) {\r\n            return;\r\n        }\r\n\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\r\n            await this.deletePromises[attachment.id];\r\n            this.platformUtilsService.eventTrack('Deleted Attachment');\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));\r\n            const i = this.cipher.attachments.indexOf(attachment);\r\n            if (i > -1) {\r\n                this.cipher.attachments.splice(i, 1);\r\n            }\r\n        } catch { }\r\n\r\n        this.deletePromises[attachment.id] = null;\r\n        this.onDeletedAttachment.emit();\r\n    }\r\n\r\n    async download(attachment: AttachmentView) {\r\n        const a = (attachment as any);\r\n        if (a.downloading) {\r\n            return;\r\n        }\r\n\r\n        if (!this.canAccessAttachments) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'),\r\n                this.i18nService.t('premiumRequiredDesc'));\r\n            return;\r\n        }\r\n\r\n        a.downloading = true;\r\n        const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\r\n        if (response.status !== 200) {\r\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\r\n            a.downloading = false;\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const buf = await response.arrayBuffer();\r\n            const key = attachment.key != null ? attachment.key :\r\n                await this.cryptoService.getOrgKey(this.cipher.organizationId);\r\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\r\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\r\n        } catch (e) {\r\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\r\n        }\r\n\r\n        a.downloading = false;\r\n    }\r\n\r\n    protected async init() {\r\n        this.cipherDomain = await this.loadCipher();\r\n        this.cipher = await this.cipherDomain.decrypt();\r\n\r\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\r\n        const canAccessPremium = await this.userService.canAccessPremium();\r\n        this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\r\n\r\n        if (!this.canAccessAttachments) {\r\n            const confirmed = await this.platformUtilsService.showDialog(\r\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\r\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\r\n            if (confirmed) {\r\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\r\n            }\r\n        } else if (!this.hasUpdatedKey) {\r\n            const confirmed = await this.platformUtilsService.showDialog(\r\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\r\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\r\n            if (confirmed) {\r\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\r\n            }\r\n        }\r\n    }\r\n\r\n    protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\r\n        const a = (attachment as any);\r\n        if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\r\n                // 1. Download\r\n                a.downloading = true;\r\n                const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\r\n                if (response.status !== 200) {\r\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\r\n                    a.downloading = false;\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    // 2. Resave\r\n                    const buf = await response.arrayBuffer();\r\n                    const key = attachment.key != null ? attachment.key :\r\n                        await this.cryptoService.getOrgKey(this.cipher.organizationId);\r\n                    const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\r\n                    this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\r\n                        this.cipherDomain, attachment.fileName, decBuf, admin);\r\n                    this.cipher = await this.cipherDomain.decrypt();\r\n\r\n                    // 3. Delete old\r\n                    this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\r\n                    await this.deletePromises[attachment.id];\r\n                    const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\r\n                    if (foundAttachment.length > 0) {\r\n                        const i = this.cipher.attachments.indexOf(foundAttachment[0]);\r\n                        if (i > -1) {\r\n                            this.cipher.attachments.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    this.platformUtilsService.eventTrack('Reuploaded Attachment');\r\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\r\n                    this.onReuploadedAttachment.emit();\r\n                } catch (e) {\r\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\r\n                }\r\n\r\n                a.downloading = false;\r\n            });\r\n            await this.reuploadPromises[attachment.id];\r\n        } catch { }\r\n    }\r\n\r\n    protected loadCipher() {\r\n        return this.cipherService.get(this.cipherId);\r\n    }\r\n\r\n    protected saveCipherAttachment(file: File) {\r\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\r\n    }\r\n\r\n    protected deleteCipherAttachment(attachmentId: string) {\r\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { SearchService } from '../../abstractions/search.service';\r\n\r\nimport { CipherView } from '../../models/view/cipherView';\r\n\r\n@Directive()\r\nexport class CiphersComponent {\r\n    @Input() activeCipherId: string = null;\r\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\r\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\r\n    @Output() onAddCipher = new EventEmitter();\r\n    @Output() onAddCipherOptions = new EventEmitter();\r\n\r\n    loaded: boolean = false;\r\n    ciphers: CipherView[] = [];\r\n    pagedCiphers: CipherView[] = [];\r\n    searchText: string;\r\n    searchPlaceholder: string = null;\r\n    filter: (cipher: CipherView) => boolean = null;\r\n    deleted: boolean = false;\r\n\r\n    protected searchPending = false;\r\n    protected didScroll = false;\r\n    protected pageSize = 100;\r\n\r\n    private searchTimeout: any = null;\r\n    private pagedCiphersCount = 0;\r\n    private refreshing = false;\r\n\r\n    constructor(protected searchService: SearchService) { }\r\n\r\n    async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\r\n        this.deleted = deleted || false;\r\n        await this.applyFilter(filter);\r\n        this.loaded = true;\r\n    }\r\n\r\n    loadMore() {\r\n        if (this.ciphers.length <= this.pageSize) {\r\n            return;\r\n        }\r\n        const pagedLength = this.pagedCiphers.length;\r\n        let pagedSize = this.pageSize;\r\n        if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\r\n            pagedSize = this.pagedCiphersCount;\r\n        }\r\n        if (this.ciphers.length > pagedLength) {\r\n            this.pagedCiphers = this.pagedCiphers.concat(this.ciphers.slice(pagedLength, pagedLength + pagedSize));\r\n        }\r\n        this.pagedCiphersCount = this.pagedCiphers.length;\r\n        this.didScroll = this.pagedCiphers.length > this.pageSize;\r\n    }\r\n\r\n    async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\r\n        this.loaded = false;\r\n        this.ciphers = [];\r\n        await this.load(filter, deleted);\r\n    }\r\n\r\n    async refresh() {\r\n        try {\r\n            this.refreshing = true;\r\n            await this.reload(this.filter, this.deleted);\r\n        } finally {\r\n            this.refreshing = false;\r\n        }\r\n    }\r\n\r\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\r\n        this.filter = filter;\r\n        await this.search(null);\r\n    }\r\n\r\n    async search(timeout: number = null) {\r\n        this.searchPending = false;\r\n        if (this.searchTimeout != null) {\r\n            clearTimeout(this.searchTimeout);\r\n        }\r\n        const deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\r\n        if (timeout == null) {\r\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, deletedFilter], null);\r\n            await this.resetPaging();\r\n            return;\r\n        }\r\n        this.searchPending = true;\r\n        this.searchTimeout = setTimeout(async () => {\r\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, deletedFilter], null);\r\n            await this.resetPaging();\r\n            this.searchPending = false;\r\n        }, timeout);\r\n    }\r\n\r\n    selectCipher(cipher: CipherView) {\r\n        this.onCipherClicked.emit(cipher);\r\n    }\r\n\r\n    rightClickCipher(cipher: CipherView) {\r\n        this.onCipherRightClicked.emit(cipher);\r\n    }\r\n\r\n    addCipher() {\r\n        this.onAddCipher.emit();\r\n    }\r\n\r\n    addCipherOptions() {\r\n        this.onAddCipherOptions.emit();\r\n    }\r\n\r\n    isSearching() {\r\n        return !this.searchPending && this.searchService.isSearchable(this.searchText);\r\n    }\r\n\r\n    isPaging() {\r\n        const searching = this.isSearching();\r\n        if (searching && this.didScroll) {\r\n            this.resetPaging();\r\n        }\r\n        return !searching && this.ciphers.length > this.pageSize;\r\n    }\r\n\r\n    async resetPaging() {\r\n        this.pagedCiphers = [];\r\n        this.loadMore();\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { CipherService } from '../../abstractions/cipher.service';\r\nimport { CollectionService } from '../../abstractions/collection.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\nimport { CipherView } from '../../models/view/cipherView';\r\nimport { CollectionView } from '../../models/view/collectionView';\r\n\r\nimport { Cipher } from '../../models/domain/cipher';\r\n\r\n@Directive()\r\nexport class CollectionsComponent implements OnInit {\r\n    @Input() cipherId: string;\r\n    @Input() allowSelectNone = false;\r\n    @Output() onSavedCollections = new EventEmitter();\r\n\r\n    formPromise: Promise<any>;\r\n    cipher: CipherView;\r\n    collectionIds: string[];\r\n    collections: CollectionView[] = [];\r\n\r\n    protected cipherDomain: Cipher;\r\n\r\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\r\n        protected i18nService: I18nService, protected cipherService: CipherService) { }\r\n\r\n    async ngOnInit() {\r\n        await this.load();\r\n    }\r\n\r\n    async load() {\r\n        this.cipherDomain = await this.loadCipher();\r\n        this.collectionIds = this.loadCipherCollections();\r\n        this.cipher = await this.cipherDomain.decrypt();\r\n        this.collections = await this.loadCollections();\r\n\r\n        this.collections.forEach((c) => (c as any).checked = false);\r\n        if (this.collectionIds != null) {\r\n            this.collections.forEach((c) => {\r\n                (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\r\n            });\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n        const selectedCollectionIds = this.collections\r\n            .filter((c) => !!(c as any).checked)\r\n            .map((c) => c.id);\r\n        if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('selectOneCollection'));\r\n            return;\r\n        }\r\n        this.cipherDomain.collectionIds = selectedCollectionIds;\r\n        try {\r\n            this.formPromise = this.saveCollections();\r\n            await this.formPromise;\r\n            this.onSavedCollections.emit();\r\n            this.platformUtilsService.eventTrack('Edited Cipher Collections');\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));\r\n        } catch { }\r\n    }\r\n\r\n    protected loadCipher() {\r\n        return this.cipherService.get(this.cipherId);\r\n    }\r\n\r\n    protected loadCipherCollections() {\r\n        return this.cipherDomain.collectionIds;\r\n    }\r\n\r\n    protected async loadCollections() {\r\n        const allCollections = await this.collectionService.getAllDecrypted();\r\n        return allCollections.filter((c) => !c.readOnly && c.organizationId === this.cipher.organizationId);\r\n    }\r\n\r\n    protected saveCollections() {\r\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { CipherType } from '../../enums/cipherType';\r\n\r\nimport { CollectionView } from '../../models/view/collectionView';\r\nimport { FolderView } from '../../models/view/folderView';\r\n\r\nimport { TreeNode } from '../../models/domain/treeNode';\r\n\r\nimport { CollectionService } from '../../abstractions/collection.service';\r\nimport { FolderService } from '../../abstractions/folder.service';\r\nimport { StorageService } from '../../abstractions/storage.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\n\r\nimport { ConstantsService } from '../../services/constants.service';\r\n\r\n@Directive()\r\nexport class GroupingsComponent {\r\n    @Input() showFolders = true;\r\n    @Input() showCollections = true;\r\n    @Input() showFavorites = true;\r\n    @Input() showTrash = true;\r\n\r\n    @Output() onAllClicked = new EventEmitter();\r\n    @Output() onFavoritesClicked = new EventEmitter();\r\n    @Output() onTrashClicked = new EventEmitter();\r\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\r\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\r\n    @Output() onAddFolder = new EventEmitter();\r\n    @Output() onEditFolder = new EventEmitter<FolderView>();\r\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\r\n\r\n    folders: FolderView[];\r\n    nestedFolders: TreeNode<FolderView>[];\r\n    collections: CollectionView[];\r\n    nestedCollections: TreeNode<CollectionView>[];\r\n    loaded: boolean = false;\r\n    cipherType = CipherType;\r\n    selectedAll: boolean = false;\r\n    selectedFavorites: boolean = false;\r\n    selectedTrash: boolean = false;\r\n    selectedType: CipherType = null;\r\n    selectedFolder: boolean = false;\r\n    selectedFolderId: string = null;\r\n    selectedCollectionId: string = null;\r\n\r\n    private collapsedGroupings: Set<string>;\r\n    private collapsedGroupingsKey: string;\r\n\r\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService,\r\n        protected storageService: StorageService, protected userService: UserService) { }\r\n\r\n    async load(setLoaded = true) {\r\n        const userId = await this.userService.getUserId();\r\n        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey + '_' + userId;\r\n        const collapsedGroupings = await this.storageService.get<string[]>(this.collapsedGroupingsKey);\r\n        if (collapsedGroupings == null) {\r\n            this.collapsedGroupings = new Set<string>();\r\n        } else {\r\n            this.collapsedGroupings = new Set(collapsedGroupings);\r\n        }\r\n\r\n        await this.loadFolders();\r\n        await this.loadCollections();\r\n\r\n        if (setLoaded) {\r\n            this.loaded = true;\r\n        }\r\n    }\r\n\r\n    async loadCollections(organizationId?: string) {\r\n        if (!this.showCollections) {\r\n            return;\r\n        }\r\n        const collections = await this.collectionService.getAllDecrypted();\r\n        if (organizationId != null) {\r\n            this.collections = collections.filter((c) => c.organizationId === organizationId);\r\n        } else {\r\n            this.collections = collections;\r\n        }\r\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\r\n    }\r\n\r\n    async loadFolders() {\r\n        if (!this.showFolders) {\r\n            return;\r\n        }\r\n        this.folders = await this.folderService.getAllDecrypted();\r\n        this.nestedFolders = await this.folderService.getAllNested();\r\n    }\r\n\r\n    selectAll() {\r\n        this.clearSelections();\r\n        this.selectedAll = true;\r\n        this.onAllClicked.emit();\r\n    }\r\n\r\n    selectFavorites() {\r\n        this.clearSelections();\r\n        this.selectedFavorites = true;\r\n        this.onFavoritesClicked.emit();\r\n    }\r\n\r\n    selectTrash() {\r\n        this.clearSelections();\r\n        this.selectedTrash = true;\r\n        this.onTrashClicked.emit();\r\n    }\r\n\r\n    selectType(type: CipherType) {\r\n        this.clearSelections();\r\n        this.selectedType = type;\r\n        this.onCipherTypeClicked.emit(type);\r\n    }\r\n\r\n    selectFolder(folder: FolderView) {\r\n        this.clearSelections();\r\n        this.selectedFolder = true;\r\n        this.selectedFolderId = folder.id;\r\n        this.onFolderClicked.emit(folder);\r\n    }\r\n\r\n    addFolder() {\r\n        this.onAddFolder.emit();\r\n    }\r\n\r\n    editFolder(folder: FolderView) {\r\n        this.onEditFolder.emit(folder);\r\n    }\r\n\r\n    selectCollection(collection: CollectionView) {\r\n        this.clearSelections();\r\n        this.selectedCollectionId = collection.id;\r\n        this.onCollectionClicked.emit(collection);\r\n    }\r\n\r\n    clearSelections() {\r\n        this.selectedAll = false;\r\n        this.selectedFavorites = false;\r\n        this.selectedTrash = false;\r\n        this.selectedType = null;\r\n        this.selectedFolder = false;\r\n        this.selectedFolderId = null;\r\n        this.selectedCollectionId = null;\r\n    }\r\n\r\n    collapse(grouping: FolderView | CollectionView, idPrefix = '') {\r\n        if (grouping.id == null) {\r\n            return;\r\n        }\r\n        const id = idPrefix + grouping.id;\r\n        if (this.isCollapsed(grouping, idPrefix)) {\r\n            this.collapsedGroupings.delete(id);\r\n        } else {\r\n            this.collapsedGroupings.add(id);\r\n        }\r\n        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);\r\n    }\r\n\r\n    isCollapsed(grouping: FolderView | CollectionView, idPrefix = '') {\r\n        return this.collapsedGroupings.has(idPrefix + grouping.id);\r\n    }\r\n}\r\n","import { SendType } from '../../enums/sendType';\r\n\r\nimport { SendAccessResponse } from '../response/sendAccessResponse';\r\n\r\nimport { SendAccessView } from '../view/sendAccessView';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\nimport { SendFile } from './sendFile';\r\nimport { SendText } from './sendText';\r\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\r\n\r\nexport class SendAccess extends Domain {\r\n    id: string;\r\n    type: SendType;\r\n    name: CipherString;\r\n    file: SendFile;\r\n    text: SendText;\r\n\r\n    constructor(obj?: SendAccessResponse, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            id: null,\r\n            name: null,\r\n        }, alreadyEncrypted, ['id']);\r\n\r\n        this.type = obj.type;\r\n\r\n        switch (this.type) {\r\n            case SendType.Text:\r\n                this.text = new SendText(obj.text, alreadyEncrypted);\r\n                break;\r\n            case SendType.File:\r\n                this.file = new SendFile(obj.file, alreadyEncrypted);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\r\n        const model = new SendAccessView(this);\r\n\r\n        await this.decryptObj(model, {\r\n            name: null,\r\n        }, null, key);\r\n\r\n        switch (this.type) {\r\n            case SendType.File:\r\n                model.file = await this.file.decrypt(key);\r\n                break;\r\n            case SendType.Text:\r\n                model.text = await this.text.decrypt(key);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return model;\r\n    }\r\n}\r\n","import { SendType } from '../../enums/sendType';\r\n\r\nimport { SendAccess } from '../domain/sendAccess';\r\n\r\nimport { SendFileView } from './sendFileView';\r\nimport { SendTextView } from './sendTextView';\r\nimport { View } from './view';\r\n\r\nexport class SendAccessView implements View {\r\n    id: string = null;\r\n    name: string = null;\r\n    type: SendType = null;\r\n    text = new SendTextView();\r\n    file = new SendFileView();\r\n\r\n    constructor(s?: SendAccess) {\r\n        if (!s) {\r\n            return;\r\n        }\r\n\r\n        this.id = s.id;\r\n        this.type = s.type;\r\n    }\r\n}\r\n","export class SendAccessRequest {\r\n    password: string;\r\n}\r\n","export class UpdateProfileRequest {\r\n    name: string;\r\n    masterPasswordHint: string;\r\n    culture = 'en-US'; // deprecated\r\n\r\n    constructor(name: string, masterPasswordHint: string) {\r\n        this.name = name;\r\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\r\n    }\r\n}\r\n","import { EmailTokenRequest } from './emailTokenRequest';\r\n\r\nexport class EmailRequest extends EmailTokenRequest {\r\n    newMasterPasswordHash: string;\r\n    token: string;\r\n    key: string;\r\n}\r\n","import { PasswordRequest } from './passwordRequest';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class KdfRequest extends PasswordRequest {\r\n    kdf: KdfType;\r\n    kdfIterations: number;\r\n}\r\n","export class UpdateDomainsRequest {\r\n    equivalentDomains: string[][];\r\n    excludedGlobalEquivalentDomains: number[];\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\nimport { PasswordGeneratorPolicyOptions } from '../../models/domain/passwordGeneratorPolicyOptions';\r\n\r\n@Directive()\r\nexport class PasswordGeneratorComponent implements OnInit {\r\n    @Input() showSelect: boolean = false;\r\n    @Output() onSelected = new EventEmitter<string>();\r\n\r\n    options: any = {};\r\n    password: string = '-';\r\n    showOptions = false;\r\n    avoidAmbiguous = false;\r\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\r\n\r\n    constructor(protected passwordGenerationService: PasswordGenerationService,\r\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\r\n        private win: Window) { }\r\n\r\n    async ngOnInit() {\r\n        const optionsResponse = await this.passwordGenerationService.getOptions();\r\n        this.options = optionsResponse[0];\r\n        this.enforcedPolicyOptions = optionsResponse[1];\r\n        this.avoidAmbiguous = !this.options.ambiguous;\r\n        this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';\r\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\r\n        this.platformUtilsService.eventTrack('Generated Password');\r\n        await this.passwordGenerationService.addHistory(this.password);\r\n    }\r\n\r\n    async sliderChanged() {\r\n        this.saveOptions(false);\r\n        await this.passwordGenerationService.addHistory(this.password);\r\n        this.platformUtilsService.eventTrack('Regenerated Password');\r\n    }\r\n\r\n    async sliderInput() {\r\n        this.normalizeOptions();\r\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\r\n    }\r\n\r\n    async saveOptions(regenerate: boolean = true) {\r\n        this.normalizeOptions();\r\n        await this.passwordGenerationService.saveOptions(this.options);\r\n\r\n        if (regenerate) {\r\n            await this.regenerate();\r\n        }\r\n    }\r\n\r\n    async regenerate() {\r\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\r\n        await this.passwordGenerationService.addHistory(this.password);\r\n        this.platformUtilsService.eventTrack('Regenerated Password');\r\n    }\r\n\r\n    copy() {\r\n        this.platformUtilsService.eventTrack('Copied Generated Password');\r\n        const copyOptions = this.win != null ? { window: this.win } : null;\r\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\r\n        this.platformUtilsService.showToast('info', null,\r\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\r\n    }\r\n\r\n    select() {\r\n        this.platformUtilsService.eventTrack('Selected Generated Password');\r\n        this.onSelected.emit(this.password);\r\n    }\r\n\r\n    toggleOptions() {\r\n        this.showOptions = !this.showOptions;\r\n    }\r\n\r\n    private normalizeOptions() {\r\n        // Application level normalize options depedent on class variables\r\n        this.options.ambiguous = !this.avoidAmbiguous;\r\n\r\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\r\n            this.options.lowercase = true;\r\n            if (this.win != null) {\r\n                const lowercase = this.win.document.querySelector('#lowercase') as HTMLInputElement;\r\n                if (lowercase) {\r\n                    lowercase.checked = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\r\n    }\r\n}\r\n","import { OnInit } from '@angular/core';\r\n\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\nimport { GeneratedPasswordHistory } from '../../models/domain/generatedPasswordHistory';\r\n\r\nexport class PasswordGeneratorHistoryComponent implements OnInit {\r\n    history: GeneratedPasswordHistory[] = [];\r\n\r\n    constructor(protected passwordGenerationService: PasswordGenerationService,\r\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\r\n        private win: Window) { }\r\n\r\n    async ngOnInit() {\r\n        this.history = await this.passwordGenerationService.getHistory();\r\n    }\r\n\r\n    clear() {\r\n        this.history = [];\r\n        this.passwordGenerationService.clear();\r\n    }\r\n\r\n    copy(password: string) {\r\n        this.platformUtilsService.eventTrack('Copied Historical Password');\r\n        const copyOptions = this.win != null ? { window: this.win } : null;\r\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\r\n        this.platformUtilsService.showToast('info', null,\r\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { FolderService } from '../../abstractions/folder.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\n\r\nimport { FolderView } from '../../models/view/folderView';\r\n\r\n@Directive()\r\nexport class FolderAddEditComponent implements OnInit {\r\n    @Input() folderId: string;\r\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\r\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\r\n\r\n    editMode: boolean = false;\r\n    folder: FolderView = new FolderView();\r\n    title: string;\r\n    formPromise: Promise<any>;\r\n    deletePromise: Promise<any>;\r\n\r\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\r\n        protected platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async ngOnInit() {\r\n        await this.init();\r\n    }\r\n\r\n    async submit(): Promise<boolean> {\r\n        if (this.folder.name == null || this.folder.name === '') {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('nameRequired'));\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const folder = await this.folderService.encrypt(this.folder);\r\n            this.formPromise = this.folderService.saveWithServer(folder);\r\n            await this.formPromise;\r\n            this.platformUtilsService.eventTrack(this.editMode ? 'Edited Folder' : 'Added Folder');\r\n            this.platformUtilsService.showToast('success', null,\r\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\r\n            this.onSavedFolder.emit(this.folder);\r\n            return true;\r\n        } catch { }\r\n\r\n        return false;\r\n    }\r\n\r\n    async delete(): Promise<boolean> {\r\n        const confirmed = await this.platformUtilsService.showDialog(\r\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\r\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\r\n        if (!confirmed) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\r\n            await this.deletePromise;\r\n            this.platformUtilsService.eventTrack('Deleted Folder');\r\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));\r\n            this.onDeletedFolder.emit(this.folder);\r\n        } catch { }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected async init() {\r\n        this.editMode = this.folderId != null;\r\n\r\n        if (this.editMode) {\r\n            this.editMode = true;\r\n            this.title = this.i18nService.t('editFolder');\r\n            const folder = await this.folderService.get(this.folderId);\r\n            this.folder = await folder.decrypt();\r\n        } else {\r\n            this.title = this.i18nService.t('addFolder');\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\n\r\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\r\n\r\nimport { CipherService } from '../../abstractions/cipher.service';\r\nimport { CollectionService } from '../../abstractions/collection.service';\r\nimport { I18nService } from '../../abstractions/i18n.service';\r\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\r\nimport { UserService } from '../../abstractions/user.service';\r\n\r\nimport { Organization } from '../../models/domain/organization';\r\nimport { CipherView } from '../../models/view/cipherView';\r\nimport { CollectionView } from '../../models/view/collectionView';\r\n\r\nimport { Utils } from '../../misc/utils';\r\n\r\n@Directive()\r\nexport class ShareComponent implements OnInit {\r\n    @Input() cipherId: string;\r\n    @Input() organizationId: string;\r\n    @Output() onSharedCipher = new EventEmitter();\r\n\r\n    formPromise: Promise<any>;\r\n    cipher: CipherView;\r\n    collections: CollectionView[] = [];\r\n    organizations: Organization[] = [];\r\n\r\n    protected writeableCollections: CollectionView[] = [];\r\n\r\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\r\n        protected i18nService: I18nService, protected userService: UserService,\r\n        protected cipherService: CipherService) { }\r\n\r\n    async ngOnInit() {\r\n        await this.load();\r\n    }\r\n\r\n    async load() {\r\n        const allCollections = await this.collectionService.getAllDecrypted();\r\n        this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\r\n        const orgs = await this.userService.getAllOrganizations();\r\n        this.organizations = orgs.sort(Utils.getSortFunction(this.i18nService, 'name'))\r\n            .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\r\n\r\n        const cipherDomain = await this.cipherService.get(this.cipherId);\r\n        this.cipher = await cipherDomain.decrypt();\r\n        if (this.organizationId == null && this.organizations.length > 0) {\r\n            this.organizationId = this.organizations[0].id;\r\n        }\r\n        this.filterCollections();\r\n    }\r\n\r\n    filterCollections() {\r\n        this.writeableCollections.forEach((c) => (c as any).checked = false);\r\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\r\n            this.collections = [];\r\n        } else {\r\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\r\n        }\r\n    }\r\n\r\n    async submit(): Promise<boolean> {\r\n        const selectedCollectionIds = this.collections\r\n            .filter((c) => !!(c as any).checked)\r\n            .map((c) => c.id);\r\n        if (selectedCollectionIds.length === 0) {\r\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\r\n                this.i18nService.t('selectOneCollection'));\r\n            return;\r\n        }\r\n\r\n        const cipherDomain = await this.cipherService.get(this.cipherId);\r\n        const cipherView = await cipherDomain.decrypt();\r\n\r\n        try {\r\n            this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId,\r\n                selectedCollectionIds).then(async () => {\r\n                    this.onSharedCipher.emit();\r\n                    this.platformUtilsService.eventTrack('Shared Cipher');\r\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('sharedItem'));\r\n                });\r\n            await this.formPromise;\r\n            return true;\r\n        } catch { }\r\n        return false;\r\n    }\r\n\r\n    get canSave() {\r\n        if (this.collections != null) {\r\n            for (let i = 0; i < this.collections.length; i++) {\r\n                if ((this.collections[i] as any).checked) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import {\r\n    APP_INITIALIZER,\r\n    LOCALE_ID,\r\n    NgModule,\r\n} from '@angular/core';\r\n\r\nimport { ToasterModule } from 'angular2-toaster';\r\n\r\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\r\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\r\nimport { I18nService } from '../../services/i18n.service';\r\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\r\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\r\n\r\nimport { EventService } from './event.service';\r\nimport { OrganizationGuardService } from './organization-guard.service';\r\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\r\nimport { RouterService } from './router.service';\r\nimport { UnauthGuardService } from './unauth-guard.service';\r\n\r\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\r\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\r\nimport { ValidationService } from 'jslib/angular/services/validation.service';\r\n\r\nimport { Analytics } from 'jslib/misc/analytics';\r\n\r\nimport { ApiService } from 'jslib/services/api.service';\r\nimport { AppIdService } from 'jslib/services/appId.service';\r\nimport { AuditService } from 'jslib/services/audit.service';\r\nimport { AuthService } from 'jslib/services/auth.service';\r\nimport { CipherService } from 'jslib/services/cipher.service';\r\nimport { CollectionService } from 'jslib/services/collection.service';\r\nimport { ConstantsService } from 'jslib/services/constants.service';\r\nimport { ContainerService } from 'jslib/services/container.service';\r\nimport { CryptoService } from 'jslib/services/crypto.service';\r\nimport { EnvironmentService } from 'jslib/services/environment.service';\r\nimport { EventService as EventLoggingService } from 'jslib/services/event.service';\r\nimport { ExportService } from 'jslib/services/export.service';\r\nimport { FolderService } from 'jslib/services/folder.service';\r\nimport { ImportService } from 'jslib/services/import.service';\r\nimport { NotificationsService } from 'jslib/services/notifications.service';\r\nimport { PasswordGenerationService } from 'jslib/services/passwordGeneration.service';\r\nimport { PolicyService } from 'jslib/services/policy.service';\r\nimport { SearchService } from 'jslib/services/search.service';\r\nimport { SendService } from 'jslib/services/send.service';\r\nimport { SettingsService } from 'jslib/services/settings.service';\r\nimport { StateService } from 'jslib/services/state.service';\r\nimport { SyncService } from 'jslib/services/sync.service';\r\nimport { TokenService } from 'jslib/services/token.service';\r\nimport { TotpService } from 'jslib/services/totp.service';\r\nimport { UserService } from 'jslib/services/user.service';\r\nimport { VaultTimeoutService } from 'jslib/services/vaultTimeout.service';\r\nimport { WebCryptoFunctionService } from 'jslib/services/webCryptoFunction.service';\r\n\r\nimport { ApiService as ApiServiceAbstraction } from 'jslib/abstractions/api.service';\r\nimport { AppIdService as AppIdServiceAbstraction } from 'jslib/abstractions/appId.service';\r\nimport { AuditService as AuditServiceAbstraction } from 'jslib/abstractions/audit.service';\r\nimport { AuthService as AuthServiceAbstraction } from 'jslib/abstractions/auth.service';\r\nimport { CipherService as CipherServiceAbstraction } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib/abstractions/collection.service';\r\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib/abstractions/crypto.service';\r\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib/abstractions/cryptoFunction.service';\r\nimport { EnvironmentService as EnvironmentServiceAbstraction } from 'jslib/abstractions/environment.service';\r\nimport { EventService as EventLoggingServiceAbstraction } from 'jslib/abstractions/event.service';\r\nimport { ExportService as ExportServiceAbstraction } from 'jslib/abstractions/export.service';\r\nimport { FolderService as FolderServiceAbstraction } from 'jslib/abstractions/folder.service';\r\nimport { I18nService as I18nServiceAbstraction } from 'jslib/abstractions/i18n.service';\r\nimport { ImportService as ImportServiceAbstraction } from 'jslib/abstractions/import.service';\r\nimport { LogService as LogServiceAbstraction } from 'jslib/abstractions/log.service';\r\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib/abstractions/messaging.service';\r\nimport { NotificationsService as NotificationsServiceAbstraction } from 'jslib/abstractions/notifications.service';\r\nimport {\r\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\r\n} from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib/abstractions/platformUtils.service';\r\nimport { PolicyService as PolicyServiceAbstraction } from 'jslib/abstractions/policy.service';\r\nimport { SearchService as SearchServiceAbstraction } from 'jslib/abstractions/search.service';\r\nimport { SendService as SendServiceAbstraction } from 'jslib/abstractions/send.service';\r\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib/abstractions/settings.service';\r\nimport { StateService as StateServiceAbstraction } from 'jslib/abstractions/state.service';\r\nimport { StorageService as StorageServiceAbstraction } from 'jslib/abstractions/storage.service';\r\nimport { SyncService as SyncServiceAbstraction } from 'jslib/abstractions/sync.service';\r\nimport { TokenService as TokenServiceAbstraction } from 'jslib/abstractions/token.service';\r\nimport { TotpService as TotpServiceAbstraction } from 'jslib/abstractions/totp.service';\r\nimport { UserService as UserServiceAbstraction } from 'jslib/abstractions/user.service';\r\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from 'jslib/abstractions/vaultTimeout.service';\r\n\r\nconst i18nService = new I18nService(window.navigator.language, 'locales');\r\nconst stateService = new StateService();\r\nconst broadcasterService = new BroadcasterService();\r\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\r\nconst platformUtilsService = new WebPlatformUtilsService(i18nService, messagingService);\r\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\r\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\r\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\r\n    platformUtilsService);\r\nconst cryptoService = new CryptoService(storageService,\r\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService, platformUtilsService);\r\nconst tokenService = new TokenService(storageService);\r\nconst appIdService = new AppIdService(storageService);\r\nconst apiService = new ApiService(tokenService, platformUtilsService,\r\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\r\nconst userService = new UserService(tokenService, storageService);\r\nconst settingsService = new SettingsService(userService, storageService);\r\nexport let searchService: SearchService = null;\r\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\r\n    apiService, storageService, i18nService, () => searchService);\r\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\r\n    i18nService, cipherService);\r\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\r\nsearchService = new SearchService(cipherService);\r\nconst policyService = new PolicyService(userService, storageService);\r\nconst sendService = new SendService(cryptoService, userService, apiService, storageService,\r\n    i18nService, cryptoFunctionService);\r\nconst vaultTimeoutService = new VaultTimeoutService(cipherService, folderService, collectionService,\r\n    cryptoService, platformUtilsService, storageService, messagingService, searchService, userService, tokenService,\r\n    null, async () => messagingService.send('logout', { expired: false }));\r\nconst syncService = new SyncService(userService, apiService, settingsService,\r\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService, policyService,\r\n    sendService, async (expired: boolean) => messagingService.send('logout', { expired: expired }));\r\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService, policyService);\r\nconst totpService = new TotpService(storageService, cryptoFunctionService);\r\nconst containerService = new ContainerService(cryptoService);\r\nconst authService = new AuthService(cryptoService, apiService,\r\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService, vaultTimeoutService);\r\nconst exportService = new ExportService(folderService, cipherService, apiService);\r\nconst importService = new ImportService(cipherService, folderService, apiService, i18nService, collectionService);\r\nconst notificationsService = new NotificationsService(userService, syncService, appIdService,\r\n    apiService, vaultTimeoutService, async () => messagingService.send('logout', { expired: true }));\r\nconst environmentService = new EnvironmentService(apiService, storageService, notificationsService);\r\nconst auditService = new AuditService(cryptoFunctionService, apiService);\r\nconst eventLoggingService = new EventLoggingService(storageService, apiService, userService, cipherService);\r\n\r\nconst analytics = new Analytics(window, () => platformUtilsService.isDev() || platformUtilsService.isSelfHost(),\r\n    platformUtilsService, storageService, appIdService);\r\ncontainerService.attachToWindow(window);\r\n\r\nexport function initFactory(): Function {\r\n    return async () => {\r\n        await (storageService as HtmlStorageService).init();\r\n        const isDev = platformUtilsService.isDev();\r\n        if (!isDev && platformUtilsService.isSelfHost()) {\r\n            environmentService.baseUrl = window.location.origin;\r\n        } else {\r\n            environmentService.notificationsUrl = isDev ? 'http://localhost:61840' :\r\n                'https://notifications.bitwarden.com'; // window.location.origin + '/notifications';\r\n            environmentService.enterpriseUrl = isDev ? 'http://localhost:52313' :\r\n                'https://portal.bitwarden.com'; // window.location.origin + '/portal';\r\n        }\r\n        apiService.setUrls({\r\n            base: isDev ? null : window.location.origin,\r\n            api: isDev ? 'http://localhost:4000' : null,\r\n            identity: isDev ? 'http://localhost:33656' : null,\r\n            events: isDev ? 'http://localhost:46273' : null,\r\n\r\n            // Uncomment these (and comment out the above) if you want to target production\r\n            // servers for local development.\r\n\r\n            // base: null,\r\n            // api: 'https://api.bitwarden.com',\r\n            // identity: 'https://identity.bitwarden.com',\r\n            // events: 'https://events.bitwarden.com',\r\n        });\r\n        setTimeout(() => notificationsService.init(environmentService), 3000);\r\n\r\n        vaultTimeoutService.init(true);\r\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\r\n        await i18nService.init(locale);\r\n        eventLoggingService.init(true);\r\n        authService.init();\r\n        const htmlEl = window.document.documentElement;\r\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\r\n        let theme = await storageService.get<string>(ConstantsService.themeKey);\r\n        if (theme == null) {\r\n            theme = 'light';\r\n        }\r\n        htmlEl.classList.add('theme_' + theme);\r\n        stateService.save(ConstantsService.disableFaviconKey,\r\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\r\n        stateService.save('enableGravatars', await storageService.get<boolean>('enableGravatars'));\r\n    };\r\n}\r\n\r\n@NgModule({\r\n    imports: [\r\n        ToasterModule,\r\n    ],\r\n    declarations: [],\r\n    providers: [\r\n        ValidationService,\r\n        AuthGuardService,\r\n        OrganizationGuardService,\r\n        OrganizationTypeGuardService,\r\n        UnauthGuardService,\r\n        RouterService,\r\n        EventService,\r\n        { provide: AuditServiceAbstraction, useValue: auditService },\r\n        { provide: AuthServiceAbstraction, useValue: authService },\r\n        { provide: CipherServiceAbstraction, useValue: cipherService },\r\n        { provide: FolderServiceAbstraction, useValue: folderService },\r\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\r\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\r\n        { provide: TotpServiceAbstraction, useValue: totpService },\r\n        { provide: TokenServiceAbstraction, useValue: tokenService },\r\n        { provide: I18nServiceAbstraction, useValue: i18nService },\r\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\r\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\r\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\r\n        { provide: ApiServiceAbstraction, useValue: apiService },\r\n        { provide: SyncServiceAbstraction, useValue: syncService },\r\n        { provide: UserServiceAbstraction, useValue: userService },\r\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\r\n        { provide: BroadcasterService, useValue: broadcasterService },\r\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\r\n        { provide: VaultTimeoutServiceAbstraction, useValue: vaultTimeoutService },\r\n        { provide: StorageServiceAbstraction, useValue: storageService },\r\n        { provide: StateServiceAbstraction, useValue: stateService },\r\n        { provide: ExportServiceAbstraction, useValue: exportService },\r\n        { provide: SearchServiceAbstraction, useValue: searchService },\r\n        { provide: ImportServiceAbstraction, useValue: importService },\r\n        { provide: NotificationsServiceAbstraction, useValue: notificationsService },\r\n        { provide: CryptoFunctionServiceAbstraction, useValue: cryptoFunctionService },\r\n        { provide: EventLoggingServiceAbstraction, useValue: eventLoggingService },\r\n        { provide: PolicyServiceAbstraction, useValue: policyService },\r\n        { provide: SendServiceAbstraction, useValue: sendService },\r\n        {\r\n            provide: APP_INITIALIZER,\r\n            useFactory: initFactory,\r\n            deps: [],\r\n            multi: true,\r\n        },\r\n        {\r\n            provide: LOCALE_ID,\r\n            useFactory: () => i18nService.translationLocale,\r\n            deps: [],\r\n        },\r\n    ],\r\n})\r\nexport class ServicesModule {\r\n}\r\n","import { MessagingService } from 'jslib/abstractions/messaging.service';\r\n\r\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\r\n\r\nexport class BroadcasterMessagingService implements MessagingService {\r\n    constructor(private broadcasterService: BroadcasterService) { }\r\n\r\n    send(subscriber: string, arg: any = {}) {\r\n        const message = Object.assign({}, { command: subscriber }, arg);\r\n        this.broadcasterService.send(message);\r\n    }\r\n}\r\n","import { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\nimport { ConstantsService } from 'jslib/services';\r\n\r\nexport class HtmlStorageService implements StorageService {\r\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\r\n        ConstantsService.disableFaviconKey, 'rememberEmail', 'enableGravatars', 'enableFullWidth',\r\n        ConstantsService.localeKey, ConstantsService.autoConfirmFingerprints,\r\n        ConstantsService.vaultTimeoutKey, ConstantsService.vaultTimeoutActionKey, ConstantsService.ssoCodeVerifierKey,\r\n        ConstantsService.ssoStateKey, 'ssoOrgIdentifier']);\r\n    private localStorageStartsWithKeys = ['twoFactorToken_', ConstantsService.collapsedGroupingsKey + '_'];\r\n    private memoryStorageStartsWithKeys = ['ciphers_', 'folders_', 'collections_', 'settings_', 'lastSync_'];\r\n    private memoryStorage = new Map<string, string>()\r\n\r\n    constructor(private platformUtilsService: PlatformUtilsService) { }\r\n\r\n    async init() {\r\n        // LockOption -> VaultTimeout (uses the same legacy string value for backwards compat)\r\n        const vaultTimeout = await this.get<number>(ConstantsService.vaultTimeoutKey);\r\n        if (vaultTimeout == null && !this.platformUtilsService.isDev()) {\r\n            await this.save(ConstantsService.vaultTimeoutKey, 15);\r\n        }\r\n\r\n        // Default Action to lock\r\n        const vaultTimeoutAction = await this.get<string>(ConstantsService.vaultTimeoutActionKey);\r\n        if (vaultTimeoutAction == null) {\r\n            await this.save(ConstantsService.vaultTimeoutActionKey, 'lock');\r\n        }\r\n    }\r\n\r\n    get<T>(key: string): Promise<T> {\r\n        let json: string = null;\r\n        if (this.isLocalStorage(key)) {\r\n            json = window.localStorage.getItem(key);\r\n        } else if (this.isMemoryStorage(key)) {\r\n            json = this.memoryStorage.get(key);\r\n        } else {\r\n            json = window.sessionStorage.getItem(key);\r\n        }\r\n        if (json != null) {\r\n            const obj = JSON.parse(json);\r\n            return Promise.resolve(obj as T);\r\n        }\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    save(key: string, obj: any): Promise<any> {\r\n        if (obj == null) {\r\n            return this.remove(key);\r\n        }\r\n\r\n        const json = JSON.stringify(obj);\r\n        if (this.isLocalStorage(key)) {\r\n            window.localStorage.setItem(key, json);\r\n        } else if (this.isMemoryStorage(key)) {\r\n            this.memoryStorage.set(key, json);\r\n        } else {\r\n            window.sessionStorage.setItem(key, json);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    remove(key: string): Promise<any> {\r\n        if (this.isLocalStorage(key)) {\r\n            window.localStorage.removeItem(key);\r\n        } else if (this.isMemoryStorage(key)) {\r\n            this.memoryStorage.delete(key);\r\n        } else {\r\n            window.sessionStorage.removeItem(key);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private isLocalStorage(key: string): boolean {\r\n        if (this.localStorageKeys.has(key)) {\r\n            return true;\r\n        }\r\n        for (const swKey of this.localStorageStartsWithKeys) {\r\n            if (key.startsWith(swKey)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private isMemoryStorage(key: string): boolean {\r\n        for (const swKey of this.memoryStorageStartsWithKeys) {\r\n            if (key.startsWith(swKey)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export { ApiService } from './api.service';\r\nexport { AppIdService } from './appId.service';\r\nexport { AuditService } from './audit.service';\r\nexport { AuthService } from './auth.service';\r\nexport { CipherService } from './cipher.service';\r\nexport { CollectionService } from './collection.service';\r\nexport { ConstantsService } from './constants.service';\r\nexport { ContainerService } from './container.service';\r\nexport { CryptoService } from './crypto.service';\r\nexport { EnvironmentService } from './environment.service';\r\nexport { FolderService } from './folder.service';\r\nexport { I18nService } from './i18n.service';\r\nexport { PasswordGenerationService } from './passwordGeneration.service';\r\nexport { SettingsService } from './settings.service';\r\nexport { StateService } from './state.service';\r\nexport { SyncService } from './sync.service';\r\nexport { TokenService } from './token.service';\r\nexport { TotpService } from './totp.service';\r\nexport { UserService } from './user.service';\r\nexport { VaultTimeoutService } from './vaultTimeout.service';\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class ApiKeyResponse extends BaseResponse {\r\n    apiKey: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.apiKey = this.getResponseProperty('ApiKey');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { PaymentMethodType } from '../../enums/paymentMethodType';\r\nimport { TransactionType } from '../../enums/transactionType';\r\n\r\nexport class BillingResponse extends BaseResponse {\r\n    balance: number;\r\n    paymentSource: BillingSourceResponse;\r\n    invoices: BillingInvoiceResponse[] = [];\r\n    transactions: BillingTransactionResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.balance = this.getResponseProperty('Balance');\r\n        const paymentSource = this.getResponseProperty('PaymentSource');\r\n        const transactions = this.getResponseProperty('Transactions');\r\n        const invoices = this.getResponseProperty('Invoices');\r\n        this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\r\n        if (transactions != null) {\r\n            this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\r\n        }\r\n        if (invoices != null) {\r\n            this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\r\n        }\r\n    }\r\n}\r\n\r\nexport class BillingSourceResponse extends BaseResponse {\r\n    type: PaymentMethodType;\r\n    cardBrand: string;\r\n    description: string;\r\n    needsVerification: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.type = this.getResponseProperty('Type');\r\n        this.cardBrand = this.getResponseProperty('CardBrand');\r\n        this.description = this.getResponseProperty('Description');\r\n        this.needsVerification = this.getResponseProperty('NeedsVerification');\r\n    }\r\n}\r\n\r\nexport class BillingInvoiceResponse extends BaseResponse {\r\n    url: string;\r\n    pdfUrl: string;\r\n    number: string;\r\n    paid: boolean;\r\n    date: string;\r\n    amount: number;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.url = this.getResponseProperty('Url');\r\n        this.pdfUrl = this.getResponseProperty('PdfUrl');\r\n        this.number = this.getResponseProperty('Number');\r\n        this.paid = this.getResponseProperty('Paid');\r\n        this.date = this.getResponseProperty('Date');\r\n        this.amount = this.getResponseProperty('Amount');\r\n    }\r\n}\r\n\r\nexport class BillingTransactionResponse extends BaseResponse {\r\n    createdDate: string;\r\n    amount: number;\r\n    refunded: boolean;\r\n    partiallyRefunded: boolean;\r\n    refundedAmount: number;\r\n    type: TransactionType;\r\n    paymentMethodType: PaymentMethodType;\r\n    details: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.createdDate = this.getResponseProperty('CreatedDate');\r\n        this.amount = this.getResponseProperty('Amount');\r\n        this.refunded = this.getResponseProperty('Refunded');\r\n        this.partiallyRefunded = this.getResponseProperty('PartiallyRefunded');\r\n        this.refundedAmount = this.getResponseProperty('RefundedAmount');\r\n        this.type = this.getResponseProperty('Type');\r\n        this.paymentMethodType = this.getResponseProperty('PaymentMethodType');\r\n        this.details = this.getResponseProperty('Details');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class BreachAccountResponse extends BaseResponse {\r\n    addedDate: string;\r\n    breachDate: string;\r\n    dataClasses: string[];\r\n    description: string;\r\n    domain: string;\r\n    isActive: boolean;\r\n    isVerified: boolean;\r\n    logoPath: string;\r\n    modifiedDate: string;\r\n    name: string;\r\n    pwnCount: number;\r\n    title: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.addedDate = this.getResponseProperty('AddedDate');\r\n        this.breachDate = this.getResponseProperty('BreachDate');\r\n        this.dataClasses = this.getResponseProperty('DataClasses');\r\n        this.description = this.getResponseProperty('Description');\r\n        this.domain = this.getResponseProperty('Domain');\r\n        this.isActive = this.getResponseProperty('IsActive');\r\n        this.isVerified = this.getResponseProperty('IsVerified');\r\n        this.logoPath = this.getResponseProperty('LogoPath');\r\n        this.modifiedDate = this.getResponseProperty('ModifiedDate');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.pwnCount = this.getResponseProperty('PwnCount');\r\n        this.title = this.getResponseProperty('Title');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class AttachmentResponse extends BaseResponse {\r\n    id: string;\r\n    url: string;\r\n    fileName: string;\r\n    key: string;\r\n    size: string;\r\n    sizeName: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.url = this.getResponseProperty('Url');\r\n        this.fileName = this.getResponseProperty('FileName');\r\n        this.key = this.getResponseProperty('Key');\r\n        this.size = this.getResponseProperty('Size');\r\n        this.sizeName = this.getResponseProperty('SizeName');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class PasswordHistoryResponse extends BaseResponse {\r\n    password: string;\r\n    lastUsedDate: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.password = this.getResponseProperty('Password');\r\n        this.lastUsedDate = this.getResponseProperty('LastUsedDate');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class GlobalDomainResponse extends BaseResponse {\r\n    type: number;\r\n    domains: string[];\r\n    excluded: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.type = this.getResponseProperty('Type');\r\n        this.domains = this.getResponseProperty('Domains');\r\n        this.excluded = this.getResponseProperty('Excluded');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { DeviceType } from '../../enums/deviceType';\r\nimport { EventType } from '../../enums/eventType';\r\n\r\nexport class EventResponse extends BaseResponse {\r\n    type: EventType;\r\n    userId: string;\r\n    organizationId: string;\r\n    cipherId: string;\r\n    collectionId: string;\r\n    groupId: string;\r\n    organizationUserId: string;\r\n    actingUserId: string;\r\n    date: string;\r\n    deviceType: DeviceType;\r\n    ipAddress: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.type = this.getResponseProperty('Type');\r\n        this.userId = this.getResponseProperty('UserId');\r\n        this.organizationId = this.getResponseProperty('OrganizationId');\r\n        this.cipherId = this.getResponseProperty('CipherId');\r\n        this.collectionId = this.getResponseProperty('CollectionId');\r\n        this.groupId = this.getResponseProperty('GroupId');\r\n        this.organizationUserId = this.getResponseProperty('OrganizationUserId');\r\n        this.actingUserId = this.getResponseProperty('ActingUserId');\r\n        this.date = this.getResponseProperty('Date');\r\n        this.deviceType = this.getResponseProperty('DeviceType');\r\n        this.ipAddress = this.getResponseProperty('IpAddress');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\r\n\r\nexport class GroupResponse extends BaseResponse {\r\n    id: string;\r\n    organizationId: string;\r\n    name: string;\r\n    accessAll: boolean;\r\n    externalId: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.organizationId = this.getResponseProperty('OrganizationId');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.accessAll = this.getResponseProperty('AccessAll');\r\n        this.externalId = this.getResponseProperty('ExternalId');\r\n    }\r\n}\r\n\r\nexport class GroupDetailsResponse extends GroupResponse {\r\n    collections: SelectionReadOnlyResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        const collections = this.getResponseProperty('Collections');\r\n        if (collections != null) {\r\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class IdentityTokenResponse extends BaseResponse {\r\n    accessToken: string;\r\n    expiresIn: number;\r\n    refreshToken: string;\r\n    tokenType: string;\r\n\r\n    resetMasterPassword: boolean;\r\n    privateKey: string;\r\n    key: string;\r\n    twoFactorToken: string;\r\n    kdf: KdfType;\r\n    kdfIterations: number;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.accessToken = response.access_token;\r\n        this.expiresIn = response.expires_in;\r\n        this.refreshToken = response.refresh_token;\r\n        this.tokenType = response.token_type;\r\n\r\n        this.resetMasterPassword = this.getResponseProperty('ResetMasterPassword');\r\n        this.privateKey = this.getResponseProperty('PrivateKey');\r\n        this.key = this.getResponseProperty('Key');\r\n        this.twoFactorToken = this.getResponseProperty('TwoFactorToken');\r\n        this.kdf = this.getResponseProperty('Kdf');\r\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\r\n\r\nexport class IdentityTwoFactorResponse extends BaseResponse {\r\n    twoFactorProviders: TwoFactorProviderType[];\r\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.twoFactorProviders = this.getResponseProperty('TwoFactorProviders');\r\n        const twoFactorProviders2 = this.getResponseProperty('TwoFactorProviders2');\r\n        if (twoFactorProviders2 != null) {\r\n            for (const prop in twoFactorProviders2) {\r\n                if (twoFactorProviders2.hasOwnProperty(prop)) {\r\n                    this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class ListResponse<T> extends BaseResponse {\r\n    data: T[];\r\n    continuationToken: string;\r\n\r\n    constructor(response: any, t: new (dataResponse: any) => T) {\r\n        super(response);\r\n        const data = this.getResponseProperty('Data');\r\n        this.data = data == null ? [] : data.map((dr: any) => new t(dr));\r\n        this.continuationToken = this.getResponseProperty('ContinuationToken');\r\n    }\r\n}\r\n","import { OrganizationResponse } from './organizationResponse';\r\nimport {\r\n    BillingSubscriptionResponse,\r\n    BillingSubscriptionUpcomingInvoiceResponse,\r\n} from './subscriptionResponse';\r\n\r\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\r\n    storageName: string;\r\n    storageGb: number;\r\n    subscription: BillingSubscriptionResponse;\r\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\r\n    expiration: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.storageName = this.getResponseProperty('StorageName');\r\n        this.storageGb = this.getResponseProperty('StorageGb');\r\n        const subscription = this.getResponseProperty('Subscription');\r\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\r\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\r\n        this.upcomingInvoice = upcomingInvoice == null ? null :\r\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\r\n        this.expiration = this.getResponseProperty('Expiration');\r\n    }\r\n}\r\n","import { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\r\nimport { OrganizationUserType } from '../../enums/organizationUserType';\r\n\r\nimport { BaseResponse } from './baseResponse';\r\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\r\n\r\nexport class OrganizationUserResponse extends BaseResponse {\r\n    id: string;\r\n    userId: string;\r\n    type: OrganizationUserType;\r\n    status: OrganizationUserStatusType;\r\n    accessAll: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.userId = this.getResponseProperty('UserId');\r\n        this.type = this.getResponseProperty('Type');\r\n        this.status = this.getResponseProperty('Status');\r\n        this.accessAll = this.getResponseProperty('AccessAll');\r\n    }\r\n}\r\n\r\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\r\n    name: string;\r\n    email: string;\r\n    twoFactorEnabled: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.name = this.getResponseProperty('Name');\r\n        this.email = this.getResponseProperty('Email');\r\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\r\n    }\r\n}\r\n\r\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\r\n    collections: SelectionReadOnlyResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        const collections = this.getResponseProperty('Collections');\r\n        if (collections != null) {\r\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\nimport { ProfileResponse } from './profileResponse';\r\n\r\nexport class PaymentResponse extends BaseResponse {\r\n    userProfile: ProfileResponse;\r\n    paymentIntentClientSecret: string;\r\n    success: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        const userProfile = this.getResponseProperty('UserProfile');\r\n        if (userProfile != null) {\r\n            this.userProfile = new ProfileResponse(userProfile);\r\n        }\r\n        this.paymentIntentClientSecret = this.getResponseProperty('PaymentIntentClientSecret');\r\n        this.success = this.getResponseProperty('Success');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\r\nimport { OrganizationUserType } from '../../enums/organizationUserType';\r\n\r\nexport class ProfileOrganizationResponse extends BaseResponse {\r\n    id: string;\r\n    name: string;\r\n    usePolicies: boolean;\r\n    useGroups: boolean;\r\n    useDirectory: boolean;\r\n    useEvents: boolean;\r\n    useTotp: boolean;\r\n    use2fa: boolean;\r\n    useApi: boolean;\r\n    useBusinessPortal: boolean;\r\n    useSso: boolean;\r\n    selfHost: boolean;\r\n    usersGetPremium: boolean;\r\n    seats: number;\r\n    maxCollections: number;\r\n    maxStorageGb?: number;\r\n    key: string;\r\n    status: OrganizationUserStatusType;\r\n    type: OrganizationUserType;\r\n    enabled: boolean;\r\n    ssoBound: boolean;\r\n    identifier: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.name = this.getResponseProperty('Name');\r\n        this.usePolicies = this.getResponseProperty('UsePolicies');\r\n        this.useGroups = this.getResponseProperty('UseGroups');\r\n        this.useDirectory = this.getResponseProperty('UseDirectory');\r\n        this.useEvents = this.getResponseProperty('UseEvents');\r\n        this.useTotp = this.getResponseProperty('UseTotp');\r\n        this.use2fa = this.getResponseProperty('Use2fa');\r\n        this.useApi = this.getResponseProperty('UseApi');\r\n        this.useBusinessPortal = this.getResponseProperty('UseBusinessPortal');\r\n        this.useSso = this.getResponseProperty('UseSso');\r\n        this.selfHost = this.getResponseProperty('SelfHost');\r\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\r\n        this.seats = this.getResponseProperty('Seats');\r\n        this.maxCollections = this.getResponseProperty('MaxCollections');\r\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\r\n        this.key = this.getResponseProperty('Key');\r\n        this.status = this.getResponseProperty('Status');\r\n        this.type = this.getResponseProperty('Type');\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n        this.ssoBound = this.getResponseProperty('SsoBound');\r\n        this.identifier = this.getResponseProperty('Identifier');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { KdfType } from '../../enums/kdfType';\r\n\r\nexport class PreloginResponse extends BaseResponse {\r\n    kdf: KdfType;\r\n    kdfIterations: number;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.kdf = this.getResponseProperty('Kdf');\r\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { SendType } from '../../enums/sendType';\r\n\r\nimport { SendFileApi } from '../api/sendFileApi';\r\nimport { SendTextApi } from '../api/sendTextApi';\r\n\r\nexport class SendAccessResponse extends BaseResponse {\r\n    id: string;\r\n    type: SendType;\r\n    name: string;\r\n    file: SendFileApi;\r\n    text: SendTextApi;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.type = this.getResponseProperty('Type');\r\n        this.name = this.getResponseProperty('Name');\r\n\r\n        const text = this.getResponseProperty('Text');\r\n        if (text != null) {\r\n            this.text = new SendTextApi(text);\r\n        }\r\n\r\n        const file = this.getResponseProperty('File');\r\n        if (file != null) {\r\n            this.file = new SendFileApi(file);\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\nimport { CipherResponse } from './cipherResponse';\r\nimport { CollectionDetailsResponse } from './collectionResponse';\r\nimport { DomainsResponse } from './domainsResponse';\r\nimport { FolderResponse } from './folderResponse';\r\nimport { PolicyResponse } from './policyResponse';\r\nimport { ProfileResponse } from './profileResponse';\r\nimport { SendResponse } from './sendResponse';\r\n\r\nexport class SyncResponse extends BaseResponse {\r\n    profile?: ProfileResponse;\r\n    folders: FolderResponse[] = [];\r\n    collections: CollectionDetailsResponse[] = [];\r\n    ciphers: CipherResponse[] = [];\r\n    domains?: DomainsResponse;\r\n    policies?: PolicyResponse[] = [];\r\n    sends: SendResponse[] = [];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n\r\n        const profile = this.getResponseProperty('Profile');\r\n        if (profile != null) {\r\n            this.profile = new ProfileResponse(profile);\r\n        }\r\n\r\n        const folders = this.getResponseProperty('Folders');\r\n        if (folders != null) {\r\n            this.folders = folders.map((f: any) => new FolderResponse(f));\r\n        }\r\n\r\n        const collections = this.getResponseProperty('Collections');\r\n        if (collections != null) {\r\n            this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\r\n        }\r\n\r\n        const ciphers = this.getResponseProperty('Ciphers');\r\n        if (ciphers != null) {\r\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\r\n        }\r\n\r\n        const domains = this.getResponseProperty('Domains');\r\n        if (domains != null) {\r\n            this.domains = new DomainsResponse(domains);\r\n        }\r\n\r\n        const policies = this.getResponseProperty('Policies');\r\n        if (policies != null) {\r\n            this.policies = policies.map((p: any) => new PolicyResponse(p));\r\n        }\r\n\r\n        const sends = this.getResponseProperty('Sends');\r\n        if (sends != null) {\r\n            this.sends = sends.map((s: any) => new SendResponse(s));\r\n        }\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class TaxInfoResponse extends BaseResponse {\r\n    taxId: string;\r\n    taxIdType: string;\r\n    line1: string;\r\n    line2: string;\r\n    city: string;\r\n    state: string;\r\n    country: string;\r\n    postalCode: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.taxId = this.getResponseProperty('TaxIdNumber');\r\n        this.taxIdType = this.getResponseProperty('TaxIdType');\r\n        this.line1 = this.getResponseProperty('Line1');\r\n        this.line2 = this.getResponseProperty('Line2');\r\n        this.city = this.getResponseProperty('City');\r\n        this.state = this.getResponseProperty('State');\r\n        this.postalCode = this.getResponseProperty('PostalCode');\r\n        this.country = this.getResponseProperty('Country');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\r\n    enabled: boolean;\r\n    key: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n        this.key = this.getResponseProperty('Key');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class TwoFactorDuoResponse extends BaseResponse {\r\n    enabled: boolean;\r\n    host: string;\r\n    secretKey: string;\r\n    integrationKey: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n        this.host = this.getResponseProperty('Host');\r\n        this.secretKey = this.getResponseProperty('SecretKey');\r\n        this.integrationKey = this.getResponseProperty('IntegrationKey');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class TwoFactorEmailResponse extends BaseResponse {\r\n    enabled: boolean;\r\n    email: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n        this.email = this.getResponseProperty('Email');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\r\n\r\nexport class TwoFactorProviderResponse extends BaseResponse {\r\n    enabled: boolean;\r\n    type: TwoFactorProviderType;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n        this.type = this.getResponseProperty('Type');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class TwoFactorRecoverResponse extends BaseResponse {\r\n    code: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.code = this.getResponseProperty('Code');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class TwoFactorU2fResponse extends BaseResponse {\r\n    enabled: boolean;\r\n    keys: KeyResponse[];\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n        const keys = this.getResponseProperty('Keys');\r\n        this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\r\n    }\r\n}\r\n\r\nexport class KeyResponse extends BaseResponse {\r\n    name: string;\r\n    id: number;\r\n    compromised: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.name = this.getResponseProperty('Name');\r\n        this.id = this.getResponseProperty('Id');\r\n        this.compromised = this.getResponseProperty('Compromised');\r\n    }\r\n}\r\n\r\nexport class ChallengeResponse extends BaseResponse {\r\n    userId: string;\r\n    appId: string;\r\n    challenge: string;\r\n    version: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.userId = this.getResponseProperty('UserId');\r\n        this.appId = this.getResponseProperty('AppId');\r\n        this.challenge = this.getResponseProperty('Challenge');\r\n        this.version = this.getResponseProperty('Version');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\r\n    enabled: boolean;\r\n    key1: string;\r\n    key2: string;\r\n    key3: string;\r\n    key4: string;\r\n    key5: string;\r\n    nfc: boolean;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.enabled = this.getResponseProperty('Enabled');\r\n        this.key1 = this.getResponseProperty('Key1');\r\n        this.key2 = this.getResponseProperty('Key2');\r\n        this.key3 = this.getResponseProperty('Key3');\r\n        this.key4 = this.getResponseProperty('Key4');\r\n        this.key5 = this.getResponseProperty('Key5');\r\n        this.nfc = this.getResponseProperty('Nfc');\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nexport class UserKeyResponse extends BaseResponse {\r\n    userId: string;\r\n    publicKey: string;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.userId = this.getResponseProperty('UserId');\r\n        this.publicKey = this.getResponseProperty('PublicKey');\r\n    }\r\n}\r\n","/**\r\n * Use as a Decorator on async functions, it will limit how many times the function can be\r\n * in-flight at a time.\r\n *\r\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\r\n */\r\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\r\n    return <T>(target: any, propertyKey: string | symbol,\r\n        descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>) => {\r\n        const originalMethod: () => Promise<T> = descriptor.value;\r\n        const allThrottles = new Map<any, Map<string, (() => void)[]>>();\r\n\r\n        const getThrottles = (obj: any) => {\r\n            let throttles = allThrottles.get(obj);\r\n            if (throttles != null) {\r\n                return throttles;\r\n            }\r\n            throttles = new Map<string, (() => void)[]>();\r\n            allThrottles.set(obj, throttles);\r\n            return throttles;\r\n        };\r\n\r\n        return {\r\n            value: function(...args: any[]) {\r\n                const throttles = getThrottles(this);\r\n                const argsThrottleKey = throttleKey(args);\r\n                let queue = throttles.get(argsThrottleKey);\r\n                if (queue == null) {\r\n                    queue = [];\r\n                    throttles.set(argsThrottleKey, queue);\r\n                }\r\n\r\n                return new Promise<T>((resolve, reject) => {\r\n                    const exec = () => {\r\n                        const onFinally = () => {\r\n                            queue.splice(queue.indexOf(exec), 1);\r\n                            if (queue.length >= limit) {\r\n                                queue[limit - 1]();\r\n                            } else if (queue.length === 0) {\r\n                                throttles.delete(argsThrottleKey);\r\n                                if (throttles.size === 0) {\r\n                                    allThrottles.delete(this);\r\n                                }\r\n                            }\r\n                        };\r\n                        originalMethod.apply(this, args).then((val: any) => {\r\n                            onFinally();\r\n                            return val;\r\n                        }).catch((err: any) => {\r\n                            onFinally();\r\n                            throw err;\r\n                        }).then(resolve, reject);\r\n                    };\r\n                    queue.push(exec);\r\n                    if (queue.length <= limit) {\r\n                        exec();\r\n                    }\r\n                });\r\n            },\r\n        };\r\n    };\r\n}\r\n","export class CipherBulkMoveRequest {\r\n    ids: string[];\r\n    folderId: string;\r\n\r\n    constructor(ids: string[], folderId: string) {\r\n        this.ids = ids == null ? [] : ids;\r\n        this.folderId = folderId;\r\n    }\r\n}\r\n","export class CipherBulkRestoreRequest {\r\n    ids: string[];\r\n\r\n    constructor(ids: string[]) {\r\n        this.ids = ids == null ? [] : ids;\r\n    }\r\n}\r\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\r\n\r\nimport { Cipher } from '../domain/cipher';\r\n\r\nexport class CipherBulkShareRequest {\r\n    ciphers: CipherWithIdRequest[];\r\n    collectionIds: string[];\r\n\r\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\r\n        if (ciphers != null) {\r\n            this.ciphers = [];\r\n            ciphers.forEach((c) => {\r\n                this.ciphers.push(new CipherWithIdRequest(c));\r\n            });\r\n        }\r\n        this.collectionIds = collectionIds;\r\n    }\r\n}\r\n","import { CipherRequest } from './cipherRequest';\r\n\r\nimport { Cipher } from '../domain/cipher';\r\n\r\nexport class CipherShareRequest {\r\n    cipher: CipherRequest;\r\n    collectionIds: string[];\r\n\r\n    constructor(cipher: Cipher) {\r\n        this.cipher = new CipherRequest(cipher);\r\n        this.collectionIds = cipher.collectionIds;\r\n    }\r\n}\r\n","import { CipherView } from '../view';\r\n\r\nconst CacheTTL = 3000;\r\n\r\nexport class SortedCiphersCache {\r\n    private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\r\n    private readonly timeouts: Map<string, any> = new Map<string, any>();\r\n\r\n    constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) { }\r\n\r\n    isCached(url: string) {\r\n        return this.sortedCiphersByUrl.has(url);\r\n    }\r\n\r\n    addCiphers(url: string, ciphers: CipherView[]) {\r\n        ciphers.sort(this.comparator);\r\n        this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\r\n        this.resetTimer(url);\r\n    }\r\n\r\n    getLastUsed(url: string) {\r\n        this.resetTimer(url);\r\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\r\n    }\r\n\r\n    getLastLaunched(url: string) {\r\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\r\n    }\r\n\r\n    getNext(url: string) {\r\n        this.resetTimer(url);\r\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\r\n    }\r\n\r\n    updateLastUsedIndex(url: string) {\r\n        if (this.isCached(url)) {\r\n            this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.sortedCiphersByUrl.clear();\r\n        this.timeouts.clear();\r\n    }\r\n\r\n    private resetTimer(url: string) {\r\n        clearTimeout(this.timeouts.get(url));\r\n        this.timeouts.set(url, setTimeout(() => {\r\n            this.sortedCiphersByUrl.delete(url);\r\n            this.timeouts.delete(url);\r\n        }, CacheTTL));\r\n    }\r\n}\r\n\r\nclass Ciphers {\r\n    lastUsedIndex = -1;\r\n\r\n    constructor(private readonly ciphers: CipherView[]) { }\r\n\r\n    getLastUsed() {\r\n        this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\r\n        return this.ciphers[this.lastUsedIndex];\r\n    }\r\n\r\n    getLastLaunched() {\r\n        const usedCiphers = this.ciphers.filter(cipher => cipher.localData?.lastLaunched);\r\n        const sortedCiphers = usedCiphers.sort((x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf());\r\n        return sortedCiphers[0];\r\n    }\r\n\r\n    getNextIndex() {\r\n        return (this.lastUsedIndex + 1) % this.ciphers.length;\r\n    }\r\n\r\n    getNext() {\r\n        return this.ciphers[this.getNextIndex()];\r\n    }\r\n\r\n    updateLastUsedIndex() {\r\n        this.lastUsedIndex = this.getNextIndex();\r\n    }\r\n}\r\n","export class TreeNode<T extends ITreeNodeObject> {\r\n    parent: T;\r\n    node: T;\r\n    children: TreeNode<T>[] = [];\r\n\r\n    constructor(node: T, name: string, parent: T) {\r\n        this.parent = parent;\r\n        this.node = node;\r\n        this.node.name = name;\r\n    }\r\n}\r\n\r\nexport interface ITreeNodeObject {\r\n    id: string;\r\n    name: string;\r\n}\r\n","import { SymmetricCryptoKey } from './symmetricCryptoKey';\r\n\r\nexport class EncryptedObject {\r\n    iv: ArrayBuffer;\r\n    data: ArrayBuffer;\r\n    mac: ArrayBuffer;\r\n    key: SymmetricCryptoKey;\r\n}\r\n","export class EnvironmentUrls {\r\n    base: string;\r\n    api: string;\r\n    identity: string;\r\n    events: string;\r\n}\r\n","import { FolderData } from '../data/folderData';\r\n\r\nimport { FolderView } from '../view/folderView';\r\n\r\nimport { CipherString } from './cipherString';\r\nimport Domain from './domainBase';\r\n\r\nexport class Folder extends Domain {\r\n    id: string;\r\n    name: CipherString;\r\n    revisionDate: Date;\r\n\r\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\r\n        super();\r\n        if (obj == null) {\r\n            return;\r\n        }\r\n\r\n        this.buildDomainModel(this, obj, {\r\n            id: null,\r\n            name: null,\r\n        }, alreadyEncrypted, ['id']);\r\n\r\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\r\n    }\r\n\r\n    decrypt(): Promise<FolderView> {\r\n        return this.decryptObj(new FolderView(this), {\r\n            name: null,\r\n        }, null);\r\n    }\r\n}\r\n","export class GeneratedPasswordHistory {\r\n    password: string;\r\n    date: number;\r\n\r\n    constructor(password: string, date: number) {\r\n        this.password = password;\r\n        this.date = date;\r\n    }\r\n}\r\n","import Domain from './domainBase';\r\n\r\nexport class PasswordGeneratorPolicyOptions extends Domain {\r\n    defaultType: string = '';\r\n    minLength: number = 0;\r\n    useUppercase: boolean = false;\r\n    useLowercase: boolean = false;\r\n    useNumbers: boolean = false;\r\n    numberCount: number = 0;\r\n    useSpecial: boolean = false;\r\n    specialCount: number = 0;\r\n    minNumberWords: number = 0;\r\n    capitalize: boolean = false;\r\n    includeNumber: boolean = false;\r\n\r\n    inEffect() {\r\n        return this.defaultType !== '' ||\r\n            this.minLength > 0 ||\r\n            this.numberCount > 0 ||\r\n            this.specialCount > 0 ||\r\n            this.useUppercase ||\r\n            this.useLowercase ||\r\n            this.useNumbers ||\r\n            this.useSpecial ||\r\n            this.minNumberWords > 0 ||\r\n            this.capitalize ||\r\n            this.includeNumber;\r\n    }\r\n}\r\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\r\n\r\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\r\nimport { OrganizationUserType } from '../../enums/organizationUserType';\r\n\r\nexport class OrganizationData {\r\n    id: string;\r\n    name: string;\r\n    status: OrganizationUserStatusType;\r\n    type: OrganizationUserType;\r\n    enabled: boolean;\r\n    usePolicies: boolean;\r\n    useGroups: boolean;\r\n    useDirectory: boolean;\r\n    useEvents: boolean;\r\n    useTotp: boolean;\r\n    use2fa: boolean;\r\n    useApi: boolean;\r\n    useBusinessPortal: boolean;\r\n    useSso: boolean;\r\n    selfHost: boolean;\r\n    usersGetPremium: boolean;\r\n    seats: number;\r\n    maxCollections: number;\r\n    maxStorageGb?: number;\r\n    ssoBound: boolean;\r\n    identifier: string;\r\n\r\n    constructor(response: ProfileOrganizationResponse) {\r\n        this.id = response.id;\r\n        this.name = response.name;\r\n        this.status = response.status;\r\n        this.type = response.type;\r\n        this.enabled = response.enabled;\r\n        this.usePolicies = response.usePolicies;\r\n        this.useGroups = response.useGroups;\r\n        this.useDirectory = response.useDirectory;\r\n        this.useEvents = response.useEvents;\r\n        this.useTotp = response.useTotp;\r\n        this.use2fa = response.use2fa;\r\n        this.useApi = response.useApi;\r\n        this.useBusinessPortal = response.useBusinessPortal;\r\n        this.useSso = response.useSso;\r\n        this.selfHost = response.selfHost;\r\n        this.usersGetPremium = response.usersGetPremium;\r\n        this.seats = response.seats;\r\n        this.maxCollections = response.maxCollections;\r\n        this.maxStorageGb = response.maxStorageGb;\r\n        this.ssoBound = response.ssoBound;\r\n        this.identifier = response.identifier;\r\n    }\r\n}\r\n","import { I18nService as BaseI18nService } from 'jslib/services/i18n.service';\r\n\r\nexport class I18nService extends BaseI18nService {\r\n    constructor(systemLanguage: string, localesDirectory: string) {\r\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\r\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\r\n                process.env.CACHE_TAG;\r\n            const localesResult = await fetch(filePath);\r\n            const locales = await localesResult.json();\r\n            return locales;\r\n        });\r\n\r\n        this.supportedTranslationLocales = [\r\n            'en', 'ca', 'cs', 'da', 'de', 'el', 'en-GB', 'es', 'et', 'fr', 'he', 'it', 'ja', 'ko', 'lv', 'ml', 'nb',\r\n            'nl', 'pl', 'pt-PT', 'pt-BR', 'ru', 'sk', 'sv', 'uk', 'zh-CN', 'zh-TW',\r\n        ];\r\n    }\r\n}\r\n","import { StorageService } from 'jslib/abstractions/storage.service';\r\n\r\nexport class MemoryStorageService implements StorageService {\r\n    private store = new Map<string, any>();\r\n\r\n    get<T>(key: string): Promise<T> {\r\n        if (this.store.has(key)) {\r\n            const obj = this.store.get(key);\r\n            return Promise.resolve(obj as T);\r\n        }\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    save(key: string, obj: any): Promise<any> {\r\n        if (obj == null) {\r\n            return this.remove(key);\r\n        }\r\n        this.store.set(key, obj);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    remove(key: string): Promise<any> {\r\n        this.store.delete(key);\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","import Swal, { SweetAlertIcon } from 'sweetalert2/dist/sweetalert2.js';\r\n\r\nimport { DeviceType } from 'jslib/enums/deviceType';\r\n\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\n\r\nimport { Utils } from 'jslib/misc/utils';\r\n\r\nexport class WebPlatformUtilsService implements PlatformUtilsService {\r\n    identityClientId: string = 'web';\r\n\r\n    private browserCache: DeviceType = null;\r\n\r\n    constructor(private i18nService: I18nService, private messagingService: MessagingService) { }\r\n\r\n    getDevice(): DeviceType {\r\n        if (this.browserCache != null) {\r\n            return this.browserCache;\r\n        }\r\n\r\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\r\n            this.browserCache = DeviceType.FirefoxBrowser;\r\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\r\n            this.browserCache = DeviceType.OperaBrowser;\r\n        } else if (navigator.userAgent.indexOf(' Edg/') !== -1) {\r\n            this.browserCache = DeviceType.EdgeBrowser;\r\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\r\n            this.browserCache = DeviceType.VivaldiBrowser;\r\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\r\n            this.browserCache = DeviceType.SafariBrowser;\r\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\r\n            this.browserCache = DeviceType.ChromeBrowser;\r\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\r\n            this.browserCache = DeviceType.IEBrowser;\r\n        } else {\r\n            this.browserCache = DeviceType.UnknownBrowser;\r\n        }\r\n\r\n        return this.browserCache;\r\n    }\r\n\r\n    getDeviceString(): string {\r\n        const device = DeviceType[this.getDevice()].toLowerCase();\r\n        return device.replace('browser', '');\r\n    }\r\n\r\n    isFirefox(): boolean {\r\n        return this.getDevice() === DeviceType.FirefoxBrowser;\r\n    }\r\n\r\n    isChrome(): boolean {\r\n        return this.getDevice() === DeviceType.ChromeBrowser;\r\n    }\r\n\r\n    isEdge(): boolean {\r\n        return this.getDevice() === DeviceType.EdgeBrowser;\r\n    }\r\n\r\n    isOpera(): boolean {\r\n        return this.getDevice() === DeviceType.OperaBrowser;\r\n    }\r\n\r\n    isVivaldi(): boolean {\r\n        return this.getDevice() === DeviceType.VivaldiBrowser;\r\n    }\r\n\r\n    isSafari(): boolean {\r\n        return this.getDevice() === DeviceType.SafariBrowser;\r\n    }\r\n\r\n    isIE(): boolean {\r\n        return this.getDevice() === DeviceType.IEBrowser;\r\n    }\r\n\r\n    isMacAppStore(): boolean {\r\n        return false;\r\n    }\r\n\r\n    analyticsId(): string {\r\n        return 'UA-81915606-3';\r\n    }\r\n\r\n    isViewOpen(): Promise<boolean> {\r\n        return Promise.resolve(false);\r\n    }\r\n\r\n    lockTimeout(): number {\r\n        return null;\r\n    }\r\n\r\n    launchUri(uri: string, options?: any): void {\r\n        const a = document.createElement('a');\r\n        a.href = uri;\r\n        if (options == null || !options.sameWindow) {\r\n            a.target = '_blank';\r\n            a.rel = 'noreferrer noopener';\r\n        }\r\n        a.classList.add('d-none');\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    }\r\n\r\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\r\n        let blob: Blob = null;\r\n        let type: string = null;\r\n        const fileNameLower = fileName.toLowerCase();\r\n        let doDownload = true;\r\n        if (fileNameLower.endsWith('.pdf')) {\r\n            type = 'application/pdf';\r\n            doDownload = false;\r\n        } else if (fileNameLower.endsWith('.xlsx')) {\r\n            type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n        } else if (fileNameLower.endsWith('.docx')) {\r\n            type = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\r\n        } else if (fileNameLower.endsWith('.pptx')) {\r\n            type = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\r\n        } else if (fileNameLower.endsWith('.csv')) {\r\n            type = 'text/csv';\r\n        } else if (fileNameLower.endsWith('.png')) {\r\n            type = 'image/png';\r\n        } else if (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg')) {\r\n            type = 'image/jpeg';\r\n        } else if (fileNameLower.endsWith('.gif')) {\r\n            type = 'image/gif';\r\n        }\r\n        if (type != null) {\r\n            blobOptions = blobOptions || {};\r\n            if (blobOptions.type == null) {\r\n                blobOptions.type = type;\r\n            }\r\n        }\r\n        if (blobOptions != null && !this.isIE()) {\r\n            blob = new Blob([blobData], blobOptions);\r\n        } else {\r\n            blob = new Blob([blobData]);\r\n        }\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            navigator.msSaveBlob(blob, fileName);\r\n        } else {\r\n            const a = win.document.createElement('a');\r\n            if (doDownload) {\r\n                a.download = fileName;\r\n            } else {\r\n                a.target = '_blank';\r\n            }\r\n            a.href = URL.createObjectURL(blob);\r\n            a.style.position = 'fixed';\r\n            win.document.body.appendChild(a);\r\n            a.click();\r\n            win.document.body.removeChild(a);\r\n        }\r\n    }\r\n\r\n    getApplicationVersion(): string {\r\n        return process.env.APPLICATION_VERSION || '-';\r\n    }\r\n\r\n    supportsU2f(win: Window): boolean {\r\n        if (win != null && (win as any).u2f != null) {\r\n            return true;\r\n        }\r\n        return this.isChrome() || ((this.isOpera() || this.isVivaldi()) && !Utils.isMobileBrowser);\r\n    }\r\n\r\n    supportsDuo(): boolean {\r\n        return true;\r\n    }\r\n\r\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\r\n        options?: any): void {\r\n        this.messagingService.send('showToast', {\r\n            text: text,\r\n            title: title,\r\n            type: type,\r\n            options: options,\r\n        });\r\n    }\r\n\r\n    async showDialog(text: string, title?: string, confirmText?: string, cancelText?: string, type?: string) {\r\n        let iconClasses: string = null;\r\n        if (type != null) {\r\n            // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\r\n            switch (type) {\r\n                case 'success':\r\n                    iconClasses = 'fa-check text-success';\r\n                    break;\r\n                case 'warning':\r\n                    iconClasses = 'fa-warning text-warning';\r\n                    break;\r\n                case 'error':\r\n                    iconClasses = 'fa-bolt text-danger';\r\n                    break;\r\n                case 'info':\r\n                    iconClasses = 'fa-info-circle text-info';\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const iconHtmlStr = iconClasses != null ? `<i class=\"swal-custom-icon fa ${iconClasses}\"></i>` : undefined;\r\n        const confirmed = await Swal.fire({\r\n            heightAuto: false,\r\n            buttonsStyling: false,\r\n            icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\r\n            iconHtml: iconHtmlStr,\r\n            text: text,\r\n            title: title,\r\n            showCancelButton: (cancelText != null),\r\n            cancelButtonText: cancelText,\r\n            showConfirmButton: true,\r\n            confirmButtonText: confirmText == null ? this.i18nService.t('ok') : confirmText,\r\n        });\r\n\r\n        return confirmed.value;\r\n    }\r\n\r\n    eventTrack(action: string, label?: string, options?: any) {\r\n        this.messagingService.send('analyticsEventTrack', {\r\n            action: action,\r\n            label: label,\r\n            options: options,\r\n        });\r\n    }\r\n\r\n    isDev(): boolean {\r\n        return process.env.ENV === 'development';\r\n    }\r\n\r\n    isSelfHost(): boolean {\r\n        return process.env.SELF_HOST.toString() === 'true';\r\n    }\r\n\r\n    copyToClipboard(text: string, options?: any): void {\r\n        let win = window;\r\n        let doc = window.document;\r\n        if (options && (options.window || options.win)) {\r\n            win = options.window || options.win;\r\n            doc = win.document;\r\n        } else if (options && options.doc) {\r\n            doc = options.doc;\r\n        }\r\n        if ((win as any).clipboardData && (win as any).clipboardData.setData) {\r\n            // IE specific code path to prevent textarea being shown while dialog is visible.\r\n            (win as any).clipboardData.setData('Text', text);\r\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\r\n            const textarea = doc.createElement('textarea');\r\n            textarea.textContent = text;\r\n            // Prevent scrolling to bottom of page in MS Edge.\r\n            textarea.style.position = 'fixed';\r\n            let copyEl = doc.body;\r\n            // For some reason copy command won't work when modal is open if appending to body\r\n            if (doc.body.classList.contains('modal-open')) {\r\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\r\n            }\r\n            copyEl.appendChild(textarea);\r\n            textarea.select();\r\n            try {\r\n                // Security exception may be thrown by some browsers.\r\n                doc.execCommand('copy');\r\n            } catch (e) {\r\n                // tslint:disable-next-line\r\n                console.warn('Copy to clipboard failed.', e);\r\n            } finally {\r\n                copyEl.removeChild(textarea);\r\n            }\r\n        }\r\n    }\r\n\r\n    readFromClipboard(options?: any): Promise<string> {\r\n        throw new Error('Cannot read from clipboard on web.');\r\n    }\r\n\r\n    supportsBiometric() {\r\n        return Promise.resolve(false);\r\n    }\r\n\r\n    authenticateBiometric() {\r\n        return Promise.resolve(false);\r\n    }\r\n\r\n    supportsSecureStorage() {\r\n        return false;\r\n    }\r\n}\r\n","import { AppIdService } from '../abstractions/appId.service';\r\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\n\r\nimport { ConstantsService } from '../services/constants.service';\r\n\r\nimport { DeviceType } from '../enums/deviceType';\r\n\r\nconst GaObj = 'ga';\r\n\r\nexport const AnalyticsIds = {\r\n    [DeviceType.ChromeExtension]: 'UA-81915606-6',\r\n    [DeviceType.FirefoxExtension]: 'UA-81915606-7',\r\n    [DeviceType.OperaExtension]: 'UA-81915606-8',\r\n    [DeviceType.EdgeExtension]: 'UA-81915606-9',\r\n    [DeviceType.VivaldiExtension]: 'UA-81915606-15',\r\n    [DeviceType.SafariExtension]: 'UA-81915606-16',\r\n    [DeviceType.WindowsDesktop]: 'UA-81915606-17',\r\n    [DeviceType.LinuxDesktop]: 'UA-81915606-19',\r\n    [DeviceType.MacOsDesktop]: 'UA-81915606-18',\r\n};\r\n\r\nexport class Analytics {\r\n    private gaTrackingId: string = null;\r\n    private defaultDisabled = false;\r\n    private appVersion: string;\r\n\r\n    constructor(win: Window, private gaFilter?: () => boolean,\r\n        private platformUtilsService?: PlatformUtilsService, private storageService?: StorageService,\r\n        private appIdService?: AppIdService, private dependencyResolver?: () => any) {\r\n        if (dependencyResolver != null) {\r\n            const deps = dependencyResolver();\r\n            if (platformUtilsService == null && deps.platformUtilsService) {\r\n                this.platformUtilsService = deps.platformUtilsService as PlatformUtilsService;\r\n            }\r\n            if (storageService == null && deps.storageService) {\r\n                this.storageService = deps.storageService as StorageService;\r\n            }\r\n            if (appIdService == null && deps.appIdService) {\r\n                this.appIdService = deps.appIdService as AppIdService;\r\n            }\r\n        }\r\n\r\n        this.appVersion = this.platformUtilsService.getApplicationVersion();\r\n        this.defaultDisabled = this.platformUtilsService.getDevice() === DeviceType.FirefoxExtension ||\r\n            this.platformUtilsService.isMacAppStore();\r\n        this.gaTrackingId = this.platformUtilsService.analyticsId();\r\n\r\n        (win as any).GoogleAnalyticsObject = GaObj;\r\n        (win as any)[GaObj] = async (action: string, param1: any, param2?: any) => {\r\n            await this.ga(action, param1, param2);\r\n        };\r\n    }\r\n\r\n    async ga(action: string, param1: any, param2?: any) {\r\n        return;\r\n\r\n        if (this.gaFilter != null && this.gaFilter()) {\r\n            return;\r\n        }\r\n\r\n        const disabled = await this.storageService.get<boolean>(ConstantsService.disableGaKey);\r\n        if ((this.defaultDisabled && disabled == null) || disabled != null && disabled) {\r\n            return;\r\n        }\r\n\r\n        if (action !== 'send' || !param1) {\r\n            return;\r\n        }\r\n\r\n        const gaAnonAppId = await this.appIdService.getAnonymousAppId();\r\n        const version = encodeURIComponent(this.appVersion);\r\n        let message = 'v=1&tid=' + this.gaTrackingId + '&cid=' + gaAnonAppId + '&cd1=' + version;\r\n\r\n        if (param1 === 'pageview' && param2) {\r\n            message += this.gaTrackPageView(param2);\r\n        } else if (typeof param1 === 'object' && param1.hitType === 'pageview') {\r\n            message += this.gaTrackPageView(param1.page);\r\n        } else if (param1 === 'event' && param2) {\r\n            message += this.gaTrackEvent(param2);\r\n        } else if (typeof param1 === 'object' && param1.hitType === 'event') {\r\n            message += this.gaTrackEvent(param1);\r\n        }\r\n\r\n        const request = new XMLHttpRequest();\r\n        request.open('POST', 'https://www.google-analytics.com/collect', true);\r\n        request.send(message);\r\n    }\r\n\r\n    private gaTrackEvent(options: any) {\r\n        return '&t=event&ec=' + (options.eventCategory ? encodeURIComponent(options.eventCategory) : 'Event') +\r\n            '&ea=' + encodeURIComponent(options.eventAction) +\r\n            (options.eventLabel ? '&el=' + encodeURIComponent(options.eventLabel) : '') +\r\n            (options.eventValue ? '&ev=' + encodeURIComponent(options.eventValue) : '') +\r\n            (options.page ? '&dp=' + this.cleanPagePath(options.page) : '');\r\n    }\r\n\r\n    private gaTrackPageView(pagePath: string) {\r\n        return '&t=pageview&dp=' + this.cleanPagePath(pagePath);\r\n    }\r\n\r\n    private cleanPagePath(pagePath: string) {\r\n        const paramIndex = pagePath.indexOf('?');\r\n        if (paramIndex > -1) {\r\n            pagePath = pagePath.substring(0, paramIndex);\r\n        }\r\n        if (pagePath.indexOf('!/') === 0 || pagePath.indexOf('#/') === 0) {\r\n            pagePath = pagePath.substring(1);\r\n        }\r\n        const pathParts = pagePath.split('/');\r\n        const newPathParts: string[] = [];\r\n        pathParts.forEach((p) => {\r\n            if (p.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)) {\r\n                newPathParts.push('__guid__');\r\n            } else {\r\n                newPathParts.push(p);\r\n            }\r\n        });\r\n        return encodeURIComponent(newPathParts.join('/'));\r\n    }\r\n}\r\n","import { EventType } from '../enums/eventType';\r\n\r\nimport { EventData } from '../models/data/eventData';\r\n\r\nimport { EventRequest } from '../models/request/eventRequest';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { CipherService } from '../abstractions/cipher.service';\r\nimport { EventService as EventServiceAbstraction } from '../abstractions/event.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { UserService } from '../abstractions/user.service';\r\n\r\nimport { ConstantsService } from './constants.service';\r\n\r\nexport class EventService implements EventServiceAbstraction {\r\n    private inited = false;\r\n\r\n    constructor(private storageService: StorageService, private apiService: ApiService,\r\n        private userService: UserService, private cipherService: CipherService) { }\r\n\r\n    init(checkOnInterval: boolean) {\r\n        if (this.inited) {\r\n            return;\r\n        }\r\n\r\n        this.inited = true;\r\n        if (checkOnInterval) {\r\n            this.uploadEvents();\r\n            setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\r\n        }\r\n    }\r\n\r\n    async collect(eventType: EventType, cipherId: string = null, uploadImmediately = false): Promise<any> {\r\n        const authed = await this.userService.isAuthenticated();\r\n        if (!authed) {\r\n            return;\r\n        }\r\n        const organizations = await this.userService.getAllOrganizations();\r\n        if (organizations == null) {\r\n            return;\r\n        }\r\n        const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\r\n        if (orgIds.size === 0) {\r\n            return;\r\n        }\r\n        if (cipherId != null) {\r\n            const cipher = await this.cipherService.get(cipherId);\r\n            if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\r\n                return;\r\n            }\r\n        }\r\n        let eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\r\n        if (eventCollection == null) {\r\n            eventCollection = [];\r\n        }\r\n        const event = new EventData();\r\n        event.type = eventType;\r\n        event.cipherId = cipherId;\r\n        event.date = new Date().toISOString();\r\n        eventCollection.push(event);\r\n        await this.storageService.save(ConstantsService.eventCollectionKey, eventCollection);\r\n        if (uploadImmediately) {\r\n            await this.uploadEvents();\r\n        }\r\n    }\r\n\r\n    async uploadEvents(): Promise<any> {\r\n        const authed = await this.userService.isAuthenticated();\r\n        if (!authed) {\r\n            return;\r\n        }\r\n        const eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\r\n        if (eventCollection == null || eventCollection.length === 0) {\r\n            return;\r\n        }\r\n        const request = eventCollection.map((e) => {\r\n            const req = new EventRequest();\r\n            req.type = e.type;\r\n            req.cipherId = e.cipherId;\r\n            req.date = e.date;\r\n            return req;\r\n        });\r\n        try {\r\n            await this.apiService.postEventsCollect(request);\r\n            this.clearEvents();\r\n        } catch { }\r\n    }\r\n\r\n    async clearEvents(): Promise<any> {\r\n        await this.storageService.remove(ConstantsService.eventCollectionKey);\r\n    }\r\n}\r\n","import { EventType } from '../../enums/eventType';\r\n\r\nexport class EventData {\r\n    type: EventType;\r\n    cipherId: string;\r\n    date: string;\r\n}\r\n","import { EventType } from '../../enums/eventType';\r\n\r\nexport class EventRequest {\r\n    type: EventType;\r\n    cipherId: string;\r\n    date: string;\r\n}\r\n","import * as papa from 'papaparse';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { CipherService } from '../abstractions/cipher.service';\r\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\r\nimport { FolderService } from '../abstractions/folder.service';\r\n\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { CollectionView } from '../models/view/collectionView';\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nimport { Cipher } from '../models/domain/cipher';\r\nimport { Collection } from '../models/domain/collection';\r\n\r\nimport { CipherData } from '../models/data/cipherData';\r\nimport { CollectionData } from '../models/data/collectionData';\r\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\r\n\r\nimport { CipherWithIds as CipherExport } from '../models/export/cipherWithIds';\r\nimport { CollectionWithId as CollectionExport } from '../models/export/collectionWithId';\r\nimport { FolderWithId as FolderExport } from '../models/export/folderWithId';\r\n\r\nexport class ExportService implements ExportServiceAbstraction {\r\n    constructor(private folderService: FolderService, private cipherService: CipherService,\r\n        private apiService: ApiService) { }\r\n\r\n    async getExport(format: 'csv' | 'json' = 'csv'): Promise<string> {\r\n        let decFolders: FolderView[] = [];\r\n        let decCiphers: CipherView[] = [];\r\n        const promises = [];\r\n\r\n        promises.push(this.folderService.getAllDecrypted().then((folders) => {\r\n            decFolders = folders;\r\n        }));\r\n\r\n        promises.push(this.cipherService.getAllDecrypted().then((ciphers) => {\r\n            decCiphers = ciphers;\r\n        }));\r\n\r\n        await Promise.all(promises);\r\n\r\n        if (format === 'csv') {\r\n            const foldersMap = new Map<string, FolderView>();\r\n            decFolders.forEach((f) => {\r\n                if (f.id != null) {\r\n                    foldersMap.set(f.id, f);\r\n                }\r\n            });\r\n\r\n            const exportCiphers: any[] = [];\r\n            decCiphers.forEach((c) => {\r\n                // only export logins and secure notes\r\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\r\n                    return;\r\n                }\r\n                if (c.organizationId != null) {\r\n                    return;\r\n                }\r\n\r\n                const cipher: any = {};\r\n                cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ?\r\n                    foldersMap.get(c.folderId).name : null;\r\n                cipher.favorite = c.favorite ? 1 : null;\r\n                this.buildCommonCipher(cipher, c);\r\n                exportCiphers.push(cipher);\r\n            });\r\n\r\n            return papa.unparse(exportCiphers);\r\n        } else {\r\n            const jsonDoc: any = {\r\n                folders: [],\r\n                items: [],\r\n            };\r\n\r\n            decFolders.forEach((f) => {\r\n                if (f.id == null) {\r\n                    return;\r\n                }\r\n                const folder = new FolderExport();\r\n                folder.build(f);\r\n                jsonDoc.folders.push(folder);\r\n            });\r\n\r\n            decCiphers.forEach((c) => {\r\n                if (c.organizationId != null) {\r\n                    return;\r\n                }\r\n                const cipher = new CipherExport();\r\n                cipher.build(c);\r\n                cipher.collectionIds = null;\r\n                jsonDoc.items.push(cipher);\r\n            });\r\n\r\n            return JSON.stringify(jsonDoc, null, '  ');\r\n        }\r\n    }\r\n\r\n    async getOrganizationExport(organizationId: string, format: 'csv' | 'json' = 'csv'): Promise<string> {\r\n        const decCollections: CollectionView[] = [];\r\n        const decCiphers: CipherView[] = [];\r\n        const promises = [];\r\n\r\n        promises.push(this.apiService.getCollections(organizationId).then((collections) => {\r\n            const collectionPromises: any = [];\r\n            if (collections != null && collections.data != null && collections.data.length > 0) {\r\n                collections.data.forEach((c) => {\r\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\r\n                    collectionPromises.push(collection.decrypt().then((decCol) => {\r\n                        decCollections.push(decCol);\r\n                    }));\r\n                });\r\n            }\r\n            return Promise.all(collectionPromises);\r\n        }));\r\n\r\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\r\n            const cipherPromises: any = [];\r\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\r\n                ciphers.data.forEach((c) => {\r\n                    const cipher = new Cipher(new CipherData(c));\r\n                    cipherPromises.push(cipher.decrypt().then((decCipher) => {\r\n                        decCiphers.push(decCipher);\r\n                    }));\r\n                });\r\n            }\r\n            return Promise.all(cipherPromises);\r\n        }));\r\n\r\n        await Promise.all(promises);\r\n\r\n        if (format === 'csv') {\r\n            const collectionsMap = new Map<string, CollectionView>();\r\n            decCollections.forEach((c) => {\r\n                collectionsMap.set(c.id, c);\r\n            });\r\n\r\n            const exportCiphers: any[] = [];\r\n            decCiphers.forEach((c) => {\r\n                // only export logins and secure notes\r\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\r\n                    return;\r\n                }\r\n\r\n                const cipher: any = {};\r\n                cipher.collections = [];\r\n                if (c.collectionIds != null) {\r\n                    cipher.collections = c.collectionIds.filter((id) => collectionsMap.has(id))\r\n                        .map((id) => collectionsMap.get(id).name);\r\n                }\r\n                this.buildCommonCipher(cipher, c);\r\n                exportCiphers.push(cipher);\r\n            });\r\n\r\n            return papa.unparse(exportCiphers);\r\n        } else {\r\n            const jsonDoc: any = {\r\n                collections: [],\r\n                items: [],\r\n            };\r\n\r\n            decCollections.forEach((c) => {\r\n                const collection = new CollectionExport();\r\n                collection.build(c);\r\n                jsonDoc.collections.push(collection);\r\n            });\r\n\r\n            decCiphers.forEach((c) => {\r\n                const cipher = new CipherExport();\r\n                cipher.build(c);\r\n                jsonDoc.items.push(cipher);\r\n            });\r\n            return JSON.stringify(jsonDoc, null, '  ');\r\n        }\r\n    }\r\n\r\n    getFileName(prefix: string = null, extension: string = 'csv'): string {\r\n        const now = new Date();\r\n        const dateString =\r\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\r\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\r\n            this.padNumber(now.getSeconds(), 2);\r\n\r\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.' + extension;\r\n    }\r\n\r\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\r\n        const numString = num.toString();\r\n        return numString.length >= width ? numString :\r\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\r\n    }\r\n\r\n    private buildCommonCipher(cipher: any, c: CipherView) {\r\n        cipher.type = null;\r\n        cipher.name = c.name;\r\n        cipher.notes = c.notes;\r\n        cipher.fields = null;\r\n        // Login props\r\n        cipher.login_uri = null;\r\n        cipher.login_username = null;\r\n        cipher.login_password = null;\r\n        cipher.login_totp = null;\r\n\r\n        if (c.fields) {\r\n            c.fields.forEach((f: any) => {\r\n                if (!cipher.fields) {\r\n                    cipher.fields = '';\r\n                } else {\r\n                    cipher.fields += '\\n';\r\n                }\r\n\r\n                cipher.fields += ((f.name || '') + ': ' + f.value);\r\n            });\r\n        }\r\n\r\n        switch (c.type) {\r\n            case CipherType.Login:\r\n                cipher.type = 'login';\r\n                cipher.login_username = c.login.username;\r\n                cipher.login_password = c.login.password;\r\n                cipher.login_totp = c.login.totp;\r\n\r\n                if (c.login.uris) {\r\n                    cipher.login_uri = [];\r\n                    c.login.uris.forEach((u) => {\r\n                        cipher.login_uri.push(u.uri);\r\n                    });\r\n                }\r\n                break;\r\n            case CipherType.SecureNote:\r\n                cipher.type = 'note';\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        return cipher;\r\n    }\r\n}\r\n","import { CipherType } from '../../enums/cipherType';\r\n\r\nimport { CipherView } from '../view/cipherView';\r\n\r\nimport { Card } from './card';\r\nimport { Field } from './field';\r\nimport { Identity } from './identity';\r\nimport { Login } from './login';\r\nimport { SecureNote } from './secureNote';\r\n\r\nexport class Cipher {\r\n    static template(): Cipher {\r\n        const req = new Cipher();\r\n        req.organizationId = null;\r\n        req.folderId = null;\r\n        req.type = CipherType.Login;\r\n        req.name = 'Item name';\r\n        req.notes = 'Some notes about this item.';\r\n        req.favorite = false;\r\n        req.fields = [];\r\n        req.login = null;\r\n        req.secureNote = null;\r\n        req.card = null;\r\n        req.identity = null;\r\n        return req;\r\n    }\r\n\r\n    static toView(req: Cipher, view = new CipherView()) {\r\n        view.type = req.type;\r\n        view.folderId = req.folderId;\r\n        if (view.organizationId == null) {\r\n            view.organizationId = req.organizationId;\r\n        }\r\n        view.name = req.name;\r\n        view.notes = req.notes;\r\n        view.favorite = req.favorite;\r\n\r\n        if (req.fields != null) {\r\n            view.fields = req.fields.map((f) => Field.toView(f));\r\n        }\r\n\r\n        switch (req.type) {\r\n            case CipherType.Login:\r\n                view.login = Login.toView(req.login);\r\n                break;\r\n            case CipherType.SecureNote:\r\n                view.secureNote = SecureNote.toView(req.secureNote);\r\n                break;\r\n            case CipherType.Card:\r\n                view.card = Card.toView(req.card);\r\n                break;\r\n            case CipherType.Identity:\r\n                view.identity = Identity.toView(req.identity);\r\n                break;\r\n        }\r\n\r\n        return view;\r\n    }\r\n\r\n    type: CipherType;\r\n    folderId: string;\r\n    organizationId: string;\r\n    name: string;\r\n    notes: string;\r\n    favorite: boolean;\r\n    fields: Field[];\r\n    login: Login;\r\n    secureNote: SecureNote;\r\n    card: Card;\r\n    identity: Identity;\r\n\r\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\r\n    build(o: CipherView) {\r\n        this.organizationId = o.organizationId;\r\n        this.folderId = o.folderId;\r\n        this.type = o.type;\r\n        this.name = o.name;\r\n        this.notes = o.notes;\r\n        this.favorite = o.favorite;\r\n\r\n        if (o.fields != null) {\r\n            this.fields = o.fields.map((f) => new Field(f));\r\n        }\r\n\r\n        switch (o.type) {\r\n            case CipherType.Login:\r\n                this.login = new Login(o.login);\r\n                break;\r\n            case CipherType.SecureNote:\r\n                this.secureNote = new SecureNote(o.secureNote);\r\n                break;\r\n            case CipherType.Card:\r\n                this.card = new Card(o.card);\r\n                break;\r\n            case CipherType.Identity:\r\n                this.identity = new Identity(o.identity);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import { CardView } from '../view/cardView';\r\n\r\nexport class Card {\r\n    static template(): Card {\r\n        const req = new Card();\r\n        req.cardholderName = 'John Doe';\r\n        req.brand = 'visa';\r\n        req.number = '4242424242424242';\r\n        req.expMonth = '04';\r\n        req.expYear = '2023';\r\n        req.code = '123';\r\n        return req;\r\n    }\r\n\r\n    static toView(req: Card, view = new CardView()) {\r\n        view.cardholderName = req.cardholderName;\r\n        view.brand = req.brand;\r\n        view.number = req.number;\r\n        view.expMonth = req.expMonth;\r\n        view.expYear = req.expYear;\r\n        view.code = req.code;\r\n        return view;\r\n    }\r\n\r\n    cardholderName: string;\r\n    brand: string;\r\n    number: string;\r\n    expMonth: string;\r\n    expYear: string;\r\n    code: string;\r\n\r\n    constructor(o?: CardView) {\r\n        if (o == null) {\r\n            return;\r\n        }\r\n\r\n        this.cardholderName = o.cardholderName;\r\n        this.brand = o.brand;\r\n        this.number = o.number;\r\n        this.expMonth = o.expMonth;\r\n        this.expYear = o.expYear;\r\n        this.code = o.code;\r\n    }\r\n}\r\n","import { FieldType } from '../../enums/fieldType';\r\n\r\nimport { FieldView } from '../view/fieldView';\r\n\r\nexport class Field {\r\n    static template(): Field {\r\n        const req = new Field();\r\n        req.name = 'Field name';\r\n        req.value = 'Some value';\r\n        req.type = FieldType.Text;\r\n        return req;\r\n    }\r\n\r\n    static toView(req: Field, view = new FieldView()) {\r\n        view.type = req.type;\r\n        view.value = req.value;\r\n        view.name = req.name;\r\n        return view;\r\n    }\r\n\r\n    name: string;\r\n    value: string;\r\n    type: FieldType;\r\n\r\n    constructor(o?: FieldView) {\r\n        if (o == null) {\r\n            return;\r\n        }\r\n\r\n        this.name = o.name;\r\n        this.value = o.value;\r\n        this.type = o.type;\r\n    }\r\n}\r\n","import { IdentityView } from '../view/identityView';\r\n\r\nexport class Identity {\r\n    static template(): Identity {\r\n        const req = new Identity();\r\n        req.title = 'Mr';\r\n        req.firstName = 'John';\r\n        req.middleName = 'William';\r\n        req.lastName = 'Doe';\r\n        req.address1 = '123 Any St';\r\n        req.address2 = 'Apt #123';\r\n        req.address3 = null;\r\n        req.city = 'New York';\r\n        req.state = 'NY';\r\n        req.postalCode = '10001';\r\n        req.country = 'US';\r\n        req.company = 'Acme Inc.';\r\n        req.email = 'john@company.com';\r\n        req.phone = '5555551234';\r\n        req.ssn = '000-123-4567';\r\n        req.username = 'jdoe';\r\n        req.passportNumber = 'US-123456789';\r\n        req.licenseNumber = 'D123-12-123-12333';\r\n        return req;\r\n    }\r\n\r\n    static toView(req: Identity, view = new IdentityView()) {\r\n        view.title = req.title;\r\n        view.firstName = req.firstName;\r\n        view.middleName = req.middleName;\r\n        view.lastName = req.lastName;\r\n        view.address1 = req.address1;\r\n        view.address2 = req.address2;\r\n        view.address3 = req.address3;\r\n        view.city = req.city;\r\n        view.state = req.state;\r\n        view.postalCode = req.postalCode;\r\n        view.country = req.country;\r\n        view.company = req.company;\r\n        view.email = req.email;\r\n        view.phone = req.phone;\r\n        view.ssn = req.ssn;\r\n        view.username = req.username;\r\n        view.passportNumber = req.passportNumber;\r\n        view.licenseNumber = req.licenseNumber;\r\n        return view;\r\n    }\r\n\r\n    title: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    address1: string;\r\n    address2: string;\r\n    address3: string;\r\n    city: string;\r\n    state: string;\r\n    postalCode: string;\r\n    country: string;\r\n    company: string;\r\n    email: string;\r\n    phone: string;\r\n    ssn: string;\r\n    username: string;\r\n    passportNumber: string;\r\n    licenseNumber: string;\r\n\r\n    constructor(o?: IdentityView) {\r\n        if (o == null) {\r\n            return;\r\n        }\r\n\r\n        this.title = o.title;\r\n        this.firstName = o.firstName;\r\n        this.middleName = o.middleName;\r\n        this.lastName = o.lastName;\r\n        this.address1 = o.address1;\r\n        this.address2 = o.address2;\r\n        this.address3 = o.address3;\r\n        this.city = o.city;\r\n        this.state = o.state;\r\n        this.postalCode = o.postalCode;\r\n        this.country = o.country;\r\n        this.company = o.company;\r\n        this.email = o.email;\r\n        this.phone = o.phone;\r\n        this.ssn = o.ssn;\r\n        this.username = o.username;\r\n        this.passportNumber = o.passportNumber;\r\n        this.licenseNumber = o.licenseNumber;\r\n    }\r\n}\r\n","import { LoginUri } from './loginUri';\r\n\r\nimport { LoginView } from '../view/loginView';\r\n\r\nexport class Login {\r\n    static template(): Login {\r\n        const req = new Login();\r\n        req.uris = [];\r\n        req.username = 'jdoe';\r\n        req.password = 'myp@ssword123';\r\n        req.totp = 'JBSWY3DPEHPK3PXP';\r\n        return req;\r\n    }\r\n\r\n    static toView(req: Login, view = new LoginView()) {\r\n        if (req.uris != null) {\r\n            view.uris = req.uris.map((u) => LoginUri.toView(u));\r\n        }\r\n        view.username = req.username;\r\n        view.password = req.password;\r\n        view.totp = req.totp;\r\n        return view;\r\n    }\r\n\r\n    uris: LoginUri[];\r\n    username: string;\r\n    password: string;\r\n    totp: string;\r\n\r\n    constructor(o?: LoginView) {\r\n        if (o == null) {\r\n            return;\r\n        }\r\n\r\n        if (o.uris != null) {\r\n            this.uris = o.uris.map((u) => new LoginUri(u));\r\n        }\r\n\r\n        this.username = o.username;\r\n        this.password = o.password;\r\n        this.totp = o.totp;\r\n    }\r\n}\r\n","import { UriMatchType } from '../../enums/uriMatchType';\r\n\r\nimport { LoginUriView } from '../view/loginUriView';\r\n\r\nexport class LoginUri {\r\n    static template(): LoginUri {\r\n        const req = new LoginUri();\r\n        req.uri = 'https://google.com';\r\n        req.match = null;\r\n        return req;\r\n    }\r\n\r\n    static toView(req: LoginUri, view = new LoginUriView()) {\r\n        view.uri = req.uri;\r\n        view.match = req.match;\r\n        return view;\r\n    }\r\n\r\n    uri: string;\r\n    match: UriMatchType = null;\r\n\r\n    constructor(o?: LoginUriView) {\r\n        if (o == null) {\r\n            return;\r\n        }\r\n\r\n        this.uri = o.uri;\r\n        this.match = o.match;\r\n    }\r\n}\r\n","import { SecureNoteType } from '../../enums/secureNoteType';\r\n\r\nimport { SecureNoteView } from '../view/secureNoteView';\r\n\r\nexport class SecureNote {\r\n    static template(): SecureNote {\r\n        const req = new SecureNote();\r\n        req.type = SecureNoteType.Generic;\r\n        return req;\r\n    }\r\n\r\n    static toView(req: SecureNote, view = new SecureNoteView()) {\r\n        view.type = req.type;\r\n        return view;\r\n    }\r\n\r\n    type: SecureNoteType;\r\n\r\n    constructor(o?: SecureNoteView) {\r\n        if (o == null) {\r\n            return;\r\n        }\r\n\r\n        this.type = o.type;\r\n    }\r\n}\r\n","import { CollectionView } from '../view/collectionView';\r\n\r\nexport class Collection {\r\n    static template(): Collection {\r\n        const req = new Collection();\r\n        req.organizationId = '00000000-0000-0000-0000-000000000000';\r\n        req.name = 'Collection name';\r\n        req.externalId = null;\r\n        return req;\r\n    }\r\n\r\n    static toView(req: Collection, view = new CollectionView()) {\r\n        view.name = req.name;\r\n        view.externalId = req.externalId;\r\n        if (view.organizationId == null) {\r\n            view.organizationId = req.organizationId;\r\n        }\r\n        return view;\r\n    }\r\n\r\n    organizationId: string;\r\n    name: string;\r\n    externalId: string;\r\n\r\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\r\n    build(o: CollectionView) {\r\n        this.organizationId = o.organizationId;\r\n        this.name = o.name;\r\n        this.externalId = o.externalId;\r\n    }\r\n}\r\n","import { FolderView } from '../view/folderView';\r\n\r\nexport class Folder {\r\n    static template(): Folder {\r\n        const req = new Folder();\r\n        req.name = 'Folder name';\r\n        return req;\r\n    }\r\n\r\n    static toView(req: Folder, view = new FolderView()) {\r\n        view.name = req.name;\r\n        return view;\r\n    }\r\n\r\n    name: string;\r\n\r\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\r\n    build(o: FolderView) {\r\n        this.name = o.name;\r\n    }\r\n}\r\n","import { ApiService } from '../abstractions/api.service';\r\nimport { CipherService } from '../abstractions/cipher.service';\r\nimport { CollectionService } from '../abstractions/collection.service';\r\nimport { FolderService } from '../abstractions/folder.service';\r\nimport { I18nService } from '../abstractions/i18n.service';\r\nimport {\r\n    ImportOption,\r\n    ImportService as ImportServiceAbstraction,\r\n} from '../abstractions/import.service';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\n\r\nimport { Utils } from '../misc/utils';\r\n\r\nimport { CipherRequest } from '../models/request/cipherRequest';\r\nimport { CollectionRequest } from '../models/request/collectionRequest';\r\nimport { FolderRequest } from '../models/request/folderRequest';\r\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\r\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\r\nimport { KvpRequest } from '../models/request/kvpRequest';\r\n\r\nimport { CipherView } from '../models/view/cipherView';\r\n\r\nimport { AscendoCsvImporter } from '../importers/ascendoCsvImporter';\r\nimport { AvastCsvImporter } from '../importers/avastCsvImporter';\r\nimport { AvastJsonImporter } from '../importers/avastJsonImporter';\r\nimport { AviraCsvImporter } from '../importers/aviraCsvImporter';\r\nimport { BitwardenCsvImporter } from '../importers/bitwardenCsvImporter';\r\nimport { BitwardenJsonImporter } from '../importers/bitwardenJsonImporter';\r\nimport { BlackBerryCsvImporter } from '../importers/blackBerryCsvImporter';\r\nimport { BlurCsvImporter } from '../importers/blurCsvImporter';\r\nimport { ButtercupCsvImporter } from '../importers/buttercupCsvImporter';\r\nimport { ChromeCsvImporter } from '../importers/chromeCsvImporter';\r\nimport { ClipperzHtmlImporter } from '../importers/clipperzHtmlImporter';\r\nimport { CodebookCsvImporter } from '../importers/codebookCsvImporter';\r\nimport { DashlaneJsonImporter } from '../importers/dashlaneJsonImporter';\r\nimport { EncryptrCsvImporter } from '../importers/encryptrCsvImporter';\r\nimport { EnpassCsvImporter } from '../importers/enpassCsvImporter';\r\nimport { EnpassJsonImporter } from '../importers/enpassJsonImporter';\r\nimport { FirefoxCsvImporter } from '../importers/firefoxCsvImporter';\r\nimport { FSecureFskImporter } from '../importers/fsecureFskImporter';\r\nimport { GnomeJsonImporter } from '../importers/gnomeJsonImporter';\r\nimport { Importer } from '../importers/importer';\r\nimport { KasperskyTxtImporter } from '../importers/kasperskyTxtImporter';\r\nimport { KeePass2XmlImporter } from '../importers/keepass2XmlImporter';\r\nimport { KeePassXCsvImporter } from '../importers/keepassxCsvImporter';\r\nimport { KeeperCsvImporter } from '../importers/keeperCsvImporter';\r\nimport { LastPassCsvImporter } from '../importers/lastpassCsvImporter';\r\nimport { LogMeOnceCsvImporter } from '../importers/logMeOnceCsvImporter';\r\nimport { MeldiumCsvImporter } from '../importers/meldiumCsvImporter';\r\nimport { MSecureCsvImporter } from '../importers/msecureCsvImporter';\r\nimport { MykiCsvImporter } from '../importers/mykiCsvImporter';\r\nimport { OnePassword1PifImporter } from '../importers/onepassword1PifImporter';\r\nimport { OnePasswordWinCsvImporter } from '../importers/onepasswordWinCsvImporter';\r\nimport { PadlockCsvImporter } from '../importers/padlockCsvImporter';\r\nimport { PassKeepCsvImporter } from '../importers/passkeepCsvImporter';\r\nimport { PassmanJsonImporter } from '../importers/passmanJsonImporter';\r\nimport { PasspackCsvImporter } from '../importers/passpackCsvImporter';\r\nimport { PasswordAgentCsvImporter } from '../importers/passwordAgentCsvImporter';\r\nimport { PasswordBossJsonImporter } from '../importers/passwordBossJsonImporter';\r\nimport { PasswordDragonXmlImporter } from '../importers/passwordDragonXmlImporter';\r\nimport { PasswordSafeXmlImporter } from '../importers/passwordSafeXmlImporter';\r\nimport { PasswordWalletTxtImporter } from '../importers/passwordWalletTxtImporter';\r\nimport { RememBearCsvImporter } from '../importers/rememBearCsvImporter';\r\nimport { RoboFormCsvImporter } from '../importers/roboformCsvImporter';\r\nimport { SafeInCloudXmlImporter } from '../importers/safeInCloudXmlImporter';\r\nimport { SaferPassCsvImporter } from '../importers/saferpassCsvImport';\r\nimport { SecureSafeCsvImporter } from '../importers/secureSafeCsvImporter';\r\nimport { SplashIdCsvImporter } from '../importers/splashIdCsvImporter';\r\nimport { StickyPasswordXmlImporter } from '../importers/stickyPasswordXmlImporter';\r\nimport { TrueKeyCsvImporter } from '../importers/truekeyCsvImporter';\r\nimport { UpmCsvImporter } from '../importers/upmCsvImporter';\r\nimport { YotiCsvImporter } from '../importers/yotiCsvImporter';\r\nimport { ZohoVaultCsvImporter } from '../importers/zohoVaultCsvImporter';\r\n\r\nexport class ImportService implements ImportServiceAbstraction {\r\n    featuredImportOptions = [\r\n        { id: 'bitwardenjson', name: 'Bitwarden (json)' },\r\n        { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\r\n        { id: 'lastpasscsv', name: 'LastPass (csv)' },\r\n        { id: 'chromecsv', name: 'Chrome (csv)' },\r\n        { id: 'firefoxcsv', name: 'Firefox (csv)' },\r\n        { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\r\n        { id: '1password1pif', name: '1Password (1pif)' },\r\n        { id: 'dashlanejson', name: 'Dashlane (json)' },\r\n    ];\r\n\r\n    regularImportOptions: ImportOption[] = [\r\n        { id: 'keepassxcsv', name: 'KeePassX (csv)' },\r\n        { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\r\n        { id: 'roboformcsv', name: 'RoboForm (csv)' },\r\n        { id: 'keepercsv', name: 'Keeper (csv)' },\r\n        { id: 'enpasscsv', name: 'Enpass (csv)' },\r\n        { id: 'enpassjson', name: 'Enpass (json)' },\r\n        { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\r\n        { id: 'pwsafexml', name: 'Password Safe (xml)' },\r\n        { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\r\n        { id: 'msecurecsv', name: 'mSecure (csv)' },\r\n        { id: 'truekeycsv', name: 'True Key (csv)' },\r\n        { id: 'passwordbossjson', name: 'Password Boss (json)' },\r\n        { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\r\n        { id: 'splashidcsv', name: 'SplashID (csv)' },\r\n        { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\r\n        { id: 'padlockcsv', name: 'Padlock (csv)' },\r\n        { id: 'passboltcsv', name: 'Passbolt (csv)' },\r\n        { id: 'clipperzhtml', name: 'Clipperz (html)' },\r\n        { id: 'aviracsv', name: 'Avira (csv)' },\r\n        { id: 'saferpasscsv', name: 'SaferPass (csv)' },\r\n        { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\r\n        { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\r\n        { id: 'meldiumcsv', name: 'Meldium (csv)' },\r\n        { id: 'passkeepcsv', name: 'PassKeep (csv)' },\r\n        { id: 'operacsv', name: 'Opera (csv)' },\r\n        { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\r\n        { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\r\n        { id: 'blurcsv', name: 'Blur (csv)' },\r\n        { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\r\n        { id: 'passpackcsv', name: 'Passpack (csv)' },\r\n        { id: 'passmanjson', name: 'Passman (json)' },\r\n        { id: 'avastcsv', name: 'Avast Passwords (csv)' },\r\n        { id: 'avastjson', name: 'Avast Passwords (json)' },\r\n        { id: 'fsecurefsk', name: 'F-Secure KEY (fsk)' },\r\n        { id: 'kasperskytxt', name: 'Kaspersky Password Manager (txt)' },\r\n        { id: 'remembearcsv', name: 'RememBear (csv)' },\r\n        { id: 'passwordwallettxt', name: 'PasswordWallet (txt)' },\r\n        { id: 'mykicsv', name: 'Myki (csv)' },\r\n        { id: 'securesafecsv', name: 'SecureSafe (csv)' },\r\n        { id: 'logmeoncecsv', name: 'LogMeOnce (csv)' },\r\n        { id: 'blackberrycsv', name: 'BlackBerry Password Keeper (csv)' },\r\n        { id: 'buttercupcsv', name: 'Buttercup (csv)' },\r\n        { id: 'codebookcsv', name: 'Codebook (csv)' },\r\n        { id: 'encryptrcsv', name: 'Encryptr (csv)' },\r\n        { id: 'yoticsv', name: 'Yoti (csv)' },\r\n    ];\r\n\r\n    constructor(private cipherService: CipherService, private folderService: FolderService,\r\n        private apiService: ApiService, private i18nService: I18nService,\r\n        private collectionService: CollectionService) { }\r\n\r\n    getImportOptions(): ImportOption[] {\r\n        return this.featuredImportOptions.concat(this.regularImportOptions);\r\n    }\r\n\r\n    async import(importer: Importer, fileContents: string, organizationId: string = null): Promise<Error> {\r\n        const importResult = await importer.parse(fileContents);\r\n        if (importResult.success) {\r\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\r\n                return new Error(this.i18nService.t('importNothingError'));\r\n            } else if (importResult.ciphers.length > 0) {\r\n                const halfway = Math.floor(importResult.ciphers.length / 2);\r\n                const last = importResult.ciphers.length - 1;\r\n\r\n                if (this.badData(importResult.ciphers[0]) &&\r\n                    this.badData(importResult.ciphers[halfway]) &&\r\n                    this.badData(importResult.ciphers[last])) {\r\n                    return new Error(this.i18nService.t('importFormatError'));\r\n                }\r\n            }\r\n            await this.postImport(importResult, organizationId);\r\n            return null;\r\n        } else {\r\n            return new Error(this.i18nService.t('importFormatError'));\r\n        }\r\n    }\r\n\r\n    getImporter(format: string, organization = false): Importer {\r\n        const importer = this.getImporterInstance(format);\r\n        if (importer == null) {\r\n            return null;\r\n        }\r\n        importer.organization = organization;\r\n        return importer;\r\n    }\r\n\r\n    private getImporterInstance(format: string) {\r\n        if (format == null || format === '') {\r\n            return null;\r\n        }\r\n\r\n        switch (format) {\r\n            case 'bitwardencsv':\r\n                return new BitwardenCsvImporter();\r\n            case 'bitwardenjson':\r\n                return new BitwardenJsonImporter();\r\n            case 'lastpasscsv':\r\n            case 'passboltcsv':\r\n                return new LastPassCsvImporter();\r\n            case 'keepassxcsv':\r\n                return new KeePassXCsvImporter();\r\n            case 'aviracsv':\r\n                return new AviraCsvImporter();\r\n            case 'blurcsv':\r\n                return new BlurCsvImporter();\r\n            case 'safeincloudxml':\r\n                return new SafeInCloudXmlImporter();\r\n            case 'padlockcsv':\r\n                return new PadlockCsvImporter();\r\n            case 'keepass2xml':\r\n                return new KeePass2XmlImporter();\r\n            case 'chromecsv':\r\n            case 'operacsv':\r\n            case 'vivaldicsv':\r\n                return new ChromeCsvImporter();\r\n            case 'firefoxcsv':\r\n                return new FirefoxCsvImporter();\r\n            case 'upmcsv':\r\n                return new UpmCsvImporter();\r\n            case 'saferpasscsv':\r\n                return new SaferPassCsvImporter();\r\n            case 'meldiumcsv':\r\n                return new MeldiumCsvImporter();\r\n            case '1password1pif':\r\n                return new OnePassword1PifImporter();\r\n            case '1passwordwincsv':\r\n                return new OnePasswordWinCsvImporter();\r\n            case 'keepercsv':\r\n                return new KeeperCsvImporter();\r\n            case 'passworddragonxml':\r\n                return new PasswordDragonXmlImporter();\r\n            case 'enpasscsv':\r\n                return new EnpassCsvImporter();\r\n            case 'enpassjson':\r\n                return new EnpassJsonImporter();\r\n            case 'pwsafexml':\r\n                return new PasswordSafeXmlImporter();\r\n            case 'dashlanejson':\r\n                return new DashlaneJsonImporter();\r\n            case 'msecurecsv':\r\n                return new MSecureCsvImporter();\r\n            case 'stickypasswordxml':\r\n                return new StickyPasswordXmlImporter();\r\n            case 'truekeycsv':\r\n                return new TrueKeyCsvImporter();\r\n            case 'clipperzhtml':\r\n                return new ClipperzHtmlImporter();\r\n            case 'roboformcsv':\r\n                return new RoboFormCsvImporter();\r\n            case 'ascendocsv':\r\n                return new AscendoCsvImporter();\r\n            case 'passwordbossjson':\r\n                return new PasswordBossJsonImporter();\r\n            case 'zohovaultcsv':\r\n                return new ZohoVaultCsvImporter();\r\n            case 'splashidcsv':\r\n                return new SplashIdCsvImporter();\r\n            case 'passkeepcsv':\r\n                return new PassKeepCsvImporter();\r\n            case 'gnomejson':\r\n                return new GnomeJsonImporter();\r\n            case 'passwordagentcsv':\r\n                return new PasswordAgentCsvImporter();\r\n            case 'passpackcsv':\r\n                return new PasspackCsvImporter();\r\n            case 'passmanjson':\r\n                return new PassmanJsonImporter();\r\n            case 'avastcsv':\r\n                return new AvastCsvImporter();\r\n            case 'avastjson':\r\n                return new AvastJsonImporter();\r\n            case 'fsecurefsk':\r\n                return new FSecureFskImporter();\r\n            case 'kasperskytxt':\r\n                return new KasperskyTxtImporter();\r\n            case 'remembearcsv':\r\n                return new RememBearCsvImporter();\r\n            case 'passwordwallettxt':\r\n                return new PasswordWalletTxtImporter();\r\n            case 'mykicsv':\r\n                return new MykiCsvImporter();\r\n            case 'securesafecsv':\r\n                return new SecureSafeCsvImporter();\r\n            case 'logmeoncecsv':\r\n                return new LogMeOnceCsvImporter();\r\n            case 'blackberrycsv':\r\n                return new BlackBerryCsvImporter();\r\n            case 'buttercupcsv':\r\n                return new ButtercupCsvImporter();\r\n            case 'codebookcsv':\r\n                return new CodebookCsvImporter();\r\n            case 'encryptrcsv':\r\n                return new EncryptrCsvImporter();\r\n            case 'yoticsv':\r\n                return new YotiCsvImporter();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    private async postImport(importResult: ImportResult, organizationId: string = null) {\r\n        if (organizationId == null) {\r\n            const request = new ImportCiphersRequest();\r\n            for (let i = 0; i < importResult.ciphers.length; i++) {\r\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\r\n                request.ciphers.push(new CipherRequest(c));\r\n            }\r\n            if (importResult.folders != null) {\r\n                for (let i = 0; i < importResult.folders.length; i++) {\r\n                    const f = await this.folderService.encrypt(importResult.folders[i]);\r\n                    request.folders.push(new FolderRequest(f));\r\n                }\r\n            }\r\n            if (importResult.folderRelationships != null) {\r\n                importResult.folderRelationships.forEach((r) =>\r\n                    request.folderRelationships.push(new KvpRequest(r[0], r[1])));\r\n            }\r\n            return await this.apiService.postImportCiphers(request);\r\n        } else {\r\n            const request = new ImportOrganizationCiphersRequest();\r\n            for (let i = 0; i < importResult.ciphers.length; i++) {\r\n                importResult.ciphers[i].organizationId = organizationId;\r\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\r\n                request.ciphers.push(new CipherRequest(c));\r\n            }\r\n            if (importResult.collections != null) {\r\n                for (let i = 0; i < importResult.collections.length; i++) {\r\n                    importResult.collections[i].organizationId = organizationId;\r\n                    const c = await this.collectionService.encrypt(importResult.collections[i]);\r\n                    request.collections.push(new CollectionRequest(c));\r\n                }\r\n            }\r\n            if (importResult.collectionRelationships != null) {\r\n                importResult.collectionRelationships.forEach((r) =>\r\n                    request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\r\n            }\r\n            return await this.apiService.postImportOrganizationCiphers(organizationId, request);\r\n        }\r\n    }\r\n\r\n    private badData(c: CipherView) {\r\n        return (c.name == null || c.name === '--') &&\r\n            (c.type === CipherType.Login && c.login != null && Utils.isNullOrWhitespace(c.login.password));\r\n    }\r\n}\r\n","import { CipherRequest } from './cipherRequest';\r\nimport { FolderRequest } from './folderRequest';\r\nimport { KvpRequest } from './kvpRequest';\r\n\r\nexport class ImportCiphersRequest {\r\n    ciphers: CipherRequest[] = [];\r\n    folders: FolderRequest[] = [];\r\n    folderRelationships: KvpRequest<number, number>[] = [];\r\n}\r\n","import { CipherRequest } from './cipherRequest';\r\nimport { CollectionRequest } from './collectionRequest';\r\nimport { KvpRequest } from './kvpRequest';\r\n\r\nexport class ImportOrganizationCiphersRequest {\r\n    ciphers: CipherRequest[] = [];\r\n    collections: CollectionRequest[] = [];\r\n    collectionRelationships: KvpRequest<number, number>[] = [];\r\n}\r\n","export class KvpRequest<TK, TV> {\r\n    key: TK;\r\n    value: TV;\r\n\r\n    constructor(key: TK, value: TV) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.length < 2) {\r\n                return;\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\r\n            cipher.name = this.getValueOrDefault(value[0], '--');\r\n\r\n            if (value.length > 2 && (value.length % 2) === 0) {\r\n                for (let i = 0; i < value.length - 2; i += 2) {\r\n                    const val: string = value[i + 2];\r\n                    const field: string = value[i + 1];\r\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\r\n                        continue;\r\n                    }\r\n\r\n                    const fieldLower = field.toLowerCase();\r\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\r\n                        cipher.login.password = this.getValueOrDefault(val);\r\n                    } else if (cipher.login.username == null &&\r\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\r\n                        cipher.login.username = this.getValueOrDefault(val);\r\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\r\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\r\n                        cipher.login.uris = this.makeUriArray(val);\r\n                    } else {\r\n                        this.processKvp(cipher, field, val);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class AvastCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.name);\r\n            cipher.login.uris = this.makeUriArray(value.web);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n            cipher.login.username = this.getValueOrDefault(value.login);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nexport class AvastJsonImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        if (results.logins != null) {\r\n            results.logins.forEach((value: any) => {\r\n                const cipher = this.initLoginCipher();\r\n                cipher.name = this.getValueOrDefault(value.custName);\r\n                cipher.notes = this.getValueOrDefault(value.note);\r\n                cipher.login.uris = this.makeUriArray(value.url);\r\n                cipher.login.password = this.getValueOrDefault(value.pwd);\r\n                cipher.login.username = this.getValueOrDefault(value.loginName);\r\n                this.cleanupCipher(cipher);\r\n                result.ciphers.push(cipher);\r\n            });\r\n        }\r\n\r\n        if (results.notes != null) {\r\n            results.notes.forEach((value: any) => {\r\n                const cipher = this.initLoginCipher();\r\n                cipher.type = CipherType.SecureNote;\r\n                cipher.secureNote.type = SecureNoteType.Generic;\r\n                cipher.name = this.getValueOrDefault(value.label);\r\n                cipher.notes = this.getValueOrDefault(value.text);\r\n                this.cleanupCipher(cipher);\r\n                result.ciphers.push(cipher);\r\n            });\r\n        }\r\n\r\n        if (results.cards != null) {\r\n            results.cards.forEach((value: any) => {\r\n                const cipher = this.initLoginCipher();\r\n                cipher.type = CipherType.Card;\r\n                cipher.name = this.getValueOrDefault(value.custName);\r\n                cipher.notes = this.getValueOrDefault(value.note);\r\n                cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\r\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\r\n                cipher.card.code = this.getValueOrDefault(value.cvv);\r\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n                if (value.expirationDate != null) {\r\n                    if (value.expirationDate.month != null) {\r\n                        cipher.card.expMonth = value.expirationDate.month + '';\r\n                    }\r\n                    if (value.expirationDate.year != null) {\r\n                        cipher.card.expYear = value.expirationDate.year + '';\r\n                    }\r\n                }\r\n                this.cleanupCipher(cipher);\r\n                result.ciphers.push(cipher);\r\n            });\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class AviraCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.name,\r\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\r\n            cipher.login.uris = this.makeUriArray(value.website);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n\r\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\r\n                cipher.login.username = value.secondary_username;\r\n            } else {\r\n                cipher.login.username = this.getValueOrDefault(value.username);\r\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { CollectionView } from '../models/view/collectionView';\r\nimport { FieldView } from '../models/view/fieldView';\r\nimport { FolderView } from '../models/view/folderView';\r\nimport { LoginView } from '../models/view/loginView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { FieldType } from '../enums/fieldType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\r\n                const collections = (value.collections as string).split(',');\r\n                collections.forEach((col) => {\r\n                    let addCollection = true;\r\n                    let collectionIndex = result.collections.length;\r\n\r\n                    for (let i = 0; i < result.collections.length; i++) {\r\n                        if (result.collections[i].name === col) {\r\n                            addCollection = false;\r\n                            collectionIndex = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (addCollection) {\r\n                        const collection = new CollectionView();\r\n                        collection.name = col;\r\n                        result.collections.push(collection);\r\n                    }\r\n\r\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\r\n                });\r\n            } else if (!this.organization) {\r\n                this.processFolder(result, value.folder);\r\n            }\r\n\r\n            const cipher = new CipherView();\r\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\r\n            cipher.type = CipherType.Login;\r\n            cipher.notes = this.getValueOrDefault(value.notes);\r\n            cipher.name = this.getValueOrDefault(value.name, '--');\r\n\r\n            if (!this.isNullOrWhitespace(value.fields)) {\r\n                const fields = this.splitNewLine(value.fields);\r\n                for (let i = 0; i < fields.length; i++) {\r\n                    if (this.isNullOrWhitespace(fields[i])) {\r\n                        continue;\r\n                    }\r\n\r\n                    const delimPosition = fields[i].lastIndexOf(': ');\r\n                    if (delimPosition === -1) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (cipher.fields == null) {\r\n                        cipher.fields = [];\r\n                    }\r\n\r\n                    const field = new FieldView();\r\n                    field.name = fields[i].substr(0, delimPosition);\r\n                    field.value = null;\r\n                    field.type = FieldType.Text;\r\n                    if (fields[i].length > (delimPosition + 2)) {\r\n                        field.value = fields[i].substr(delimPosition + 2);\r\n                    }\r\n                    cipher.fields.push(field);\r\n                }\r\n            }\r\n\r\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\r\n            switch (valueType) {\r\n                case 'note':\r\n                    cipher.type = CipherType.SecureNote;\r\n                    cipher.secureNote = new SecureNoteView();\r\n                    cipher.secureNote.type = SecureNoteType.Generic;\r\n                    break;\r\n                default:\r\n                    cipher.type = CipherType.Login;\r\n                    cipher.login = new LoginView();\r\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\r\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\r\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\r\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\r\n                    cipher.login.uris = this.makeUriArray(uris);\r\n                    break;\r\n            }\r\n\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CipherWithIds } from '../models/export/cipherWithIds';\r\nimport { CollectionWithId } from '../models/export/collectionWithId';\r\nimport { FolderWithId } from '../models/export/folderWithId';\r\n\r\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null || results.items == null || results.items.length === 0) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const groupingsMap = new Map<string, number>();\r\n        if (this.organization && results.collections != null) {\r\n            results.collections.forEach((c: CollectionWithId) => {\r\n                const collection = CollectionWithId.toView(c);\r\n                if (collection != null) {\r\n                    collection.id = null;\r\n                    collection.organizationId = null;\r\n                    groupingsMap.set(c.id, result.collections.length);\r\n                    result.collections.push(collection);\r\n                }\r\n            });\r\n        } else if (!this.organization && results.folders != null) {\r\n            results.folders.forEach((f: FolderWithId) => {\r\n                const folder = FolderWithId.toView(f);\r\n                if (folder != null) {\r\n                    folder.id = null;\r\n                    groupingsMap.set(f.id, result.folders.length);\r\n                    result.folders.push(folder);\r\n                }\r\n            });\r\n        }\r\n\r\n        results.items.forEach((c: CipherWithIds) => {\r\n            const cipher = CipherWithIds.toView(c);\r\n            // reset ids incase they were set for some reason\r\n            cipher.id = null;\r\n            cipher.folderId = null;\r\n            cipher.organizationId = null;\r\n            cipher.collectionIds = null;\r\n\r\n            // make sure password history is limited\r\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\r\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\r\n            }\r\n\r\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\r\n                result.folderRelationships.push([result.ciphers.length, groupingsMap.get(c.folderId)]);\r\n            } else if (this.organization && c.collectionIds != null) {\r\n                c.collectionIds.forEach((cId) => {\r\n                    if (groupingsMap.has(cId)) {\r\n                        result.collectionRelationships.push([result.ciphers.length, groupingsMap.get(cId)]);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.grouping === 'list') {\r\n                return;\r\n            }\r\n            const cipher = this.initLoginCipher();\r\n            cipher.favorite = value.fav === '1';\r\n            cipher.name = this.getValueOrDefault(value.name);\r\n            cipher.notes = this.getValueOrDefault(value.extra);\r\n            if (value.grouping !== 'note') {\r\n                cipher.login.uris = this.makeUriArray(value.url);\r\n                cipher.login.password = this.getValueOrDefault(value.password);\r\n                cipher.login.username = this.getValueOrDefault(value.username);\r\n            }\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class BlurCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.label === 'null') {\r\n                value.label = null;\r\n            }\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.label,\r\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\r\n            cipher.login.uris = this.makeUriArray(value.domain);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n\r\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\r\n                cipher.login.username = value.username;\r\n            } else {\r\n                cipher.login.username = this.getValueOrDefault(value.email);\r\n                cipher.notes = this.getValueOrDefault(value.username);\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nconst OfficialProps = [\r\n    '!group_id', '!group_name', 'title', 'username', 'password', 'URL', 'id',\r\n];\r\n\r\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            this.processFolder(result, this.getValueOrDefault(value['!group_name']));\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.title, '--');\r\n            cipher.login.username = this.getValueOrDefault(value.username);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n            cipher.login.uris = this.makeUriArray(value.URL);\r\n\r\n            let processingCustomFields = false;\r\n            for (const prop in value) {\r\n                if (value.hasOwnProperty(prop)) {\r\n                    if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\r\n                        processingCustomFields = true;\r\n                    }\r\n                    if (processingCustomFields) {\r\n                        this.processKvp(cipher, prop, value[prop]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.name, '--');\r\n            cipher.login.username = this.getValueOrDefault(value.username);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n            cipher.login.uris = this.makeUriArray(value.url);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const doc = this.parseXml(data);\r\n        if (doc == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const textarea = doc.querySelector('textarea');\r\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\r\n            result.errorMessage = 'Missing textarea.';\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const entries = JSON.parse(textarea.textContent);\r\n        entries.forEach((entry: any) => {\r\n            const cipher = this.initLoginCipher();\r\n            if (!this.isNullOrWhitespace(entry.label)) {\r\n                cipher.name = entry.label.split(' ')[0];\r\n            }\r\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\r\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\r\n            }\r\n\r\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\r\n                for (const property in entry.currentVersion.fields) {\r\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\r\n                        continue;\r\n                    }\r\n\r\n                    const field = entry.currentVersion.fields[property];\r\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\r\n                    switch (actionType) {\r\n                        case 'password':\r\n                            cipher.login.password = this.getValueOrDefault(field.value);\r\n                            break;\r\n                        case 'email':\r\n                        case 'username':\r\n                        case 'user':\r\n                        case 'name':\r\n                            cipher.login.username = this.getValueOrDefault(field.value);\r\n                            break;\r\n                        case 'url':\r\n                            cipher.login.uris = this.makeUriArray(field.value);\r\n                            break;\r\n                        default:\r\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\r\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\r\n                                cipher.login.password = this.getValueOrDefault(field.value);\r\n                            } else if (cipher.login.username == null &&\r\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\r\n                                cipher.login.username = this.getValueOrDefault(field.value);\r\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\r\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\r\n                                cipher.login.uris = this.makeUriArray(field.value);\r\n                            } else {\r\n                                this.processKvp(cipher, field.label, field.value);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            this.processFolder(result, this.getValueOrDefault(value.Category));\n\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite) === 'True';\n            cipher.name = this.getValueOrDefault(value.Entry, '--');\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.totp = this.getValueOrDefault(value.TOTP);\n            cipher.login.uris = this.makeUriArray(value.Website);\n\n            if (!this.isNullOrWhitespace(value.Username)) {\n                this.processKvp(cipher, 'Email', value.Email);\n            }\n            this.processKvp(cipher, 'Phone', value.Phone);\n            this.processKvp(cipher, 'PIN', value.PIN);\n            this.processKvp(cipher, 'Account', value.Account);\n            this.processKvp(cipher, 'Date', value.Date);\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { IdentityView } from '../models/view/identityView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nconst HandledResults = new Set(['ADDRESS', 'AUTHENTIFIANT', 'BANKSTATEMENT', 'IDCARD', 'IDENTITY',\r\n    'PAYMENTMEANS_CREDITCARD', 'PAYMENTMEAN_PAYPAL', 'EMAIL']);\r\n\r\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\r\n    private result: ImportResult;\r\n\r\n    parse(data: string): ImportResult {\r\n        this.result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null || results.length === 0) {\r\n            this.result.success = false;\r\n            return this.result;\r\n        }\r\n\r\n        if (results.ADDRESS != null) {\r\n            this.processAddress(results.ADDRESS);\r\n        }\r\n        if (results.AUTHENTIFIANT != null) {\r\n            this.processAuth(results.AUTHENTIFIANT);\r\n        }\r\n        if (results.BANKSTATEMENT != null) {\r\n            this.processNote(results.BANKSTATEMENT, 'BankAccountName');\r\n        }\r\n        if (results.IDCARD != null) {\r\n            this.processNote(results.IDCARD, 'Fullname');\r\n        }\r\n        if (results.PAYMENTMEANS_CREDITCARD != null) {\r\n            this.processCard(results.PAYMENTMEANS_CREDITCARD);\r\n        }\r\n        if (results.IDENTITY != null) {\r\n            this.processIdentity(results.IDENTITY);\r\n        }\r\n\r\n        for (const key in results) {\r\n            if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\r\n                this.processNote(results[key], null, 'Generic Note');\r\n            }\r\n        }\r\n\r\n        this.result.success = true;\r\n        return this.result;\r\n    }\r\n\r\n    private processAuth(results: any[]) {\r\n        results.forEach((credential: any) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(credential.title);\r\n\r\n            cipher.login.username = this.getValueOrDefault(credential.login,\r\n                this.getValueOrDefault(credential.secondaryLogin));\r\n            if (this.isNullOrWhitespace(cipher.login.username)) {\r\n                cipher.login.username = this.getValueOrDefault(credential.email);\r\n            } else if (!this.isNullOrWhitespace(credential.email)) {\r\n                cipher.notes = ('Email: ' + credential.email + '\\n');\r\n            }\r\n\r\n            cipher.login.password = this.getValueOrDefault(credential.password);\r\n            cipher.login.uris = this.makeUriArray(credential.domain);\r\n            cipher.notes += this.getValueOrDefault(credential.note, '');\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            this.result.ciphers.push(cipher);\r\n        });\r\n    }\r\n\r\n    private processIdentity(results: any[]) {\r\n        results.forEach((obj: any) => {\r\n            const cipher = new CipherView();\r\n            cipher.identity = new IdentityView();\r\n            cipher.type = CipherType.Identity;\r\n            cipher.name = this.getValueOrDefault(obj.fullName, '');\r\n            const nameParts = cipher.name.split(' ');\r\n            if (nameParts.length > 0) {\r\n                cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\r\n            }\r\n            if (nameParts.length === 2) {\r\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\r\n            } else if (nameParts.length === 3) {\r\n                cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\r\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\r\n            }\r\n            cipher.identity.username = this.getValueOrDefault(obj.pseudo);\r\n            this.cleanupCipher(cipher);\r\n            this.result.ciphers.push(cipher);\r\n        });\r\n    }\r\n\r\n    private processAddress(results: any[]) {\r\n        results.forEach((obj: any) => {\r\n            const cipher = new CipherView();\r\n            cipher.identity = new IdentityView();\r\n            cipher.type = CipherType.Identity;\r\n            cipher.name = this.getValueOrDefault(obj.addressName);\r\n            cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\r\n            cipher.identity.city = this.getValueOrDefault(obj.city);\r\n            cipher.identity.state = this.getValueOrDefault(obj.state);\r\n            cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\r\n            cipher.identity.country = this.getValueOrDefault(obj.country);\r\n            if (cipher.identity.country != null) {\r\n                cipher.identity.country = cipher.identity.country.toUpperCase();\r\n            }\r\n            this.cleanupCipher(cipher);\r\n            this.result.ciphers.push(cipher);\r\n        });\r\n    }\r\n\r\n    private processCard(results: any[]) {\r\n        results.forEach((obj: any) => {\r\n            const cipher = new CipherView();\r\n            cipher.card = new CardView();\r\n            cipher.type = CipherType.Card;\r\n            cipher.name = this.getValueOrDefault(obj.bank);\r\n            cipher.card.number = this.getValueOrDefault(obj.cardNumber);\r\n            cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n            cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\r\n            if (!this.isNullOrWhitespace(cipher.card.brand)) {\r\n                if (this.isNullOrWhitespace(cipher.name)) {\r\n                    cipher.name = cipher.card.brand;\r\n                } else {\r\n                    cipher.name += (' - ' + cipher.card.brand);\r\n                }\r\n            }\r\n            this.cleanupCipher(cipher);\r\n            this.result.ciphers.push(cipher);\r\n        });\r\n    }\r\n\r\n    private processNote(results: any[], nameProperty: string, name: string = null) {\r\n        results.forEach((obj: any) => {\r\n            const cipher = new CipherView();\r\n            cipher.secureNote = new SecureNoteView();\r\n            cipher.type = CipherType.SecureNote;\r\n            cipher.secureNote.type = SecureNoteType.Generic;\r\n            if (name != null) {\r\n                cipher.name = name;\r\n            } else {\r\n                cipher.name = this.getValueOrDefault(obj[nameProperty]);\r\n            }\r\n            for (const key in obj) {\r\n                if (obj.hasOwnProperty(key) && key !== nameProperty) {\r\n                    this.processKvp(cipher, key, obj[key].toString());\r\n                }\r\n            }\r\n            this.cleanupCipher(cipher);\r\n            this.result.ciphers.push(cipher);\r\n        });\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\n\r\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.Label, '--');\r\n            cipher.notes = this.getValueOrDefault(value.Notes);\r\n            const text = this.getValueOrDefault(value.Text);\r\n            if (!this.isNullOrWhitespace(text)) {\r\n                if (this.isNullOrWhitespace(cipher.notes)) {\r\n                    cipher.notes = text;\r\n                } else {\r\n                    cipher.notes += ('\\n\\n' + text);\r\n                }\r\n            }\r\n\r\n            const type = value['Entry Type'];\r\n            if (type === 'Password') {\r\n                cipher.login.username = this.getValueOrDefault(value.Username);\r\n                cipher.login.password = this.getValueOrDefault(value.Password);\r\n                cipher.login.uris = this.makeUriArray(value['Site URL']);\r\n            } else if (type === 'Credit Card') {\r\n                cipher.type = CipherType.Card;\r\n                cipher.card = new CardView();\r\n                cipher.card.cardholderName = this.getValueOrDefault(value['Name on card']);\r\n                cipher.card.number = this.getValueOrDefault(value['Card Number']);\r\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n                cipher.card.code = this.getValueOrDefault(value.CVV);\r\n                const expiry = this.getValueOrDefault(value.Expiry);\r\n                if (!this.isNullOrWhitespace(expiry)) {\r\n                    const expParts = expiry.split('/');\r\n                    if (expParts.length > 1) {\r\n                        cipher.card.expMonth = parseInt(expParts[0], null).toString();\r\n                        cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        let firstRow = true;\r\n        results.forEach((value) => {\r\n            if (value.length < 2 || (firstRow && (value[0] === 'Title' || value[0] === 'title'))) {\r\n                firstRow = false;\r\n                return;\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\r\n            cipher.name = this.getValueOrDefault(value[0], '--');\r\n\r\n            if (value.length === 2 || (!this.containsField(value, 'username') &&\r\n                !this.containsField(value, 'password') && !this.containsField(value, 'email') &&\r\n                !this.containsField(value, 'url'))) {\r\n                cipher.type = CipherType.SecureNote;\r\n                cipher.secureNote = new SecureNoteView();\r\n                cipher.secureNote.type = SecureNoteType.Generic;\r\n            }\r\n\r\n            if (this.containsField(value, 'cardholder') && this.containsField(value, 'number') &&\r\n                this.containsField(value, 'expiry date')) {\r\n                cipher.type = CipherType.Card;\r\n                cipher.card = new CardView();\r\n            }\r\n\r\n            if (value.length > 2 && (value.length % 2) === 0) {\r\n                for (let i = 0; i < value.length - 2; i += 2) {\r\n                    const fieldValue: string = value[i + 2];\r\n                    if (this.isNullOrWhitespace(fieldValue)) {\r\n                        continue;\r\n                    }\r\n\r\n                    const fieldName: string = value[i + 1];\r\n                    const fieldNameLower = fieldName.toLowerCase();\r\n\r\n                    if (cipher.type === CipherType.Login) {\r\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\r\n                            cipher.login.uris = this.makeUriArray(fieldValue);\r\n                            continue;\r\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\r\n                            this.isNullOrWhitespace(cipher.login.username)) {\r\n                            cipher.login.username = fieldValue;\r\n                            continue;\r\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\r\n                            cipher.login.password = fieldValue;\r\n                            continue;\r\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\r\n                            cipher.login.totp = fieldValue;\r\n                            continue;\r\n                        }\r\n                    } else if (cipher.type === CipherType.Card) {\r\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\r\n                            cipher.card.cardholderName = fieldValue;\r\n                            continue;\r\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\r\n                            cipher.card.number = fieldValue;\r\n                            cipher.card.brand = this.getCardBrand(fieldValue);\r\n                            continue;\r\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\r\n                            cipher.card.code = fieldValue;\r\n                            continue;\r\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\r\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\r\n                            if (this.setCardExpiration(cipher, fieldValue)) {\r\n                                continue;\r\n                            }\r\n                        } else if (fieldNameLower === 'type') {\r\n                            // Skip since brand was determined from number above\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    this.processKvp(cipher, fieldName, fieldValue);\r\n                }\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    private containsField(fields: any[], name: string) {\r\n        if (fields == null || name == null) {\r\n            return false;\r\n        }\r\n        return fields.filter((f) => !this.isNullOrWhitespace(f) &&\r\n            f.toLowerCase() === name.toLowerCase()).length > 0;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { FieldType } from '../enums/fieldType';\r\n\r\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null || results.items == null || results.items.length === 0) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const foldersMap = new Map<string, string>();\r\n        const foldersIndexMap = new Map<string, number>();\r\n        const folderTree = this.buildFolderTree(results.folders);\r\n        this.flattenFolderTree(null, folderTree, foldersMap);\r\n        foldersMap.forEach((val, key) => {\r\n            foldersIndexMap.set(key, result.folders.length);\r\n            const f = new FolderView();\r\n            f.name = val;\r\n            result.folders.push(f);\r\n        });\r\n\r\n        results.items.forEach((item: any) => {\r\n            if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\r\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(item.folders[0])]);\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(item.title);\r\n            cipher.favorite = item.favorite > 0;\r\n\r\n            if (item.template_type != null && item.fields != null && item.fields.length > 0) {\r\n                if (item.template_type.indexOf('login.') === 0 || item.template_type.indexOf('password.') === 0) {\r\n                    this.processLogin(cipher, item.fields);\r\n                } else if (item.template_type.indexOf('creditcard.') === 0) {\r\n                    this.processCard(cipher, item.fields);\r\n                } else if (item.template_type.indexOf('identity.') < 0 &&\r\n                    item.fields.some((f: any) => f.type === 'password' && !this.isNullOrWhitespace(f.value))) {\r\n                    this.processLogin(cipher, item.fields);\r\n                } else {\r\n                    this.processNote(cipher, item.fields);\r\n                }\r\n            }\r\n\r\n            cipher.notes += ('\\n' + this.getValueOrDefault(item.note, ''));\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    private processLogin(cipher: CipherView, fields: any[]) {\r\n        const urls: string[] = [];\r\n        fields.forEach((field: any) => {\r\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\r\n                return;\r\n            }\r\n\r\n            if ((field.type === 'username' || field.type === 'email') &&\r\n                this.isNullOrWhitespace(cipher.login.username)) {\r\n                cipher.login.username = field.value;\r\n            } else if (field.type === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\r\n                cipher.login.password = field.value;\r\n            } else if (field.type === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\r\n                cipher.login.totp = field.value;\r\n            } else if (field.type === 'url') {\r\n                urls.push(field.value);\r\n            } else {\r\n                this.processKvp(cipher, field.label, field.value,\r\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\r\n            }\r\n        });\r\n        cipher.login.uris = this.makeUriArray(urls);\r\n    }\r\n\r\n    private processCard(cipher: CipherView, fields: any[]) {\r\n        cipher.card = new CardView();\r\n        cipher.type = CipherType.Card;\r\n        fields.forEach((field: any) => {\r\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section' || field.type === 'ccType') {\r\n                return;\r\n            }\r\n\r\n            if (field.type === 'ccName' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\r\n                cipher.card.cardholderName = field.value;\r\n            } else if (field.type === 'ccNumber' && this.isNullOrWhitespace(cipher.card.number)) {\r\n                cipher.card.number = field.value;\r\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n            } else if (field.type === 'ccCvc' && this.isNullOrWhitespace(cipher.card.code)) {\r\n                cipher.card.code = field.value;\r\n            } else if (field.type === 'ccExpiry' && this.isNullOrWhitespace(cipher.card.expYear)) {\r\n                if (!this.setCardExpiration(cipher, field.value)) {\r\n                    this.processKvp(cipher, field.label, field.value,\r\n                        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\r\n                }\r\n            } else {\r\n                this.processKvp(cipher, field.label, field.value,\r\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\r\n            }\r\n        });\r\n    }\r\n\r\n    private processNote(cipher: CipherView, fields: any[]) {\r\n        fields.forEach((field: any) => {\r\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\r\n                return;\r\n            }\r\n            this.processKvp(cipher, field.label, field.value,\r\n                field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\r\n        });\r\n    }\r\n\r\n    private buildFolderTree(folders: any[]): any[] {\r\n        if (folders == null) {\r\n            return [];\r\n        }\r\n        const folderTree: any[] = [];\r\n        const map = new Map<string, any>([]);\r\n        folders.forEach((obj: any) => {\r\n            map.set(obj.uuid, obj);\r\n            obj.children = [];\r\n        });\r\n        folders.forEach((obj: any) => {\r\n            if (obj.parent_uuid != null && obj.parent_uuid !== '' && map.has(obj.parent_uuid)) {\r\n                map.get(obj.parent_uuid).children.push(obj);\r\n            } else {\r\n                folderTree.push(obj);\r\n            }\r\n        });\r\n        return folderTree;\r\n    }\r\n\r\n    private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\r\n        if (tree == null) {\r\n            return;\r\n        }\r\n        tree.forEach((f: any) => {\r\n            if (f.title != null && f.title.trim() !== '') {\r\n                let title = f.title.trim();\r\n                if (titlePrefix != null && titlePrefix.trim() !== '') {\r\n                    title = titlePrefix + '/' + title;\r\n                }\r\n                map.set(f.uuid, title);\r\n                if (f.children != null && f.children.length !== 0) {\r\n                    this.flattenFolderTree(title, f.children, map);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\r\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(url), '--');\r\n            cipher.login.username = this.getValueOrDefault(value.username);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n            cipher.login.uris = this.makeUriArray(url);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\n\r\nexport class FSecureFskImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null || results.data == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        for (const key in results.data) {\r\n            if (!results.data.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            const value = results.data[key];\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.service);\r\n            cipher.notes = this.getValueOrDefault(value.notes);\r\n\r\n            if (value.style === 'website') {\r\n                cipher.login.username = this.getValueOrDefault(value.username);\r\n                cipher.login.password = this.getValueOrDefault(value.password);\r\n                cipher.login.uris = this.makeUriArray(value.url);\r\n            } else if (value.style === 'creditcard') {\r\n                cipher.type = CipherType.Card;\r\n                cipher.card = new CardView();\r\n                cipher.card.cardholderName = this.getValueOrDefault(value.username);\r\n                cipher.card.number = this.getValueOrDefault(value.creditNumber);\r\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n                cipher.card.code = this.getValueOrDefault(value.creditCvv);\r\n                if (!this.isNullOrWhitespace(value.creditExpiry)) {\r\n                    if (!this.setCardExpiration(cipher, value.creditExpiry)) {\r\n                        this.processKvp(cipher, 'Expiration', value.creditExpiry);\r\n                    }\r\n                }\r\n                if (!this.isNullOrWhitespace(value.password)) {\r\n                    this.processKvp(cipher, 'PIN', value.password);\r\n                }\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null || Object.keys(results).length === 0) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        for (const keyRing in results) {\r\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\r\n                results[keyRing].length === 0) {\r\n                continue;\r\n            }\r\n\r\n            results[keyRing].forEach((value: any) => {\r\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\r\n                    return;\r\n                }\r\n\r\n                this.processFolder(result, keyRing);\r\n                const cipher = this.initLoginCipher();\r\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\r\n                if (cipher.name.length > 30) {\r\n                    cipher.name = cipher.name.substring(0, 30);\r\n                }\r\n                cipher.login.password = this.getValueOrDefault(value.secret);\r\n                cipher.login.uris = this.makeUriArray(value.display_name);\r\n\r\n                if (value.attributes != null) {\r\n                    cipher.login.username = value.attributes != null ?\r\n                        this.getValueOrDefault(value.attributes.username_value) : null;\r\n                    for (const attr in value.attributes) {\r\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\r\n                            attr === 'xdg:schema') {\r\n                            continue;\r\n                        }\r\n                        this.processKvp(cipher, attr, value.attributes[attr]);\r\n                    }\r\n                }\r\n\r\n                this.convertToNoteIfNeeded(cipher);\r\n                this.cleanupCipher(cipher);\r\n                result.ciphers.push(cipher);\r\n            });\r\n        }\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nconst NotesHeader = 'Notes\\n\\n';\r\nconst ApplicationsHeader = 'Applications\\n\\n';\r\nconst WebsitesHeader = 'Websites\\n\\n';\r\nconst Delimiter = '\\n---\\n';\r\n\r\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n\r\n        let notesData: string;\r\n        let applicationsData: string;\r\n        let websitesData: string;\r\n        let workingData = this.splitNewLine(data).join('\\n');\r\n\r\n        if (workingData.indexOf(NotesHeader) !== -1) {\r\n            const parts = workingData.split(NotesHeader);\r\n            if (parts.length > 1) {\r\n                workingData = parts[0];\r\n                notesData = parts[1];\r\n            }\r\n        }\r\n        if (workingData.indexOf(ApplicationsHeader) !== -1) {\r\n            const parts = workingData.split(ApplicationsHeader);\r\n            if (parts.length > 1) {\r\n                workingData = parts[0];\r\n                applicationsData = parts[1];\r\n            }\r\n        }\r\n        if (workingData.indexOf(WebsitesHeader) === 0) {\r\n            const parts = workingData.split(WebsitesHeader);\r\n            if (parts.length > 1) {\r\n                workingData = parts[0];\r\n                websitesData = parts[1];\r\n            }\r\n        }\r\n\r\n        const notes = this.parseDataCategory(notesData);\r\n        const applications = this.parseDataCategory(applicationsData);\r\n        const websites = this.parseDataCategory(websitesData);\r\n\r\n        notes.forEach((n) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(n.get('Name'));\r\n            cipher.notes = this.getValueOrDefault(n.get('Text'));\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        websites.concat(applications).forEach((w) => {\r\n            const cipher = this.initLoginCipher();\r\n            const nameKey = w.has('Website name') ? 'Website name' : 'Application';\r\n            cipher.name = this.getValueOrDefault(w.get(nameKey), '');\r\n            if (!this.isNullOrWhitespace(w.get('Login name'))) {\r\n                if (!this.isNullOrWhitespace(cipher.name)) {\r\n                    cipher.name += ': ';\r\n                }\r\n                cipher.name += w.get('Login name');\r\n            }\r\n            cipher.notes = this.getValueOrDefault(w.get('Comment'));\r\n            if (w.has('Website URL')) {\r\n                cipher.login.uris = this.makeUriArray(w.get('Website URL'));\r\n            }\r\n            cipher.login.username = this.getValueOrDefault(w.get('Login'));\r\n            cipher.login.password = this.getValueOrDefault(w.get('Password'));\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    private parseDataCategory(data: string): Map<string, string>[] {\r\n        if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\r\n            return [];\r\n        }\r\n        const items: Map<string, string>[] = [];\r\n        data.split(Delimiter).forEach((p) => {\r\n            if (p.indexOf('\\n') === -1) {\r\n                return;\r\n            }\r\n            const item = new Map<string, string>();\r\n            let itemComment: string;\r\n            let itemCommentKey: string;\r\n            p.split('\\n').forEach((l) => {\r\n                if (itemComment != null) {\r\n                    itemComment += ('\\n' + l);\r\n                    return;\r\n                }\r\n                const colonIndex = l.indexOf(':');\r\n                let key: string;\r\n                let val: string;\r\n                if (colonIndex === -1) {\r\n                    return;\r\n                } else {\r\n                    key = l.substring(0, colonIndex);\r\n                    if (l.length > colonIndex + 1) {\r\n                        val = l.substring(colonIndex + 2);\r\n                    }\r\n                }\r\n                if (key != null) {\r\n                    item.set(key, val);\r\n                }\r\n                if (key === 'Comment' || key === 'Text') {\r\n                    itemComment = val;\r\n                    itemCommentKey = key;\r\n                }\r\n            });\r\n            if (itemComment != null && itemCommentKey != null) {\r\n                item.set(itemCommentKey, itemComment);\r\n            }\r\n            if (item.size === 0) {\r\n                return;\r\n            }\r\n            items.push(item);\r\n        });\r\n        return items;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { FieldType } from '../enums/fieldType';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\r\n    result = new ImportResult();\r\n\r\n    parse(data: string): ImportResult {\r\n        const doc = this.parseXml(data);\r\n        if (doc == null) {\r\n            this.result.success = false;\r\n            return this.result;\r\n        }\r\n\r\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\r\n        if (rootGroup == null) {\r\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\r\n            this.result.success = false;\r\n            return this.result;\r\n        }\r\n\r\n        this.traverse(rootGroup, true, '');\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(this.result);\r\n        }\r\n\r\n        this.result.success = true;\r\n        return this.result;\r\n    }\r\n\r\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\r\n        const folderIndex = this.result.folders.length;\r\n        let groupName = groupPrefixName;\r\n\r\n        if (!isRootNode) {\r\n            if (groupName !== '') {\r\n                groupName += '/';\r\n            }\r\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\r\n            groupName += nameEl == null ? '-' : nameEl.textContent;\r\n            const folder = new FolderView();\r\n            folder.name = groupName;\r\n            this.result.folders.push(folder);\r\n        }\r\n\r\n        this.querySelectorAllDirectChild(node, 'Entry').forEach((entry) => {\r\n            const cipherIndex = this.result.ciphers.length;\r\n\r\n            const cipher = this.initLoginCipher();\r\n            this.querySelectorAllDirectChild(entry, 'String').forEach((entryString) => {\r\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\r\n                const value = valueEl != null ? valueEl.textContent : null;\r\n                if (this.isNullOrWhitespace(value)) {\r\n                    return;\r\n                }\r\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\r\n                const key = keyEl != null ? keyEl.textContent : null;\r\n\r\n                if (key === 'URL') {\r\n                    cipher.login.uris = this.makeUriArray(value);\r\n                } else if (key === 'UserName') {\r\n                    cipher.login.username = value;\r\n                } else if (key === 'Password') {\r\n                    cipher.login.password = value;\r\n                }  else if (key === 'otp') {\r\n                    cipher.login.totp = value.replace('key=', '');\r\n                } else if (key === 'Title') {\r\n                    cipher.name = value;\r\n                } else if (key === 'Notes') {\r\n                    cipher.notes += (value + '\\n');\r\n                } else {\r\n                    let type = FieldType.Text;\r\n                    const attrs = (valueEl.attributes as any);\r\n                    if (attrs.length > 0 && attrs.ProtectInMemory != null &&\r\n                        attrs.ProtectInMemory.value === 'True') {\r\n                        type = FieldType.Hidden;\r\n                    }\r\n                    this.processKvp(cipher, key, value, type);\r\n                }\r\n            });\r\n\r\n            this.cleanupCipher(cipher);\r\n            this.result.ciphers.push(cipher);\r\n\r\n            if (!isRootNode) {\r\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\r\n            }\r\n        });\r\n\r\n        this.querySelectorAllDirectChild(node, 'Group').forEach((group) => {\r\n            this.traverse(group, false, groupName);\r\n        });\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (this.isNullOrWhitespace(value.Title)) {\r\n                return;\r\n            }\r\n\r\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\r\n                value.Group.replace('Root/', '') : value.Group;\r\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\r\n            this.processFolder(result, groupName);\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValueOrDefault(value.Notes);\r\n            cipher.name = this.getValueOrDefault(value.Title, '--');\r\n            cipher.login.username = this.getValueOrDefault(value.Username);\r\n            cipher.login.password = this.getValueOrDefault(value.Password);\r\n            cipher.login.uris = this.makeUriArray(value.URL);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.length < 6) {\r\n                return;\r\n            }\r\n\r\n            this.processFolder(result, value[0]);\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\r\n            cipher.name = this.getValueOrDefault(value[1], '--');\r\n            cipher.login.username = this.getValueOrDefault(value[2]);\r\n            cipher.login.password = this.getValueOrDefault(value[3]);\r\n            cipher.login.uris = this.makeUriArray(value[4]);\r\n\r\n            if (value.length > 7) {\r\n                // we have some custom fields.\r\n                for (let i = 7; i < value.length; i = i + 2) {\r\n                    this.processKvp(cipher, value[i], value[i + 1]);\r\n                }\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { FolderView } from '../models/view/folderView';\r\nimport { IdentityView } from '../models/view/identityView';\r\nimport { LoginView } from '../models/view/loginView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value, index) => {\r\n            const cipherIndex = result.ciphers.length;\r\n            let folderIndex = result.folders.length;\r\n            let grouping = value.grouping;\r\n            if (grouping != null) {\r\n                grouping = grouping.replace(/\\\\/g, '/').replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '');\r\n            }\r\n            const hasFolder = this.getValueOrDefault(grouping, '(none)') !== '(none)';\r\n            let addFolder = hasFolder;\r\n\r\n            if (hasFolder) {\r\n                for (let i = 0; i < result.folders.length; i++) {\r\n                    if (result.folders[i].name === grouping) {\r\n                        addFolder = false;\r\n                        folderIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const cipher = this.buildBaseCipher(value);\r\n            if (cipher.type === CipherType.Login) {\r\n                cipher.notes = this.getValueOrDefault(value.extra);\r\n                cipher.login = new LoginView();\r\n                cipher.login.uris = this.makeUriArray(value.url);\r\n                cipher.login.username = this.getValueOrDefault(value.username);\r\n                cipher.login.password = this.getValueOrDefault(value.password);\r\n            } else if (cipher.type === CipherType.SecureNote) {\r\n                this.parseSecureNote(value, cipher);\r\n            } else if (cipher.type === CipherType.Card) {\r\n                cipher.card = this.parseCard(value);\r\n                cipher.notes = this.getValueOrDefault(value.notes);\r\n            } else if (cipher.type === CipherType.Identity) {\r\n                cipher.identity = this.parseIdentity(value);\r\n                cipher.notes = this.getValueOrDefault(value.notes);\r\n                if (!this.isNullOrWhitespace(value.ccnum)) {\r\n                    // there is a card on this identity too\r\n                    const cardCipher = this.buildBaseCipher(value);\r\n                    cardCipher.identity = null;\r\n                    cardCipher.type = CipherType.Card;\r\n                    cardCipher.card = this.parseCard(value);\r\n                    result.ciphers.push(cardCipher);\r\n                }\r\n            }\r\n\r\n            result.ciphers.push(cipher);\r\n\r\n            if (addFolder) {\r\n                const f = new FolderView();\r\n                f.name = grouping;\r\n                result.folders.push(f);\r\n            }\r\n            if (hasFolder) {\r\n                result.folderRelationships.push([cipherIndex, folderIndex]);\r\n            }\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    private buildBaseCipher(value: any) {\r\n        const cipher = new CipherView();\r\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\r\n            // form fill\r\n            cipher.favorite = false;\r\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\r\n            cipher.type = CipherType.Card;\r\n\r\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\r\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\r\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\r\n                !this.isNullOrWhitespace(value.email)) {\r\n                cipher.type = CipherType.Identity;\r\n            }\r\n        } else {\r\n            // site or secure note\r\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\r\n            cipher.name = this.getValueOrDefault(value.name, '--');\r\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\r\n        }\r\n        return cipher;\r\n    }\r\n\r\n    private parseCard(value: any): CardView {\r\n        const card = new CardView();\r\n        card.cardholderName = this.getValueOrDefault(value.ccname);\r\n        card.number = this.getValueOrDefault(value.ccnum);\r\n        card.code = this.getValueOrDefault(value.cccsc);\r\n        card.brand = this.getCardBrand(value.ccnum);\r\n\r\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\r\n            const ccexpParts = (value.ccexp as string).split('-');\r\n            if (ccexpParts.length > 1) {\r\n                card.expYear = ccexpParts[0];\r\n                card.expMonth = ccexpParts[1];\r\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\r\n                    card.expMonth = card.expMonth[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return card;\r\n    }\r\n\r\n    private parseIdentity(value: any): IdentityView {\r\n        const identity = new IdentityView();\r\n        identity.title = this.getValueOrDefault(value.title);\r\n        identity.firstName = this.getValueOrDefault(value.firstname);\r\n        identity.middleName = this.getValueOrDefault(value.middlename);\r\n        identity.lastName = this.getValueOrDefault(value.lastname);\r\n        identity.username = this.getValueOrDefault(value.username);\r\n        identity.company = this.getValueOrDefault(value.company);\r\n        identity.ssn = this.getValueOrDefault(value.ssn);\r\n        identity.address1 = this.getValueOrDefault(value.address1);\r\n        identity.address2 = this.getValueOrDefault(value.address2);\r\n        identity.address3 = this.getValueOrDefault(value.address3);\r\n        identity.city = this.getValueOrDefault(value.city);\r\n        identity.state = this.getValueOrDefault(value.state);\r\n        identity.postalCode = this.getValueOrDefault(value.zip);\r\n        identity.country = this.getValueOrDefault(value.country);\r\n        identity.email = this.getValueOrDefault(value.email);\r\n        identity.phone = this.getValueOrDefault(value.phone);\r\n\r\n        if (!this.isNullOrWhitespace(identity.title)) {\r\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\r\n        }\r\n\r\n        return identity;\r\n    }\r\n\r\n    private parseSecureNote(value: any, cipher: CipherView) {\r\n        const extraParts = this.splitNewLine(value.extra);\r\n        let processedNote = false;\r\n\r\n        if (extraParts.length) {\r\n            const typeParts = extraParts[0].split(':');\r\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\r\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\r\n                if (typeParts[1] === 'Credit Card') {\r\n                    const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\r\n                        'Number': 'number',\r\n                        'Name on Card': 'cardholderName',\r\n                        'Security Code': 'code',\r\n                        // LP provides date in a format like 'June,2020'\r\n                        // Store in expMonth, then parse and modify\r\n                        'Expiration Date': 'expMonth',\r\n                    });\r\n\r\n                    if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === ',') {\r\n                        // No expiration data\r\n                        mappedData.expMonth = undefined;\r\n                    } else {\r\n                        const [monthString, year] = mappedData.expMonth.split(',');\r\n                        // Parse month name into number\r\n                        if (!this.isNullOrWhitespace(monthString)) {\r\n                            const month = new Date(Date.parse(monthString.trim() + ' 1, 2012')).getMonth() + 1;\r\n                            if (isNaN(month)) {\r\n                                mappedData.expMonth = undefined;\r\n                            } else {\r\n                                mappedData.expMonth = month.toString();\r\n                            }\r\n                        } else {\r\n                            mappedData.expMonth = undefined;\r\n                        }\r\n                        if (!this.isNullOrWhitespace(year)) {\r\n                            mappedData.expYear = year;\r\n                        }\r\n                    }\r\n\r\n                    cipher.type = CipherType.Card;\r\n                    cipher.card = mappedData;\r\n                } else if (typeParts[1] === 'Address') {\r\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\r\n                        'Title': 'title',\r\n                        'First Name': 'firstName',\r\n                        'Last Name': 'lastName',\r\n                        'Middle Name': 'middleName',\r\n                        'Company': 'company',\r\n                        'Address 1': 'address1',\r\n                        'Address 2': 'address2',\r\n                        'Address 3': 'address3',\r\n                        'City / Town': 'city',\r\n                        'State': 'state',\r\n                        'Zip / Postal Code': 'postalCode',\r\n                        'Country': 'country',\r\n                        'Email Address': 'email',\r\n                        'Username': 'username',\r\n                    });\r\n                    cipher.type = CipherType.Identity;\r\n                    cipher.identity = mappedData;\r\n                }\r\n                processedNote = true;\r\n            }\r\n        }\r\n\r\n        if (!processedNote) {\r\n            cipher.secureNote = new SecureNoteView();\r\n            cipher.secureNote.type = SecureNoteType.Generic;\r\n            cipher.notes = this.getValueOrDefault(value.extra);\r\n        }\r\n    }\r\n\r\n    private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\r\n        const dataObj: any = {};\r\n\r\n        let processingNotes = false;\r\n        extraParts.forEach((extraPart) => {\r\n            let key: string = null;\r\n            let val: string = null;\r\n            if (!processingNotes) {\r\n                if (this.isNullOrWhitespace(extraPart)) {\r\n                    return;\r\n                }\r\n                const colonIndex = extraPart.indexOf(':');\r\n                if (colonIndex === -1) {\r\n                    key = extraPart;\r\n                } else {\r\n                    key = extraPart.substring(0, colonIndex);\r\n                    if (extraPart.length > colonIndex) {\r\n                        val = extraPart.substring(colonIndex + 1);\r\n                    }\r\n                }\r\n                if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === 'NoteType') {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (processingNotes) {\r\n                cipher.notes += ('\\n' + extraPart);\r\n            } else if (key === 'Notes') {\r\n                if (!this.isNullOrWhitespace(cipher.notes)) {\r\n                    cipher.notes += ('\\n' + val);\r\n                } else {\r\n                    cipher.notes = val;\r\n                }\r\n                processingNotes = true;\r\n            } else if (map.hasOwnProperty(key)) {\r\n                dataObj[map[key]] = val;\r\n            } else {\r\n                this.processKvp(cipher, key, val);\r\n            }\r\n        });\r\n\r\n        return dataObj;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.length < 4) {\r\n                return;\r\n            }\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value[0], '--');\r\n            cipher.login.username = this.getValueOrDefault(value[2]);\r\n            cipher.login.password = this.getValueOrDefault(value[3]);\r\n            cipher.login.uris = this.makeUriArray(value[1]);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\r\n            cipher.notes = this.getValueOrDefault(value.Notes);\r\n            cipher.login.username = this.getValueOrDefault(value.UserName);\r\n            cipher.login.password = this.getValueOrDefault(value.Password);\r\n            cipher.login.uris = this.makeUriArray(value.Url);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.length < 3) {\r\n                return;\r\n            }\r\n\r\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\r\n            this.processFolder(result, folderName);\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value[2], '--');\r\n\r\n            if (value[1] === 'Web Logins' || value[1] === 'Login') {\r\n                cipher.login.uris = this.makeUriArray(value[4]);\r\n                cipher.login.username = this.getValueOrDefault(value[5]);\r\n                cipher.login.password = this.getValueOrDefault(value[6]);\r\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\r\n            } else if (value.length > 3) {\r\n                cipher.type = CipherType.SecureNote;\r\n                cipher.secureNote = new SecureNoteView();\r\n                cipher.secureNote.type = SecureNoteType.Generic;\r\n                for (let i = 3; i < value.length; i++) {\r\n                    if (!this.isNullOrWhitespace(value[i])) {\r\n                        cipher.notes += (value[i] + '\\n');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\r\n                cipher.name = value[1] + ': ' + cipher.name;\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { IdentityView } from '../models/view/identityView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class MykiCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.nickname, '--');\r\n            cipher.notes = this.getValueOrDefault(value.additionalInfo);\r\n\r\n            if (value.url !== undefined) {\r\n                // Accounts\r\n                cipher.login.uris = this.makeUriArray(value.url);\r\n                cipher.login.username = this.getValueOrDefault(value.username);\r\n                cipher.login.password = this.getValueOrDefault(value.password);\r\n                cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\r\n            } else if (value.cardNumber !== undefined) {\r\n                // Cards\r\n                cipher.card = new CardView();\r\n                cipher.type = CipherType.Card;\r\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\r\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\r\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n                cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\r\n                cipher.card.expYear = this.getValueOrDefault(value.exp_year);\r\n                cipher.card.code = this.getValueOrDefault(value.cvv);\r\n            } else if (value.firstName !== undefined) {\r\n                // Identities\r\n                cipher.identity = new IdentityView();\r\n                cipher.type = CipherType.Identity;\r\n                cipher.identity.title = this.getValueOrDefault(value.title);\r\n                cipher.identity.firstName = this.getValueOrDefault(value.firstName);\r\n                cipher.identity.middleName = this.getValueOrDefault(value.middleName);\r\n                cipher.identity.lastName = this.getValueOrDefault(value.lastName);\r\n                cipher.identity.phone = this.getValueOrDefault(value.number);\r\n                cipher.identity.email = this.getValueOrDefault(value.email);\r\n                cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\r\n                cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\r\n                cipher.identity.city = this.getValueOrDefault(value.city);\r\n                cipher.identity.country = this.getValueOrDefault(value.country);\r\n                cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\r\n            } else if (value.content !== undefined) {\r\n                // Notes\r\n                cipher.secureNote = new SecureNoteView();\r\n                cipher.type = CipherType.SecureNote;\r\n                cipher.secureNote.type = SecureNoteType.Generic;\r\n                cipher.name = this.getValueOrDefault(value.title, '--');\r\n                cipher.notes = this.getValueOrDefault(value.content);\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { CipherView } from '../models/view/cipherView';\r\nimport { IdentityView } from '../models/view/identityView';\r\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { FieldType } from '../enums/fieldType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\r\n    result = new ImportResult();\r\n\r\n    parse(data: string): ImportResult {\r\n        data.split(this.newLineRegex).forEach((line) => {\r\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\r\n                return;\r\n            }\r\n            const item = JSON.parse(line);\r\n            if (item.trashed === true) {\r\n                return;\r\n            }\r\n            const cipher = this.initLoginCipher();\r\n\r\n            if (this.isNullOrWhitespace(item.hmac)) {\r\n                this.processStandardItem(item, cipher);\r\n            } else {\r\n                this.processWinOpVaultItem(item, cipher);\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            this.result.ciphers.push(cipher);\r\n        });\r\n\r\n        this.result.success = true;\r\n        return this.result;\r\n    }\r\n\r\n    private processWinOpVaultItem(item: any, cipher: CipherView) {\r\n        if (item.overview != null) {\r\n            cipher.name = this.getValueOrDefault(item.overview.title);\r\n            if (item.overview.URLs != null) {\r\n                const urls: string[] = [];\r\n                item.overview.URLs.forEach((url: any) => {\r\n                    if (!this.isNullOrWhitespace(url.u)) {\r\n                        urls.push(url.u);\r\n                    }\r\n                });\r\n                cipher.login.uris = this.makeUriArray(urls);\r\n            }\r\n        }\r\n\r\n        if (item.details != null) {\r\n            if (item.details.passwordHistory != null) {\r\n                this.parsePasswordHistory(item.details.passwordHistory, cipher);\r\n            }\r\n            if (!this.isNullOrWhitespace(item.details.ccnum) || !this.isNullOrWhitespace(item.details.cvv)) {\r\n                cipher.type = CipherType.Card;\r\n                cipher.card = new CardView();\r\n            } else if (!this.isNullOrWhitespace(item.details.firstname) ||\r\n                !this.isNullOrWhitespace(item.details.address1)) {\r\n                cipher.type = CipherType.Identity;\r\n                cipher.identity = new IdentityView();\r\n            }\r\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\r\n                cipher.login.password = item.details.password;\r\n            }\r\n            if (!this.isNullOrWhitespace(item.details.notesPlain)) {\r\n                cipher.notes = item.details.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\r\n            }\r\n            if (item.details.fields != null) {\r\n                this.parseFields(item.details.fields, cipher, 'designation', 'value', 'name');\r\n            }\r\n            if (item.details.sections != null) {\r\n                item.details.sections.forEach((section: any) => {\r\n                    if (section.fields != null) {\r\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private processStandardItem(item: any, cipher: CipherView) {\r\n        cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\r\n        cipher.name = this.getValueOrDefault(item.title);\r\n\r\n        if (item.typeName === 'securenotes.SecureNote') {\r\n            cipher.type = CipherType.SecureNote;\r\n            cipher.secureNote = new SecureNoteView();\r\n            cipher.secureNote.type = SecureNoteType.Generic;\r\n        } else if (item.typeName === 'wallet.financial.CreditCard') {\r\n            cipher.type = CipherType.Card;\r\n            cipher.card = new CardView();\r\n        } else if (item.typeName === 'identities.Identity') {\r\n            cipher.type = CipherType.Identity;\r\n            cipher.identity = new IdentityView();\r\n        } else {\r\n            cipher.login.uris = this.makeUriArray(item.location);\r\n        }\r\n\r\n        if (item.secureContents != null) {\r\n            if (item.secureContents.passwordHistory != null) {\r\n                this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\r\n            }\r\n            if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\r\n                cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\r\n            }\r\n            if (cipher.type === CipherType.Login) {\r\n                if (!this.isNullOrWhitespace(item.secureContents.password)) {\r\n                    cipher.login.password = item.secureContents.password;\r\n                }\r\n                if (item.secureContents.URLs != null) {\r\n                    const urls: string[] = [];\r\n                    item.secureContents.URLs.forEach((u: any) => {\r\n                        if (!this.isNullOrWhitespace(u.url)) {\r\n                            urls.push(u.url);\r\n                        }\r\n                    });\r\n                    if (urls.length > 0) {\r\n                        cipher.login.uris = this.makeUriArray(urls);\r\n                    }\r\n                }\r\n            }\r\n            if (item.secureContents.fields != null) {\r\n                this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\r\n            }\r\n            if (item.secureContents.sections != null) {\r\n                item.secureContents.sections.forEach((section: any) => {\r\n                    if (section.fields != null) {\r\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private parsePasswordHistory(items: any[], cipher: CipherView) {\r\n        const maxSize = items.length > 5 ? 5 : items.length;\r\n        cipher.passwordHistory = items\r\n            .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\r\n            .sort((a, b) => b.time - a.time)\r\n            .slice(0, maxSize)\r\n            .map((h: any) => {\r\n                const ph = new PasswordHistoryView();\r\n                ph.password = h.value;\r\n                ph.lastUsedDate = new Date(('' + h.time).length >= 13 ? h.time : h.time * 1000);\r\n                return ph;\r\n            });\r\n    }\r\n\r\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\r\n        fields.forEach((field: any) => {\r\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\r\n                return;\r\n            }\r\n\r\n            const fieldValue = field[valueKey].toString();\r\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\r\n\r\n            if (cipher.type === CipherType.Login) {\r\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\r\n                    cipher.login.username = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\r\n                    cipher.login.password = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\r\n                    fieldDesignation.startsWith('TOTP_')) {\r\n                    cipher.login.totp = fieldValue;\r\n                    return;\r\n                }\r\n            } else if (cipher.type === CipherType.Card) {\r\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\r\n                    cipher.card.number = fieldValue;\r\n                    cipher.card.brand = this.getCardBrand(fieldValue);\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\r\n                    cipher.card.code = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\r\n                    cipher.card.cardholderName = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\r\n                    fieldValue.length === 6) {\r\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\r\n                    if (cipher.card.expMonth[0] === '0') {\r\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\r\n                    }\r\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\r\n                    return;\r\n                } else if (fieldDesignation === 'type') {\r\n                    // Skip since brand was determined from number above\r\n                    return;\r\n                }\r\n            } else if (cipher.type === CipherType.Identity) {\r\n                const identity = cipher.identity;\r\n                if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === 'firstname') {\r\n                    identity.firstName = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === 'lastname') {\r\n                    identity.lastName = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === 'initial') {\r\n                    identity.middleName = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === 'defphone') {\r\n                    identity.phone = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === 'company') {\r\n                    identity.company = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === 'email') {\r\n                    identity.email = fieldValue;\r\n                    return;\r\n                } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === 'username') {\r\n                    identity.username = fieldValue;\r\n                    return;\r\n                } else if (fieldDesignation === 'address') {\r\n                    // fieldValue is an object casted into a string, so access the plain value instead\r\n                    const { street, city, country, zip } = field[valueKey];\r\n                    identity.address1 = this.getValueOrDefault(street);\r\n                    identity.city = this.getValueOrDefault(city);\r\n                    if (!this.isNullOrWhitespace(country)) {\r\n                        identity.country = country.toUpperCase();\r\n                    }\r\n                    identity.postalCode = this.getValueOrDefault(zip);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\r\n            if (fieldName === 'password' && cipher.passwordHistory != null &&\r\n                cipher.passwordHistory.some((h) => h.password === fieldValue)) {\r\n                return;\r\n            }\r\n\r\n            const fieldType = field.k === 'concealed' ? FieldType.Hidden : FieldType.Text;\r\n            this.processKvp(cipher, fieldName, fieldValue, fieldType);\r\n        });\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { CardView } from '../models/view';\n\nconst IgnoredProperties = ['ainfo', 'autosubmit', 'notesplain', 'ps', 'scope', 'tags', 'title', 'uuid'];\n\nexport class OnePasswordWinCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(this.getProp(value, 'title'))) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.getProp(value, 'title'), '--');\n            cipher.notes = this.getValueOrDefault(this.getProp(value, 'notesPlain'), '') + '\\n';\n\n            if (!this.isNullOrWhitespace(this.getProp(value, 'number')) &&\n                !this.isNullOrWhitespace(this.getProp(value, 'expiry date'))) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                const lowerProp = property.toLowerCase();\n                if (cipher.type === CipherType.Login) {\n                    if (this.isNullOrWhitespace(cipher.login.password) && lowerProp === 'password') {\n                        cipher.login.password = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.login.username) && lowerProp === 'username') {\n                        cipher.login.username = value[property];\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uri.length === 0) && lowerProp === 'urls') {\n                        const urls = value[property].split(this.newLineRegex);\n                        cipher.login.uris = this.makeUriArray(urls);\n                        continue;\n                    }\n                } else if (cipher.type === CipherType.Card) {\n                    if (this.isNullOrWhitespace(cipher.card.number) && lowerProp === 'number') {\n                        cipher.card.number = value[property];\n                        cipher.card.brand = this.getCardBrand(this.getProp(value, 'number'));\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.code) && lowerProp === 'verification number') {\n                        cipher.card.code = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && lowerProp === 'cardholder name') {\n                        cipher.card.cardholderName = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.expiration) && lowerProp === 'expiry date' &&\n                        value[property].length === 6) {\n                        cipher.card.expMonth = (value[property] as string).substr(4, 2);\n                        if (cipher.card.expMonth[0] === '0') {\n                            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                        }\n                        cipher.card.expYear = (value[property] as string).substr(0, 4);\n                        continue;\n                    } else if (lowerProp === 'type') {\n                        // Skip since brand was determined from number above\n                        continue;\n                    }\n                }\n\n                if (IgnoredProperties.indexOf(lowerProp) === -1 && !lowerProp.startsWith('section:') &&\n                    !lowerProp.startsWith('section ')) {\n                    if (altUsername == null && lowerProp === 'email') {\n                        altUsername = value[property];\n                    }\n                    this.processKvp(cipher, property, value[property]);\n                }\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private getProp(obj: any, name: string): any {\n        return obj[name] || obj[name.toUpperCase()];\n    }\n}\n","export { AttachmentView } from './attachmentView';\r\nexport { CardView } from './cardView';\r\nexport { CipherView } from './cipherView';\r\nexport { FieldView } from './fieldView';\r\nexport { IdentityView } from './identityView';\r\nexport { LoginUriView } from './loginUriView';\r\nexport { LoginView } from './loginView';\r\nexport { SecureNoteView } from './secureNoteView';\r\nexport { View } from './view';\r\n","export class View {\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CollectionView } from '../models/view/collectionView';\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        let headers: string[] = null;\r\n        results.forEach((value) => {\r\n            if (headers == null) {\r\n                headers = value.map((v: string) => v);\r\n                return;\r\n            }\r\n\r\n            if (value.length < 2 || value.length !== headers.length) {\r\n                return;\r\n            }\r\n\r\n            if (!this.isNullOrWhitespace(value[1])) {\r\n                if (this.organization) {\r\n                    const tags = (value[1] as string).split(',');\r\n                    tags.forEach((tag) => {\r\n                        tag = tag.trim();\r\n                        let addCollection = true;\r\n                        let collectionIndex = result.collections.length;\r\n\r\n                        for (let i = 0; i < result.collections.length; i++) {\r\n                            if (result.collections[i].name === tag) {\r\n                                addCollection = false;\r\n                                collectionIndex = i;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (addCollection) {\r\n                            const collection = new CollectionView();\r\n                            collection.name = tag;\r\n                            result.collections.push(collection);\r\n                        }\r\n\r\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\r\n                    });\r\n                } else {\r\n                    const tags = (value[1] as string).split(',');\r\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\r\n                    this.processFolder(result, tag);\r\n                }\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value[0], '--');\r\n\r\n            for (let i = 2; i < value.length; i++) {\r\n                const header = headers[i].trim().toLowerCase();\r\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\r\n                    continue;\r\n                }\r\n\r\n                if (this.usernameFieldNames.indexOf(header) > -1) {\r\n                    cipher.login.username = value[i];\r\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\r\n                    cipher.login.password = value[i];\r\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\r\n                    cipher.login.uris = this.makeUriArray(value[i]);\r\n                } else {\r\n                    this.processKvp(cipher, headers[i], value[i]);\r\n                }\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            this.processFolder(result, this.getValue('category', value));\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValue('description', value);\r\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\r\n            cipher.login.username = this.getValue('username', value);\r\n            cipher.login.password = this.getValue('password', value);\r\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\r\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    private getValue(key: string, value: any) {\r\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null || results.length === 0) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((credential: any) => {\r\n            if (credential.tags != null && credential.tags.length > 0) {\r\n                const folderName = credential.tags[0].text;\r\n                this.processFolder(result, folderName);\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = credential.label;\r\n\r\n            cipher.login.username = this.getValueOrDefault(credential.username);\r\n            if (this.isNullOrWhitespace(cipher.login.username)) {\r\n                cipher.login.username = this.getValueOrDefault(credential.email);\r\n            } else if (!this.isNullOrWhitespace(credential.email)) {\r\n                cipher.notes = ('Email: ' + credential.email + '\\n');\r\n            }\r\n\r\n            cipher.login.password = this.getValueOrDefault(credential.password);\r\n            cipher.login.uris = this.makeUriArray(credential.url);\r\n            cipher.notes += this.getValueOrDefault(credential.description, '');\r\n            if (credential.otp != null) {\r\n                cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\r\n            }\r\n\r\n            if (credential.custom_fields != null) {\r\n                credential.custom_fields.forEach((customField: any) => {\r\n                    switch (customField.field_type) {\r\n                        case 'text':\r\n                        case 'password':\r\n                            this.processKvp(cipher, customField.label, customField.value);\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CollectionView } from '../models/view/collectionView';\r\n\r\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\r\n            const tags: string[] = tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0 ?\r\n                tagsJson.tags.map((tagJson: string) => {\r\n                    try {\r\n                        const t = JSON.parse(tagJson);\r\n                        return this.getValueOrDefault(t.tag);\r\n                    } catch { }\r\n                    return null;\r\n                }).filter((t: string) => !this.isNullOrWhitespace(t)) : null;\r\n\r\n            if (this.organization && tags != null && tags.length > 0) {\r\n                tags.forEach((tag) => {\r\n                    let addCollection = true;\r\n                    let collectionIndex = result.collections.length;\r\n\r\n                    for (let i = 0; i < result.collections.length; i++) {\r\n                        if (result.collections[i].name === tag) {\r\n                            addCollection = false;\r\n                            collectionIndex = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (addCollection) {\r\n                        const collection = new CollectionView();\r\n                        collection.name = tag;\r\n                        result.collections.push(collection);\r\n                    }\r\n\r\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\r\n                });\r\n            } else if (!this.organization && tags != null && tags.length > 0) {\r\n                this.processFolder(result, tags[0]);\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValueOrDefault(value.Notes, '');\r\n            cipher.notes += ('\\n\\n' + this.getValueOrDefault(value['Shared Notes'], '') + '\\n');\r\n            cipher.name = this.getValueOrDefault(value['Entry Name'], '--');\r\n            cipher.login.username = this.getValueOrDefault(value['User ID']);\r\n            cipher.login.password = this.getValueOrDefault(value.Password);\r\n            cipher.login.uris = this.makeUriArray(value.URL);\r\n\r\n            if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\r\n                value.__parsed_extra.forEach((extra: string) => {\r\n                    if (!this.isNullOrWhitespace(extra)) {\r\n                        cipher.notes += ('\\n' + extra);\r\n                    }\r\n                });\r\n            }\r\n\r\n            const fieldsJson = !this.isNullOrWhitespace(value['Extra Fields']) ?\r\n                JSON.parse(value['Extra Fields']) : null;\r\n            const fields = fieldsJson != null && fieldsJson.extraFields != null &&\r\n                fieldsJson.extraFields.length > 0 ? fieldsJson.extraFields.map((fieldJson: string) => {\r\n                    try {\r\n                        return JSON.parse(fieldJson);\r\n                    } catch { }\r\n                    return null;\r\n                }) : null;\r\n            if (fields != null) {\r\n                fields.forEach((f: any) => {\r\n                    if (f != null) {\r\n                        this.processKvp(cipher, f.name, f.data);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        let newVersion = true;\r\n        results.forEach((value) => {\r\n            if (value.length !== 5 && value.length < 9) {\r\n                return;\r\n            }\r\n            const altFormat = value.length === 10 && value[0] === '0';\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], '--');\r\n            cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\r\n            cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\r\n            if (value.length === 5) {\r\n                newVersion = false;\r\n                cipher.notes = this.getValueOrDefault(value[4]);\r\n                cipher.login.uris = this.makeUriArray(value[3]);\r\n            } else {\r\n                const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], '(None)');\r\n                let folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\r\n                if (folderName != null) {\r\n                    folderName = folder.split(' > ').join('/');\r\n                    folderName = folder.split('>').join('/');\r\n                }\r\n                this.processFolder(result, folderName);\r\n                cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\r\n                cipher.login.uris = this.makeUriArray(value[4]);\r\n            }\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (newVersion && this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { FolderView } from '../models/view/folderView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\n\r\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = JSON.parse(data);\r\n        if (results == null || results.items == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const foldersMap = new Map<string, string>();\r\n        results.folders.forEach((value: any) => {\r\n            foldersMap.set(value.id, value.name);\r\n        });\r\n        const foldersIndexMap = new Map<string, number>();\r\n        foldersMap.forEach((val, key) => {\r\n            foldersIndexMap.set(key, result.folders.length);\r\n            const f = new FolderView();\r\n            f.name = val;\r\n            result.folders.push(f);\r\n        });\r\n\r\n        results.items.forEach((value: any) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.name, '--');\r\n            cipher.login.uris = this.makeUriArray(value.login_url);\r\n\r\n            if (value.folder != null && foldersIndexMap.has(value.folder)) {\r\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\r\n            }\r\n\r\n            if (value.identifiers == null) {\r\n                return;\r\n            }\r\n\r\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\r\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\r\n            }\r\n\r\n            if (value.type === 'CreditCard') {\r\n                cipher.card = new CardView();\r\n                cipher.type = CipherType.Card;\r\n            }\r\n\r\n            for (const property in value.identifiers) {\r\n                if (!value.identifiers.hasOwnProperty(property)) {\r\n                    continue;\r\n                }\r\n                const valObj = value.identifiers[property];\r\n                const val = valObj != null ? valObj.toString() : null;\r\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\r\n                    continue;\r\n                }\r\n\r\n                if (property === 'custom_fields') {\r\n                    valObj.forEach((cf: any) => {\r\n                        this.processKvp(cipher, cf.name, cf.value);\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                if (cipher.type === CipherType.Card) {\r\n                    if (property === 'cardNumber') {\r\n                        cipher.card.number = val;\r\n                        cipher.card.brand = this.getCardBrand(val);\r\n                        continue;\r\n                    } else if (property === 'nameOnCard') {\r\n                        cipher.card.cardholderName = val;\r\n                        continue;\r\n                    } else if (property === 'security_code') {\r\n                        cipher.card.code = val;\r\n                        continue;\r\n                    } else if (property === 'expires') {\r\n                        try {\r\n                            const expDate = new Date(val);\r\n                            cipher.card.expYear = expDate.getFullYear().toString();\r\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\r\n                        } catch { }\r\n                        continue;\r\n                    } else if (property === 'cardType') {\r\n                        continue;\r\n                    }\r\n                } else {\r\n                    if ((property === 'username' || property === 'email') &&\r\n                        this.isNullOrWhitespace(cipher.login.username)) {\r\n                        cipher.login.username = val;\r\n                        continue;\r\n                    } else if (property === 'password') {\r\n                        cipher.login.password = val;\r\n                        continue;\r\n                    } else if (property === 'totp') {\r\n                        cipher.login.totp = val;\r\n                        continue;\r\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\r\n                        this.uriFieldNames.indexOf(property) > -1) {\r\n                        cipher.login.uris = this.makeUriArray(val);\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                this.processKvp(cipher, property, val);\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const doc = this.parseXml(data);\r\n        if (doc == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const records = doc.querySelectorAll('PasswordManager > record');\r\n        Array.from(records).forEach((record) => {\r\n            const category = this.querySelectorDirectChild(record, 'Category');\r\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\r\n                category.textContent !== 'Unfiled' ? category.textContent : null;\r\n            this.processFolder(result, categoryText);\r\n\r\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\r\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\r\n            const password = this.querySelectorDirectChild(record, 'Password');\r\n            const url = this.querySelectorDirectChild(record, 'URL');\r\n            const notes = this.querySelectorDirectChild(record, 'Notes');\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\r\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\r\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\r\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\r\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\r\n\r\n            const attributes: string[] = [];\r\n            for (let i = 1; i <= 10; i++) {\r\n                attributes.push('Attribute-' + i);\r\n            }\r\n\r\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach((attr) => {\r\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\r\n                    return;\r\n                }\r\n                this.processKvp(cipher, attr.tagName, attr.textContent);\r\n            });\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const doc = this.parseXml(data);\r\n        if (doc == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const passwordSafe = doc.querySelector('passwordsafe');\r\n        if (passwordSafe == null) {\r\n            result.errorMessage = 'Missing `passwordsafe` node.';\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\r\n        const entries = doc.querySelectorAll('passwordsafe > entry');\r\n        Array.from(entries).forEach((entry) => {\r\n            const group = this.querySelectorDirectChild(entry, 'group');\r\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\r\n                group.textContent.split('.').join('/') : null;\r\n            this.processFolder(result, groupText);\r\n\r\n            const title = this.querySelectorDirectChild(entry, 'title');\r\n            const username = this.querySelectorDirectChild(entry, 'username');\r\n            const email = this.querySelectorDirectChild(entry, 'email');\r\n            const password = this.querySelectorDirectChild(entry, 'password');\r\n            const url = this.querySelectorDirectChild(entry, 'url');\r\n            const notes = this.querySelectorDirectChild(entry, 'notes');\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\r\n            cipher.notes = notes != null ?\r\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\r\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\r\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\r\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\r\n\r\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\r\n                cipher.login.username = this.getValueOrDefault(email.textContent);\r\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\r\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\r\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.length < 1) {\r\n                return;\r\n            }\r\n            if (value.length > 5) {\r\n                this.processFolder(result, value[5]);\r\n            }\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value[0], '--');\r\n            if (value.length > 4) {\r\n                cipher.notes = this.getValueOrDefault(value[4], '').split('¬').join('\\n');\r\n            }\r\n            if (value.length > 2) {\r\n                cipher.login.username = this.getValueOrDefault(value[2]);\r\n            }\r\n            if (value.length > 3) {\r\n                cipher.login.password = this.getValueOrDefault(value[3]);\r\n            }\r\n            if (value.length > 1) {\r\n                cipher.login.uris = this.makeUriArray(value[1]);\r\n            }\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\n\r\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.trash === 'true') {\r\n                return;\r\n            }\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.name);\r\n            cipher.notes = this.getValueOrDefault(value.notes);\r\n            if (value.type === 'LoginItem') {\r\n                cipher.login.uris = this.makeUriArray(value.website);\r\n                cipher.login.password = this.getValueOrDefault(value.password);\r\n                cipher.login.username = this.getValueOrDefault(value.username);\r\n            } else if (value.type === 'CreditCardItem') {\r\n                cipher.type = CipherType.Card;\r\n                cipher.card = new CardView();\r\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\r\n                cipher.card.number = this.getValueOrDefault(value.number);\r\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n                cipher.card.code = this.getValueOrDefault(value.verification);\r\n\r\n                try {\r\n                    const expMonth = this.getValueOrDefault(value.expiryMonth);\r\n                    if (expMonth != null) {\r\n                        const expMonthNumber = parseInt(expMonth, null);\r\n                        if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\r\n                            cipher.card.expMonth = expMonthNumber.toString();\r\n                        }\r\n                    }\r\n                } catch { }\r\n                try {\r\n                    const expYear = this.getValueOrDefault(value.expiryYear);\r\n                    if (expYear != null) {\r\n                        const expYearNumber = parseInt(expYear, null);\r\n                        if (expYearNumber != null) {\r\n                            cipher.card.expYear = expYearNumber.toString();\r\n                        }\r\n                    }\r\n                } catch { }\r\n\r\n                const pin = this.getValueOrDefault(value.pin);\r\n                if (pin != null) {\r\n                    this.processKvp(cipher, 'PIN', pin);\r\n                }\r\n                const zip = this.getValueOrDefault(value.zipCode);\r\n                if (zip != null) {\r\n                    this.processKvp(cipher, 'Zip Code', zip);\r\n                }\r\n            }\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        let i = 1;\r\n        results.forEach((value) => {\r\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\r\n                value.Folder.replace('/', '') : value.Folder;\r\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\r\n            this.processFolder(result, folderName);\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValueOrDefault(value.Note);\r\n            cipher.name = this.getValueOrDefault(value.Name, '--');\r\n            cipher.login.username = this.getValueOrDefault(value.Login);\r\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\r\n            cipher.login.uris = this.makeUriArray(value.Url);\r\n\r\n            if (!this.isNullOrWhitespace(value.Rf_fields)) {\r\n                let fields: string[] = [value.Rf_fields];\r\n                if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\r\n                    fields = fields.concat(value.__parsed_extra);\r\n                }\r\n                fields.forEach((field: string) => {\r\n                    const parts = field.split(':');\r\n                    if (parts.length < 3) {\r\n                        return;\r\n                    }\r\n                    const key = parts[0] === '-no-name-' ? null : parts[0];\r\n                    const val = parts.length === 4 && parts[2] === 'rck' ? parts[1] : parts[2];\r\n                    this.processKvp(cipher, key, val);\r\n                });\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n\r\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\r\n                return;\r\n            }\r\n\r\n            result.ciphers.push(cipher);\r\n            i++;\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { FolderView } from '../models/view/folderView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const doc = this.parseXml(data);\r\n        if (doc == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const db = doc.querySelector('database');\r\n        if (db == null) {\r\n            result.errorMessage = 'Missing `database` node.';\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const foldersMap = new Map<string, number>();\r\n\r\n        Array.from(doc.querySelectorAll('database > label')).forEach((labelEl) => {\r\n            const name = labelEl.getAttribute('name');\r\n            const id = labelEl.getAttribute('id');\r\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\r\n                foldersMap.set(id, result.folders.length);\r\n                const folder = new FolderView();\r\n                folder.name = name;\r\n                result.folders.push(folder);\r\n            }\r\n        });\r\n\r\n        Array.from(doc.querySelectorAll('database > card')).forEach((cardEl) => {\r\n            if (cardEl.getAttribute('template') === 'true') {\r\n                return;\r\n            }\r\n\r\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\r\n            if (labelIdEl != null) {\r\n                const labelId = labelIdEl.textContent;\r\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\r\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\r\n                }\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\r\n\r\n            const cardType = cardEl.getAttribute('type');\r\n            if (cardType === 'note') {\r\n                cipher.type = CipherType.SecureNote;\r\n                cipher.secureNote = new SecureNoteView();\r\n                cipher.secureNote.type = SecureNoteType.Generic;\r\n            } else {\r\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach((fieldEl) => {\r\n                    const text = fieldEl.textContent;\r\n                    if (this.isNullOrWhitespace(text)) {\r\n                        return;\r\n                    }\r\n                    const name = fieldEl.getAttribute('name');\r\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\r\n                    if (fieldType === 'login') {\r\n                        cipher.login.username = text;\r\n                    } else if (fieldType === 'password') {\r\n                        cipher.login.password = text;\r\n                    } else if (fieldType === 'one_time_password') {\r\n                        cipher.login.totp = text;\r\n                    } else if (fieldType === 'notes') {\r\n                        cipher.notes += (text + '\\n');\r\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\r\n                        cipher.login.uris = this.makeUriArray(text);\r\n                    } else {\r\n                        this.processKvp(cipher, name, text);\r\n                    }\r\n                });\r\n            }\r\n\r\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach((notesEl) => {\r\n                cipher.notes += (notesEl.textContent + '\\n');\r\n            });\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\r\n            cipher.notes = this.getValueOrDefault(value.notes);\r\n            cipher.login.username = this.getValueOrDefault(value.username);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n            cipher.login.uris = this.makeUriArray(value.url);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.Title);\r\n            cipher.notes = this.getValueOrDefault(value.Comment);\r\n            cipher.login.uris = this.makeUriArray(value.Url);\r\n            cipher.login.password = this.getValueOrDefault(value.Password);\r\n            cipher.login.username = this.getValueOrDefault(value.Username);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\nimport { CipherView } from '../models/view/cipherView';\r\n\r\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.length < 3) {\r\n                return;\r\n            }\r\n\r\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\r\n            const cipher = this.initLoginCipher();\r\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\r\n            cipher.name = this.getValueOrDefault(value[1], '--');\r\n\r\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\r\n                cipher.login.username = this.getValueOrDefault(value[2]);\r\n                cipher.login.password = this.getValueOrDefault(value[3]);\r\n                cipher.login.uris = this.makeUriArray(value[4]);\r\n                this.parseFieldsToNotes(cipher, 5, value);\r\n            } else {\r\n                this.parseFieldsToNotes(cipher, 2, value);\r\n            }\r\n\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\r\n        // last 3 rows do not get parsed\r\n        for (let i = startIndex; i < value.length - 3; i++) {\r\n            if (this.isNullOrWhitespace(value[i])) {\r\n                continue;\r\n            }\r\n            cipher.notes += (value[i] + '\\n');\r\n        }\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const doc = this.parseXml(data);\r\n        if (doc == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\r\n        Array.from(loginNodes).forEach((loginNode) => {\r\n            const accountId = loginNode.getAttribute('ID');\r\n            if (this.isNullOrWhitespace(accountId)) {\r\n                return;\r\n            }\r\n\r\n            const usernameText = loginNode.getAttribute('Name');\r\n            const passwordText = loginNode.getAttribute('Password');\r\n            let titleText: string = null;\r\n            let linkText: string = null;\r\n            let notesText: string = null;\r\n            let groupId: string = null;\r\n            let groupText: string = null;\r\n\r\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\r\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\r\n            if (accountLogin != null) {\r\n                const account = accountLogin.parentElement.parentElement;\r\n                if (account != null) {\r\n                    titleText = account.getAttribute('Name');\r\n                    linkText = account.getAttribute('Link');\r\n                    groupId = account.getAttribute('ParentID');\r\n                    notesText = account.getAttribute('Comments');\r\n                    if (!this.isNullOrWhitespace(notesText)) {\r\n                        notesText = notesText.split('/n').join('\\n');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!this.isNullOrWhitespace(groupId)) {\r\n                groupText = this.buildGroupText(doc, groupId, '');\r\n                this.processFolder(result, groupText);\r\n            }\r\n\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(titleText, '--');\r\n            cipher.notes = this.getValueOrDefault(notesText);\r\n            cipher.login.username = this.getValueOrDefault(usernameText);\r\n            cipher.login.password = this.getValueOrDefault(passwordText);\r\n            cipher.login.uris = this.makeUriArray(linkText);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\r\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\r\n        if (group == null) {\r\n            return groupText;\r\n        }\r\n        if (!this.isNullOrWhitespace(groupText)) {\r\n            groupText = '/' + groupText;\r\n        }\r\n        groupText = group.getAttribute('Name') + groupText;\r\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nimport { CardView } from '../models/view/cardView';\r\nimport { SecureNoteView } from '../models/view/secureNoteView';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { SecureNoteType } from '../enums/secureNoteType';\r\n\r\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\r\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\r\n];\r\n\r\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\r\n            cipher.name = this.getValueOrDefault(value.name, '--');\r\n            cipher.notes = this.getValueOrDefault(value.memo, '');\r\n            cipher.login.username = this.getValueOrDefault(value.login);\r\n            cipher.login.password = this.getValueOrDefault(value.password);\r\n            cipher.login.uris = this.makeUriArray(value.url);\r\n\r\n            if (value.kind !== 'login') {\r\n                cipher.name = this.getValueOrDefault(value.title, '--');\r\n                cipher.notes = this.getValueOrDefault(value.note, '');\r\n            }\r\n\r\n            if (value.kind === 'cc') {\r\n                cipher.type = CipherType.Card;\r\n                cipher.card = new CardView();\r\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\r\n                cipher.card.number = this.getValueOrDefault(value.number);\r\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\r\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\r\n                    try {\r\n                        const expDate = new Date(value.expiryDate);\r\n                        cipher.card.expYear = expDate.getFullYear().toString();\r\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\r\n                    } catch { }\r\n                }\r\n            } else if (value.kind !== 'login') {\r\n                cipher.type = CipherType.SecureNote;\r\n                cipher.secureNote = new SecureNoteView();\r\n                cipher.secureNote.type = SecureNoteType.Generic;\r\n                if (!this.isNullOrWhitespace(cipher.notes)) {\r\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\r\n                }\r\n                for (const property in value) {\r\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\r\n                        !this.isNullOrWhitespace(value[property])) {\r\n                        this.processKvp(cipher, property, value[property]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class UpmCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, false);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (value.length !== 5) {\r\n                return;\r\n            }\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value[0], '--');\r\n            cipher.notes = this.getValueOrDefault(value[4]);\r\n            cipher.login.username = this.getValueOrDefault(value[1]);\r\n            cipher.login.password = this.getValueOrDefault(value[2]);\r\n            cipher.login.uris = this.makeUriArray(value[3]);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\n\r\nexport class YotiCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            const cipher = this.initLoginCipher();\r\n            cipher.name = this.getValueOrDefault(value.Name, '--');\r\n            cipher.login.username = this.getValueOrDefault(value['User name']);\r\n            cipher.login.password = this.getValueOrDefault(value.Password);\r\n            cipher.login.uris = this.makeUriArray(value.URL);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n}\r\n","import { BaseImporter } from './baseImporter';\r\nimport { Importer } from './importer';\r\n\r\nimport { ImportResult } from '../models/domain/importResult';\r\nimport { CipherView } from '../models/view';\r\n\r\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\r\n    parse(data: string): ImportResult {\r\n        const result = new ImportResult();\r\n        const results = this.parseCsv(data, true);\r\n        if (results == null) {\r\n            result.success = false;\r\n            return result;\r\n        }\r\n\r\n        results.forEach((value) => {\r\n            if (this.isNullOrWhitespace(value['Password Name']) && this.isNullOrWhitespace(value['Secret Name'])) {\r\n                return;\r\n            }\r\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\r\n            const cipher = this.initLoginCipher();\r\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\r\n            cipher.notes = this.getValueOrDefault(value.Notes);\r\n            cipher.name = this.getValueOrDefault(\r\n                value['Password Name'], this.getValueOrDefault(value['Secret Name'], '--'));\r\n            cipher.login.uris = this.makeUriArray(\r\n                this.getValueOrDefault(value['Password URL'], this.getValueOrDefault(value['Secret URL'])));\r\n            this.parseData(cipher, value.SecretData);\r\n            this.parseData(cipher, value.CustomData);\r\n            this.convertToNoteIfNeeded(cipher);\r\n            this.cleanupCipher(cipher);\r\n            result.ciphers.push(cipher);\r\n        });\r\n\r\n        if (this.organization) {\r\n            this.moveFoldersToCollections(result);\r\n        }\r\n\r\n        result.success = true;\r\n        return result;\r\n    }\r\n\r\n    private parseData(cipher: CipherView, data: string) {\r\n        if (this.isNullOrWhitespace(data)) {\r\n            return;\r\n        }\r\n        const dataLines = this.splitNewLine(data);\r\n        dataLines.forEach((line) => {\r\n            const delimPosition = line.indexOf(':');\r\n            if (delimPosition < 0) {\r\n                return;\r\n            }\r\n            const field = line.substring(0, delimPosition);\r\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\r\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\r\n                return;\r\n            }\r\n            const fieldLower = field.toLowerCase();\r\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\r\n                cipher.login.username = value;\r\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\r\n                cipher.login.password = value;\r\n            } else {\r\n                this.processKvp(cipher, field, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import * as signalR from '@microsoft/signalr';\r\nimport * as signalRMsgPack from '@microsoft/signalr-protocol-msgpack';\r\n\r\nimport { NotificationType } from '../enums/notificationType';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { AppIdService } from '../abstractions/appId.service';\r\nimport { EnvironmentService } from '../abstractions/environment.service';\r\nimport { NotificationsService as NotificationsServiceAbstraction } from '../abstractions/notifications.service';\r\nimport { SyncService } from '../abstractions/sync.service';\r\nimport { UserService } from '../abstractions/user.service';\r\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\r\n\r\nimport {\r\n    NotificationResponse,\r\n    SyncCipherNotification,\r\n    SyncFolderNotification,\r\n} from '../models/response/notificationResponse';\r\n\r\nexport class NotificationsService implements NotificationsServiceAbstraction {\r\n    private signalrConnection: signalR.HubConnection;\r\n    private url: string;\r\n    private connected = false;\r\n    private inited = false;\r\n    private inactive = false;\r\n    private reconnectTimer: any = null;\r\n\r\n    constructor(private userService: UserService, private syncService: SyncService,\r\n        private appIdService: AppIdService, private apiService: ApiService,\r\n        private vaultTimeoutService: VaultTimeoutService, private logoutCallback: () => Promise<void>) { }\r\n\r\n    async init(environmentService: EnvironmentService): Promise<void> {\r\n        this.inited = false;\r\n        this.url = 'https://notifications.bitwarden.com';\r\n        if (environmentService.notificationsUrl != null) {\r\n            this.url = environmentService.notificationsUrl;\r\n        } else if (environmentService.baseUrl != null) {\r\n            this.url = environmentService.baseUrl + '/notifications';\r\n        }\r\n\r\n        // Set notifications server URL to `https://-` to effectively disable communication\r\n        // with the notifications server from the client app\r\n        if (this.url === 'https://-') {\r\n            return;\r\n        }\r\n\r\n        if (this.signalrConnection != null) {\r\n            this.signalrConnection.off('ReceiveMessage');\r\n            this.signalrConnection.off('Heartbeat');\r\n            await this.signalrConnection.stop();\r\n            this.connected = false;\r\n            this.signalrConnection = null;\r\n        }\r\n\r\n        this.signalrConnection = new signalR.HubConnectionBuilder()\r\n            .withUrl(this.url + '/hub', {\r\n                accessTokenFactory: () => this.apiService.getActiveBearerToken(),\r\n                skipNegotiation: true,\r\n                transport: signalR.HttpTransportType.WebSockets,\r\n            })\r\n            .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol())\r\n            // .configureLogging(signalR.LogLevel.Trace)\r\n            .build();\r\n\r\n        this.signalrConnection.on('ReceiveMessage',\r\n            (data: any) => this.processNotification(new NotificationResponse(data)));\r\n        this.signalrConnection.on('Heartbeat',\r\n            (data: any) => { /*console.log('Heartbeat!');*/ });\r\n        this.signalrConnection.onclose(() => {\r\n            this.connected = false;\r\n            this.reconnect(true);\r\n        });\r\n        this.inited = true;\r\n        if (await this.isAuthedAndUnlocked()) {\r\n            await this.reconnect(false);\r\n        }\r\n    }\r\n\r\n    async updateConnection(sync = false): Promise<void> {\r\n        if (!this.inited) {\r\n            return;\r\n        }\r\n        try {\r\n            if (await this.isAuthedAndUnlocked()) {\r\n                await this.reconnect(sync);\r\n            } else {\r\n                await this.signalrConnection.stop();\r\n            }\r\n        } catch (e) {\r\n            // tslint:disable-next-line\r\n            console.error(e.toString());\r\n        }\r\n    }\r\n\r\n    async reconnectFromActivity(): Promise<void> {\r\n        this.inactive = false;\r\n        if (this.inited && !this.connected) {\r\n            await this.reconnect(true);\r\n        }\r\n    }\r\n\r\n    async disconnectFromInactivity(): Promise<void> {\r\n        this.inactive = true;\r\n        if (this.inited && this.connected) {\r\n            await this.signalrConnection.stop();\r\n        }\r\n    }\r\n\r\n    private async processNotification(notification: NotificationResponse) {\r\n        const appId = await this.appIdService.getAppId();\r\n        if (notification == null || notification.contextId === appId) {\r\n            return;\r\n        }\r\n\r\n        const isAuthenticated = await this.userService.isAuthenticated();\r\n        const payloadUserId = notification.payload.userId || notification.payload.UserId;\r\n        const myUserId = await this.userService.getUserId();\r\n        if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\r\n            return;\r\n        }\r\n\r\n        switch (notification.type) {\r\n            case NotificationType.SyncCipherCreate:\r\n            case NotificationType.SyncCipherUpdate:\r\n                await this.syncService.syncUpsertCipher(notification.payload as SyncCipherNotification,\r\n                    notification.type === NotificationType.SyncCipherUpdate);\r\n                break;\r\n            case NotificationType.SyncCipherDelete:\r\n            case NotificationType.SyncLoginDelete:\r\n                await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\r\n                break;\r\n            case NotificationType.SyncFolderCreate:\r\n            case NotificationType.SyncFolderUpdate:\r\n                await this.syncService.syncUpsertFolder(notification.payload as SyncFolderNotification,\r\n                    notification.type === NotificationType.SyncFolderUpdate);\r\n                break;\r\n            case NotificationType.SyncFolderDelete:\r\n                await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\r\n                break;\r\n            case NotificationType.SyncVault:\r\n            case NotificationType.SyncCiphers:\r\n            case NotificationType.SyncSettings:\r\n                if (isAuthenticated) {\r\n                    await this.syncService.fullSync(false);\r\n                }\r\n                break;\r\n            case NotificationType.SyncOrgKeys:\r\n                if (isAuthenticated) {\r\n                    await this.apiService.refreshIdentityToken();\r\n                    await this.syncService.fullSync(true);\r\n                    // Stop so a reconnect can be made\r\n                    await this.signalrConnection.stop();\r\n                }\r\n                break;\r\n            case NotificationType.LogOut:\r\n                if (isAuthenticated) {\r\n                    this.logoutCallback();\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private async reconnect(sync: boolean) {\r\n        if (this.reconnectTimer != null) {\r\n            clearTimeout(this.reconnectTimer);\r\n            this.reconnectTimer = null;\r\n        }\r\n        if (this.connected || !this.inited || this.inactive) {\r\n            return;\r\n        }\r\n        const authedAndUnlocked = await this.isAuthedAndUnlocked();\r\n        if (!authedAndUnlocked) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await this.signalrConnection.start();\r\n            this.connected = true;\r\n            if (sync) {\r\n                await this.syncService.fullSync(false);\r\n            }\r\n        } catch { }\r\n\r\n        if (!this.connected) {\r\n            this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\r\n        }\r\n    }\r\n\r\n    private async isAuthedAndUnlocked() {\r\n        if (await this.userService.isAuthenticated()) {\r\n            const locked = await this.vaultTimeoutService.isLocked();\r\n            return !locked;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private random(min: number, max: number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}\r\n","import { BaseResponse } from './baseResponse';\r\n\r\nimport { NotificationType } from '../../enums/notificationType';\r\n\r\nexport class NotificationResponse extends BaseResponse {\r\n    contextId: string;\r\n    type: NotificationType;\r\n    payload: any;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.contextId = this.getResponseProperty('ContextId');\r\n        this.type = this.getResponseProperty('Type');\r\n\r\n        const payload = this.getResponseProperty('Payload');\r\n        switch (this.type) {\r\n            case NotificationType.SyncCipherCreate:\r\n            case NotificationType.SyncCipherDelete:\r\n            case NotificationType.SyncCipherUpdate:\r\n            case NotificationType.SyncLoginDelete:\r\n                this.payload = new SyncCipherNotification(payload);\r\n                break;\r\n            case NotificationType.SyncFolderCreate:\r\n            case NotificationType.SyncFolderDelete:\r\n            case NotificationType.SyncFolderUpdate:\r\n                this.payload = new SyncFolderNotification(payload);\r\n                break;\r\n            case NotificationType.SyncVault:\r\n            case NotificationType.SyncCiphers:\r\n            case NotificationType.SyncOrgKeys:\r\n            case NotificationType.SyncSettings:\r\n            case NotificationType.LogOut:\r\n                this.payload = new UserNotification(payload);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport class SyncCipherNotification extends BaseResponse {\r\n    id: string;\r\n    userId: string;\r\n    organizationId: string;\r\n    collectionIds: string[];\r\n    revisionDate: Date;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.userId = this.getResponseProperty('UserId');\r\n        this.organizationId = this.getResponseProperty('OrganizationId');\r\n        this.collectionIds = this.getResponseProperty('CollectionIds');\r\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\r\n    }\r\n}\r\n\r\nexport class SyncFolderNotification extends BaseResponse {\r\n    id: string;\r\n    userId: string;\r\n    revisionDate: Date;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.id = this.getResponseProperty('Id');\r\n        this.userId = this.getResponseProperty('UserId');\r\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\r\n    }\r\n}\r\n\r\nexport class UserNotification extends BaseResponse {\r\n    userId: string;\r\n    date: Date;\r\n\r\n    constructor(response: any) {\r\n        super(response);\r\n        this.userId = this.getResponseProperty('UserId');\r\n        this.date = new Date(this.getResponseProperty('Date'));\r\n    }\r\n}\r\n","import { PolicyService as PolicyServiceAbstraction } from '../abstractions/policy.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { UserService } from '../abstractions/user.service';\r\n\r\nimport { PolicyData } from '../models/data/policyData';\r\n\r\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\r\nimport { Policy } from '../models/domain/policy';\r\n\r\nimport { PolicyType } from '../enums/policyType';\r\n\r\nconst Keys = {\r\n    policiesPrefix: 'policies_',\r\n};\r\n\r\nexport class PolicyService implements PolicyServiceAbstraction {\r\n    policyCache: Policy[];\r\n\r\n    constructor(private userService: UserService, private storageService: StorageService) {\r\n    }\r\n\r\n    clearCache(): void {\r\n        this.policyCache = null;\r\n    }\r\n\r\n    async getAll(type?: PolicyType): Promise<Policy[]> {\r\n        if (this.policyCache == null) {\r\n            const userId = await this.userService.getUserId();\r\n            const policies = await this.storageService.get<{ [id: string]: PolicyData; }>(\r\n                Keys.policiesPrefix + userId);\r\n            const response: Policy[] = [];\r\n            for (const id in policies) {\r\n                if (policies.hasOwnProperty(id)) {\r\n                    response.push(new Policy(policies[id]));\r\n                }\r\n            }\r\n            this.policyCache = response;\r\n        }\r\n        if (type != null) {\r\n            return this.policyCache.filter((p) => p.type === type);\r\n        } else {\r\n            return this.policyCache;\r\n        }\r\n    }\r\n\r\n    async replace(policies: { [id: string]: PolicyData; }): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        await this.storageService.save(Keys.policiesPrefix + userId, policies);\r\n        this.policyCache = null;\r\n    }\r\n\r\n    async clear(userId: string): Promise<any> {\r\n        await this.storageService.remove(Keys.policiesPrefix + userId);\r\n        this.policyCache = null;\r\n    }\r\n\r\n    async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\r\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\r\n\r\n        if (policies == null) {\r\n            policies = await this.getAll(PolicyType.MasterPassword);\r\n        } else {\r\n            policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\r\n        }\r\n\r\n        if (policies == null || policies.length === 0) {\r\n            return enforcedOptions;\r\n        }\r\n\r\n        policies.forEach((currentPolicy) => {\r\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\r\n                return;\r\n            }\r\n\r\n            if (enforcedOptions == null) {\r\n                enforcedOptions = new MasterPasswordPolicyOptions();\r\n            }\r\n\r\n            if (currentPolicy.data.minComplexity != null\r\n                && currentPolicy.data.minComplexity > enforcedOptions.minComplexity) {\r\n                enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\r\n            }\r\n\r\n            if (currentPolicy.data.minLength != null\r\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\r\n                enforcedOptions.minLength = currentPolicy.data.minLength;\r\n            }\r\n\r\n            if (currentPolicy.data.requireUpper) {\r\n                enforcedOptions.requireUpper = true;\r\n            }\r\n\r\n            if (currentPolicy.data.requireLower) {\r\n                enforcedOptions.requireLower = true;\r\n            }\r\n\r\n            if (currentPolicy.data.requireNumbers) {\r\n                enforcedOptions.requireNumbers = true;\r\n            }\r\n\r\n            if (currentPolicy.data.requireSpecial) {\r\n                enforcedOptions.requireSpecial = true;\r\n            }\r\n        });\r\n\r\n        return enforcedOptions;\r\n    }\r\n\r\n    evaluateMasterPassword(passwordStrength: number, newPassword: string,\r\n        enforcedPolicyOptions: MasterPasswordPolicyOptions): boolean {\r\n        if (enforcedPolicyOptions == null) {\r\n            return true;\r\n        }\r\n\r\n        if (enforcedPolicyOptions.minComplexity > 0 && enforcedPolicyOptions.minComplexity > passwordStrength) {\r\n            return false;\r\n        }\r\n\r\n        if (enforcedPolicyOptions.minLength > 0 && enforcedPolicyOptions.minLength > newPassword.length) {\r\n            return false;\r\n        }\r\n\r\n        if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\r\n            return false;\r\n        }\r\n\r\n        if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\r\n            return false;\r\n        }\r\n\r\n        if (enforcedPolicyOptions.requireNumbers && !(/[0-9]/.test(newPassword))) {\r\n            return false;\r\n        }\r\n\r\n        if (enforcedPolicyOptions.requireSpecial && !(/[!@#$%\\^&*]/g.test(newPassword))) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import Domain from './domainBase';\r\n\r\nexport class MasterPasswordPolicyOptions extends Domain {\r\n    minComplexity: number = 0;\r\n    minLength: number = 0;\r\n    requireUpper: boolean = false;\r\n    requireLower: boolean = false;\r\n    requireNumbers: boolean = false;\r\n    requireSpecial: boolean = false;\r\n}\r\n","import * as lunr from 'lunr';\r\n\r\nimport { CipherView } from '../models/view/cipherView';\r\n\r\nimport { CipherService } from '../abstractions/cipher.service';\r\nimport { SearchService as SearchServiceAbstraction } from '../abstractions/search.service';\r\n\r\nimport { CipherType } from '../enums/cipherType';\r\nimport { FieldType } from '../enums/fieldType';\r\nimport { UriMatchType } from '../enums/uriMatchType';\r\n\r\nexport class SearchService implements SearchServiceAbstraction {\r\n    private indexing = false;\r\n    private index: lunr.Index = null;\r\n\r\n    constructor(private cipherService: CipherService) {\r\n    }\r\n\r\n    clearIndex(): void {\r\n        this.index = null;\r\n    }\r\n\r\n    isSearchable(query: string): boolean {\r\n        const notSearchable = query == null || (this.index == null && query.length < 2) ||\r\n            (this.index != null && query.length < 2 && query.indexOf('>') !== 0);\r\n        return !notSearchable;\r\n    }\r\n\r\n    async indexCiphers(): Promise<void> {\r\n        if (this.indexing) {\r\n            return;\r\n        }\r\n        // tslint:disable-next-line\r\n        console.time('search indexing');\r\n        this.indexing = true;\r\n        this.index = null;\r\n        const builder = new lunr.Builder();\r\n        builder.ref('id');\r\n        builder.field('shortid', { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\r\n        builder.field('name', { boost: 10 });\r\n        builder.field('subtitle', {\r\n            boost: 5,\r\n            extractor: (c: CipherView) => {\r\n                if (c.subTitle != null && c.type === CipherType.Card) {\r\n                    return c.subTitle.replace(/\\*/g, '');\r\n                }\r\n                return c.subTitle;\r\n            },\r\n        });\r\n        builder.field('notes');\r\n        builder.field('login.username', {\r\n            extractor: (c: CipherView) => c.type === CipherType.Login && c.login != null ? c.login.username : null,\r\n        });\r\n        builder.field('login.uris', { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\r\n        builder.field('fields', { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\r\n        builder.field('fields_joined', { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\r\n        builder.field('attachments', { extractor: (c: CipherView) => this.attachmentExtractor(c, false) });\r\n        builder.field('attachments_joined',\r\n            { extractor: (c: CipherView) => this.attachmentExtractor(c, true) });\r\n        builder.field('organizationid', { extractor: (c: CipherView) => c.organizationId });\r\n        const ciphers = await this.cipherService.getAllDecrypted();\r\n        ciphers.forEach((c) => builder.add(c));\r\n        this.index = builder.build();\r\n        this.indexing = false;\r\n        // tslint:disable-next-line\r\n        console.timeEnd('search indexing');\r\n    }\r\n\r\n    async searchCiphers(query: string,\r\n        filter: (((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[])) = null,\r\n        ciphers: CipherView[] = null):\r\n        Promise<CipherView[]> {\r\n        const results: CipherView[] = [];\r\n        if (query != null) {\r\n            query = query.trim().toLowerCase();\r\n        }\r\n        if (query === '') {\r\n            query = null;\r\n        }\r\n\r\n        if (ciphers == null) {\r\n            ciphers = await this.cipherService.getAllDecrypted();\r\n        }\r\n\r\n        if (filter != null && Array.isArray(filter) && filter.length > 0) {\r\n            ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\r\n        } else if (filter != null) {\r\n            ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\r\n        }\r\n\r\n        if (!this.isSearchable(query)) {\r\n            return ciphers;\r\n        }\r\n\r\n        if (this.indexing) {\r\n            await new Promise((r) => setTimeout(r, 250));\r\n            if (this.indexing) {\r\n                await new Promise((r) => setTimeout(r, 500));\r\n            }\r\n        }\r\n\r\n        const index = this.getIndexForSearch();\r\n        if (index == null) {\r\n            // Fall back to basic search if index is not available\r\n            return this.searchCiphersBasic(ciphers, query);\r\n        }\r\n\r\n        const ciphersMap = new Map<string, CipherView>();\r\n        ciphers.forEach((c) => ciphersMap.set(c.id, c));\r\n\r\n        let searchResults: lunr.Index.Result[] = null;\r\n        const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;\r\n        if (isQueryString) {\r\n            try {\r\n                searchResults = index.search(query.substr(1).trim());\r\n            } catch { }\r\n        } else {\r\n            // tslint:disable-next-line\r\n            const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\r\n            searchResults = index.query((q) => {\r\n                lunr.tokenizer(query).forEach((token) => {\r\n                    const t = token.toString();\r\n                    q.term(t, { fields: ['name'], wildcard: soWild });\r\n                    q.term(t, { fields: ['subtitle'], wildcard: soWild });\r\n                    q.term(t, { fields: ['login.uris'], wildcard: soWild });\r\n                    q.term(t, {});\r\n                });\r\n            });\r\n        }\r\n\r\n        if (searchResults != null) {\r\n            searchResults.forEach((r) => {\r\n                if (ciphersMap.has(r.ref)) {\r\n                    results.push(ciphersMap.get(r.ref));\r\n                }\r\n            });\r\n        }\r\n        return results;\r\n    }\r\n\r\n    searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\r\n        query = query.trim().toLowerCase();\r\n        return ciphers.filter((c) => {\r\n            if (deleted !== c.isDeleted) {\r\n                return false;\r\n            }\r\n            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\r\n                return true;\r\n            }\r\n            if (query.length >= 8 && c.id.startsWith(query)) {\r\n                return true;\r\n            }\r\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\r\n                return true;\r\n            }\r\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    getIndexForSearch(): lunr.Index {\r\n        return this.index;\r\n    }\r\n\r\n    private fieldExtractor(c: CipherView, joined: boolean) {\r\n        if (!c.hasFields) {\r\n            return null;\r\n        }\r\n        let fields: string[] = [];\r\n        c.fields.forEach((f) => {\r\n            if (f.name != null) {\r\n                fields.push(f.name);\r\n            }\r\n            if (f.type === FieldType.Text && f.value != null) {\r\n                fields.push(f.value);\r\n            }\r\n        });\r\n        fields = fields.filter((f) => f.trim() !== '');\r\n        if (fields.length === 0) {\r\n            return null;\r\n        }\r\n        return joined ? fields.join(' ') : fields;\r\n    }\r\n\r\n    private attachmentExtractor(c: CipherView, joined: boolean) {\r\n        if (!c.hasAttachments) {\r\n            return null;\r\n        }\r\n        let attachments: string[] = [];\r\n        c.attachments.forEach((a) => {\r\n            if (a != null && a.fileName != null) {\r\n                if (joined && a.fileName.indexOf('.') > -1) {\r\n                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));\r\n                } else {\r\n                    attachments.push(a.fileName);\r\n                }\r\n            }\r\n        });\r\n        attachments = attachments.filter((f) => f.trim() !== '');\r\n        if (attachments.length === 0) {\r\n            return null;\r\n        }\r\n        return joined ? attachments.join(' ') : attachments;\r\n    }\r\n\r\n    private uriExtractor(c: CipherView) {\r\n        if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\r\n            return null;\r\n        }\r\n        const uris: string[] = [];\r\n        c.login.uris.forEach((u) => {\r\n            if (u.uri == null || u.uri === '') {\r\n                return;\r\n            }\r\n            if (u.hostname != null) {\r\n                uris.push(u.hostname);\r\n                return;\r\n            }\r\n            let uri = u.uri;\r\n            if (u.match !== UriMatchType.RegularExpression) {\r\n                const protocolIndex = uri.indexOf('://');\r\n                if (protocolIndex > -1) {\r\n                    uri = uri.substr(protocolIndex + 3);\r\n                }\r\n                const queryIndex = uri.search(/\\?|&|#/);\r\n                if (queryIndex > -1) {\r\n                    uri = uri.substring(0, queryIndex);\r\n                }\r\n            }\r\n            uris.push(uri);\r\n        });\r\n        return uris.length > 0 ? uris : null;\r\n    }\r\n}\r\n","import { SendData } from '../models/data/sendData';\r\n\r\nimport { SendRequest } from '../models/request/sendRequest';\r\n\r\nimport { SendResponse } from '../models/response/sendResponse';\r\n\r\nimport { Send } from '../models/domain/send';\r\nimport { SendFile } from '../models/domain/sendFile';\r\nimport { SendText } from '../models/domain/sendText';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nimport { SendType } from '../enums/sendType';\r\n\r\nimport { SendView } from '../models/view/sendView';\r\n\r\nimport { ApiService } from '../abstractions/api.service';\r\nimport { CryptoService } from '../abstractions/crypto.service';\r\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\r\nimport { I18nService } from '../abstractions/i18n.service';\r\nimport { SendService as SendServiceAbstraction } from '../abstractions/send.service';\r\nimport { StorageService } from '../abstractions/storage.service';\r\nimport { UserService } from '../abstractions/user.service';\r\n\r\nimport { Utils } from '../misc/utils';\r\n\r\nconst Keys = {\r\n    sendsPrefix: 'sends_',\r\n};\r\n\r\nexport class SendService implements SendServiceAbstraction {\r\n    decryptedSendCache: SendView[];\r\n\r\n    constructor(private cryptoService: CryptoService, private userService: UserService,\r\n        private apiService: ApiService, private storageService: StorageService,\r\n        private i18nService: I18nService, private cryptoFunctionService: CryptoFunctionService) { }\r\n\r\n    clearCache(): void {\r\n        this.decryptedSendCache = null;\r\n    }\r\n\r\n    async encrypt(model: SendView, file: File, password: string,\r\n        key?: SymmetricCryptoKey): Promise<[Send, ArrayBuffer]> {\r\n        let fileData: ArrayBuffer = null;\r\n        const send = new Send();\r\n        send.id = model.id;\r\n        send.type = model.type;\r\n        send.disabled = model.disabled;\r\n        send.maxAccessCount = model.maxAccessCount;\r\n        if (model.key == null) {\r\n            model.key = await this.cryptoFunctionService.randomBytes(16);\r\n            model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\r\n        }\r\n        if (password != null) {\r\n            const passwordHash = await this.cryptoFunctionService.pbkdf2(password, model.key, 'sha256', 100000);\r\n            send.password = Utils.fromBufferToB64(passwordHash);\r\n        }\r\n        send.key = await this.cryptoService.encrypt(model.key, key);\r\n        send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\r\n        send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\r\n        if (send.type === SendType.Text) {\r\n            send.text = new SendText();\r\n            send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\r\n            send.text.hidden = model.text.hidden;\r\n        } else if (send.type === SendType.File) {\r\n            send.file = new SendFile();\r\n            if (file != null) {\r\n                fileData = await this.parseFile(send, file, model.cryptoKey);\r\n            }\r\n        }\r\n\r\n        return [send, fileData];\r\n    }\r\n\r\n    async get(id: string): Promise<Send> {\r\n        const userId = await this.userService.getUserId();\r\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\r\n            Keys.sendsPrefix + userId);\r\n        if (sends == null || !sends.hasOwnProperty(id)) {\r\n            return null;\r\n        }\r\n\r\n        return new Send(sends[id]);\r\n    }\r\n\r\n    async getAll(): Promise<Send[]> {\r\n        const userId = await this.userService.getUserId();\r\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\r\n            Keys.sendsPrefix + userId);\r\n        const response: Send[] = [];\r\n        for (const id in sends) {\r\n            if (sends.hasOwnProperty(id)) {\r\n                response.push(new Send(sends[id]));\r\n            }\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getAllDecrypted(): Promise<SendView[]> {\r\n        if (this.decryptedSendCache != null) {\r\n            return this.decryptedSendCache;\r\n        }\r\n\r\n        const hasKey = await this.cryptoService.hasKey();\r\n        if (!hasKey) {\r\n            throw new Error('No key.');\r\n        }\r\n\r\n        const decSends: SendView[] = [];\r\n        const promises: Promise<any>[] = [];\r\n        const sends = await this.getAll();\r\n        sends.forEach((send) => {\r\n            promises.push(send.decrypt().then((f) => decSends.push(f)));\r\n        });\r\n\r\n        await Promise.all(promises);\r\n        decSends.sort(Utils.getSortFunction(this.i18nService, 'name'));\r\n\r\n        this.decryptedSendCache = decSends;\r\n        return this.decryptedSendCache;\r\n    }\r\n\r\n    async saveWithServer(sendData: [Send, ArrayBuffer]): Promise<any> {\r\n        const request = new SendRequest(sendData[0]);\r\n        let response: SendResponse;\r\n        if (sendData[0].id == null) {\r\n            if (sendData[0].type === SendType.Text) {\r\n                response = await this.apiService.postSend(request);\r\n            } else {\r\n                const fd = new FormData();\r\n                try {\r\n                    const blob = new Blob([sendData[1]], { type: 'application/octet-stream' });\r\n                    fd.append('model', JSON.stringify(request));\r\n                    fd.append('data', blob, sendData[0].file.fileName.encryptedString);\r\n                } catch (e) {\r\n                    if (Utils.isNode && !Utils.isBrowser) {\r\n                        fd.append('model', JSON.stringify(request));\r\n                        fd.append('data', Buffer.from(sendData[1]) as any, {\r\n                            filepath: sendData[0].file.fileName.encryptedString,\r\n                            contentType: 'application/octet-stream',\r\n                        } as any);\r\n                    } else {\r\n                        throw e;\r\n                    }\r\n                }\r\n                response = await this.apiService.postSendFile(fd);\r\n            }\r\n            sendData[0].id = response.id;\r\n        } else {\r\n            response = await this.apiService.putSend(sendData[0].id, request);\r\n        }\r\n\r\n        const userId = await this.userService.getUserId();\r\n        const data = new SendData(response, userId);\r\n        await this.upsert(data);\r\n\r\n    }\r\n\r\n    async upsert(send: SendData | SendData[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        let sends = await this.storageService.get<{ [id: string]: SendData; }>(\r\n            Keys.sendsPrefix + userId);\r\n        if (sends == null) {\r\n            sends = {};\r\n        }\r\n\r\n        if (send instanceof SendData) {\r\n            const s = send as SendData;\r\n            sends[s.id] = s;\r\n        } else {\r\n            (send as SendData[]).forEach((s) => {\r\n                sends[s.id] = s;\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\r\n        this.decryptedSendCache = null;\r\n    }\r\n\r\n    async replace(sends: { [id: string]: SendData; }): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\r\n        this.decryptedSendCache = null;\r\n    }\r\n\r\n    async clear(userId: string): Promise<any> {\r\n        await this.storageService.remove(Keys.sendsPrefix + userId);\r\n        this.decryptedSendCache = null;\r\n    }\r\n\r\n    async delete(id: string | string[]): Promise<any> {\r\n        const userId = await this.userService.getUserId();\r\n        const sends = await this.storageService.get<{ [id: string]: SendData; }>(\r\n            Keys.sendsPrefix + userId);\r\n        if (sends == null) {\r\n            return;\r\n        }\r\n\r\n        if (typeof id === 'string') {\r\n            if (sends[id] == null) {\r\n                return;\r\n            }\r\n            delete sends[id];\r\n        } else {\r\n            (id as string[]).forEach((i) => {\r\n                delete sends[i];\r\n            });\r\n        }\r\n\r\n        await this.storageService.save(Keys.sendsPrefix + userId, sends);\r\n        this.decryptedSendCache = null;\r\n    }\r\n\r\n    async deleteWithServer(id: string): Promise<any> {\r\n        await this.apiService.deleteSend(id);\r\n        await this.delete(id);\r\n    }\r\n\r\n    private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(file);\r\n            reader.onload = async (evt) => {\r\n                try {\r\n                    send.file.fileName = await this.cryptoService.encrypt(file.name, key);\r\n                    const fileData = await this.cryptoService.encryptToBytes(evt.target.result as ArrayBuffer, key);\r\n                    resolve(fileData);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.onerror = (evt) => {\r\n                reject('Error reading file.');\r\n            };\r\n        });\r\n    }\r\n}\r\n","import { SendType } from '../../enums/sendType';\r\n\r\nimport { SendFileApi } from '../api/sendFileApi'\r\nimport { SendTextApi } from '../api/sendTextApi';\r\n\r\nimport { Send } from '../domain/send';\r\n\r\nexport class SendRequest {\r\n    type: SendType;\r\n    name: string;\r\n    notes: string;\r\n    key: string;\r\n    maxAccessCount?: number;\r\n    expirationDate: string;\r\n    deletionDate: string;\r\n    text: SendTextApi;\r\n    file: SendFileApi;\r\n    password: string;\r\n    disabled: boolean;\r\n\r\n    constructor(send: Send) {\r\n        this.type = send.type;\r\n        this.name = send.name ? send.name.encryptedString : null;\r\n        this.notes = send.notes ? send.notes.encryptedString : null;\r\n        this.maxAccessCount = send.maxAccessCount;\r\n        this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\r\n        this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\r\n        this.key = send.key != null ? send.key.encryptedString : null;\r\n        this.password = send.password;\r\n        this.disabled = send.disabled;\r\n\r\n        switch (this.type) {\r\n            case SendType.Text:\r\n                this.text = new SendTextApi();\r\n                this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\r\n                this.text.hidden = send.text.hidden;\r\n                break;\r\n            case SendType.File:\r\n                this.file = new SendFileApi();\r\n                this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import * as forge from 'node-forge';\r\n\r\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\r\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\r\n\r\nimport { Utils } from '../misc/utils';\r\n\r\nimport { DecryptParameters } from '../models/domain/decryptParameters';\r\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\r\n\r\nexport class WebCryptoFunctionService implements CryptoFunctionService {\r\n    private crypto: Crypto;\r\n    private subtle: SubtleCrypto;\r\n    private isIE: boolean;\r\n    private isOldSafari: boolean;\r\n\r\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\r\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\r\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\r\n        this.isIE = platformUtilsService.isIE();\r\n        const ua = win.navigator.userAgent;\r\n        this.isOldSafari = platformUtilsService.isSafari() &&\r\n            (ua.indexOf(' Version/10.') > -1 || ua.indexOf(' Version/9.') > -1);\r\n    }\r\n\r\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\r\n        iterations: number): Promise<ArrayBuffer> {\r\n        if (this.isIE || this.isOldSafari) {\r\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\r\n            const passwordBytes = this.toByteString(password);\r\n            const saltBytes = this.toByteString(salt);\r\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\r\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\r\n        }\r\n\r\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\r\n        const passwordBuf = this.toBuf(password);\r\n        const saltBuf = this.toBuf(salt);\r\n\r\n        const pbkdf2Params: Pbkdf2Params = {\r\n            name: 'PBKDF2',\r\n            salt: saltBuf,\r\n            iterations: iterations,\r\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\r\n        };\r\n\r\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\r\n            false, ['deriveBits']);\r\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\r\n    }\r\n\r\n    async hkdf(ikm: ArrayBuffer, salt: string | ArrayBuffer, info: string | ArrayBuffer,\r\n        outputByteSize: number, algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\r\n        const saltBuf = this.toBuf(salt);\r\n        const infoBuf = this.toBuf(info);\r\n\r\n        const hkdfParams: HkdfParams = {\r\n            name: 'HKDF',\r\n            salt: saltBuf,\r\n            info: infoBuf,\r\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\r\n        };\r\n\r\n        const impKey = await this.subtle.importKey('raw', ikm, { name: 'HKDF' } as any,\r\n            false, ['deriveBits']);\r\n        return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\r\n    }\r\n\r\n    // ref: https://tools.ietf.org/html/rfc5869\r\n    async hkdfExpand(prk: ArrayBuffer, info: string | ArrayBuffer, outputByteSize: number,\r\n        algorithm: 'sha256' | 'sha512'): Promise<ArrayBuffer> {\r\n        const hashLen = algorithm === 'sha256' ? 32 : 64;\r\n        if (outputByteSize > 255 * hashLen) {\r\n            throw new Error('outputByteSize is too large.');\r\n        }\r\n        const prkArr = new Uint8Array(prk);\r\n        if (prkArr.length < hashLen) {\r\n            throw new Error('prk is too small.');\r\n        }\r\n        const infoBuf = this.toBuf(info);\r\n        const infoArr = new Uint8Array(infoBuf);\r\n        let runningOkmLength = 0;\r\n        let previousT = new Uint8Array(0);\r\n        const n = Math.ceil(outputByteSize / hashLen);\r\n        const okm = new Uint8Array(n * hashLen);\r\n        for (let i = 0; i < n; i++) {\r\n            const t = new Uint8Array(previousT.length + infoArr.length + 1);\r\n            t.set(previousT);\r\n            t.set(infoArr, previousT.length);\r\n            t.set([i + 1], t.length - 1);\r\n            previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\r\n            okm.set(previousT, runningOkmLength);\r\n            runningOkmLength += previousT.length;\r\n            if (runningOkmLength >= outputByteSize) {\r\n                break;\r\n            }\r\n        }\r\n        return okm.slice(0, outputByteSize).buffer;\r\n    }\r\n\r\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): Promise<ArrayBuffer> {\r\n        if ((this.isIE && algorithm === 'sha1') || algorithm === 'md5') {\r\n            const md = algorithm === 'md5' ? forge.md.md5.create() : forge.md.sha1.create();\r\n            const valueBytes = this.toByteString(value);\r\n            md.update(valueBytes, 'raw');\r\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\r\n        }\r\n\r\n        const valueBuf = this.toBuf(value);\r\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\r\n    }\r\n\r\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\r\n        if (this.isIE && algorithm === 'sha512') {\r\n            const hmac = (forge as any).hmac.create();\r\n            const keyBytes = this.toByteString(key);\r\n            const valueBytes = this.toByteString(value);\r\n            hmac.start(algorithm, keyBytes);\r\n            hmac.update(valueBytes, 'raw');\r\n            return Utils.fromByteStringToArray(hmac.digest().data).buffer;\r\n        }\r\n\r\n        const signingAlgorithm = {\r\n            name: 'HMAC',\r\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\r\n        };\r\n\r\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\r\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\r\n    }\r\n\r\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\r\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\r\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\r\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\r\n        const macKey = await this.randomBytes(32);\r\n        const signingAlgorithm = {\r\n            name: 'HMAC',\r\n            hash: { name: 'SHA-256' },\r\n        };\r\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\r\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\r\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\r\n\r\n        if (mac1.byteLength !== mac2.byteLength) {\r\n            return false;\r\n        }\r\n\r\n        const arr1 = new Uint8Array(mac1);\r\n        const arr2 = new Uint8Array(mac2);\r\n        for (let i = 0; i < arr2.length; i++) {\r\n            if (arr1[i] !== arr2[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\r\n        const hmac = (forge as any).hmac.create();\r\n        hmac.start(algorithm, key);\r\n        hmac.update(value);\r\n        const bytes = hmac.digest().getBytes();\r\n        return Promise.resolve(bytes);\r\n    }\r\n\r\n    async compareFast(a: string, b: string): Promise<boolean> {\r\n        const rand = await this.randomBytes(32);\r\n        const bytes = new Uint32Array(rand);\r\n        const buffer = forge.util.createBuffer();\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            buffer.putInt32(bytes[i]);\r\n        }\r\n        const macKey = buffer.getBytes();\r\n\r\n        const hmac = (forge as any).hmac.create();\r\n        hmac.start('sha256', macKey);\r\n        hmac.update(a);\r\n        const mac1 = hmac.digest().getBytes();\r\n\r\n        hmac.start(null, null);\r\n        hmac.update(b);\r\n        const mac2 = hmac.digest().getBytes();\r\n\r\n        const equals = mac1 === mac2;\r\n        return equals;\r\n    }\r\n\r\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\r\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\r\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\r\n    }\r\n\r\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\r\n        DecryptParameters<string> {\r\n        const p = new DecryptParameters<string>();\r\n        if (key.meta != null) {\r\n            p.encKey = key.meta.encKeyByteString;\r\n            p.macKey = key.meta.macKeyByteString;\r\n        }\r\n\r\n        if (p.encKey == null) {\r\n            p.encKey = forge.util.decode64(key.encKeyB64);\r\n        }\r\n        p.data = forge.util.decode64(data);\r\n        p.iv = forge.util.decode64(iv);\r\n        p.macData = p.iv + p.data;\r\n        if (p.macKey == null && key.macKeyB64 != null) {\r\n            p.macKey = forge.util.decode64(key.macKeyB64);\r\n        }\r\n        if (mac != null) {\r\n            p.mac = forge.util.decode64(mac);\r\n        }\r\n\r\n        // cache byte string keys for later\r\n        if (key.meta == null) {\r\n            key.meta = {};\r\n        }\r\n        if (key.meta.encKeyByteString == null) {\r\n            key.meta.encKeyByteString = p.encKey;\r\n        }\r\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\r\n            key.meta.macKeyByteString = p.macKey;\r\n        }\r\n\r\n        return p;\r\n    }\r\n\r\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\r\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\r\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\r\n        decipher.start({ iv: parameters.iv });\r\n        decipher.update(dataBuffer);\r\n        decipher.finish();\r\n        const val = decipher.output.toString('utf8');\r\n        return Promise.resolve(val);\r\n    }\r\n\r\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\r\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\r\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\r\n    }\r\n\r\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\r\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\r\n        // We cannot use the proper types here.\r\n        const rsaParams = {\r\n            name: 'RSA-OAEP',\r\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\r\n        };\r\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\r\n        return await this.subtle.encrypt(rsaParams, impKey, data);\r\n    }\r\n\r\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\r\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\r\n        // We cannot use the proper types here.\r\n        const rsaParams = {\r\n            name: 'RSA-OAEP',\r\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\r\n        };\r\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\r\n        return await this.subtle.decrypt(rsaParams, impKey, data);\r\n    }\r\n\r\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\r\n        const rsaParams = {\r\n            name: 'RSA-OAEP',\r\n            // Have to specify some algorithm\r\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\r\n        };\r\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\r\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\r\n        const jwkPublicKeyParams = {\r\n            kty: 'RSA',\r\n            e: jwkPrivateKey.e,\r\n            n: jwkPrivateKey.n,\r\n            alg: 'RSA-OAEP',\r\n            ext: true,\r\n        };\r\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\r\n        return await this.subtle.exportKey('spki', impPublicKey);\r\n    }\r\n\r\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\r\n        const rsaParams = {\r\n            name: 'RSA-OAEP',\r\n            modulusLength: length,\r\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\r\n            // Have to specify some algorithm\r\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\r\n        };\r\n        const keyPair = await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt']);\r\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\r\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\r\n        return [publicKey, privateKey];\r\n    }\r\n\r\n    randomBytes(length: number): Promise<ArrayBuffer> {\r\n        const arr = new Uint8Array(length);\r\n        this.crypto.getRandomValues(arr);\r\n        return Promise.resolve(arr.buffer);\r\n    }\r\n\r\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\r\n        let buf: ArrayBuffer;\r\n        if (typeof (value) === 'string') {\r\n            buf = Utils.fromUtf8ToArray(value).buffer;\r\n        } else {\r\n            buf = value;\r\n        }\r\n        return buf;\r\n    }\r\n\r\n    private toByteString(value: string | ArrayBuffer): string {\r\n        let bytes: string;\r\n        if (typeof (value) === 'string') {\r\n            bytes = forge.util.encodeUtf8(value);\r\n        } else {\r\n            bytes = Utils.fromBufferToByteString(value);\r\n        }\r\n        return bytes;\r\n    }\r\n\r\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): string {\r\n        if (algorithm === 'md5') {\r\n            throw new Error('MD5 is not supported in WebCrypto.');\r\n        }\r\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\r\n    }\r\n}\r\n","export class DecryptParameters<T> {\r\n    encKey: T;\r\n    data: T;\r\n    iv: T;\r\n    macKey: T;\r\n    mac: T;\r\n    macData: T;\r\n}\r\n","import * as jq from 'jquery';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\nimport {\r\n    BodyOutputType,\r\n    Toast,\r\n    ToasterConfig,\r\n    ToasterContainerComponent,\r\n    ToasterService,\r\n} from 'angular2-toaster';\r\nimport { Angulartics2 } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\r\n\r\nimport {\r\n    Component,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    SecurityContext,\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport {\r\n    NavigationEnd,\r\n    Router,\r\n} from '@angular/router';\r\n\r\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\r\n\r\nimport { StorageService } from 'jslib/abstractions/storage.service';\r\n\r\nimport { AuthService } from 'jslib/abstractions/auth.service';\r\nimport { CipherService } from 'jslib/abstractions/cipher.service';\r\nimport { CollectionService } from 'jslib/abstractions/collection.service';\r\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\r\nimport { EventService } from 'jslib/abstractions/event.service';\r\nimport { FolderService } from 'jslib/abstractions/folder.service';\r\nimport { I18nService } from 'jslib/abstractions/i18n.service';\r\nimport { NotificationsService } from 'jslib/abstractions/notifications.service';\r\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\r\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\r\nimport { PolicyService } from 'jslib/abstractions/policy.service';\r\nimport { SearchService } from 'jslib/abstractions/search.service';\r\nimport { SettingsService } from 'jslib/abstractions/settings.service';\r\nimport { StateService } from 'jslib/abstractions/state.service';\r\nimport { SyncService } from 'jslib/abstractions/sync.service';\r\nimport { TokenService } from 'jslib/abstractions/token.service';\r\nimport { UserService } from 'jslib/abstractions/user.service';\r\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\r\n\r\nimport { ConstantsService } from 'jslib/services/constants.service';\r\n\r\nimport { RouterService } from './services/router.service';\r\n\r\nconst BroadcasterSubscriptionId = 'AppComponent';\r\nconst IdleTimeout = 60000 * 10; // 10 minutes\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: 'app.component.html',\r\n})\r\nexport class AppComponent implements OnDestroy, OnInit {\r\n    toasterConfig: ToasterConfig = new ToasterConfig({\r\n        showCloseButton: true,\r\n        mouseoverTimerStop: true,\r\n        animation: 'flyRight',\r\n        limit: 5,\r\n    });\r\n\r\n    private lastActivity: number = null;\r\n    private idleTimer: number = null;\r\n    private isIdle = false;\r\n\r\n    constructor(private angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics,\r\n        private broadcasterService: BroadcasterService, private userService: UserService,\r\n        private tokenService: TokenService, private folderService: FolderService,\r\n        private settingsService: SettingsService, private syncService: SyncService,\r\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\r\n        private authService: AuthService, private router: Router, private analytics: Angulartics2,\r\n        private toasterService: ToasterService, private i18nService: I18nService,\r\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\r\n        private vaultTimeoutService: VaultTimeoutService, private storageService: StorageService,\r\n        private cryptoService: CryptoService, private collectionService: CollectionService,\r\n        private sanitizer: DomSanitizer, private searchService: SearchService,\r\n        private notificationsService: NotificationsService, private routerService: RouterService,\r\n        private stateService: StateService, private eventService: EventService,\r\n        private policyService: PolicyService) { }\r\n\r\n    ngOnInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.onmousemove = () => this.recordActivity();\r\n            window.onmousedown = () => this.recordActivity();\r\n            window.ontouchstart = () => this.recordActivity();\r\n            window.onclick = () => this.recordActivity();\r\n            window.onscroll = () => this.recordActivity();\r\n            window.onkeypress = () => this.recordActivity();\r\n        });\r\n\r\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\r\n            this.ngZone.run(async () => {\r\n                switch (message.command) {\r\n                    case 'loggedIn':\r\n                    case 'loggedOut':\r\n                    case 'unlocked':\r\n                        this.notificationsService.updateConnection(false);\r\n                        break;\r\n                    case 'authBlocked':\r\n                        this.router.navigate(['/']);\r\n                        break;\r\n                    case 'logout':\r\n                        this.logOut(!!message.expired);\r\n                        break;\r\n                    case 'lockVault':\r\n                        await this.vaultTimeoutService.lock();\r\n                        break;\r\n                    case 'locked':\r\n                        this.notificationsService.updateConnection(false);\r\n                        this.router.navigate(['lock']);\r\n                        break;\r\n                    case 'lockedUrl':\r\n                        window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\r\n                        break;\r\n                    case 'syncStarted':\r\n                        break;\r\n                    case 'syncCompleted':\r\n                        break;\r\n                    case 'upgradeOrganization':\r\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\r\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\r\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\r\n                        if (upgradeConfirmed) {\r\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\r\n                        }\r\n                        break;\r\n                    case 'premiumRequired':\r\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\r\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\r\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\r\n                        if (premiumConfirmed) {\r\n                            this.router.navigate(['settings/premium']);\r\n                        }\r\n                        break;\r\n                    case 'showToast':\r\n                        this.showToast(message);\r\n                        break;\r\n                    case 'analyticsEventTrack':\r\n                        this.analytics.eventTrack.next({\r\n                            action: message.action,\r\n                            properties: { label: message.label },\r\n                        });\r\n                        break;\r\n                    case 'setFullWidth':\r\n                        this.setFullWidth();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n\r\n        this.router.events.subscribe((event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                const modals = Array.from(document.querySelectorAll('.modal'));\r\n                for (const modal of modals) {\r\n                    (jq(modal) as any).modal('hide');\r\n                }\r\n\r\n                if (document.querySelector('.swal-modal') != null) {\r\n                    Swal.close(undefined);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setFullWidth();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\r\n    }\r\n\r\n    private async logOut(expired: boolean) {\r\n        await this.eventService.uploadEvents();\r\n        const userId = await this.userService.getUserId();\r\n\r\n        await Promise.all([\r\n            this.eventService.clearEvents(),\r\n            this.syncService.setLastSync(new Date(0)),\r\n            this.tokenService.clearToken(),\r\n            this.cryptoService.clearKeys(),\r\n            this.userService.clear(),\r\n            this.settingsService.clear(userId),\r\n            this.cipherService.clear(userId),\r\n            this.folderService.clear(userId),\r\n            this.collectionService.clear(userId),\r\n            this.policyService.clear(userId),\r\n            this.passwordGenerationService.clear(),\r\n            this.stateService.purge(),\r\n        ]);\r\n\r\n        this.searchService.clearIndex();\r\n        this.authService.logOut(async () => {\r\n            this.analytics.eventTrack.next({ action: 'Logged Out' });\r\n            if (expired) {\r\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\r\n                    this.i18nService.t('loginExpired'));\r\n            }\r\n\r\n            Swal.close();\r\n            this.router.navigate(['/']);\r\n        });\r\n    }\r\n\r\n    private async recordActivity() {\r\n        const now = (new Date()).getTime();\r\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\r\n            return;\r\n        }\r\n\r\n        this.lastActivity = now;\r\n        this.storageService.save(ConstantsService.lastActiveKey, now);\r\n\r\n        // Idle states\r\n        if (this.isIdle) {\r\n            this.isIdle = false;\r\n            this.idleStateChanged();\r\n        }\r\n        if (this.idleTimer != null) {\r\n            window.clearTimeout(this.idleTimer);\r\n            this.idleTimer = null;\r\n        }\r\n        this.idleTimer = window.setTimeout(() => {\r\n            if (!this.isIdle) {\r\n                this.isIdle = true;\r\n                this.idleStateChanged();\r\n            }\r\n        }, IdleTimeout);\r\n    }\r\n\r\n    private showToast(msg: any) {\r\n        const toast: Toast = {\r\n            type: msg.type,\r\n            title: msg.title,\r\n        };\r\n        if (typeof (msg.text) === 'string') {\r\n            toast.body = msg.text;\r\n        } else if (msg.text.length === 1) {\r\n            toast.body = msg.text[0];\r\n        } else {\r\n            let message = '';\r\n            msg.text.forEach((t: string) =>\r\n                message += ('<p>' + this.sanitizer.sanitize(SecurityContext.HTML, t) + '</p>'));\r\n            toast.body = message;\r\n            toast.bodyOutputType = BodyOutputType.TrustedHtml;\r\n        }\r\n        if (msg.options != null) {\r\n            if (msg.options.trustedHtml === true) {\r\n                toast.bodyOutputType = BodyOutputType.TrustedHtml;\r\n            }\r\n            if (msg.options.timeout != null && msg.options.timeout > 0) {\r\n                toast.timeout = msg.options.timeout;\r\n            }\r\n        }\r\n        this.toasterService.popAsync(toast);\r\n    }\r\n\r\n    private idleStateChanged() {\r\n        if (this.isIdle) {\r\n            this.notificationsService.disconnectFromInactivity();\r\n        } else {\r\n            this.notificationsService.reconnectFromActivity();\r\n        }\r\n    }\r\n\r\n    private async setFullWidth() {\r\n        const enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\r\n        if (enableFullWidth) {\r\n            document.body.classList.add('full-width');\r\n        } else {\r\n            document.body.classList.remove('full-width');\r\n        }\r\n    }\r\n}\r\n","<toaster-container [toasterconfig]=\"toasterConfig\" aria-live=\"polite\"></toaster-container>\r\n<router-outlet></router-outlet>\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appBlurClick]',\r\n})\r\nexport class BlurClickDirective {\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    @HostListener('click') onClick() {\r\n        this.el.nativeElement.blur();\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appBoxRow]',\r\n})\r\nexport class BoxRowDirective implements OnInit {\r\n    el: HTMLElement = null;\r\n    formEls: Element[];\r\n\r\n    constructor(private elRef: ElementRef) {\r\n        this.el = elRef.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.formEls = Array.from(this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea'));\r\n        this.formEls.forEach((formEl) => {\r\n            formEl.addEventListener('focus', (event: Event) => {\r\n                this.el.classList.add('active');\r\n            }, false);\r\n\r\n            formEl.addEventListener('blur', (event: Event) => {\r\n                this.el.classList.remove('active');\r\n            }, false);\r\n        });\r\n    }\r\n\r\n    @HostListener('click', ['$event']) onClick(event: Event) {\r\n        const target = event.target as HTMLElement;\r\n        if (target !== this.el && !target.classList.contains('progress') &&\r\n            !target.classList.contains('progress-bar')) {\r\n            return;\r\n        }\r\n\r\n        if (this.formEls.length > 0) {\r\n            const formEl = (this.formEls[0] as HTMLElement);\r\n            if (formEl.tagName.toLowerCase() === 'input') {\r\n                const inputEl = (formEl as HTMLInputElement);\r\n                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {\r\n                    inputEl.click();\r\n                    return;\r\n                }\r\n            }\r\n            formEl.focus();\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Pipe,\r\n    PipeTransform,\r\n} from '@angular/core';\r\n\r\nimport { CipherView } from '../../models/view/cipherView';\r\n\r\n@Pipe({\r\n    name: 'searchCiphers',\r\n})\r\nexport class SearchCiphersPipe implements PipeTransform {\r\n    transform(ciphers: CipherView[], searchText: string, deleted: boolean = false): CipherView[] {\r\n        if (ciphers == null || ciphers.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        if (searchText == null || searchText.length < 2) {\r\n            return ciphers.filter((c) => {\r\n                return deleted !== c.isDeleted;\r\n            });\r\n        }\r\n\r\n        searchText = searchText.trim().toLowerCase();\r\n        return ciphers.filter((c) => {\r\n            if (deleted !== c.isDeleted) {\r\n                return false;\r\n            }\r\n            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {\r\n                return true;\r\n            }\r\n            if (searchText.length >= 8 && c.id.startsWith(searchText)) {\r\n                return true;\r\n            }\r\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {\r\n                return true;\r\n            }\r\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}